"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_mathjax-full_js_input_tex_js"],{

/***/ "./node_modules/mathjax-full/js/components/version.js":
/*!************************************************************!*\
  !*** ./node_modules/mathjax-full/js/components/version.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VERSION = void 0;\nexports.VERSION = '3.2.2';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2NvbXBvbmVudHMvdmVyc2lvbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2YsZUFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvY29tcG9uZW50cy92ZXJzaW9uLmpzP2ViMzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZFUlNJT04gPSB2b2lkIDA7XG5leHBvcnRzLlZFUlNJT04gPSAnMy4yLjInO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/components/version.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/core/FindMath.js":
/*!*******************************************************!*\
  !*** ./node_modules/mathjax-full/js/core/FindMath.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbstractFindMath = void 0;\nvar Options_js_1 = __webpack_require__(/*! ../util/Options.js */ \"./node_modules/mathjax-full/js/util/Options.js\");\nvar AbstractFindMath = (function () {\n    function AbstractFindMath(options) {\n        var CLASS = this.constructor;\n        this.options = (0, Options_js_1.userOptions)((0, Options_js_1.defaultOptions)({}, CLASS.OPTIONS), options);\n    }\n    AbstractFindMath.OPTIONS = {};\n    return AbstractFindMath;\n}());\nexports.AbstractFindMath = AbstractFindMath;\n//# sourceMappingURL=FindMath.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2NvcmUvRmluZE1hdGguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLG1CQUFtQixtQkFBTyxDQUFDLDBFQUFvQjtBQUMvQztBQUNBO0FBQ0E7QUFDQSx3RkFBd0Y7QUFDeEY7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2NvcmUvRmluZE1hdGguanM/ZTlkNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWJzdHJhY3RGaW5kTWF0aCA9IHZvaWQgMDtcbnZhciBPcHRpb25zX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9PcHRpb25zLmpzXCIpO1xudmFyIEFic3RyYWN0RmluZE1hdGggPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEFic3RyYWN0RmluZE1hdGgob3B0aW9ucykge1xuICAgICAgICB2YXIgQ0xBU1MgPSB0aGlzLmNvbnN0cnVjdG9yO1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSAoMCwgT3B0aW9uc19qc18xLnVzZXJPcHRpb25zKSgoMCwgT3B0aW9uc19qc18xLmRlZmF1bHRPcHRpb25zKSh7fSwgQ0xBU1MuT1BUSU9OUyksIG9wdGlvbnMpO1xuICAgIH1cbiAgICBBYnN0cmFjdEZpbmRNYXRoLk9QVElPTlMgPSB7fTtcbiAgICByZXR1cm4gQWJzdHJhY3RGaW5kTWF0aDtcbn0oKSk7XG5leHBvcnRzLkFic3RyYWN0RmluZE1hdGggPSBBYnN0cmFjdEZpbmRNYXRoO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RmluZE1hdGguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/core/FindMath.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/core/HandlerList.js":
/*!**********************************************************!*\
  !*** ./node_modules/mathjax-full/js/core/HandlerList.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HandlerList = void 0;\nvar PrioritizedList_js_1 = __webpack_require__(/*! ../util/PrioritizedList.js */ \"./node_modules/mathjax-full/js/util/PrioritizedList.js\");\nvar HandlerList = (function (_super) {\n    __extends(HandlerList, _super);\n    function HandlerList() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    HandlerList.prototype.register = function (handler) {\n        return this.add(handler, handler.priority);\n    };\n    HandlerList.prototype.unregister = function (handler) {\n        this.remove(handler);\n    };\n    HandlerList.prototype.handlesDocument = function (document) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var item = _c.value;\n                var handler = item.item;\n                if (handler.handlesDocument(document)) {\n                    return handler;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        throw new Error(\"Can't find handler for document\");\n    };\n    HandlerList.prototype.document = function (document, options) {\n        if (options === void 0) { options = null; }\n        return this.handlesDocument(document).create(document, options);\n    };\n    return HandlerList;\n}(PrioritizedList_js_1.PrioritizedList));\nexports.HandlerList = HandlerList;\n//# sourceMappingURL=HandlerList.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2NvcmUvSGFuZGxlckxpc3QuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ3ZGLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CLDJCQUEyQixtQkFBTyxDQUFDLDBGQUE0QjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELFVBQVU7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvY29yZS9IYW5kbGVyTGlzdC5qcz8zZjQyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbnZhciBfX3ZhbHVlcyA9ICh0aGlzICYmIHRoaXMuX192YWx1ZXMpIHx8IGZ1bmN0aW9uKG8pIHtcbiAgICB2YXIgcyA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBTeW1ib2wuaXRlcmF0b3IsIG0gPSBzICYmIG9bc10sIGkgPSAwO1xuICAgIGlmIChtKSByZXR1cm4gbS5jYWxsKG8pO1xuICAgIGlmIChvICYmIHR5cGVvZiBvLmxlbmd0aCA9PT0gXCJudW1iZXJcIikgcmV0dXJuIHtcbiAgICAgICAgbmV4dDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKG8gJiYgaSA+PSBvLmxlbmd0aCkgbyA9IHZvaWQgMDtcbiAgICAgICAgICAgIHJldHVybiB7IHZhbHVlOiBvICYmIG9baSsrXSwgZG9uZTogIW8gfTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihzID8gXCJPYmplY3QgaXMgbm90IGl0ZXJhYmxlLlwiIDogXCJTeW1ib2wuaXRlcmF0b3IgaXMgbm90IGRlZmluZWQuXCIpO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSGFuZGxlckxpc3QgPSB2b2lkIDA7XG52YXIgUHJpb3JpdGl6ZWRMaXN0X2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9Qcmlvcml0aXplZExpc3QuanNcIik7XG52YXIgSGFuZGxlckxpc3QgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhIYW5kbGVyTGlzdCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBIYW5kbGVyTGlzdCgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBIYW5kbGVyTGlzdC5wcm90b3R5cGUucmVnaXN0ZXIgPSBmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICByZXR1cm4gdGhpcy5hZGQoaGFuZGxlciwgaGFuZGxlci5wcmlvcml0eSk7XG4gICAgfTtcbiAgICBIYW5kbGVyTGlzdC5wcm90b3R5cGUudW5yZWdpc3RlciA9IGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlKGhhbmRsZXIpO1xuICAgIH07XG4gICAgSGFuZGxlckxpc3QucHJvdG90eXBlLmhhbmRsZXNEb2N1bWVudCA9IGZ1bmN0aW9uIChkb2N1bWVudCkge1xuICAgICAgICB2YXIgZV8xLCBfYTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGZvciAodmFyIF9iID0gX192YWx1ZXModGhpcyksIF9jID0gX2IubmV4dCgpOyAhX2MuZG9uZTsgX2MgPSBfYi5uZXh0KCkpIHtcbiAgICAgICAgICAgICAgICB2YXIgaXRlbSA9IF9jLnZhbHVlO1xuICAgICAgICAgICAgICAgIHZhciBoYW5kbGVyID0gaXRlbS5pdGVtO1xuICAgICAgICAgICAgICAgIGlmIChoYW5kbGVyLmhhbmRsZXNEb2N1bWVudChkb2N1bWVudCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZXI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlXzFfMSkgeyBlXzEgPSB7IGVycm9yOiBlXzFfMSB9OyB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiAoX2MgJiYgIV9jLmRvbmUgJiYgKF9hID0gX2IucmV0dXJuKSkgX2EuY2FsbChfYik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmaW5hbGx5IHsgaWYgKGVfMSkgdGhyb3cgZV8xLmVycm9yOyB9XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2FuJ3QgZmluZCBoYW5kbGVyIGZvciBkb2N1bWVudFwiKTtcbiAgICB9O1xuICAgIEhhbmRsZXJMaXN0LnByb3RvdHlwZS5kb2N1bWVudCA9IGZ1bmN0aW9uIChkb2N1bWVudCwgb3B0aW9ucykge1xuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSBudWxsOyB9XG4gICAgICAgIHJldHVybiB0aGlzLmhhbmRsZXNEb2N1bWVudChkb2N1bWVudCkuY3JlYXRlKGRvY3VtZW50LCBvcHRpb25zKTtcbiAgICB9O1xuICAgIHJldHVybiBIYW5kbGVyTGlzdDtcbn0oUHJpb3JpdGl6ZWRMaXN0X2pzXzEuUHJpb3JpdGl6ZWRMaXN0KSk7XG5leHBvcnRzLkhhbmRsZXJMaXN0ID0gSGFuZGxlckxpc3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1IYW5kbGVyTGlzdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/core/HandlerList.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/core/InputJax.js":
/*!*******************************************************!*\
  !*** ./node_modules/mathjax-full/js/core/InputJax.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbstractInputJax = void 0;\nvar Options_js_1 = __webpack_require__(/*! ../util/Options.js */ \"./node_modules/mathjax-full/js/util/Options.js\");\nvar FunctionList_js_1 = __webpack_require__(/*! ../util/FunctionList.js */ \"./node_modules/mathjax-full/js/util/FunctionList.js\");\nvar AbstractInputJax = (function () {\n    function AbstractInputJax(options) {\n        if (options === void 0) { options = {}; }\n        this.adaptor = null;\n        this.mmlFactory = null;\n        var CLASS = this.constructor;\n        this.options = (0, Options_js_1.userOptions)((0, Options_js_1.defaultOptions)({}, CLASS.OPTIONS), options);\n        this.preFilters = new FunctionList_js_1.FunctionList();\n        this.postFilters = new FunctionList_js_1.FunctionList();\n    }\n    Object.defineProperty(AbstractInputJax.prototype, \"name\", {\n        get: function () {\n            return this.constructor.NAME;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractInputJax.prototype.setAdaptor = function (adaptor) {\n        this.adaptor = adaptor;\n    };\n    AbstractInputJax.prototype.setMmlFactory = function (mmlFactory) {\n        this.mmlFactory = mmlFactory;\n    };\n    AbstractInputJax.prototype.initialize = function () {\n    };\n    AbstractInputJax.prototype.reset = function () {\n        var _args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            _args[_i] = arguments[_i];\n        }\n    };\n    Object.defineProperty(AbstractInputJax.prototype, \"processStrings\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractInputJax.prototype.findMath = function (_node, _options) {\n        return [];\n    };\n    AbstractInputJax.prototype.executeFilters = function (filters, math, document, data) {\n        var args = { math: math, document: document, data: data };\n        filters.execute(args);\n        return args.data;\n    };\n    AbstractInputJax.NAME = 'generic';\n    AbstractInputJax.OPTIONS = {};\n    return AbstractInputJax;\n}());\nexports.AbstractInputJax = AbstractInputJax;\n//# sourceMappingURL=InputJax.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2NvcmUvSW5wdXRKYXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLG1CQUFtQixtQkFBTyxDQUFDLDBFQUFvQjtBQUMvQyx3QkFBd0IsbUJBQU8sQ0FBQyxvRkFBeUI7QUFDekQ7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQSx3RkFBd0Y7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsdUJBQXVCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCx3QkFBd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9jb3JlL0lucHV0SmF4LmpzPzFjMmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFic3RyYWN0SW5wdXRKYXggPSB2b2lkIDA7XG52YXIgT3B0aW9uc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWwvT3B0aW9ucy5qc1wiKTtcbnZhciBGdW5jdGlvbkxpc3RfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL0Z1bmN0aW9uTGlzdC5qc1wiKTtcbnZhciBBYnN0cmFjdElucHV0SmF4ID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBBYnN0cmFjdElucHV0SmF4KG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cbiAgICAgICAgdGhpcy5hZGFwdG9yID0gbnVsbDtcbiAgICAgICAgdGhpcy5tbWxGYWN0b3J5ID0gbnVsbDtcbiAgICAgICAgdmFyIENMQVNTID0gdGhpcy5jb25zdHJ1Y3RvcjtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gKDAsIE9wdGlvbnNfanNfMS51c2VyT3B0aW9ucykoKDAsIE9wdGlvbnNfanNfMS5kZWZhdWx0T3B0aW9ucykoe30sIENMQVNTLk9QVElPTlMpLCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5wcmVGaWx0ZXJzID0gbmV3IEZ1bmN0aW9uTGlzdF9qc18xLkZ1bmN0aW9uTGlzdCgpO1xuICAgICAgICB0aGlzLnBvc3RGaWx0ZXJzID0gbmV3IEZ1bmN0aW9uTGlzdF9qc18xLkZ1bmN0aW9uTGlzdCgpO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQWJzdHJhY3RJbnB1dEpheC5wcm90b3R5cGUsIFwibmFtZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29uc3RydWN0b3IuTkFNRTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIEFic3RyYWN0SW5wdXRKYXgucHJvdG90eXBlLnNldEFkYXB0b3IgPSBmdW5jdGlvbiAoYWRhcHRvcikge1xuICAgICAgICB0aGlzLmFkYXB0b3IgPSBhZGFwdG9yO1xuICAgIH07XG4gICAgQWJzdHJhY3RJbnB1dEpheC5wcm90b3R5cGUuc2V0TW1sRmFjdG9yeSA9IGZ1bmN0aW9uIChtbWxGYWN0b3J5KSB7XG4gICAgICAgIHRoaXMubW1sRmFjdG9yeSA9IG1tbEZhY3Rvcnk7XG4gICAgfTtcbiAgICBBYnN0cmFjdElucHV0SmF4LnByb3RvdHlwZS5pbml0aWFsaXplID0gZnVuY3Rpb24gKCkge1xuICAgIH07XG4gICAgQWJzdHJhY3RJbnB1dEpheC5wcm90b3R5cGUucmVzZXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfYXJncyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgX2FyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEFic3RyYWN0SW5wdXRKYXgucHJvdG90eXBlLCBcInByb2Nlc3NTdHJpbmdzXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIEFic3RyYWN0SW5wdXRKYXgucHJvdG90eXBlLmZpbmRNYXRoID0gZnVuY3Rpb24gKF9ub2RlLCBfb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfTtcbiAgICBBYnN0cmFjdElucHV0SmF4LnByb3RvdHlwZS5leGVjdXRlRmlsdGVycyA9IGZ1bmN0aW9uIChmaWx0ZXJzLCBtYXRoLCBkb2N1bWVudCwgZGF0YSkge1xuICAgICAgICB2YXIgYXJncyA9IHsgbWF0aDogbWF0aCwgZG9jdW1lbnQ6IGRvY3VtZW50LCBkYXRhOiBkYXRhIH07XG4gICAgICAgIGZpbHRlcnMuZXhlY3V0ZShhcmdzKTtcbiAgICAgICAgcmV0dXJuIGFyZ3MuZGF0YTtcbiAgICB9O1xuICAgIEFic3RyYWN0SW5wdXRKYXguTkFNRSA9ICdnZW5lcmljJztcbiAgICBBYnN0cmFjdElucHV0SmF4Lk9QVElPTlMgPSB7fTtcbiAgICByZXR1cm4gQWJzdHJhY3RJbnB1dEpheDtcbn0oKSk7XG5leHBvcnRzLkFic3RyYWN0SW5wdXRKYXggPSBBYnN0cmFjdElucHV0SmF4O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SW5wdXRKYXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/core/InputJax.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/core/MathItem.js":
/*!*******************************************************!*\
  !*** ./node_modules/mathjax-full/js/core/MathItem.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.newState = exports.STATE = exports.AbstractMathItem = exports.protoItem = void 0;\nfunction protoItem(open, math, close, n, start, end, display) {\n    if (display === void 0) { display = null; }\n    var item = { open: open, math: math, close: close,\n        n: n, start: { n: start }, end: { n: end }, display: display };\n    return item;\n}\nexports.protoItem = protoItem;\nvar AbstractMathItem = (function () {\n    function AbstractMathItem(math, jax, display, start, end) {\n        if (display === void 0) { display = true; }\n        if (start === void 0) { start = { i: 0, n: 0, delim: '' }; }\n        if (end === void 0) { end = { i: 0, n: 0, delim: '' }; }\n        this.root = null;\n        this.typesetRoot = null;\n        this.metrics = {};\n        this.inputData = {};\n        this.outputData = {};\n        this._state = exports.STATE.UNPROCESSED;\n        this.math = math;\n        this.inputJax = jax;\n        this.display = display;\n        this.start = start;\n        this.end = end;\n        this.root = null;\n        this.typesetRoot = null;\n        this.metrics = {};\n        this.inputData = {};\n        this.outputData = {};\n    }\n    Object.defineProperty(AbstractMathItem.prototype, \"isEscaped\", {\n        get: function () {\n            return this.display === null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractMathItem.prototype.render = function (document) {\n        document.renderActions.renderMath(this, document);\n    };\n    AbstractMathItem.prototype.rerender = function (document, start) {\n        if (start === void 0) { start = exports.STATE.RERENDER; }\n        if (this.state() >= start) {\n            this.state(start - 1);\n        }\n        document.renderActions.renderMath(this, document, start);\n    };\n    AbstractMathItem.prototype.convert = function (document, end) {\n        if (end === void 0) { end = exports.STATE.LAST; }\n        document.renderActions.renderConvert(this, document, end);\n    };\n    AbstractMathItem.prototype.compile = function (document) {\n        if (this.state() < exports.STATE.COMPILED) {\n            this.root = this.inputJax.compile(this, document);\n            this.state(exports.STATE.COMPILED);\n        }\n    };\n    AbstractMathItem.prototype.typeset = function (document) {\n        if (this.state() < exports.STATE.TYPESET) {\n            this.typesetRoot = document.outputJax[this.isEscaped ? 'escaped' : 'typeset'](this, document);\n            this.state(exports.STATE.TYPESET);\n        }\n    };\n    AbstractMathItem.prototype.updateDocument = function (_document) { };\n    AbstractMathItem.prototype.removeFromDocument = function (_restore) {\n        if (_restore === void 0) { _restore = false; }\n    };\n    AbstractMathItem.prototype.setMetrics = function (em, ex, cwidth, lwidth, scale) {\n        this.metrics = {\n            em: em, ex: ex,\n            containerWidth: cwidth,\n            lineWidth: lwidth,\n            scale: scale\n        };\n    };\n    AbstractMathItem.prototype.state = function (state, restore) {\n        if (state === void 0) { state = null; }\n        if (restore === void 0) { restore = false; }\n        if (state != null) {\n            if (state < exports.STATE.INSERTED && this._state >= exports.STATE.INSERTED) {\n                this.removeFromDocument(restore);\n            }\n            if (state < exports.STATE.TYPESET && this._state >= exports.STATE.TYPESET) {\n                this.outputData = {};\n            }\n            if (state < exports.STATE.COMPILED && this._state >= exports.STATE.COMPILED) {\n                this.inputData = {};\n            }\n            this._state = state;\n        }\n        return this._state;\n    };\n    AbstractMathItem.prototype.reset = function (restore) {\n        if (restore === void 0) { restore = false; }\n        this.state(exports.STATE.UNPROCESSED, restore);\n    };\n    return AbstractMathItem;\n}());\nexports.AbstractMathItem = AbstractMathItem;\nexports.STATE = {\n    UNPROCESSED: 0,\n    FINDMATH: 10,\n    COMPILED: 20,\n    CONVERT: 100,\n    METRICS: 110,\n    RERENDER: 125,\n    TYPESET: 150,\n    INSERTED: 200,\n    LAST: 10000\n};\nfunction newState(name, state) {\n    if (name in exports.STATE) {\n        throw Error('State ' + name + ' already exists');\n    }\n    exports.STATE[name] = state;\n}\nexports.newState = newState;\n//# sourceMappingURL=MathItem.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2NvcmUvTWF0aEl0ZW0uanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCLEdBQUcsYUFBYSxHQUFHLHdCQUF3QixHQUFHLGlCQUFpQjtBQUMvRTtBQUNBLDhCQUE4QjtBQUM5QixpQkFBaUI7QUFDakIsdUJBQXVCLFVBQVUsU0FBUyxRQUFRO0FBQ2xEO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGtDQUFrQztBQUNsQyxnQ0FBZ0MsVUFBVTtBQUMxQyw4QkFBOEIsUUFBUTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHdCQUF3QjtBQUN4QixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9jb3JlL01hdGhJdGVtLmpzP2RhNWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm5ld1N0YXRlID0gZXhwb3J0cy5TVEFURSA9IGV4cG9ydHMuQWJzdHJhY3RNYXRoSXRlbSA9IGV4cG9ydHMucHJvdG9JdGVtID0gdm9pZCAwO1xuZnVuY3Rpb24gcHJvdG9JdGVtKG9wZW4sIG1hdGgsIGNsb3NlLCBuLCBzdGFydCwgZW5kLCBkaXNwbGF5KSB7XG4gICAgaWYgKGRpc3BsYXkgPT09IHZvaWQgMCkgeyBkaXNwbGF5ID0gbnVsbDsgfVxuICAgIHZhciBpdGVtID0geyBvcGVuOiBvcGVuLCBtYXRoOiBtYXRoLCBjbG9zZTogY2xvc2UsXG4gICAgICAgIG46IG4sIHN0YXJ0OiB7IG46IHN0YXJ0IH0sIGVuZDogeyBuOiBlbmQgfSwgZGlzcGxheTogZGlzcGxheSB9O1xuICAgIHJldHVybiBpdGVtO1xufVxuZXhwb3J0cy5wcm90b0l0ZW0gPSBwcm90b0l0ZW07XG52YXIgQWJzdHJhY3RNYXRoSXRlbSA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQWJzdHJhY3RNYXRoSXRlbShtYXRoLCBqYXgsIGRpc3BsYXksIHN0YXJ0LCBlbmQpIHtcbiAgICAgICAgaWYgKGRpc3BsYXkgPT09IHZvaWQgMCkgeyBkaXNwbGF5ID0gdHJ1ZTsgfVxuICAgICAgICBpZiAoc3RhcnQgPT09IHZvaWQgMCkgeyBzdGFydCA9IHsgaTogMCwgbjogMCwgZGVsaW06ICcnIH07IH1cbiAgICAgICAgaWYgKGVuZCA9PT0gdm9pZCAwKSB7IGVuZCA9IHsgaTogMCwgbjogMCwgZGVsaW06ICcnIH07IH1cbiAgICAgICAgdGhpcy5yb290ID0gbnVsbDtcbiAgICAgICAgdGhpcy50eXBlc2V0Um9vdCA9IG51bGw7XG4gICAgICAgIHRoaXMubWV0cmljcyA9IHt9O1xuICAgICAgICB0aGlzLmlucHV0RGF0YSA9IHt9O1xuICAgICAgICB0aGlzLm91dHB1dERhdGEgPSB7fTtcbiAgICAgICAgdGhpcy5fc3RhdGUgPSBleHBvcnRzLlNUQVRFLlVOUFJPQ0VTU0VEO1xuICAgICAgICB0aGlzLm1hdGggPSBtYXRoO1xuICAgICAgICB0aGlzLmlucHV0SmF4ID0gamF4O1xuICAgICAgICB0aGlzLmRpc3BsYXkgPSBkaXNwbGF5O1xuICAgICAgICB0aGlzLnN0YXJ0ID0gc3RhcnQ7XG4gICAgICAgIHRoaXMuZW5kID0gZW5kO1xuICAgICAgICB0aGlzLnJvb3QgPSBudWxsO1xuICAgICAgICB0aGlzLnR5cGVzZXRSb290ID0gbnVsbDtcbiAgICAgICAgdGhpcy5tZXRyaWNzID0ge307XG4gICAgICAgIHRoaXMuaW5wdXREYXRhID0ge307XG4gICAgICAgIHRoaXMub3V0cHV0RGF0YSA9IHt9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQWJzdHJhY3RNYXRoSXRlbS5wcm90b3R5cGUsIFwiaXNFc2NhcGVkXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5kaXNwbGF5ID09PSBudWxsO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgQWJzdHJhY3RNYXRoSXRlbS5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gKGRvY3VtZW50KSB7XG4gICAgICAgIGRvY3VtZW50LnJlbmRlckFjdGlvbnMucmVuZGVyTWF0aCh0aGlzLCBkb2N1bWVudCk7XG4gICAgfTtcbiAgICBBYnN0cmFjdE1hdGhJdGVtLnByb3RvdHlwZS5yZXJlbmRlciA9IGZ1bmN0aW9uIChkb2N1bWVudCwgc3RhcnQpIHtcbiAgICAgICAgaWYgKHN0YXJ0ID09PSB2b2lkIDApIHsgc3RhcnQgPSBleHBvcnRzLlNUQVRFLlJFUkVOREVSOyB9XG4gICAgICAgIGlmICh0aGlzLnN0YXRlKCkgPj0gc3RhcnQpIHtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUoc3RhcnQgLSAxKTtcbiAgICAgICAgfVxuICAgICAgICBkb2N1bWVudC5yZW5kZXJBY3Rpb25zLnJlbmRlck1hdGgodGhpcywgZG9jdW1lbnQsIHN0YXJ0KTtcbiAgICB9O1xuICAgIEFic3RyYWN0TWF0aEl0ZW0ucHJvdG90eXBlLmNvbnZlcnQgPSBmdW5jdGlvbiAoZG9jdW1lbnQsIGVuZCkge1xuICAgICAgICBpZiAoZW5kID09PSB2b2lkIDApIHsgZW5kID0gZXhwb3J0cy5TVEFURS5MQVNUOyB9XG4gICAgICAgIGRvY3VtZW50LnJlbmRlckFjdGlvbnMucmVuZGVyQ29udmVydCh0aGlzLCBkb2N1bWVudCwgZW5kKTtcbiAgICB9O1xuICAgIEFic3RyYWN0TWF0aEl0ZW0ucHJvdG90eXBlLmNvbXBpbGUgPSBmdW5jdGlvbiAoZG9jdW1lbnQpIHtcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUoKSA8IGV4cG9ydHMuU1RBVEUuQ09NUElMRUQpIHtcbiAgICAgICAgICAgIHRoaXMucm9vdCA9IHRoaXMuaW5wdXRKYXguY29tcGlsZSh0aGlzLCBkb2N1bWVudCk7XG4gICAgICAgICAgICB0aGlzLnN0YXRlKGV4cG9ydHMuU1RBVEUuQ09NUElMRUQpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBBYnN0cmFjdE1hdGhJdGVtLnByb3RvdHlwZS50eXBlc2V0ID0gZnVuY3Rpb24gKGRvY3VtZW50KSB7XG4gICAgICAgIGlmICh0aGlzLnN0YXRlKCkgPCBleHBvcnRzLlNUQVRFLlRZUEVTRVQpIHtcbiAgICAgICAgICAgIHRoaXMudHlwZXNldFJvb3QgPSBkb2N1bWVudC5vdXRwdXRKYXhbdGhpcy5pc0VzY2FwZWQgPyAnZXNjYXBlZCcgOiAndHlwZXNldCddKHRoaXMsIGRvY3VtZW50KTtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUoZXhwb3J0cy5TVEFURS5UWVBFU0VUKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgQWJzdHJhY3RNYXRoSXRlbS5wcm90b3R5cGUudXBkYXRlRG9jdW1lbnQgPSBmdW5jdGlvbiAoX2RvY3VtZW50KSB7IH07XG4gICAgQWJzdHJhY3RNYXRoSXRlbS5wcm90b3R5cGUucmVtb3ZlRnJvbURvY3VtZW50ID0gZnVuY3Rpb24gKF9yZXN0b3JlKSB7XG4gICAgICAgIGlmIChfcmVzdG9yZSA9PT0gdm9pZCAwKSB7IF9yZXN0b3JlID0gZmFsc2U7IH1cbiAgICB9O1xuICAgIEFic3RyYWN0TWF0aEl0ZW0ucHJvdG90eXBlLnNldE1ldHJpY3MgPSBmdW5jdGlvbiAoZW0sIGV4LCBjd2lkdGgsIGx3aWR0aCwgc2NhbGUpIHtcbiAgICAgICAgdGhpcy5tZXRyaWNzID0ge1xuICAgICAgICAgICAgZW06IGVtLCBleDogZXgsXG4gICAgICAgICAgICBjb250YWluZXJXaWR0aDogY3dpZHRoLFxuICAgICAgICAgICAgbGluZVdpZHRoOiBsd2lkdGgsXG4gICAgICAgICAgICBzY2FsZTogc2NhbGVcbiAgICAgICAgfTtcbiAgICB9O1xuICAgIEFic3RyYWN0TWF0aEl0ZW0ucHJvdG90eXBlLnN0YXRlID0gZnVuY3Rpb24gKHN0YXRlLCByZXN0b3JlKSB7XG4gICAgICAgIGlmIChzdGF0ZSA9PT0gdm9pZCAwKSB7IHN0YXRlID0gbnVsbDsgfVxuICAgICAgICBpZiAocmVzdG9yZSA9PT0gdm9pZCAwKSB7IHJlc3RvcmUgPSBmYWxzZTsgfVxuICAgICAgICBpZiAoc3RhdGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKHN0YXRlIDwgZXhwb3J0cy5TVEFURS5JTlNFUlRFRCAmJiB0aGlzLl9zdGF0ZSA+PSBleHBvcnRzLlNUQVRFLklOU0VSVEVEKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZW1vdmVGcm9tRG9jdW1lbnQocmVzdG9yZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc3RhdGUgPCBleHBvcnRzLlNUQVRFLlRZUEVTRVQgJiYgdGhpcy5fc3RhdGUgPj0gZXhwb3J0cy5TVEFURS5UWVBFU0VUKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5vdXRwdXREYXRhID0ge307XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc3RhdGUgPCBleHBvcnRzLlNUQVRFLkNPTVBJTEVEICYmIHRoaXMuX3N0YXRlID49IGV4cG9ydHMuU1RBVEUuQ09NUElMRUQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmlucHV0RGF0YSA9IHt9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5fc3RhdGUgPSBzdGF0ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fc3RhdGU7XG4gICAgfTtcbiAgICBBYnN0cmFjdE1hdGhJdGVtLnByb3RvdHlwZS5yZXNldCA9IGZ1bmN0aW9uIChyZXN0b3JlKSB7XG4gICAgICAgIGlmIChyZXN0b3JlID09PSB2b2lkIDApIHsgcmVzdG9yZSA9IGZhbHNlOyB9XG4gICAgICAgIHRoaXMuc3RhdGUoZXhwb3J0cy5TVEFURS5VTlBST0NFU1NFRCwgcmVzdG9yZSk7XG4gICAgfTtcbiAgICByZXR1cm4gQWJzdHJhY3RNYXRoSXRlbTtcbn0oKSk7XG5leHBvcnRzLkFic3RyYWN0TWF0aEl0ZW0gPSBBYnN0cmFjdE1hdGhJdGVtO1xuZXhwb3J0cy5TVEFURSA9IHtcbiAgICBVTlBST0NFU1NFRDogMCxcbiAgICBGSU5ETUFUSDogMTAsXG4gICAgQ09NUElMRUQ6IDIwLFxuICAgIENPTlZFUlQ6IDEwMCxcbiAgICBNRVRSSUNTOiAxMTAsXG4gICAgUkVSRU5ERVI6IDEyNSxcbiAgICBUWVBFU0VUOiAxNTAsXG4gICAgSU5TRVJURUQ6IDIwMCxcbiAgICBMQVNUOiAxMDAwMFxufTtcbmZ1bmN0aW9uIG5ld1N0YXRlKG5hbWUsIHN0YXRlKSB7XG4gICAgaWYgKG5hbWUgaW4gZXhwb3J0cy5TVEFURSkge1xuICAgICAgICB0aHJvdyBFcnJvcignU3RhdGUgJyArIG5hbWUgKyAnIGFscmVhZHkgZXhpc3RzJyk7XG4gICAgfVxuICAgIGV4cG9ydHMuU1RBVEVbbmFtZV0gPSBzdGF0ZTtcbn1cbmV4cG9ydHMubmV3U3RhdGUgPSBuZXdTdGF0ZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1hdGhJdGVtLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/core/MathItem.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/core/MmlTree/Attributes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjax-full/js/core/MmlTree/Attributes.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Attributes = exports.INHERIT = void 0;\nexports.INHERIT = '_inherit_';\nvar Attributes = (function () {\n    function Attributes(defaults, global) {\n        this.global = global;\n        this.defaults = Object.create(global);\n        this.inherited = Object.create(this.defaults);\n        this.attributes = Object.create(this.inherited);\n        Object.assign(this.defaults, defaults);\n    }\n    Attributes.prototype.set = function (name, value) {\n        this.attributes[name] = value;\n    };\n    Attributes.prototype.setList = function (list) {\n        Object.assign(this.attributes, list);\n    };\n    Attributes.prototype.get = function (name) {\n        var value = this.attributes[name];\n        if (value === exports.INHERIT) {\n            value = this.global[name];\n        }\n        return value;\n    };\n    Attributes.prototype.getExplicit = function (name) {\n        if (!this.attributes.hasOwnProperty(name)) {\n            return undefined;\n        }\n        return this.attributes[name];\n    };\n    Attributes.prototype.getList = function () {\n        var e_1, _a;\n        var names = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            names[_i] = arguments[_i];\n        }\n        var values = {};\n        try {\n            for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {\n                var name_1 = names_1_1.value;\n                values[name_1] = this.get(name_1);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return values;\n    };\n    Attributes.prototype.setInherited = function (name, value) {\n        this.inherited[name] = value;\n    };\n    Attributes.prototype.getInherited = function (name) {\n        return this.inherited[name];\n    };\n    Attributes.prototype.getDefault = function (name) {\n        return this.defaults[name];\n    };\n    Attributes.prototype.isSet = function (name) {\n        return this.attributes.hasOwnProperty(name) || this.inherited.hasOwnProperty(name);\n    };\n    Attributes.prototype.hasDefault = function (name) {\n        return (name in this.defaults);\n    };\n    Attributes.prototype.getExplicitNames = function () {\n        return Object.keys(this.attributes);\n    };\n    Attributes.prototype.getInheritedNames = function () {\n        return Object.keys(this.inherited);\n    };\n    Attributes.prototype.getDefaultNames = function () {\n        return Object.keys(this.defaults);\n    };\n    Attributes.prototype.getGlobalNames = function () {\n        return Object.keys(this.global);\n    };\n    Attributes.prototype.getAllAttributes = function () {\n        return this.attributes;\n    };\n    Attributes.prototype.getAllInherited = function () {\n        return this.inherited;\n    };\n    Attributes.prototype.getAllDefaults = function () {\n        return this.defaults;\n    };\n    Attributes.prototype.getAllGlobals = function () {\n        return this.global;\n    };\n    return Attributes;\n}());\nexports.Attributes = Attributes;\n//# sourceMappingURL=Attributes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2NvcmUvTW1sVHJlZS9BdHRyaWJ1dGVzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQixHQUFHLGVBQWU7QUFDcEMsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix1QkFBdUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RUFBNEUsaUJBQWlCO0FBQzdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvY29yZS9NbWxUcmVlL0F0dHJpYnV0ZXMuanM/NGRiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX3ZhbHVlcyA9ICh0aGlzICYmIHRoaXMuX192YWx1ZXMpIHx8IGZ1bmN0aW9uKG8pIHtcbiAgICB2YXIgcyA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBTeW1ib2wuaXRlcmF0b3IsIG0gPSBzICYmIG9bc10sIGkgPSAwO1xuICAgIGlmIChtKSByZXR1cm4gbS5jYWxsKG8pO1xuICAgIGlmIChvICYmIHR5cGVvZiBvLmxlbmd0aCA9PT0gXCJudW1iZXJcIikgcmV0dXJuIHtcbiAgICAgICAgbmV4dDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKG8gJiYgaSA+PSBvLmxlbmd0aCkgbyA9IHZvaWQgMDtcbiAgICAgICAgICAgIHJldHVybiB7IHZhbHVlOiBvICYmIG9baSsrXSwgZG9uZTogIW8gfTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihzID8gXCJPYmplY3QgaXMgbm90IGl0ZXJhYmxlLlwiIDogXCJTeW1ib2wuaXRlcmF0b3IgaXMgbm90IGRlZmluZWQuXCIpO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXR0cmlidXRlcyA9IGV4cG9ydHMuSU5IRVJJVCA9IHZvaWQgMDtcbmV4cG9ydHMuSU5IRVJJVCA9ICdfaW5oZXJpdF8nO1xudmFyIEF0dHJpYnV0ZXMgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEF0dHJpYnV0ZXMoZGVmYXVsdHMsIGdsb2JhbCkge1xuICAgICAgICB0aGlzLmdsb2JhbCA9IGdsb2JhbDtcbiAgICAgICAgdGhpcy5kZWZhdWx0cyA9IE9iamVjdC5jcmVhdGUoZ2xvYmFsKTtcbiAgICAgICAgdGhpcy5pbmhlcml0ZWQgPSBPYmplY3QuY3JlYXRlKHRoaXMuZGVmYXVsdHMpO1xuICAgICAgICB0aGlzLmF0dHJpYnV0ZXMgPSBPYmplY3QuY3JlYXRlKHRoaXMuaW5oZXJpdGVkKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLmRlZmF1bHRzLCBkZWZhdWx0cyk7XG4gICAgfVxuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uIChuYW1lLCB2YWx1ZSkge1xuICAgICAgICB0aGlzLmF0dHJpYnV0ZXNbbmFtZV0gPSB2YWx1ZTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLnNldExpc3QgPSBmdW5jdGlvbiAobGlzdCkge1xuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMuYXR0cmlidXRlcywgbGlzdCk7XG4gICAgfTtcbiAgICBBdHRyaWJ1dGVzLnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICB2YXIgdmFsdWUgPSB0aGlzLmF0dHJpYnV0ZXNbbmFtZV07XG4gICAgICAgIGlmICh2YWx1ZSA9PT0gZXhwb3J0cy5JTkhFUklUKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHRoaXMuZ2xvYmFsW25hbWVdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmdldEV4cGxpY2l0ID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgaWYgKCF0aGlzLmF0dHJpYnV0ZXMuaGFzT3duUHJvcGVydHkobmFtZSkpIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuYXR0cmlidXRlc1tuYW1lXTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmdldExpc3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBlXzEsIF9hO1xuICAgICAgICB2YXIgbmFtZXMgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIG5hbWVzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHZhbHVlcyA9IHt9O1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yICh2YXIgbmFtZXNfMSA9IF9fdmFsdWVzKG5hbWVzKSwgbmFtZXNfMV8xID0gbmFtZXNfMS5uZXh0KCk7ICFuYW1lc18xXzEuZG9uZTsgbmFtZXNfMV8xID0gbmFtZXNfMS5uZXh0KCkpIHtcbiAgICAgICAgICAgICAgICB2YXIgbmFtZV8xID0gbmFtZXNfMV8xLnZhbHVlO1xuICAgICAgICAgICAgICAgIHZhbHVlc1tuYW1lXzFdID0gdGhpcy5nZXQobmFtZV8xKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZV8xXzEpIHsgZV8xID0geyBlcnJvcjogZV8xXzEgfTsgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgaWYgKG5hbWVzXzFfMSAmJiAhbmFtZXNfMV8xLmRvbmUgJiYgKF9hID0gbmFtZXNfMS5yZXR1cm4pKSBfYS5jYWxsKG5hbWVzXzEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZmluYWxseSB7IGlmIChlXzEpIHRocm93IGVfMS5lcnJvcjsgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZXM7XG4gICAgfTtcbiAgICBBdHRyaWJ1dGVzLnByb3RvdHlwZS5zZXRJbmhlcml0ZWQgPSBmdW5jdGlvbiAobmFtZSwgdmFsdWUpIHtcbiAgICAgICAgdGhpcy5pbmhlcml0ZWRbbmFtZV0gPSB2YWx1ZTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmdldEluaGVyaXRlZCA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmluaGVyaXRlZFtuYW1lXTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmdldERlZmF1bHQgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5kZWZhdWx0c1tuYW1lXTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmlzU2V0ID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXR0cmlidXRlcy5oYXNPd25Qcm9wZXJ0eShuYW1lKSB8fCB0aGlzLmluaGVyaXRlZC5oYXNPd25Qcm9wZXJ0eShuYW1lKTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmhhc0RlZmF1bHQgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICByZXR1cm4gKG5hbWUgaW4gdGhpcy5kZWZhdWx0cyk7XG4gICAgfTtcbiAgICBBdHRyaWJ1dGVzLnByb3RvdHlwZS5nZXRFeHBsaWNpdE5hbWVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy5hdHRyaWJ1dGVzKTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmdldEluaGVyaXRlZE5hbWVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy5pbmhlcml0ZWQpO1xuICAgIH07XG4gICAgQXR0cmlidXRlcy5wcm90b3R5cGUuZ2V0RGVmYXVsdE5hbWVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy5kZWZhdWx0cyk7XG4gICAgfTtcbiAgICBBdHRyaWJ1dGVzLnByb3RvdHlwZS5nZXRHbG9iYWxOYW1lcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuZ2xvYmFsKTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmdldEFsbEF0dHJpYnV0ZXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmF0dHJpYnV0ZXM7XG4gICAgfTtcbiAgICBBdHRyaWJ1dGVzLnByb3RvdHlwZS5nZXRBbGxJbmhlcml0ZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmluaGVyaXRlZDtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmdldEFsbERlZmF1bHRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kZWZhdWx0cztcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmdldEFsbEdsb2JhbHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdsb2JhbDtcbiAgICB9O1xuICAgIHJldHVybiBBdHRyaWJ1dGVzO1xufSgpKTtcbmV4cG9ydHMuQXR0cmlidXRlcyA9IEF0dHJpYnV0ZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdHRyaWJ1dGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/core/MmlTree/Attributes.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js":
/*!**************************************************************!*\
  !*** ./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.XMLNode = exports.TextNode = exports.AbstractMmlEmptyNode = exports.AbstractMmlBaseNode = exports.AbstractMmlLayoutNode = exports.AbstractMmlTokenNode = exports.AbstractMmlNode = exports.indentAttributes = exports.TEXCLASSNAMES = exports.TEXCLASS = void 0;\nvar Attributes_js_1 = __webpack_require__(/*! ./Attributes.js */ \"./node_modules/mathjax-full/js/core/MmlTree/Attributes.js\");\nvar Node_js_1 = __webpack_require__(/*! ../Tree/Node.js */ \"./node_modules/mathjax-full/js/core/Tree/Node.js\");\nexports.TEXCLASS = {\n    ORD: 0,\n    OP: 1,\n    BIN: 2,\n    REL: 3,\n    OPEN: 4,\n    CLOSE: 5,\n    PUNCT: 6,\n    INNER: 7,\n    VCENTER: 8,\n    NONE: -1\n};\nexports.TEXCLASSNAMES = ['ORD', 'OP', 'BIN', 'REL', 'OPEN', 'CLOSE', 'PUNCT', 'INNER', 'VCENTER'];\nvar TEXSPACELENGTH = ['', 'thinmathspace', 'mediummathspace', 'thickmathspace'];\nvar TEXSPACE = [\n    [0, -1, 2, 3, 0, 0, 0, 1],\n    [-1, -1, 0, 3, 0, 0, 0, 1],\n    [2, 2, 0, 0, 2, 0, 0, 2],\n    [3, 3, 0, 0, 3, 0, 0, 3],\n    [0, 0, 0, 0, 0, 0, 0, 0],\n    [0, -1, 2, 3, 0, 0, 0, 1],\n    [1, 1, 0, 1, 1, 1, 1, 1],\n    [1, -1, 2, 3, 1, 0, 1, 1]\n];\nexports.indentAttributes = [\n    'indentalign', 'indentalignfirst',\n    'indentshift', 'indentshiftfirst'\n];\nvar AbstractMmlNode = (function (_super) {\n    __extends(AbstractMmlNode, _super);\n    function AbstractMmlNode(factory, attributes, children) {\n        if (attributes === void 0) { attributes = {}; }\n        if (children === void 0) { children = []; }\n        var _this = _super.call(this, factory) || this;\n        _this.prevClass = null;\n        _this.prevLevel = null;\n        _this.texclass = null;\n        if (_this.arity < 0) {\n            _this.childNodes = [factory.create('inferredMrow')];\n            _this.childNodes[0].parent = _this;\n        }\n        _this.setChildren(children);\n        _this.attributes = new Attributes_js_1.Attributes(factory.getNodeClass(_this.kind).defaults, factory.getNodeClass('math').defaults);\n        _this.attributes.setList(attributes);\n        return _this;\n    }\n    AbstractMmlNode.prototype.copy = function (keepIds) {\n        var e_1, _a, e_2, _b;\n        if (keepIds === void 0) { keepIds = false; }\n        var node = this.factory.create(this.kind);\n        node.properties = __assign({}, this.properties);\n        if (this.attributes) {\n            var attributes = this.attributes.getAllAttributes();\n            try {\n                for (var _c = __values(Object.keys(attributes)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var name_1 = _d.value;\n                    if (name_1 !== 'id' || keepIds) {\n                        node.attributes.set(name_1, attributes[name_1]);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        if (this.childNodes && this.childNodes.length) {\n            var children = this.childNodes;\n            if (children.length === 1 && children[0].isInferred) {\n                children = children[0].childNodes;\n            }\n            try {\n                for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                    var child = children_1_1.value;\n                    if (child) {\n                        node.appendChild(child.copy());\n                    }\n                    else {\n                        node.childNodes.push(null);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (children_1_1 && !children_1_1.done && (_b = children_1.return)) _b.call(children_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n        return node;\n    };\n    Object.defineProperty(AbstractMmlNode.prototype, \"texClass\", {\n        get: function () {\n            return this.texclass;\n        },\n        set: function (texClass) {\n            this.texclass = texClass;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlNode.prototype, \"isToken\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlNode.prototype, \"isEmbellished\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlNode.prototype, \"isSpacelike\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlNode.prototype, \"linebreakContainer\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlNode.prototype, \"hasNewLine\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlNode.prototype, \"arity\", {\n        get: function () {\n            return Infinity;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlNode.prototype, \"isInferred\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlNode.prototype, \"Parent\", {\n        get: function () {\n            var parent = this.parent;\n            while (parent && parent.notParent) {\n                parent = parent.Parent;\n            }\n            return parent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlNode.prototype, \"notParent\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractMmlNode.prototype.setChildren = function (children) {\n        if (this.arity < 0) {\n            return this.childNodes[0].setChildren(children);\n        }\n        return _super.prototype.setChildren.call(this, children);\n    };\n    AbstractMmlNode.prototype.appendChild = function (child) {\n        var e_3, _a;\n        var _this = this;\n        if (this.arity < 0) {\n            this.childNodes[0].appendChild(child);\n            return child;\n        }\n        if (child.isInferred) {\n            if (this.arity === Infinity) {\n                child.childNodes.forEach(function (node) { return _super.prototype.appendChild.call(_this, node); });\n                return child;\n            }\n            var original = child;\n            child = this.factory.create('mrow');\n            child.setChildren(original.childNodes);\n            child.attributes = original.attributes;\n            try {\n                for (var _b = __values(original.getPropertyNames()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var name_2 = _c.value;\n                    child.setProperty(name_2, original.getProperty(name_2));\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        }\n        return _super.prototype.appendChild.call(this, child);\n    };\n    AbstractMmlNode.prototype.replaceChild = function (newChild, oldChild) {\n        if (this.arity < 0) {\n            this.childNodes[0].replaceChild(newChild, oldChild);\n            return newChild;\n        }\n        return _super.prototype.replaceChild.call(this, newChild, oldChild);\n    };\n    AbstractMmlNode.prototype.core = function () {\n        return this;\n    };\n    AbstractMmlNode.prototype.coreMO = function () {\n        return this;\n    };\n    AbstractMmlNode.prototype.coreIndex = function () {\n        return 0;\n    };\n    AbstractMmlNode.prototype.childPosition = function () {\n        var e_4, _a;\n        var child = this;\n        var parent = child.parent;\n        while (parent && parent.notParent) {\n            child = parent;\n            parent = parent.parent;\n        }\n        if (parent) {\n            var i = 0;\n            try {\n                for (var _b = __values(parent.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var node = _c.value;\n                    if (node === child) {\n                        return i;\n                    }\n                    i++;\n                }\n            }\n            catch (e_4_1) { e_4 = { error: e_4_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_4) throw e_4.error; }\n            }\n        }\n        return null;\n    };\n    AbstractMmlNode.prototype.setTeXclass = function (prev) {\n        this.getPrevClass(prev);\n        return (this.texClass != null ? this : prev);\n    };\n    AbstractMmlNode.prototype.updateTeXclass = function (core) {\n        if (core) {\n            this.prevClass = core.prevClass;\n            this.prevLevel = core.prevLevel;\n            core.prevClass = core.prevLevel = null;\n            this.texClass = core.texClass;\n        }\n    };\n    AbstractMmlNode.prototype.getPrevClass = function (prev) {\n        if (prev) {\n            this.prevClass = prev.texClass;\n            this.prevLevel = prev.attributes.get('scriptlevel');\n        }\n    };\n    AbstractMmlNode.prototype.texSpacing = function () {\n        var prevClass = (this.prevClass != null ? this.prevClass : exports.TEXCLASS.NONE);\n        var texClass = this.texClass || exports.TEXCLASS.ORD;\n        if (prevClass === exports.TEXCLASS.NONE || texClass === exports.TEXCLASS.NONE) {\n            return '';\n        }\n        if (prevClass === exports.TEXCLASS.VCENTER) {\n            prevClass = exports.TEXCLASS.ORD;\n        }\n        if (texClass === exports.TEXCLASS.VCENTER) {\n            texClass = exports.TEXCLASS.ORD;\n        }\n        var space = TEXSPACE[prevClass][texClass];\n        if ((this.prevLevel > 0 || this.attributes.get('scriptlevel') > 0) && space >= 0) {\n            return '';\n        }\n        return TEXSPACELENGTH[Math.abs(space)];\n    };\n    AbstractMmlNode.prototype.hasSpacingAttributes = function () {\n        return this.isEmbellished && this.coreMO().hasSpacingAttributes();\n    };\n    AbstractMmlNode.prototype.setInheritedAttributes = function (attributes, display, level, prime) {\n        var e_5, _a;\n        if (attributes === void 0) { attributes = {}; }\n        if (display === void 0) { display = false; }\n        if (level === void 0) { level = 0; }\n        if (prime === void 0) { prime = false; }\n        var defaults = this.attributes.getAllDefaults();\n        try {\n            for (var _b = __values(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                if (defaults.hasOwnProperty(key) || AbstractMmlNode.alwaysInherit.hasOwnProperty(key)) {\n                    var _d = __read(attributes[key], 2), node = _d[0], value = _d[1];\n                    var noinherit = (AbstractMmlNode.noInherit[node] || {})[this.kind] || {};\n                    if (!noinherit[key]) {\n                        this.attributes.setInherited(key, value);\n                    }\n                }\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        var displaystyle = this.attributes.getExplicit('displaystyle');\n        if (displaystyle === undefined) {\n            this.attributes.setInherited('displaystyle', display);\n        }\n        var scriptlevel = this.attributes.getExplicit('scriptlevel');\n        if (scriptlevel === undefined) {\n            this.attributes.setInherited('scriptlevel', level);\n        }\n        if (prime) {\n            this.setProperty('texprimestyle', prime);\n        }\n        var arity = this.arity;\n        if (arity >= 0 && arity !== Infinity && ((arity === 1 && this.childNodes.length === 0) ||\n            (arity !== 1 && this.childNodes.length !== arity))) {\n            if (arity < this.childNodes.length) {\n                this.childNodes = this.childNodes.slice(0, arity);\n            }\n            else {\n                while (this.childNodes.length < arity) {\n                    this.appendChild(this.factory.create('mrow'));\n                }\n            }\n        }\n        this.setChildInheritedAttributes(attributes, display, level, prime);\n    };\n    AbstractMmlNode.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {\n        var e_6, _a;\n        try {\n            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                child.setInheritedAttributes(attributes, display, level, prime);\n            }\n        }\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_6) throw e_6.error; }\n        }\n    };\n    AbstractMmlNode.prototype.addInheritedAttributes = function (current, attributes) {\n        var e_7, _a;\n        var updated = __assign({}, current);\n        try {\n            for (var _b = __values(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var name_3 = _c.value;\n                if (name_3 !== 'displaystyle' && name_3 !== 'scriptlevel' && name_3 !== 'style') {\n                    updated[name_3] = [this.kind, attributes[name_3]];\n                }\n            }\n        }\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_7) throw e_7.error; }\n        }\n        return updated;\n    };\n    AbstractMmlNode.prototype.inheritAttributesFrom = function (node) {\n        var attributes = node.attributes;\n        var display = attributes.get('displaystyle');\n        var scriptlevel = attributes.get('scriptlevel');\n        var defaults = (!attributes.isSet('mathsize') ? {} : {\n            mathsize: ['math', attributes.get('mathsize')]\n        });\n        var prime = node.getProperty('texprimestyle') || false;\n        this.setInheritedAttributes(defaults, display, scriptlevel, prime);\n    };\n    AbstractMmlNode.prototype.verifyTree = function (options) {\n        if (options === void 0) { options = null; }\n        if (options === null) {\n            return;\n        }\n        this.verifyAttributes(options);\n        var arity = this.arity;\n        if (options['checkArity']) {\n            if (arity >= 0 && arity !== Infinity &&\n                ((arity === 1 && this.childNodes.length === 0) ||\n                    (arity !== 1 && this.childNodes.length !== arity))) {\n                this.mError('Wrong number of children for \"' + this.kind + '\" node', options, true);\n            }\n        }\n        this.verifyChildren(options);\n    };\n    AbstractMmlNode.prototype.verifyAttributes = function (options) {\n        var e_8, _a;\n        if (options['checkAttributes']) {\n            var attributes = this.attributes;\n            var bad = [];\n            try {\n                for (var _b = __values(attributes.getExplicitNames()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var name_4 = _c.value;\n                    if (name_4.substr(0, 5) !== 'data-' && attributes.getDefault(name_4) === undefined &&\n                        !name_4.match(/^(?:class|style|id|(?:xlink:)?href)$/)) {\n                        bad.push(name_4);\n                    }\n                }\n            }\n            catch (e_8_1) { e_8 = { error: e_8_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_8) throw e_8.error; }\n            }\n            if (bad.length) {\n                this.mError('Unknown attributes for ' + this.kind + ' node: ' + bad.join(', '), options);\n            }\n        }\n    };\n    AbstractMmlNode.prototype.verifyChildren = function (options) {\n        var e_9, _a;\n        try {\n            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                child.verifyTree(options);\n            }\n        }\n        catch (e_9_1) { e_9 = { error: e_9_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_9) throw e_9.error; }\n        }\n    };\n    AbstractMmlNode.prototype.mError = function (message, options, short) {\n        if (short === void 0) { short = false; }\n        if (this.parent && this.parent.isKind('merror')) {\n            return null;\n        }\n        var merror = this.factory.create('merror');\n        merror.attributes.set('data-mjx-message', message);\n        if (options['fullErrors'] || short) {\n            var mtext = this.factory.create('mtext');\n            var text = this.factory.create('text');\n            text.setText(options['fullErrors'] ? message : this.kind);\n            mtext.appendChild(text);\n            merror.appendChild(mtext);\n            this.parent.replaceChild(merror, this);\n        }\n        else {\n            this.parent.replaceChild(merror, this);\n            merror.appendChild(this);\n        }\n        return merror;\n    };\n    AbstractMmlNode.defaults = {\n        mathbackground: Attributes_js_1.INHERIT,\n        mathcolor: Attributes_js_1.INHERIT,\n        mathsize: Attributes_js_1.INHERIT,\n        dir: Attributes_js_1.INHERIT\n    };\n    AbstractMmlNode.noInherit = {\n        mstyle: {\n            mpadded: { width: true, height: true, depth: true, lspace: true, voffset: true },\n            mtable: { width: true, height: true, depth: true, align: true }\n        },\n        maligngroup: {\n            mrow: { groupalign: true },\n            mtable: { groupalign: true }\n        }\n    };\n    AbstractMmlNode.alwaysInherit = {\n        scriptminsize: true,\n        scriptsizemultiplier: true\n    };\n    AbstractMmlNode.verifyDefaults = {\n        checkArity: true,\n        checkAttributes: false,\n        fullErrors: false,\n        fixMmultiscripts: true,\n        fixMtables: true\n    };\n    return AbstractMmlNode;\n}(Node_js_1.AbstractNode));\nexports.AbstractMmlNode = AbstractMmlNode;\nvar AbstractMmlTokenNode = (function (_super) {\n    __extends(AbstractMmlTokenNode, _super);\n    function AbstractMmlTokenNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(AbstractMmlTokenNode.prototype, \"isToken\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractMmlTokenNode.prototype.getText = function () {\n        var e_10, _a;\n        var text = '';\n        try {\n            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                if (child instanceof TextNode) {\n                    text += child.getText();\n                }\n            }\n        }\n        catch (e_10_1) { e_10 = { error: e_10_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_10) throw e_10.error; }\n        }\n        return text;\n    };\n    AbstractMmlTokenNode.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {\n        var e_11, _a;\n        try {\n            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                if (child instanceof AbstractMmlNode) {\n                    child.setInheritedAttributes(attributes, display, level, prime);\n                }\n            }\n        }\n        catch (e_11_1) { e_11 = { error: e_11_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_11) throw e_11.error; }\n        }\n    };\n    AbstractMmlTokenNode.prototype.walkTree = function (func, data) {\n        var e_12, _a;\n        func(this, data);\n        try {\n            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                if (child instanceof AbstractMmlNode) {\n                    child.walkTree(func, data);\n                }\n            }\n        }\n        catch (e_12_1) { e_12 = { error: e_12_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_12) throw e_12.error; }\n        }\n        return data;\n    };\n    AbstractMmlTokenNode.defaults = __assign(__assign({}, AbstractMmlNode.defaults), { mathvariant: 'normal', mathsize: Attributes_js_1.INHERIT });\n    return AbstractMmlTokenNode;\n}(AbstractMmlNode));\nexports.AbstractMmlTokenNode = AbstractMmlTokenNode;\nvar AbstractMmlLayoutNode = (function (_super) {\n    __extends(AbstractMmlLayoutNode, _super);\n    function AbstractMmlLayoutNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(AbstractMmlLayoutNode.prototype, \"isSpacelike\", {\n        get: function () {\n            return this.childNodes[0].isSpacelike;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlLayoutNode.prototype, \"isEmbellished\", {\n        get: function () {\n            return this.childNodes[0].isEmbellished;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlLayoutNode.prototype, \"arity\", {\n        get: function () {\n            return -1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractMmlLayoutNode.prototype.core = function () {\n        return this.childNodes[0];\n    };\n    AbstractMmlLayoutNode.prototype.coreMO = function () {\n        return this.childNodes[0].coreMO();\n    };\n    AbstractMmlLayoutNode.prototype.setTeXclass = function (prev) {\n        prev = this.childNodes[0].setTeXclass(prev);\n        this.updateTeXclass(this.childNodes[0]);\n        return prev;\n    };\n    AbstractMmlLayoutNode.defaults = AbstractMmlNode.defaults;\n    return AbstractMmlLayoutNode;\n}(AbstractMmlNode));\nexports.AbstractMmlLayoutNode = AbstractMmlLayoutNode;\nvar AbstractMmlBaseNode = (function (_super) {\n    __extends(AbstractMmlBaseNode, _super);\n    function AbstractMmlBaseNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(AbstractMmlBaseNode.prototype, \"isEmbellished\", {\n        get: function () {\n            return this.childNodes[0].isEmbellished;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractMmlBaseNode.prototype.core = function () {\n        return this.childNodes[0];\n    };\n    AbstractMmlBaseNode.prototype.coreMO = function () {\n        return this.childNodes[0].coreMO();\n    };\n    AbstractMmlBaseNode.prototype.setTeXclass = function (prev) {\n        var e_13, _a;\n        this.getPrevClass(prev);\n        this.texClass = exports.TEXCLASS.ORD;\n        var base = this.childNodes[0];\n        if (base) {\n            if (this.isEmbellished || base.isKind('mi')) {\n                prev = base.setTeXclass(prev);\n                this.updateTeXclass(this.core());\n            }\n            else {\n                base.setTeXclass(null);\n                prev = this;\n            }\n        }\n        else {\n            prev = this;\n        }\n        try {\n            for (var _b = __values(this.childNodes.slice(1)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                if (child) {\n                    child.setTeXclass(null);\n                }\n            }\n        }\n        catch (e_13_1) { e_13 = { error: e_13_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_13) throw e_13.error; }\n        }\n        return prev;\n    };\n    AbstractMmlBaseNode.defaults = AbstractMmlNode.defaults;\n    return AbstractMmlBaseNode;\n}(AbstractMmlNode));\nexports.AbstractMmlBaseNode = AbstractMmlBaseNode;\nvar AbstractMmlEmptyNode = (function (_super) {\n    __extends(AbstractMmlEmptyNode, _super);\n    function AbstractMmlEmptyNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"isToken\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"isEmbellished\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"isSpacelike\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"linebreakContainer\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"hasNewLine\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"arity\", {\n        get: function () {\n            return 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"isInferred\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"notParent\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"Parent\", {\n        get: function () {\n            return this.parent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"texClass\", {\n        get: function () {\n            return exports.TEXCLASS.NONE;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"prevClass\", {\n        get: function () {\n            return exports.TEXCLASS.NONE;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"prevLevel\", {\n        get: function () {\n            return 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractMmlEmptyNode.prototype.hasSpacingAttributes = function () {\n        return false;\n    };\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"attributes\", {\n        get: function () {\n            return null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractMmlEmptyNode.prototype.core = function () {\n        return this;\n    };\n    AbstractMmlEmptyNode.prototype.coreMO = function () {\n        return this;\n    };\n    AbstractMmlEmptyNode.prototype.coreIndex = function () {\n        return 0;\n    };\n    AbstractMmlEmptyNode.prototype.childPosition = function () {\n        return 0;\n    };\n    AbstractMmlEmptyNode.prototype.setTeXclass = function (prev) {\n        return prev;\n    };\n    AbstractMmlEmptyNode.prototype.texSpacing = function () {\n        return '';\n    };\n    AbstractMmlEmptyNode.prototype.setInheritedAttributes = function (_attributes, _display, _level, _prime) { };\n    AbstractMmlEmptyNode.prototype.inheritAttributesFrom = function (_node) { };\n    AbstractMmlEmptyNode.prototype.verifyTree = function (_options) { };\n    AbstractMmlEmptyNode.prototype.mError = function (_message, _options, _short) {\n        if (_short === void 0) { _short = false; }\n        return null;\n    };\n    return AbstractMmlEmptyNode;\n}(Node_js_1.AbstractEmptyNode));\nexports.AbstractMmlEmptyNode = AbstractMmlEmptyNode;\nvar TextNode = (function (_super) {\n    __extends(TextNode, _super);\n    function TextNode() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.text = '';\n        return _this;\n    }\n    Object.defineProperty(TextNode.prototype, \"kind\", {\n        get: function () {\n            return 'text';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TextNode.prototype.getText = function () {\n        return this.text;\n    };\n    TextNode.prototype.setText = function (text) {\n        this.text = text;\n        return this;\n    };\n    TextNode.prototype.copy = function () {\n        return this.factory.create(this.kind).setText(this.getText());\n    };\n    TextNode.prototype.toString = function () {\n        return this.text;\n    };\n    return TextNode;\n}(AbstractMmlEmptyNode));\nexports.TextNode = TextNode;\nvar XMLNode = (function (_super) {\n    __extends(XMLNode, _super);\n    function XMLNode() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.xml = null;\n        _this.adaptor = null;\n        return _this;\n    }\n    Object.defineProperty(XMLNode.prototype, \"kind\", {\n        get: function () {\n            return 'XML';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    XMLNode.prototype.getXML = function () {\n        return this.xml;\n    };\n    XMLNode.prototype.setXML = function (xml, adaptor) {\n        if (adaptor === void 0) { adaptor = null; }\n        this.xml = xml;\n        this.adaptor = adaptor;\n        return this;\n    };\n    XMLNode.prototype.getSerializedXML = function () {\n        return this.adaptor.serializeXML(this.xml);\n    };\n    XMLNode.prototype.copy = function () {\n        return this.factory.create(this.kind).setXML(this.adaptor.clone(this.xml));\n    };\n    XMLNode.prototype.toString = function () {\n        return 'XML data';\n    };\n    return XMLNode;\n}(AbstractMmlEmptyNode));\nexports.XMLNode = XMLNode;\n//# sourceMappingURL=MmlNode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/core/MmlTree/MmlNodes/mo.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjax-full/js/core/MmlTree/MmlNodes/mo.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MmlMo = void 0;\nvar MmlNode_js_1 = __webpack_require__(/*! ../MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar OperatorDictionary_js_1 = __webpack_require__(/*! ../OperatorDictionary.js */ \"./node_modules/mathjax-full/js/core/MmlTree/OperatorDictionary.js\");\nvar string_js_1 = __webpack_require__(/*! ../../../util/string.js */ \"./node_modules/mathjax-full/js/util/string.js\");\nvar MmlMo = (function (_super) {\n    __extends(MmlMo, _super);\n    function MmlMo() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._texClass = null;\n        _this.lspace = 5 / 18;\n        _this.rspace = 5 / 18;\n        return _this;\n    }\n    Object.defineProperty(MmlMo.prototype, \"texClass\", {\n        get: function () {\n            if (this._texClass === null) {\n                var mo = this.getText();\n                var _a = __read(this.handleExplicitForm(this.getForms()), 3), form1 = _a[0], form2 = _a[1], form3 = _a[2];\n                var OPTABLE_1 = this.constructor.OPTABLE;\n                var def = OPTABLE_1[form1][mo] || OPTABLE_1[form2][mo] || OPTABLE_1[form3][mo];\n                return def ? def[2] : MmlNode_js_1.TEXCLASS.REL;\n            }\n            return this._texClass;\n        },\n        set: function (value) {\n            this._texClass = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlMo.prototype, \"kind\", {\n        get: function () {\n            return 'mo';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlMo.prototype, \"isEmbellished\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlMo.prototype, \"hasNewLine\", {\n        get: function () {\n            return this.attributes.get('linebreak') === 'newline';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MmlMo.prototype.coreParent = function () {\n        var embellished = this;\n        var parent = this;\n        var math = this.factory.getNodeClass('math');\n        while (parent && parent.isEmbellished && parent.coreMO() === this && !(parent instanceof math)) {\n            embellished = parent;\n            parent = parent.parent;\n        }\n        return embellished;\n    };\n    MmlMo.prototype.coreText = function (parent) {\n        if (!parent) {\n            return '';\n        }\n        if (parent.isEmbellished) {\n            return parent.coreMO().getText();\n        }\n        while ((((parent.isKind('mrow') ||\n            (parent.isKind('TeXAtom') && parent.texClass !== MmlNode_js_1.TEXCLASS.VCENTER) ||\n            parent.isKind('mstyle') ||\n            parent.isKind('mphantom')) && parent.childNodes.length === 1) ||\n            parent.isKind('munderover')) && parent.childNodes[0]) {\n            parent = parent.childNodes[0];\n        }\n        return (parent.isToken ? parent.getText() : '');\n    };\n    MmlMo.prototype.hasSpacingAttributes = function () {\n        return this.attributes.isSet('lspace') ||\n            this.attributes.isSet('rspace');\n    };\n    Object.defineProperty(MmlMo.prototype, \"isAccent\", {\n        get: function () {\n            var accent = false;\n            var node = this.coreParent().parent;\n            if (node) {\n                var key = (node.isKind('mover') ?\n                    (node.childNodes[node.over].coreMO() ?\n                        'accent' : '') :\n                    node.isKind('munder') ?\n                        (node.childNodes[node.under].coreMO() ?\n                            'accentunder' : '') :\n                        node.isKind('munderover') ?\n                            (this === node.childNodes[node.over].coreMO() ?\n                                'accent' :\n                                this === node.childNodes[node.under].coreMO() ?\n                                    'accentunder' : '') :\n                            '');\n                if (key) {\n                    var value = node.attributes.getExplicit(key);\n                    accent = (value !== undefined ? accent : this.attributes.get('accent'));\n                }\n            }\n            return accent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MmlMo.prototype.setTeXclass = function (prev) {\n        var _a = this.attributes.getList('form', 'fence'), form = _a.form, fence = _a.fence;\n        if (this.getProperty('texClass') === undefined &&\n            (this.attributes.isSet('lspace') || this.attributes.isSet('rspace'))) {\n            return null;\n        }\n        if (fence && this.texClass === MmlNode_js_1.TEXCLASS.REL) {\n            if (form === 'prefix') {\n                this.texClass = MmlNode_js_1.TEXCLASS.OPEN;\n            }\n            if (form === 'postfix') {\n                this.texClass = MmlNode_js_1.TEXCLASS.CLOSE;\n            }\n        }\n        return this.adjustTeXclass(prev);\n    };\n    MmlMo.prototype.adjustTeXclass = function (prev) {\n        var texClass = this.texClass;\n        var prevClass = this.prevClass;\n        if (texClass === MmlNode_js_1.TEXCLASS.NONE) {\n            return prev;\n        }\n        if (prev) {\n            if (prev.getProperty('autoOP') && (texClass === MmlNode_js_1.TEXCLASS.BIN || texClass === MmlNode_js_1.TEXCLASS.REL)) {\n                prevClass = prev.texClass = MmlNode_js_1.TEXCLASS.ORD;\n            }\n            prevClass = this.prevClass = (prev.texClass || MmlNode_js_1.TEXCLASS.ORD);\n            this.prevLevel = this.attributes.getInherited('scriptlevel');\n        }\n        else {\n            prevClass = this.prevClass = MmlNode_js_1.TEXCLASS.NONE;\n        }\n        if (texClass === MmlNode_js_1.TEXCLASS.BIN &&\n            (prevClass === MmlNode_js_1.TEXCLASS.NONE || prevClass === MmlNode_js_1.TEXCLASS.BIN || prevClass === MmlNode_js_1.TEXCLASS.OP ||\n                prevClass === MmlNode_js_1.TEXCLASS.REL || prevClass === MmlNode_js_1.TEXCLASS.OPEN || prevClass === MmlNode_js_1.TEXCLASS.PUNCT)) {\n            this.texClass = MmlNode_js_1.TEXCLASS.ORD;\n        }\n        else if (prevClass === MmlNode_js_1.TEXCLASS.BIN &&\n            (texClass === MmlNode_js_1.TEXCLASS.REL || texClass === MmlNode_js_1.TEXCLASS.CLOSE || texClass === MmlNode_js_1.TEXCLASS.PUNCT)) {\n            prev.texClass = this.prevClass = MmlNode_js_1.TEXCLASS.ORD;\n        }\n        else if (texClass === MmlNode_js_1.TEXCLASS.BIN) {\n            var child = this;\n            var parent_1 = this.parent;\n            while (parent_1 && parent_1.parent && parent_1.isEmbellished &&\n                (parent_1.childNodes.length === 1 ||\n                    (!parent_1.isKind('mrow') && parent_1.core() === child))) {\n                child = parent_1;\n                parent_1 = parent_1.parent;\n            }\n            if (parent_1.childNodes[parent_1.childNodes.length - 1] === child) {\n                this.texClass = MmlNode_js_1.TEXCLASS.ORD;\n            }\n        }\n        return this;\n    };\n    MmlMo.prototype.setInheritedAttributes = function (attributes, display, level, prime) {\n        if (attributes === void 0) { attributes = {}; }\n        if (display === void 0) { display = false; }\n        if (level === void 0) { level = 0; }\n        if (prime === void 0) { prime = false; }\n        _super.prototype.setInheritedAttributes.call(this, attributes, display, level, prime);\n        var mo = this.getText();\n        this.checkOperatorTable(mo);\n        this.checkPseudoScripts(mo);\n        this.checkPrimes(mo);\n        this.checkMathAccent(mo);\n    };\n    MmlMo.prototype.checkOperatorTable = function (mo) {\n        var e_1, _a;\n        var _b = __read(this.handleExplicitForm(this.getForms()), 3), form1 = _b[0], form2 = _b[1], form3 = _b[2];\n        this.attributes.setInherited('form', form1);\n        var OPTABLE = this.constructor.OPTABLE;\n        var def = OPTABLE[form1][mo] || OPTABLE[form2][mo] || OPTABLE[form3][mo];\n        if (def) {\n            if (this.getProperty('texClass') === undefined) {\n                this.texClass = def[2];\n            }\n            try {\n                for (var _c = __values(Object.keys(def[3] || {})), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var name_1 = _d.value;\n                    this.attributes.setInherited(name_1, def[3][name_1]);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this.lspace = (def[0] + 1) / 18;\n            this.rspace = (def[1] + 1) / 18;\n        }\n        else {\n            var range = (0, OperatorDictionary_js_1.getRange)(mo);\n            if (range) {\n                if (this.getProperty('texClass') === undefined) {\n                    this.texClass = range[2];\n                }\n                var spacing = this.constructor.MMLSPACING[range[2]];\n                this.lspace = (spacing[0] + 1) / 18;\n                this.rspace = (spacing[1] + 1) / 18;\n            }\n        }\n    };\n    MmlMo.prototype.getForms = function () {\n        var core = this;\n        var parent = this.parent;\n        var Parent = this.Parent;\n        while (Parent && Parent.isEmbellished) {\n            core = parent;\n            parent = Parent.parent;\n            Parent = Parent.Parent;\n        }\n        if (parent && parent.isKind('mrow') && parent.nonSpaceLength() !== 1) {\n            if (parent.firstNonSpace() === core) {\n                return ['prefix', 'infix', 'postfix'];\n            }\n            if (parent.lastNonSpace() === core) {\n                return ['postfix', 'infix', 'prefix'];\n            }\n        }\n        return ['infix', 'prefix', 'postfix'];\n    };\n    MmlMo.prototype.handleExplicitForm = function (forms) {\n        if (this.attributes.isSet('form')) {\n            var form_1 = this.attributes.get('form');\n            forms = [form_1].concat(forms.filter(function (name) { return (name !== form_1); }));\n        }\n        return forms;\n    };\n    MmlMo.prototype.checkPseudoScripts = function (mo) {\n        var PSEUDOSCRIPTS = this.constructor.pseudoScripts;\n        if (!mo.match(PSEUDOSCRIPTS))\n            return;\n        var parent = this.coreParent().Parent;\n        var isPseudo = !parent || !(parent.isKind('msubsup') && !parent.isKind('msub'));\n        this.setProperty('pseudoscript', isPseudo);\n        if (isPseudo) {\n            this.attributes.setInherited('lspace', 0);\n            this.attributes.setInherited('rspace', 0);\n        }\n    };\n    MmlMo.prototype.checkPrimes = function (mo) {\n        var PRIMES = this.constructor.primes;\n        if (!mo.match(PRIMES))\n            return;\n        var REMAP = this.constructor.remapPrimes;\n        var primes = (0, string_js_1.unicodeString)((0, string_js_1.unicodeChars)(mo).map(function (c) { return REMAP[c]; }));\n        this.setProperty('primes', primes);\n    };\n    MmlMo.prototype.checkMathAccent = function (mo) {\n        var parent = this.Parent;\n        if (this.getProperty('mathaccent') !== undefined || !parent || !parent.isKind('munderover'))\n            return;\n        var base = parent.childNodes[0];\n        if (base.isEmbellished && base.coreMO() === this)\n            return;\n        var MATHACCENT = this.constructor.mathaccents;\n        if (mo.match(MATHACCENT)) {\n            this.setProperty('mathaccent', true);\n        }\n    };\n    MmlMo.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults), { form: 'infix', fence: false, separator: false, lspace: 'thickmathspace', rspace: 'thickmathspace', stretchy: false, symmetric: false, maxsize: 'infinity', minsize: '0em', largeop: false, movablelimits: false, accent: false, linebreak: 'auto', lineleading: '1ex', linebreakstyle: 'before', indentalign: 'auto', indentshift: '0', indenttarget: '', indentalignfirst: 'indentalign', indentshiftfirst: 'indentshift', indentalignlast: 'indentalign', indentshiftlast: 'indentshift' });\n    MmlMo.MMLSPACING = OperatorDictionary_js_1.MMLSPACING;\n    MmlMo.OPTABLE = OperatorDictionary_js_1.OPTABLE;\n    MmlMo.pseudoScripts = new RegExp([\n        '^[\"\\'*`',\n        '\\u00AA',\n        '\\u00B0',\n        '\\u00B2-\\u00B4',\n        '\\u00B9',\n        '\\u00BA',\n        '\\u2018-\\u201F',\n        '\\u2032-\\u2037\\u2057',\n        '\\u2070\\u2071',\n        '\\u2074-\\u207F',\n        '\\u2080-\\u208E',\n        ']+$'\n    ].join(''));\n    MmlMo.primes = new RegExp([\n        '^[\"\\'`',\n        '\\u2018-\\u201F',\n        ']+$'\n    ].join(''));\n    MmlMo.remapPrimes = {\n        0x0022: 0x2033,\n        0x0027: 0x2032,\n        0x0060: 0x2035,\n        0x2018: 0x2035,\n        0x2019: 0x2032,\n        0x201A: 0x2032,\n        0x201B: 0x2035,\n        0x201C: 0x2036,\n        0x201D: 0x2033,\n        0x201E: 0x2033,\n        0x201F: 0x2036,\n    };\n    MmlMo.mathaccents = new RegExp([\n        '^[',\n        '\\u00B4\\u0301\\u02CA',\n        '\\u0060\\u0300\\u02CB',\n        '\\u00A8\\u0308',\n        '\\u007E\\u0303\\u02DC',\n        '\\u00AF\\u0304\\u02C9',\n        '\\u02D8\\u0306',\n        '\\u02C7\\u030C',\n        '\\u005E\\u0302\\u02C6',\n        '\\u2192\\u20D7',\n        '\\u02D9\\u0307',\n        '\\u02DA\\u030A',\n        '\\u20DB',\n        '\\u20DC',\n        ']$'\n    ].join(''));\n    return MmlMo;\n}(MmlNode_js_1.AbstractMmlTokenNode));\nexports.MmlMo = MmlMo;\n//# sourceMappingURL=mo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/core/MmlTree/MmlNodes/mo.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/core/MmlTree/OperatorDictionary.js":
/*!*************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/core/MmlTree/OperatorDictionary.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.OPTABLE = exports.MMLSPACING = exports.getRange = exports.RANGES = exports.MO = exports.OPDEF = void 0;\nvar MmlNode_js_1 = __webpack_require__(/*! ./MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nfunction OPDEF(lspace, rspace, texClass, properties) {\n    if (texClass === void 0) { texClass = MmlNode_js_1.TEXCLASS.BIN; }\n    if (properties === void 0) { properties = null; }\n    return [lspace, rspace, texClass, properties];\n}\nexports.OPDEF = OPDEF;\nexports.MO = {\n    ORD: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.ORD),\n    ORD11: OPDEF(1, 1, MmlNode_js_1.TEXCLASS.ORD),\n    ORD21: OPDEF(2, 1, MmlNode_js_1.TEXCLASS.ORD),\n    ORD02: OPDEF(0, 2, MmlNode_js_1.TEXCLASS.ORD),\n    ORD55: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.ORD),\n    NONE: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.NONE),\n    OP: OPDEF(1, 2, MmlNode_js_1.TEXCLASS.OP, { largeop: true, movablelimits: true, symmetric: true }),\n    OPFIXED: OPDEF(1, 2, MmlNode_js_1.TEXCLASS.OP, { largeop: true, movablelimits: true }),\n    INTEGRAL: OPDEF(0, 1, MmlNode_js_1.TEXCLASS.OP, { largeop: true, symmetric: true }),\n    INTEGRAL2: OPDEF(1, 2, MmlNode_js_1.TEXCLASS.OP, { largeop: true, symmetric: true }),\n    BIN3: OPDEF(3, 3, MmlNode_js_1.TEXCLASS.BIN),\n    BIN4: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.BIN),\n    BIN01: OPDEF(0, 1, MmlNode_js_1.TEXCLASS.BIN),\n    BIN5: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.BIN),\n    TALLBIN: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.BIN, { stretchy: true }),\n    BINOP: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.BIN, { largeop: true, movablelimits: true }),\n    REL: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL),\n    REL1: OPDEF(1, 1, MmlNode_js_1.TEXCLASS.REL, { stretchy: true }),\n    REL4: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.REL),\n    RELSTRETCH: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL, { stretchy: true }),\n    RELACCENT: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL, { accent: true }),\n    WIDEREL: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL, { accent: true, stretchy: true }),\n    OPEN: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.OPEN, { fence: true, stretchy: true, symmetric: true }),\n    CLOSE: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.CLOSE, { fence: true, stretchy: true, symmetric: true }),\n    INNER: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.INNER),\n    PUNCT: OPDEF(0, 3, MmlNode_js_1.TEXCLASS.PUNCT),\n    ACCENT: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.ORD, { accent: true }),\n    WIDEACCENT: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.ORD, { accent: true, stretchy: true })\n};\nexports.RANGES = [\n    [0x0020, 0x007F, MmlNode_js_1.TEXCLASS.REL, 'mo'],\n    [0x00A0, 0x00BF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x00C0, 0x024F, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0x02B0, 0x036F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x0370, 0x1A20, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0x1AB0, 0x1AFF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x1B00, 0x1DBF, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0x1DC0, 0x1DFF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x1E00, 0x1FFF, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0x2000, 0x206F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x2070, 0x209F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x2100, 0x214F, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0x2150, 0x218F, MmlNode_js_1.TEXCLASS.ORD, 'mn'],\n    [0x2190, 0x21FF, MmlNode_js_1.TEXCLASS.REL, 'mo'],\n    [0x2200, 0x22FF, MmlNode_js_1.TEXCLASS.BIN, 'mo'],\n    [0x2300, 0x23FF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x2460, 0x24FF, MmlNode_js_1.TEXCLASS.ORD, 'mn'],\n    [0x2500, 0x27EF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x27F0, 0x27FF, MmlNode_js_1.TEXCLASS.REL, 'mo'],\n    [0x2800, 0x28FF, MmlNode_js_1.TEXCLASS.ORD, 'mtext'],\n    [0x2900, 0x297F, MmlNode_js_1.TEXCLASS.REL, 'mo'],\n    [0x2980, 0x29FF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x2A00, 0x2AFF, MmlNode_js_1.TEXCLASS.BIN, 'mo'],\n    [0x2B00, 0x2B2F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x2B30, 0x2B4F, MmlNode_js_1.TEXCLASS.REL, 'mo'],\n    [0x2B50, 0x2BFF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x2C00, 0x2DE0, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0x2E00, 0x2E7F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x2E80, 0x2FDF, MmlNode_js_1.TEXCLASS.ORD, 'mi', 'normal'],\n    [0x2FF0, 0x303F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x3040, 0xA49F, MmlNode_js_1.TEXCLASS.ORD, 'mi', 'normal'],\n    [0xA4D0, 0xA82F, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0xA830, 0xA83F, MmlNode_js_1.TEXCLASS.ORD, 'mn'],\n    [0xA840, 0xD7FF, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0xF900, 0xFAFF, MmlNode_js_1.TEXCLASS.ORD, 'mi', 'normal'],\n    [0xFB00, 0xFDFF, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0xFE00, 0xFE6F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0xFE70, 0x100FF, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0x10100, 0x1018F, MmlNode_js_1.TEXCLASS.ORD, 'mn'],\n    [0x10190, 0x123FF, MmlNode_js_1.TEXCLASS.ORD, 'mi', 'normal'],\n    [0x12400, 0x1247F, MmlNode_js_1.TEXCLASS.ORD, 'mn'],\n    [0x12480, 0x1BC9F, MmlNode_js_1.TEXCLASS.ORD, 'mi', 'normal'],\n    [0x1BCA0, 0x1D25F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x1D360, 0x1D37F, MmlNode_js_1.TEXCLASS.ORD, 'mn'],\n    [0x1D400, 0x1D7CD, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0x1D7CE, 0x1D7FF, MmlNode_js_1.TEXCLASS.ORD, 'mn'],\n    [0x1DF00, 0x1F7FF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x1F800, 0x1F8FF, MmlNode_js_1.TEXCLASS.REL, 'mo'],\n    [0x1F900, 0x1F9FF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x20000, 0x2FA1F, MmlNode_js_1.TEXCLASS.ORD, 'mi', 'normnal'],\n];\nfunction getRange(text) {\n    var e_1, _a;\n    var n = text.codePointAt(0);\n    try {\n        for (var RANGES_1 = __values(exports.RANGES), RANGES_1_1 = RANGES_1.next(); !RANGES_1_1.done; RANGES_1_1 = RANGES_1.next()) {\n            var range = RANGES_1_1.value;\n            if (n <= range[1]) {\n                if (n >= range[0]) {\n                    return range;\n                }\n                break;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (RANGES_1_1 && !RANGES_1_1.done && (_a = RANGES_1.return)) _a.call(RANGES_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return null;\n}\nexports.getRange = getRange;\nexports.MMLSPACING = [\n    [0, 0],\n    [1, 2],\n    [3, 3],\n    [4, 4],\n    [0, 0],\n    [0, 0],\n    [0, 3]\n];\nexports.OPTABLE = {\n    prefix: {\n        '(': exports.MO.OPEN,\n        '+': exports.MO.BIN01,\n        '-': exports.MO.BIN01,\n        '[': exports.MO.OPEN,\n        '{': exports.MO.OPEN,\n        '|': exports.MO.OPEN,\n        '||': [0, 0, MmlNode_js_1.TEXCLASS.BIN, { fence: true, stretchy: true, symmetric: true }],\n        '|||': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true, symmetric: true }],\n        '\\u00AC': exports.MO.ORD21,\n        '\\u00B1': exports.MO.BIN01,\n        '\\u2016': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true }],\n        '\\u2018': [0, 0, MmlNode_js_1.TEXCLASS.OPEN, { fence: true }],\n        '\\u201C': [0, 0, MmlNode_js_1.TEXCLASS.OPEN, { fence: true }],\n        '\\u2145': exports.MO.ORD21,\n        '\\u2146': OPDEF(2, 0, MmlNode_js_1.TEXCLASS.ORD),\n        '\\u2200': exports.MO.ORD21,\n        '\\u2202': exports.MO.ORD21,\n        '\\u2203': exports.MO.ORD21,\n        '\\u2204': exports.MO.ORD21,\n        '\\u2207': exports.MO.ORD21,\n        '\\u220F': exports.MO.OP,\n        '\\u2210': exports.MO.OP,\n        '\\u2211': exports.MO.OP,\n        '\\u2212': exports.MO.BIN01,\n        '\\u2213': exports.MO.BIN01,\n        '\\u221A': [1, 1, MmlNode_js_1.TEXCLASS.ORD, { stretchy: true }],\n        '\\u221B': exports.MO.ORD11,\n        '\\u221C': exports.MO.ORD11,\n        '\\u2220': exports.MO.ORD,\n        '\\u2221': exports.MO.ORD,\n        '\\u2222': exports.MO.ORD,\n        '\\u222B': exports.MO.INTEGRAL,\n        '\\u222C': exports.MO.INTEGRAL,\n        '\\u222D': exports.MO.INTEGRAL,\n        '\\u222E': exports.MO.INTEGRAL,\n        '\\u222F': exports.MO.INTEGRAL,\n        '\\u2230': exports.MO.INTEGRAL,\n        '\\u2231': exports.MO.INTEGRAL,\n        '\\u2232': exports.MO.INTEGRAL,\n        '\\u2233': exports.MO.INTEGRAL,\n        '\\u22C0': exports.MO.OP,\n        '\\u22C1': exports.MO.OP,\n        '\\u22C2': exports.MO.OP,\n        '\\u22C3': exports.MO.OP,\n        '\\u2308': exports.MO.OPEN,\n        '\\u230A': exports.MO.OPEN,\n        '\\u2329': exports.MO.OPEN,\n        '\\u2772': exports.MO.OPEN,\n        '\\u27E6': exports.MO.OPEN,\n        '\\u27E8': exports.MO.OPEN,\n        '\\u27EA': exports.MO.OPEN,\n        '\\u27EC': exports.MO.OPEN,\n        '\\u27EE': exports.MO.OPEN,\n        '\\u2980': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true }],\n        '\\u2983': exports.MO.OPEN,\n        '\\u2985': exports.MO.OPEN,\n        '\\u2987': exports.MO.OPEN,\n        '\\u2989': exports.MO.OPEN,\n        '\\u298B': exports.MO.OPEN,\n        '\\u298D': exports.MO.OPEN,\n        '\\u298F': exports.MO.OPEN,\n        '\\u2991': exports.MO.OPEN,\n        '\\u2993': exports.MO.OPEN,\n        '\\u2995': exports.MO.OPEN,\n        '\\u2997': exports.MO.OPEN,\n        '\\u29FC': exports.MO.OPEN,\n        '\\u2A00': exports.MO.OP,\n        '\\u2A01': exports.MO.OP,\n        '\\u2A02': exports.MO.OP,\n        '\\u2A03': exports.MO.OP,\n        '\\u2A04': exports.MO.OP,\n        '\\u2A05': exports.MO.OP,\n        '\\u2A06': exports.MO.OP,\n        '\\u2A07': exports.MO.OP,\n        '\\u2A08': exports.MO.OP,\n        '\\u2A09': exports.MO.OP,\n        '\\u2A0A': exports.MO.OP,\n        '\\u2A0B': exports.MO.INTEGRAL2,\n        '\\u2A0C': exports.MO.INTEGRAL,\n        '\\u2A0D': exports.MO.INTEGRAL2,\n        '\\u2A0E': exports.MO.INTEGRAL2,\n        '\\u2A0F': exports.MO.INTEGRAL2,\n        '\\u2A10': exports.MO.OP,\n        '\\u2A11': exports.MO.OP,\n        '\\u2A12': exports.MO.OP,\n        '\\u2A13': exports.MO.OP,\n        '\\u2A14': exports.MO.OP,\n        '\\u2A15': exports.MO.INTEGRAL2,\n        '\\u2A16': exports.MO.INTEGRAL2,\n        '\\u2A17': exports.MO.INTEGRAL2,\n        '\\u2A18': exports.MO.INTEGRAL2,\n        '\\u2A19': exports.MO.INTEGRAL2,\n        '\\u2A1A': exports.MO.INTEGRAL2,\n        '\\u2A1B': exports.MO.INTEGRAL2,\n        '\\u2A1C': exports.MO.INTEGRAL2,\n        '\\u2AFC': exports.MO.OP,\n        '\\u2AFF': exports.MO.OP,\n    },\n    postfix: {\n        '!!': OPDEF(1, 0),\n        '!': [1, 0, MmlNode_js_1.TEXCLASS.CLOSE, null],\n        '\"': exports.MO.ACCENT,\n        '&': exports.MO.ORD,\n        ')': exports.MO.CLOSE,\n        '++': OPDEF(0, 0),\n        '--': OPDEF(0, 0),\n        '..': OPDEF(0, 0),\n        '...': exports.MO.ORD,\n        '\\'': exports.MO.ACCENT,\n        ']': exports.MO.CLOSE,\n        '^': exports.MO.WIDEACCENT,\n        '_': exports.MO.WIDEACCENT,\n        '`': exports.MO.ACCENT,\n        '|': exports.MO.CLOSE,\n        '}': exports.MO.CLOSE,\n        '~': exports.MO.WIDEACCENT,\n        '||': [0, 0, MmlNode_js_1.TEXCLASS.BIN, { fence: true, stretchy: true, symmetric: true }],\n        '|||': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true, symmetric: true }],\n        '\\u00A8': exports.MO.ACCENT,\n        '\\u00AA': exports.MO.ACCENT,\n        '\\u00AF': exports.MO.WIDEACCENT,\n        '\\u00B0': exports.MO.ORD,\n        '\\u00B2': exports.MO.ACCENT,\n        '\\u00B3': exports.MO.ACCENT,\n        '\\u00B4': exports.MO.ACCENT,\n        '\\u00B8': exports.MO.ACCENT,\n        '\\u00B9': exports.MO.ACCENT,\n        '\\u00BA': exports.MO.ACCENT,\n        '\\u02C6': exports.MO.WIDEACCENT,\n        '\\u02C7': exports.MO.WIDEACCENT,\n        '\\u02C9': exports.MO.WIDEACCENT,\n        '\\u02CA': exports.MO.ACCENT,\n        '\\u02CB': exports.MO.ACCENT,\n        '\\u02CD': exports.MO.WIDEACCENT,\n        '\\u02D8': exports.MO.ACCENT,\n        '\\u02D9': exports.MO.ACCENT,\n        '\\u02DA': exports.MO.ACCENT,\n        '\\u02DC': exports.MO.WIDEACCENT,\n        '\\u02DD': exports.MO.ACCENT,\n        '\\u02F7': exports.MO.WIDEACCENT,\n        '\\u0302': exports.MO.WIDEACCENT,\n        '\\u0311': exports.MO.ACCENT,\n        '\\u03F6': exports.MO.REL,\n        '\\u2016': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true }],\n        '\\u2019': [0, 0, MmlNode_js_1.TEXCLASS.CLOSE, { fence: true }],\n        '\\u201A': exports.MO.ACCENT,\n        '\\u201B': exports.MO.ACCENT,\n        '\\u201D': [0, 0, MmlNode_js_1.TEXCLASS.CLOSE, { fence: true }],\n        '\\u201E': exports.MO.ACCENT,\n        '\\u201F': exports.MO.ACCENT,\n        '\\u2032': exports.MO.ORD,\n        '\\u2033': exports.MO.ACCENT,\n        '\\u2034': exports.MO.ACCENT,\n        '\\u2035': exports.MO.ACCENT,\n        '\\u2036': exports.MO.ACCENT,\n        '\\u2037': exports.MO.ACCENT,\n        '\\u203E': exports.MO.WIDEACCENT,\n        '\\u2057': exports.MO.ACCENT,\n        '\\u20DB': exports.MO.ACCENT,\n        '\\u20DC': exports.MO.ACCENT,\n        '\\u2309': exports.MO.CLOSE,\n        '\\u230B': exports.MO.CLOSE,\n        '\\u232A': exports.MO.CLOSE,\n        '\\u23B4': exports.MO.WIDEACCENT,\n        '\\u23B5': exports.MO.WIDEACCENT,\n        '\\u23DC': exports.MO.WIDEACCENT,\n        '\\u23DD': exports.MO.WIDEACCENT,\n        '\\u23DE': exports.MO.WIDEACCENT,\n        '\\u23DF': exports.MO.WIDEACCENT,\n        '\\u23E0': exports.MO.WIDEACCENT,\n        '\\u23E1': exports.MO.WIDEACCENT,\n        '\\u25A0': exports.MO.BIN3,\n        '\\u25A1': exports.MO.BIN3,\n        '\\u25AA': exports.MO.BIN3,\n        '\\u25AB': exports.MO.BIN3,\n        '\\u25AD': exports.MO.BIN3,\n        '\\u25AE': exports.MO.BIN3,\n        '\\u25AF': exports.MO.BIN3,\n        '\\u25B0': exports.MO.BIN3,\n        '\\u25B1': exports.MO.BIN3,\n        '\\u25B2': exports.MO.BIN4,\n        '\\u25B4': exports.MO.BIN4,\n        '\\u25B6': exports.MO.BIN4,\n        '\\u25B7': exports.MO.BIN4,\n        '\\u25B8': exports.MO.BIN4,\n        '\\u25BC': exports.MO.BIN4,\n        '\\u25BE': exports.MO.BIN4,\n        '\\u25C0': exports.MO.BIN4,\n        '\\u25C1': exports.MO.BIN4,\n        '\\u25C2': exports.MO.BIN4,\n        '\\u25C4': exports.MO.BIN4,\n        '\\u25C5': exports.MO.BIN4,\n        '\\u25C6': exports.MO.BIN4,\n        '\\u25C7': exports.MO.BIN4,\n        '\\u25C8': exports.MO.BIN4,\n        '\\u25C9': exports.MO.BIN4,\n        '\\u25CC': exports.MO.BIN4,\n        '\\u25CD': exports.MO.BIN4,\n        '\\u25CE': exports.MO.BIN4,\n        '\\u25CF': exports.MO.BIN4,\n        '\\u25D6': exports.MO.BIN4,\n        '\\u25D7': exports.MO.BIN4,\n        '\\u25E6': exports.MO.BIN4,\n        '\\u266D': exports.MO.ORD02,\n        '\\u266E': exports.MO.ORD02,\n        '\\u266F': exports.MO.ORD02,\n        '\\u2773': exports.MO.CLOSE,\n        '\\u27E7': exports.MO.CLOSE,\n        '\\u27E9': exports.MO.CLOSE,\n        '\\u27EB': exports.MO.CLOSE,\n        '\\u27ED': exports.MO.CLOSE,\n        '\\u27EF': exports.MO.CLOSE,\n        '\\u2980': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true }],\n        '\\u2984': exports.MO.CLOSE,\n        '\\u2986': exports.MO.CLOSE,\n        '\\u2988': exports.MO.CLOSE,\n        '\\u298A': exports.MO.CLOSE,\n        '\\u298C': exports.MO.CLOSE,\n        '\\u298E': exports.MO.CLOSE,\n        '\\u2990': exports.MO.CLOSE,\n        '\\u2992': exports.MO.CLOSE,\n        '\\u2994': exports.MO.CLOSE,\n        '\\u2996': exports.MO.CLOSE,\n        '\\u2998': exports.MO.CLOSE,\n        '\\u29FD': exports.MO.CLOSE,\n    },\n    infix: {\n        '!=': exports.MO.BIN4,\n        '#': exports.MO.ORD,\n        '$': exports.MO.ORD,\n        '%': [3, 3, MmlNode_js_1.TEXCLASS.ORD, null],\n        '&&': exports.MO.BIN4,\n        '': exports.MO.ORD,\n        '*': exports.MO.BIN3,\n        '**': OPDEF(1, 1),\n        '*=': exports.MO.BIN4,\n        '+': exports.MO.BIN4,\n        '+=': exports.MO.BIN4,\n        ',': [0, 3, MmlNode_js_1.TEXCLASS.PUNCT, { linebreakstyle: 'after', separator: true }],\n        '-': exports.MO.BIN4,\n        '-=': exports.MO.BIN4,\n        '->': exports.MO.BIN5,\n        '.': [0, 3, MmlNode_js_1.TEXCLASS.PUNCT, { separator: true }],\n        '/': exports.MO.ORD11,\n        '//': OPDEF(1, 1),\n        '/=': exports.MO.BIN4,\n        ':': [1, 2, MmlNode_js_1.TEXCLASS.REL, null],\n        ':=': exports.MO.BIN4,\n        ';': [0, 3, MmlNode_js_1.TEXCLASS.PUNCT, { linebreakstyle: 'after', separator: true }],\n        '<': exports.MO.REL,\n        '<=': exports.MO.BIN5,\n        '<>': OPDEF(1, 1),\n        '=': exports.MO.REL,\n        '==': exports.MO.BIN4,\n        '>': exports.MO.REL,\n        '>=': exports.MO.BIN5,\n        '?': [1, 1, MmlNode_js_1.TEXCLASS.CLOSE, null],\n        '@': exports.MO.ORD11,\n        '\\\\': exports.MO.ORD,\n        '^': exports.MO.ORD11,\n        '_': exports.MO.ORD11,\n        '|': [2, 2, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true, symmetric: true }],\n        '||': [2, 2, MmlNode_js_1.TEXCLASS.BIN, { fence: true, stretchy: true, symmetric: true }],\n        '|||': [2, 2, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true, symmetric: true }],\n        '\\u00B1': exports.MO.BIN4,\n        '\\u00B7': exports.MO.BIN4,\n        '\\u00D7': exports.MO.BIN4,\n        '\\u00F7': exports.MO.BIN4,\n        '\\u02B9': exports.MO.ORD,\n        '\\u0300': exports.MO.ACCENT,\n        '\\u0301': exports.MO.ACCENT,\n        '\\u0303': exports.MO.WIDEACCENT,\n        '\\u0304': exports.MO.ACCENT,\n        '\\u0306': exports.MO.ACCENT,\n        '\\u0307': exports.MO.ACCENT,\n        '\\u0308': exports.MO.ACCENT,\n        '\\u030C': exports.MO.ACCENT,\n        '\\u0332': exports.MO.WIDEACCENT,\n        '\\u0338': exports.MO.REL4,\n        '\\u2015': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { stretchy: true }],\n        '\\u2017': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { stretchy: true }],\n        '\\u2020': exports.MO.BIN3,\n        '\\u2021': exports.MO.BIN3,\n        '\\u2022': exports.MO.BIN4,\n        '\\u2026': exports.MO.INNER,\n        '\\u2043': exports.MO.BIN4,\n        '\\u2044': exports.MO.TALLBIN,\n        '\\u2061': exports.MO.NONE,\n        '\\u2062': exports.MO.NONE,\n        '\\u2063': [0, 0, MmlNode_js_1.TEXCLASS.NONE, { linebreakstyle: 'after', separator: true }],\n        '\\u2064': exports.MO.NONE,\n        '\\u20D7': exports.MO.ACCENT,\n        '\\u2111': exports.MO.ORD,\n        '\\u2113': exports.MO.ORD,\n        '\\u2118': exports.MO.ORD,\n        '\\u211C': exports.MO.ORD,\n        '\\u2190': exports.MO.WIDEREL,\n        '\\u2191': exports.MO.RELSTRETCH,\n        '\\u2192': exports.MO.WIDEREL,\n        '\\u2193': exports.MO.RELSTRETCH,\n        '\\u2194': exports.MO.WIDEREL,\n        '\\u2195': exports.MO.RELSTRETCH,\n        '\\u2196': exports.MO.RELSTRETCH,\n        '\\u2197': exports.MO.RELSTRETCH,\n        '\\u2198': exports.MO.RELSTRETCH,\n        '\\u2199': exports.MO.RELSTRETCH,\n        '\\u219A': exports.MO.RELACCENT,\n        '\\u219B': exports.MO.RELACCENT,\n        '\\u219C': exports.MO.WIDEREL,\n        '\\u219D': exports.MO.WIDEREL,\n        '\\u219E': exports.MO.WIDEREL,\n        '\\u219F': exports.MO.WIDEREL,\n        '\\u21A0': exports.MO.WIDEREL,\n        '\\u21A1': exports.MO.RELSTRETCH,\n        '\\u21A2': exports.MO.WIDEREL,\n        '\\u21A3': exports.MO.WIDEREL,\n        '\\u21A4': exports.MO.WIDEREL,\n        '\\u21A5': exports.MO.RELSTRETCH,\n        '\\u21A6': exports.MO.WIDEREL,\n        '\\u21A7': exports.MO.RELSTRETCH,\n        '\\u21A8': exports.MO.RELSTRETCH,\n        '\\u21A9': exports.MO.WIDEREL,\n        '\\u21AA': exports.MO.WIDEREL,\n        '\\u21AB': exports.MO.WIDEREL,\n        '\\u21AC': exports.MO.WIDEREL,\n        '\\u21AD': exports.MO.WIDEREL,\n        '\\u21AE': exports.MO.RELACCENT,\n        '\\u21AF': exports.MO.RELSTRETCH,\n        '\\u21B0': exports.MO.RELSTRETCH,\n        '\\u21B1': exports.MO.RELSTRETCH,\n        '\\u21B2': exports.MO.RELSTRETCH,\n        '\\u21B3': exports.MO.RELSTRETCH,\n        '\\u21B4': exports.MO.RELSTRETCH,\n        '\\u21B5': exports.MO.RELSTRETCH,\n        '\\u21B6': exports.MO.RELACCENT,\n        '\\u21B7': exports.MO.RELACCENT,\n        '\\u21B8': exports.MO.REL,\n        '\\u21B9': exports.MO.WIDEREL,\n        '\\u21BA': exports.MO.REL,\n        '\\u21BB': exports.MO.REL,\n        '\\u21BC': exports.MO.WIDEREL,\n        '\\u21BD': exports.MO.WIDEREL,\n        '\\u21BE': exports.MO.RELSTRETCH,\n        '\\u21BF': exports.MO.RELSTRETCH,\n        '\\u21C0': exports.MO.WIDEREL,\n        '\\u21C1': exports.MO.WIDEREL,\n        '\\u21C2': exports.MO.RELSTRETCH,\n        '\\u21C3': exports.MO.RELSTRETCH,\n        '\\u21C4': exports.MO.WIDEREL,\n        '\\u21C5': exports.MO.RELSTRETCH,\n        '\\u21C6': exports.MO.WIDEREL,\n        '\\u21C7': exports.MO.WIDEREL,\n        '\\u21C8': exports.MO.RELSTRETCH,\n        '\\u21C9': exports.MO.WIDEREL,\n        '\\u21CA': exports.MO.RELSTRETCH,\n        '\\u21CB': exports.MO.WIDEREL,\n        '\\u21CC': exports.MO.WIDEREL,\n        '\\u21CD': exports.MO.RELACCENT,\n        '\\u21CE': exports.MO.RELACCENT,\n        '\\u21CF': exports.MO.RELACCENT,\n        '\\u21D0': exports.MO.WIDEREL,\n        '\\u21D1': exports.MO.RELSTRETCH,\n        '\\u21D2': exports.MO.WIDEREL,\n        '\\u21D3': exports.MO.RELSTRETCH,\n        '\\u21D4': exports.MO.WIDEREL,\n        '\\u21D5': exports.MO.RELSTRETCH,\n        '\\u21D6': exports.MO.RELSTRETCH,\n        '\\u21D7': exports.MO.RELSTRETCH,\n        '\\u21D8': exports.MO.RELSTRETCH,\n        '\\u21D9': exports.MO.RELSTRETCH,\n        '\\u21DA': exports.MO.WIDEREL,\n        '\\u21DB': exports.MO.WIDEREL,\n        '\\u21DC': exports.MO.WIDEREL,\n        '\\u21DD': exports.MO.WIDEREL,\n        '\\u21DE': exports.MO.REL,\n        '\\u21DF': exports.MO.REL,\n        '\\u21E0': exports.MO.WIDEREL,\n        '\\u21E1': exports.MO.RELSTRETCH,\n        '\\u21E2': exports.MO.WIDEREL,\n        '\\u21E3': exports.MO.RELSTRETCH,\n        '\\u21E4': exports.MO.WIDEREL,\n        '\\u21E5': exports.MO.WIDEREL,\n        '\\u21E6': exports.MO.WIDEREL,\n        '\\u21E7': exports.MO.RELSTRETCH,\n        '\\u21E8': exports.MO.WIDEREL,\n        '\\u21E9': exports.MO.RELSTRETCH,\n        '\\u21EA': exports.MO.RELSTRETCH,\n        '\\u21EB': exports.MO.RELSTRETCH,\n        '\\u21EC': exports.MO.RELSTRETCH,\n        '\\u21ED': exports.MO.RELSTRETCH,\n        '\\u21EE': exports.MO.RELSTRETCH,\n        '\\u21EF': exports.MO.RELSTRETCH,\n        '\\u21F0': exports.MO.WIDEREL,\n        '\\u21F1': exports.MO.REL,\n        '\\u21F2': exports.MO.REL,\n        '\\u21F3': exports.MO.RELSTRETCH,\n        '\\u21F4': exports.MO.RELACCENT,\n        '\\u21F5': exports.MO.RELSTRETCH,\n        '\\u21F6': exports.MO.WIDEREL,\n        '\\u21F7': exports.MO.RELACCENT,\n        '\\u21F8': exports.MO.RELACCENT,\n        '\\u21F9': exports.MO.RELACCENT,\n        '\\u21FA': exports.MO.RELACCENT,\n        '\\u21FB': exports.MO.RELACCENT,\n        '\\u21FC': exports.MO.RELACCENT,\n        '\\u21FD': exports.MO.WIDEREL,\n        '\\u21FE': exports.MO.WIDEREL,\n        '\\u21FF': exports.MO.WIDEREL,\n        '\\u2201': OPDEF(1, 2, MmlNode_js_1.TEXCLASS.ORD),\n        '\\u2205': exports.MO.ORD,\n        '\\u2206': exports.MO.BIN3,\n        '\\u2208': exports.MO.REL,\n        '\\u2209': exports.MO.REL,\n        '\\u220A': exports.MO.REL,\n        '\\u220B': exports.MO.REL,\n        '\\u220C': exports.MO.REL,\n        '\\u220D': exports.MO.REL,\n        '\\u220E': exports.MO.BIN3,\n        '\\u2212': exports.MO.BIN4,\n        '\\u2213': exports.MO.BIN4,\n        '\\u2214': exports.MO.BIN4,\n        '\\u2215': exports.MO.TALLBIN,\n        '\\u2216': exports.MO.BIN4,\n        '\\u2217': exports.MO.BIN4,\n        '\\u2218': exports.MO.BIN4,\n        '\\u2219': exports.MO.BIN4,\n        '\\u221D': exports.MO.REL,\n        '\\u221E': exports.MO.ORD,\n        '\\u221F': exports.MO.REL,\n        '\\u2223': exports.MO.REL,\n        '\\u2224': exports.MO.REL,\n        '\\u2225': exports.MO.REL,\n        '\\u2226': exports.MO.REL,\n        '\\u2227': exports.MO.BIN4,\n        '\\u2228': exports.MO.BIN4,\n        '\\u2229': exports.MO.BIN4,\n        '\\u222A': exports.MO.BIN4,\n        '\\u2234': exports.MO.REL,\n        '\\u2235': exports.MO.REL,\n        '\\u2236': exports.MO.REL,\n        '\\u2237': exports.MO.REL,\n        '\\u2238': exports.MO.BIN4,\n        '\\u2239': exports.MO.REL,\n        '\\u223A': exports.MO.BIN4,\n        '\\u223B': exports.MO.REL,\n        '\\u223C': exports.MO.REL,\n        '\\u223D': exports.MO.REL,\n        '\\u223D\\u0331': exports.MO.BIN3,\n        '\\u223E': exports.MO.REL,\n        '\\u223F': exports.MO.BIN3,\n        '\\u2240': exports.MO.BIN4,\n        '\\u2241': exports.MO.REL,\n        '\\u2242': exports.MO.REL,\n        '\\u2242\\u0338': exports.MO.REL,\n        '\\u2243': exports.MO.REL,\n        '\\u2244': exports.MO.REL,\n        '\\u2245': exports.MO.REL,\n        '\\u2246': exports.MO.REL,\n        '\\u2247': exports.MO.REL,\n        '\\u2248': exports.MO.REL,\n        '\\u2249': exports.MO.REL,\n        '\\u224A': exports.MO.REL,\n        '\\u224B': exports.MO.REL,\n        '\\u224C': exports.MO.REL,\n        '\\u224D': exports.MO.REL,\n        '\\u224E': exports.MO.REL,\n        '\\u224E\\u0338': exports.MO.REL,\n        '\\u224F': exports.MO.REL,\n        '\\u224F\\u0338': exports.MO.REL,\n        '\\u2250': exports.MO.REL,\n        '\\u2251': exports.MO.REL,\n        '\\u2252': exports.MO.REL,\n        '\\u2253': exports.MO.REL,\n        '\\u2254': exports.MO.REL,\n        '\\u2255': exports.MO.REL,\n        '\\u2256': exports.MO.REL,\n        '\\u2257': exports.MO.REL,\n        '\\u2258': exports.MO.REL,\n        '\\u2259': exports.MO.REL,\n        '\\u225A': exports.MO.REL,\n        '\\u225B': exports.MO.REL,\n        '\\u225C': exports.MO.REL,\n        '\\u225D': exports.MO.REL,\n        '\\u225E': exports.MO.REL,\n        '\\u225F': exports.MO.REL,\n        '\\u2260': exports.MO.REL,\n        '\\u2261': exports.MO.REL,\n        '\\u2262': exports.MO.REL,\n        '\\u2263': exports.MO.REL,\n        '\\u2264': exports.MO.REL,\n        '\\u2265': exports.MO.REL,\n        '\\u2266': exports.MO.REL,\n        '\\u2266\\u0338': exports.MO.REL,\n        '\\u2267': exports.MO.REL,\n        '\\u2268': exports.MO.REL,\n        '\\u2269': exports.MO.REL,\n        '\\u226A': exports.MO.REL,\n        '\\u226A\\u0338': exports.MO.REL,\n        '\\u226B': exports.MO.REL,\n        '\\u226B\\u0338': exports.MO.REL,\n        '\\u226C': exports.MO.REL,\n        '\\u226D': exports.MO.REL,\n        '\\u226E': exports.MO.REL,\n        '\\u226F': exports.MO.REL,\n        '\\u2270': exports.MO.REL,\n        '\\u2271': exports.MO.REL,\n        '\\u2272': exports.MO.REL,\n        '\\u2273': exports.MO.REL,\n        '\\u2274': exports.MO.REL,\n        '\\u2275': exports.MO.REL,\n        '\\u2276': exports.MO.REL,\n        '\\u2277': exports.MO.REL,\n        '\\u2278': exports.MO.REL,\n        '\\u2279': exports.MO.REL,\n        '\\u227A': exports.MO.REL,\n        '\\u227B': exports.MO.REL,\n        '\\u227C': exports.MO.REL,\n        '\\u227D': exports.MO.REL,\n        '\\u227E': exports.MO.REL,\n        '\\u227F': exports.MO.REL,\n        '\\u227F\\u0338': exports.MO.REL,\n        '\\u2280': exports.MO.REL,\n        '\\u2281': exports.MO.REL,\n        '\\u2282': exports.MO.REL,\n        '\\u2282\\u20D2': exports.MO.REL,\n        '\\u2283': exports.MO.REL,\n        '\\u2283\\u20D2': exports.MO.REL,\n        '\\u2284': exports.MO.REL,\n        '\\u2285': exports.MO.REL,\n        '\\u2286': exports.MO.REL,\n        '\\u2287': exports.MO.REL,\n        '\\u2288': exports.MO.REL,\n        '\\u2289': exports.MO.REL,\n        '\\u228A': exports.MO.REL,\n        '\\u228B': exports.MO.REL,\n        '\\u228C': exports.MO.BIN4,\n        '\\u228D': exports.MO.BIN4,\n        '\\u228E': exports.MO.BIN4,\n        '\\u228F': exports.MO.REL,\n        '\\u228F\\u0338': exports.MO.REL,\n        '\\u2290': exports.MO.REL,\n        '\\u2290\\u0338': exports.MO.REL,\n        '\\u2291': exports.MO.REL,\n        '\\u2292': exports.MO.REL,\n        '\\u2293': exports.MO.BIN4,\n        '\\u2294': exports.MO.BIN4,\n        '\\u2295': exports.MO.BIN4,\n        '\\u2296': exports.MO.BIN4,\n        '\\u2297': exports.MO.BIN4,\n        '\\u2298': exports.MO.BIN4,\n        '\\u2299': exports.MO.BIN4,\n        '\\u229A': exports.MO.BIN4,\n        '\\u229B': exports.MO.BIN4,\n        '\\u229C': exports.MO.BIN4,\n        '\\u229D': exports.MO.BIN4,\n        '\\u229E': exports.MO.BIN4,\n        '\\u229F': exports.MO.BIN4,\n        '\\u22A0': exports.MO.BIN4,\n        '\\u22A1': exports.MO.BIN4,\n        '\\u22A2': exports.MO.REL,\n        '\\u22A3': exports.MO.REL,\n        '\\u22A4': exports.MO.ORD55,\n        '\\u22A5': exports.MO.REL,\n        '\\u22A6': exports.MO.REL,\n        '\\u22A7': exports.MO.REL,\n        '\\u22A8': exports.MO.REL,\n        '\\u22A9': exports.MO.REL,\n        '\\u22AA': exports.MO.REL,\n        '\\u22AB': exports.MO.REL,\n        '\\u22AC': exports.MO.REL,\n        '\\u22AD': exports.MO.REL,\n        '\\u22AE': exports.MO.REL,\n        '\\u22AF': exports.MO.REL,\n        '\\u22B0': exports.MO.REL,\n        '\\u22B1': exports.MO.REL,\n        '\\u22B2': exports.MO.REL,\n        '\\u22B3': exports.MO.REL,\n        '\\u22B4': exports.MO.REL,\n        '\\u22B5': exports.MO.REL,\n        '\\u22B6': exports.MO.REL,\n        '\\u22B7': exports.MO.REL,\n        '\\u22B8': exports.MO.REL,\n        '\\u22B9': exports.MO.REL,\n        '\\u22BA': exports.MO.BIN4,\n        '\\u22BB': exports.MO.BIN4,\n        '\\u22BC': exports.MO.BIN4,\n        '\\u22BD': exports.MO.BIN4,\n        '\\u22BE': exports.MO.BIN3,\n        '\\u22BF': exports.MO.BIN3,\n        '\\u22C4': exports.MO.BIN4,\n        '\\u22C5': exports.MO.BIN4,\n        '\\u22C6': exports.MO.BIN4,\n        '\\u22C7': exports.MO.BIN4,\n        '\\u22C8': exports.MO.REL,\n        '\\u22C9': exports.MO.BIN4,\n        '\\u22CA': exports.MO.BIN4,\n        '\\u22CB': exports.MO.BIN4,\n        '\\u22CC': exports.MO.BIN4,\n        '\\u22CD': exports.MO.REL,\n        '\\u22CE': exports.MO.BIN4,\n        '\\u22CF': exports.MO.BIN4,\n        '\\u22D0': exports.MO.REL,\n        '\\u22D1': exports.MO.REL,\n        '\\u22D2': exports.MO.BIN4,\n        '\\u22D3': exports.MO.BIN4,\n        '\\u22D4': exports.MO.REL,\n        '\\u22D5': exports.MO.REL,\n        '\\u22D6': exports.MO.REL,\n        '\\u22D7': exports.MO.REL,\n        '\\u22D8': exports.MO.REL,\n        '\\u22D9': exports.MO.REL,\n        '\\u22DA': exports.MO.REL,\n        '\\u22DB': exports.MO.REL,\n        '\\u22DC': exports.MO.REL,\n        '\\u22DD': exports.MO.REL,\n        '\\u22DE': exports.MO.REL,\n        '\\u22DF': exports.MO.REL,\n        '\\u22E0': exports.MO.REL,\n        '\\u22E1': exports.MO.REL,\n        '\\u22E2': exports.MO.REL,\n        '\\u22E3': exports.MO.REL,\n        '\\u22E4': exports.MO.REL,\n        '\\u22E5': exports.MO.REL,\n        '\\u22E6': exports.MO.REL,\n        '\\u22E7': exports.MO.REL,\n        '\\u22E8': exports.MO.REL,\n        '\\u22E9': exports.MO.REL,\n        '\\u22EA': exports.MO.REL,\n        '\\u22EB': exports.MO.REL,\n        '\\u22EC': exports.MO.REL,\n        '\\u22ED': exports.MO.REL,\n        '\\u22EE': exports.MO.ORD55,\n        '\\u22EF': exports.MO.INNER,\n        '\\u22F0': exports.MO.REL,\n        '\\u22F1': [5, 5, MmlNode_js_1.TEXCLASS.INNER, null],\n        '\\u22F2': exports.MO.REL,\n        '\\u22F3': exports.MO.REL,\n        '\\u22F4': exports.MO.REL,\n        '\\u22F5': exports.MO.REL,\n        '\\u22F6': exports.MO.REL,\n        '\\u22F7': exports.MO.REL,\n        '\\u22F8': exports.MO.REL,\n        '\\u22F9': exports.MO.REL,\n        '\\u22FA': exports.MO.REL,\n        '\\u22FB': exports.MO.REL,\n        '\\u22FC': exports.MO.REL,\n        '\\u22FD': exports.MO.REL,\n        '\\u22FE': exports.MO.REL,\n        '\\u22FF': exports.MO.REL,\n        '\\u2305': exports.MO.BIN3,\n        '\\u2306': exports.MO.BIN3,\n        '\\u2322': exports.MO.REL4,\n        '\\u2323': exports.MO.REL4,\n        '\\u2329': exports.MO.OPEN,\n        '\\u232A': exports.MO.CLOSE,\n        '\\u23AA': exports.MO.ORD,\n        '\\u23AF': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { stretchy: true }],\n        '\\u23B0': exports.MO.OPEN,\n        '\\u23B1': exports.MO.CLOSE,\n        '\\u2500': exports.MO.ORD,\n        '\\u25B3': exports.MO.BIN4,\n        '\\u25B5': exports.MO.BIN4,\n        '\\u25B9': exports.MO.BIN4,\n        '\\u25BD': exports.MO.BIN4,\n        '\\u25BF': exports.MO.BIN4,\n        '\\u25C3': exports.MO.BIN4,\n        '\\u25EF': exports.MO.BIN3,\n        '\\u2660': exports.MO.ORD,\n        '\\u2661': exports.MO.ORD,\n        '\\u2662': exports.MO.ORD,\n        '\\u2663': exports.MO.ORD,\n        '\\u2758': exports.MO.REL,\n        '\\u27F0': exports.MO.RELSTRETCH,\n        '\\u27F1': exports.MO.RELSTRETCH,\n        '\\u27F5': exports.MO.WIDEREL,\n        '\\u27F6': exports.MO.WIDEREL,\n        '\\u27F7': exports.MO.WIDEREL,\n        '\\u27F8': exports.MO.WIDEREL,\n        '\\u27F9': exports.MO.WIDEREL,\n        '\\u27FA': exports.MO.WIDEREL,\n        '\\u27FB': exports.MO.WIDEREL,\n        '\\u27FC': exports.MO.WIDEREL,\n        '\\u27FD': exports.MO.WIDEREL,\n        '\\u27FE': exports.MO.WIDEREL,\n        '\\u27FF': exports.MO.WIDEREL,\n        '\\u2900': exports.MO.RELACCENT,\n        '\\u2901': exports.MO.RELACCENT,\n        '\\u2902': exports.MO.RELACCENT,\n        '\\u2903': exports.MO.RELACCENT,\n        '\\u2904': exports.MO.RELACCENT,\n        '\\u2905': exports.MO.RELACCENT,\n        '\\u2906': exports.MO.RELACCENT,\n        '\\u2907': exports.MO.RELACCENT,\n        '\\u2908': exports.MO.REL,\n        '\\u2909': exports.MO.REL,\n        '\\u290A': exports.MO.RELSTRETCH,\n        '\\u290B': exports.MO.RELSTRETCH,\n        '\\u290C': exports.MO.WIDEREL,\n        '\\u290D': exports.MO.WIDEREL,\n        '\\u290E': exports.MO.WIDEREL,\n        '\\u290F': exports.MO.WIDEREL,\n        '\\u2910': exports.MO.WIDEREL,\n        '\\u2911': exports.MO.RELACCENT,\n        '\\u2912': exports.MO.RELSTRETCH,\n        '\\u2913': exports.MO.RELSTRETCH,\n        '\\u2914': exports.MO.RELACCENT,\n        '\\u2915': exports.MO.RELACCENT,\n        '\\u2916': exports.MO.RELACCENT,\n        '\\u2917': exports.MO.RELACCENT,\n        '\\u2918': exports.MO.RELACCENT,\n        '\\u2919': exports.MO.RELACCENT,\n        '\\u291A': exports.MO.RELACCENT,\n        '\\u291B': exports.MO.RELACCENT,\n        '\\u291C': exports.MO.RELACCENT,\n        '\\u291D': exports.MO.RELACCENT,\n        '\\u291E': exports.MO.RELACCENT,\n        '\\u291F': exports.MO.RELACCENT,\n        '\\u2920': exports.MO.RELACCENT,\n        '\\u2921': exports.MO.RELSTRETCH,\n        '\\u2922': exports.MO.RELSTRETCH,\n        '\\u2923': exports.MO.REL,\n        '\\u2924': exports.MO.REL,\n        '\\u2925': exports.MO.REL,\n        '\\u2926': exports.MO.REL,\n        '\\u2927': exports.MO.REL,\n        '\\u2928': exports.MO.REL,\n        '\\u2929': exports.MO.REL,\n        '\\u292A': exports.MO.REL,\n        '\\u292B': exports.MO.REL,\n        '\\u292C': exports.MO.REL,\n        '\\u292D': exports.MO.REL,\n        '\\u292E': exports.MO.REL,\n        '\\u292F': exports.MO.REL,\n        '\\u2930': exports.MO.REL,\n        '\\u2931': exports.MO.REL,\n        '\\u2932': exports.MO.REL,\n        '\\u2933': exports.MO.RELACCENT,\n        '\\u2934': exports.MO.REL,\n        '\\u2935': exports.MO.REL,\n        '\\u2936': exports.MO.REL,\n        '\\u2937': exports.MO.REL,\n        '\\u2938': exports.MO.REL,\n        '\\u2939': exports.MO.REL,\n        '\\u293A': exports.MO.RELACCENT,\n        '\\u293B': exports.MO.RELACCENT,\n        '\\u293C': exports.MO.RELACCENT,\n        '\\u293D': exports.MO.RELACCENT,\n        '\\u293E': exports.MO.REL,\n        '\\u293F': exports.MO.REL,\n        '\\u2940': exports.MO.REL,\n        '\\u2941': exports.MO.REL,\n        '\\u2942': exports.MO.RELACCENT,\n        '\\u2943': exports.MO.RELACCENT,\n        '\\u2944': exports.MO.RELACCENT,\n        '\\u2945': exports.MO.RELACCENT,\n        '\\u2946': exports.MO.RELACCENT,\n        '\\u2947': exports.MO.RELACCENT,\n        '\\u2948': exports.MO.RELACCENT,\n        '\\u2949': exports.MO.REL,\n        '\\u294A': exports.MO.RELACCENT,\n        '\\u294B': exports.MO.RELACCENT,\n        '\\u294C': exports.MO.REL,\n        '\\u294D': exports.MO.REL,\n        '\\u294E': exports.MO.WIDEREL,\n        '\\u294F': exports.MO.RELSTRETCH,\n        '\\u2950': exports.MO.WIDEREL,\n        '\\u2951': exports.MO.RELSTRETCH,\n        '\\u2952': exports.MO.WIDEREL,\n        '\\u2953': exports.MO.WIDEREL,\n        '\\u2954': exports.MO.RELSTRETCH,\n        '\\u2955': exports.MO.RELSTRETCH,\n        '\\u2956': exports.MO.RELSTRETCH,\n        '\\u2957': exports.MO.RELSTRETCH,\n        '\\u2958': exports.MO.RELSTRETCH,\n        '\\u2959': exports.MO.RELSTRETCH,\n        '\\u295A': exports.MO.WIDEREL,\n        '\\u295B': exports.MO.WIDEREL,\n        '\\u295C': exports.MO.RELSTRETCH,\n        '\\u295D': exports.MO.RELSTRETCH,\n        '\\u295E': exports.MO.WIDEREL,\n        '\\u295F': exports.MO.WIDEREL,\n        '\\u2960': exports.MO.RELSTRETCH,\n        '\\u2961': exports.MO.RELSTRETCH,\n        '\\u2962': exports.MO.RELACCENT,\n        '\\u2963': exports.MO.REL,\n        '\\u2964': exports.MO.RELACCENT,\n        '\\u2965': exports.MO.REL,\n        '\\u2966': exports.MO.RELACCENT,\n        '\\u2967': exports.MO.RELACCENT,\n        '\\u2968': exports.MO.RELACCENT,\n        '\\u2969': exports.MO.RELACCENT,\n        '\\u296A': exports.MO.RELACCENT,\n        '\\u296B': exports.MO.RELACCENT,\n        '\\u296C': exports.MO.RELACCENT,\n        '\\u296D': exports.MO.RELACCENT,\n        '\\u296E': exports.MO.RELSTRETCH,\n        '\\u296F': exports.MO.RELSTRETCH,\n        '\\u2970': exports.MO.RELACCENT,\n        '\\u2971': exports.MO.RELACCENT,\n        '\\u2972': exports.MO.RELACCENT,\n        '\\u2973': exports.MO.RELACCENT,\n        '\\u2974': exports.MO.RELACCENT,\n        '\\u2975': exports.MO.RELACCENT,\n        '\\u2976': exports.MO.RELACCENT,\n        '\\u2977': exports.MO.RELACCENT,\n        '\\u2978': exports.MO.RELACCENT,\n        '\\u2979': exports.MO.RELACCENT,\n        '\\u297A': exports.MO.RELACCENT,\n        '\\u297B': exports.MO.RELACCENT,\n        '\\u297C': exports.MO.RELACCENT,\n        '\\u297D': exports.MO.RELACCENT,\n        '\\u297E': exports.MO.REL,\n        '\\u297F': exports.MO.REL,\n        '\\u2981': exports.MO.BIN3,\n        '\\u2982': exports.MO.BIN3,\n        '\\u2999': exports.MO.BIN3,\n        '\\u299A': exports.MO.BIN3,\n        '\\u299B': exports.MO.BIN3,\n        '\\u299C': exports.MO.BIN3,\n        '\\u299D': exports.MO.BIN3,\n        '\\u299E': exports.MO.BIN3,\n        '\\u299F': exports.MO.BIN3,\n        '\\u29A0': exports.MO.BIN3,\n        '\\u29A1': exports.MO.BIN3,\n        '\\u29A2': exports.MO.BIN3,\n        '\\u29A3': exports.MO.BIN3,\n        '\\u29A4': exports.MO.BIN3,\n        '\\u29A5': exports.MO.BIN3,\n        '\\u29A6': exports.MO.BIN3,\n        '\\u29A7': exports.MO.BIN3,\n        '\\u29A8': exports.MO.BIN3,\n        '\\u29A9': exports.MO.BIN3,\n        '\\u29AA': exports.MO.BIN3,\n        '\\u29AB': exports.MO.BIN3,\n        '\\u29AC': exports.MO.BIN3,\n        '\\u29AD': exports.MO.BIN3,\n        '\\u29AE': exports.MO.BIN3,\n        '\\u29AF': exports.MO.BIN3,\n        '\\u29B0': exports.MO.BIN3,\n        '\\u29B1': exports.MO.BIN3,\n        '\\u29B2': exports.MO.BIN3,\n        '\\u29B3': exports.MO.BIN3,\n        '\\u29B4': exports.MO.BIN3,\n        '\\u29B5': exports.MO.BIN3,\n        '\\u29B6': exports.MO.BIN4,\n        '\\u29B7': exports.MO.BIN4,\n        '\\u29B8': exports.MO.BIN4,\n        '\\u29B9': exports.MO.BIN4,\n        '\\u29BA': exports.MO.BIN4,\n        '\\u29BB': exports.MO.BIN4,\n        '\\u29BC': exports.MO.BIN4,\n        '\\u29BD': exports.MO.BIN4,\n        '\\u29BE': exports.MO.BIN4,\n        '\\u29BF': exports.MO.BIN4,\n        '\\u29C0': exports.MO.REL,\n        '\\u29C1': exports.MO.REL,\n        '\\u29C2': exports.MO.BIN3,\n        '\\u29C3': exports.MO.BIN3,\n        '\\u29C4': exports.MO.BIN4,\n        '\\u29C5': exports.MO.BIN4,\n        '\\u29C6': exports.MO.BIN4,\n        '\\u29C7': exports.MO.BIN4,\n        '\\u29C8': exports.MO.BIN4,\n        '\\u29C9': exports.MO.BIN3,\n        '\\u29CA': exports.MO.BIN3,\n        '\\u29CB': exports.MO.BIN3,\n        '\\u29CC': exports.MO.BIN3,\n        '\\u29CD': exports.MO.BIN3,\n        '\\u29CE': exports.MO.REL,\n        '\\u29CF': exports.MO.REL,\n        '\\u29CF\\u0338': exports.MO.REL,\n        '\\u29D0': exports.MO.REL,\n        '\\u29D0\\u0338': exports.MO.REL,\n        '\\u29D1': exports.MO.REL,\n        '\\u29D2': exports.MO.REL,\n        '\\u29D3': exports.MO.REL,\n        '\\u29D4': exports.MO.REL,\n        '\\u29D5': exports.MO.REL,\n        '\\u29D6': exports.MO.BIN4,\n        '\\u29D7': exports.MO.BIN4,\n        '\\u29D8': exports.MO.BIN3,\n        '\\u29D9': exports.MO.BIN3,\n        '\\u29DB': exports.MO.BIN3,\n        '\\u29DC': exports.MO.BIN3,\n        '\\u29DD': exports.MO.BIN3,\n        '\\u29DE': exports.MO.REL,\n        '\\u29DF': exports.MO.BIN3,\n        '\\u29E0': exports.MO.BIN3,\n        '\\u29E1': exports.MO.REL,\n        '\\u29E2': exports.MO.BIN4,\n        '\\u29E3': exports.MO.REL,\n        '\\u29E4': exports.MO.REL,\n        '\\u29E5': exports.MO.REL,\n        '\\u29E6': exports.MO.REL,\n        '\\u29E7': exports.MO.BIN3,\n        '\\u29E8': exports.MO.BIN3,\n        '\\u29E9': exports.MO.BIN3,\n        '\\u29EA': exports.MO.BIN3,\n        '\\u29EB': exports.MO.BIN3,\n        '\\u29EC': exports.MO.BIN3,\n        '\\u29ED': exports.MO.BIN3,\n        '\\u29EE': exports.MO.BIN3,\n        '\\u29EF': exports.MO.BIN3,\n        '\\u29F0': exports.MO.BIN3,\n        '\\u29F1': exports.MO.BIN3,\n        '\\u29F2': exports.MO.BIN3,\n        '\\u29F3': exports.MO.BIN3,\n        '\\u29F4': exports.MO.REL,\n        '\\u29F5': exports.MO.BIN4,\n        '\\u29F6': exports.MO.BIN4,\n        '\\u29F7': exports.MO.BIN4,\n        '\\u29F8': exports.MO.BIN3,\n        '\\u29F9': exports.MO.BIN3,\n        '\\u29FA': exports.MO.BIN3,\n        '\\u29FB': exports.MO.BIN3,\n        '\\u29FE': exports.MO.BIN4,\n        '\\u29FF': exports.MO.BIN4,\n        '\\u2A1D': exports.MO.BIN3,\n        '\\u2A1E': exports.MO.BIN3,\n        '\\u2A1F': exports.MO.BIN3,\n        '\\u2A20': exports.MO.BIN3,\n        '\\u2A21': exports.MO.BIN3,\n        '\\u2A22': exports.MO.BIN4,\n        '\\u2A23': exports.MO.BIN4,\n        '\\u2A24': exports.MO.BIN4,\n        '\\u2A25': exports.MO.BIN4,\n        '\\u2A26': exports.MO.BIN4,\n        '\\u2A27': exports.MO.BIN4,\n        '\\u2A28': exports.MO.BIN4,\n        '\\u2A29': exports.MO.BIN4,\n        '\\u2A2A': exports.MO.BIN4,\n        '\\u2A2B': exports.MO.BIN4,\n        '\\u2A2C': exports.MO.BIN4,\n        '\\u2A2D': exports.MO.BIN4,\n        '\\u2A2E': exports.MO.BIN4,\n        '\\u2A2F': exports.MO.BIN4,\n        '\\u2A30': exports.MO.BIN4,\n        '\\u2A31': exports.MO.BIN4,\n        '\\u2A32': exports.MO.BIN4,\n        '\\u2A33': exports.MO.BIN4,\n        '\\u2A34': exports.MO.BIN4,\n        '\\u2A35': exports.MO.BIN4,\n        '\\u2A36': exports.MO.BIN4,\n        '\\u2A37': exports.MO.BIN4,\n        '\\u2A38': exports.MO.BIN4,\n        '\\u2A39': exports.MO.BIN4,\n        '\\u2A3A': exports.MO.BIN4,\n        '\\u2A3B': exports.MO.BIN4,\n        '\\u2A3C': exports.MO.BIN4,\n        '\\u2A3D': exports.MO.BIN4,\n        '\\u2A3E': exports.MO.BIN4,\n        '\\u2A3F': exports.MO.BIN4,\n        '\\u2A40': exports.MO.BIN4,\n        '\\u2A41': exports.MO.BIN4,\n        '\\u2A42': exports.MO.BIN4,\n        '\\u2A43': exports.MO.BIN4,\n        '\\u2A44': exports.MO.BIN4,\n        '\\u2A45': exports.MO.BIN4,\n        '\\u2A46': exports.MO.BIN4,\n        '\\u2A47': exports.MO.BIN4,\n        '\\u2A48': exports.MO.BIN4,\n        '\\u2A49': exports.MO.BIN4,\n        '\\u2A4A': exports.MO.BIN4,\n        '\\u2A4B': exports.MO.BIN4,\n        '\\u2A4C': exports.MO.BIN4,\n        '\\u2A4D': exports.MO.BIN4,\n        '\\u2A4E': exports.MO.BIN4,\n        '\\u2A4F': exports.MO.BIN4,\n        '\\u2A50': exports.MO.BIN4,\n        '\\u2A51': exports.MO.BIN4,\n        '\\u2A52': exports.MO.BIN4,\n        '\\u2A53': exports.MO.BIN4,\n        '\\u2A54': exports.MO.BIN4,\n        '\\u2A55': exports.MO.BIN4,\n        '\\u2A56': exports.MO.BIN4,\n        '\\u2A57': exports.MO.BIN4,\n        '\\u2A58': exports.MO.BIN4,\n        '\\u2A59': exports.MO.REL,\n        '\\u2A5A': exports.MO.BIN4,\n        '\\u2A5B': exports.MO.BIN4,\n        '\\u2A5C': exports.MO.BIN4,\n        '\\u2A5D': exports.MO.BIN4,\n        '\\u2A5E': exports.MO.BIN4,\n        '\\u2A5F': exports.MO.BIN4,\n        '\\u2A60': exports.MO.BIN4,\n        '\\u2A61': exports.MO.BIN4,\n        '\\u2A62': exports.MO.BIN4,\n        '\\u2A63': exports.MO.BIN4,\n        '\\u2A64': exports.MO.BIN4,\n        '\\u2A65': exports.MO.BIN4,\n        '\\u2A66': exports.MO.REL,\n        '\\u2A67': exports.MO.REL,\n        '\\u2A68': exports.MO.REL,\n        '\\u2A69': exports.MO.REL,\n        '\\u2A6A': exports.MO.REL,\n        '\\u2A6B': exports.MO.REL,\n        '\\u2A6C': exports.MO.REL,\n        '\\u2A6D': exports.MO.REL,\n        '\\u2A6E': exports.MO.REL,\n        '\\u2A6F': exports.MO.REL,\n        '\\u2A70': exports.MO.REL,\n        '\\u2A71': exports.MO.BIN4,\n        '\\u2A72': exports.MO.BIN4,\n        '\\u2A73': exports.MO.REL,\n        '\\u2A74': exports.MO.REL,\n        '\\u2A75': exports.MO.REL,\n        '\\u2A76': exports.MO.REL,\n        '\\u2A77': exports.MO.REL,\n        '\\u2A78': exports.MO.REL,\n        '\\u2A79': exports.MO.REL,\n        '\\u2A7A': exports.MO.REL,\n        '\\u2A7B': exports.MO.REL,\n        '\\u2A7C': exports.MO.REL,\n        '\\u2A7D': exports.MO.REL,\n        '\\u2A7D\\u0338': exports.MO.REL,\n        '\\u2A7E': exports.MO.REL,\n        '\\u2A7E\\u0338': exports.MO.REL,\n        '\\u2A7F': exports.MO.REL,\n        '\\u2A80': exports.MO.REL,\n        '\\u2A81': exports.MO.REL,\n        '\\u2A82': exports.MO.REL,\n        '\\u2A83': exports.MO.REL,\n        '\\u2A84': exports.MO.REL,\n        '\\u2A85': exports.MO.REL,\n        '\\u2A86': exports.MO.REL,\n        '\\u2A87': exports.MO.REL,\n        '\\u2A88': exports.MO.REL,\n        '\\u2A89': exports.MO.REL,\n        '\\u2A8A': exports.MO.REL,\n        '\\u2A8B': exports.MO.REL,\n        '\\u2A8C': exports.MO.REL,\n        '\\u2A8D': exports.MO.REL,\n        '\\u2A8E': exports.MO.REL,\n        '\\u2A8F': exports.MO.REL,\n        '\\u2A90': exports.MO.REL,\n        '\\u2A91': exports.MO.REL,\n        '\\u2A92': exports.MO.REL,\n        '\\u2A93': exports.MO.REL,\n        '\\u2A94': exports.MO.REL,\n        '\\u2A95': exports.MO.REL,\n        '\\u2A96': exports.MO.REL,\n        '\\u2A97': exports.MO.REL,\n        '\\u2A98': exports.MO.REL,\n        '\\u2A99': exports.MO.REL,\n        '\\u2A9A': exports.MO.REL,\n        '\\u2A9B': exports.MO.REL,\n        '\\u2A9C': exports.MO.REL,\n        '\\u2A9D': exports.MO.REL,\n        '\\u2A9E': exports.MO.REL,\n        '\\u2A9F': exports.MO.REL,\n        '\\u2AA0': exports.MO.REL,\n        '\\u2AA1': exports.MO.REL,\n        '\\u2AA1\\u0338': exports.MO.REL,\n        '\\u2AA2': exports.MO.REL,\n        '\\u2AA2\\u0338': exports.MO.REL,\n        '\\u2AA3': exports.MO.REL,\n        '\\u2AA4': exports.MO.REL,\n        '\\u2AA5': exports.MO.REL,\n        '\\u2AA6': exports.MO.REL,\n        '\\u2AA7': exports.MO.REL,\n        '\\u2AA8': exports.MO.REL,\n        '\\u2AA9': exports.MO.REL,\n        '\\u2AAA': exports.MO.REL,\n        '\\u2AAB': exports.MO.REL,\n        '\\u2AAC': exports.MO.REL,\n        '\\u2AAD': exports.MO.REL,\n        '\\u2AAE': exports.MO.REL,\n        '\\u2AAF': exports.MO.REL,\n        '\\u2AAF\\u0338': exports.MO.REL,\n        '\\u2AB0': exports.MO.REL,\n        '\\u2AB0\\u0338': exports.MO.REL,\n        '\\u2AB1': exports.MO.REL,\n        '\\u2AB2': exports.MO.REL,\n        '\\u2AB3': exports.MO.REL,\n        '\\u2AB4': exports.MO.REL,\n        '\\u2AB5': exports.MO.REL,\n        '\\u2AB6': exports.MO.REL,\n        '\\u2AB7': exports.MO.REL,\n        '\\u2AB8': exports.MO.REL,\n        '\\u2AB9': exports.MO.REL,\n        '\\u2ABA': exports.MO.REL,\n        '\\u2ABB': exports.MO.REL,\n        '\\u2ABC': exports.MO.REL,\n        '\\u2ABD': exports.MO.REL,\n        '\\u2ABE': exports.MO.REL,\n        '\\u2ABF': exports.MO.REL,\n        '\\u2AC0': exports.MO.REL,\n        '\\u2AC1': exports.MO.REL,\n        '\\u2AC2': exports.MO.REL,\n        '\\u2AC3': exports.MO.REL,\n        '\\u2AC4': exports.MO.REL,\n        '\\u2AC5': exports.MO.REL,\n        '\\u2AC6': exports.MO.REL,\n        '\\u2AC7': exports.MO.REL,\n        '\\u2AC8': exports.MO.REL,\n        '\\u2AC9': exports.MO.REL,\n        '\\u2ACA': exports.MO.REL,\n        '\\u2ACB': exports.MO.REL,\n        '\\u2ACC': exports.MO.REL,\n        '\\u2ACD': exports.MO.REL,\n        '\\u2ACE': exports.MO.REL,\n        '\\u2ACF': exports.MO.REL,\n        '\\u2AD0': exports.MO.REL,\n        '\\u2AD1': exports.MO.REL,\n        '\\u2AD2': exports.MO.REL,\n        '\\u2AD3': exports.MO.REL,\n        '\\u2AD4': exports.MO.REL,\n        '\\u2AD5': exports.MO.REL,\n        '\\u2AD6': exports.MO.REL,\n        '\\u2AD7': exports.MO.REL,\n        '\\u2AD8': exports.MO.REL,\n        '\\u2AD9': exports.MO.REL,\n        '\\u2ADA': exports.MO.REL,\n        '\\u2ADB': exports.MO.REL,\n        '\\u2ADD': exports.MO.REL,\n        '\\u2ADD\\u0338': exports.MO.REL,\n        '\\u2ADE': exports.MO.REL,\n        '\\u2ADF': exports.MO.REL,\n        '\\u2AE0': exports.MO.REL,\n        '\\u2AE1': exports.MO.REL,\n        '\\u2AE2': exports.MO.REL,\n        '\\u2AE3': exports.MO.REL,\n        '\\u2AE4': exports.MO.REL,\n        '\\u2AE5': exports.MO.REL,\n        '\\u2AE6': exports.MO.REL,\n        '\\u2AE7': exports.MO.REL,\n        '\\u2AE8': exports.MO.REL,\n        '\\u2AE9': exports.MO.REL,\n        '\\u2AEA': exports.MO.REL,\n        '\\u2AEB': exports.MO.REL,\n        '\\u2AEC': exports.MO.REL,\n        '\\u2AED': exports.MO.REL,\n        '\\u2AEE': exports.MO.REL,\n        '\\u2AEF': exports.MO.REL,\n        '\\u2AF0': exports.MO.REL,\n        '\\u2AF1': exports.MO.REL,\n        '\\u2AF2': exports.MO.REL,\n        '\\u2AF3': exports.MO.REL,\n        '\\u2AF4': exports.MO.BIN4,\n        '\\u2AF5': exports.MO.BIN4,\n        '\\u2AF6': exports.MO.BIN4,\n        '\\u2AF7': exports.MO.REL,\n        '\\u2AF8': exports.MO.REL,\n        '\\u2AF9': exports.MO.REL,\n        '\\u2AFA': exports.MO.REL,\n        '\\u2AFB': exports.MO.BIN4,\n        '\\u2AFD': exports.MO.BIN4,\n        '\\u2AFE': exports.MO.BIN3,\n        '\\u2B45': exports.MO.RELSTRETCH,\n        '\\u2B46': exports.MO.RELSTRETCH,\n        '\\u3008': exports.MO.OPEN,\n        '\\u3009': exports.MO.CLOSE,\n        '\\uFE37': exports.MO.WIDEACCENT,\n        '\\uFE38': exports.MO.WIDEACCENT,\n    }\n};\nexports.OPTABLE.infix[\"^\"] = exports.MO.WIDEREL;\nexports.OPTABLE.infix._ = exports.MO.WIDEREL;\nexports.OPTABLE.infix[\"⫝̸\"] = exports.MO.REL;\n//# sourceMappingURL=OperatorDictionary.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/core/MmlTree/OperatorDictionary.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/core/Tree/Factory.js":
/*!***********************************************************!*\
  !*** ./node_modules/mathjax-full/js/core/Tree/Factory.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbstractFactory = void 0;\nvar AbstractFactory = (function () {\n    function AbstractFactory(nodes) {\n        var e_1, _a;\n        if (nodes === void 0) { nodes = null; }\n        this.defaultKind = 'unknown';\n        this.nodeMap = new Map();\n        this.node = {};\n        if (nodes === null) {\n            nodes = this.constructor.defaultNodes;\n        }\n        try {\n            for (var _b = __values(Object.keys(nodes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var kind = _c.value;\n                this.setNodeClass(kind, nodes[kind]);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    AbstractFactory.prototype.create = function (kind) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        return (this.node[kind] || this.node[this.defaultKind]).apply(void 0, __spreadArray([], __read(args), false));\n    };\n    AbstractFactory.prototype.setNodeClass = function (kind, nodeClass) {\n        this.nodeMap.set(kind, nodeClass);\n        var THIS = this;\n        var KIND = this.nodeMap.get(kind);\n        this.node[kind] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (KIND.bind.apply(KIND, __spreadArray([void 0, THIS], __read(args), false)))();\n        };\n    };\n    AbstractFactory.prototype.getNodeClass = function (kind) {\n        return this.nodeMap.get(kind);\n    };\n    AbstractFactory.prototype.deleteNodeClass = function (kind) {\n        this.nodeMap.delete(kind);\n        delete this.node[kind];\n    };\n    AbstractFactory.prototype.nodeIsKind = function (node, kind) {\n        return (node instanceof this.getNodeClass(kind));\n    };\n    AbstractFactory.prototype.getKinds = function () {\n        return Array.from(this.nodeMap.keys());\n    };\n    AbstractFactory.defaultNodes = {};\n    return AbstractFactory;\n}());\nexports.AbstractFactory = AbstractFactory;\n//# sourceMappingURL=Factory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2NvcmUvVHJlZS9GYWN0b3J5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsTUFBTTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RSxPQUFPO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0UsVUFBVTtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHVCQUF1QjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qix1QkFBdUI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCx1QkFBdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9jb3JlL1RyZWUvRmFjdG9yeS5qcz80MGY5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fdmFsdWVzID0gKHRoaXMgJiYgdGhpcy5fX3ZhbHVlcykgfHwgZnVuY3Rpb24obykge1xuICAgIHZhciBzID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIFN5bWJvbC5pdGVyYXRvciwgbSA9IHMgJiYgb1tzXSwgaSA9IDA7XG4gICAgaWYgKG0pIHJldHVybiBtLmNhbGwobyk7XG4gICAgaWYgKG8gJiYgdHlwZW9mIG8ubGVuZ3RoID09PSBcIm51bWJlclwiKSByZXR1cm4ge1xuICAgICAgICBuZXh0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAobyAmJiBpID49IG8ubGVuZ3RoKSBvID0gdm9pZCAwO1xuICAgICAgICAgICAgcmV0dXJuIHsgdmFsdWU6IG8gJiYgb1tpKytdLCBkb25lOiAhbyB9O1xuICAgICAgICB9XG4gICAgfTtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHMgPyBcIk9iamVjdCBpcyBub3QgaXRlcmFibGUuXCIgOiBcIlN5bWJvbC5pdGVyYXRvciBpcyBub3QgZGVmaW5lZC5cIik7XG59O1xudmFyIF9fcmVhZCA9ICh0aGlzICYmIHRoaXMuX19yZWFkKSB8fCBmdW5jdGlvbiAobywgbikge1xuICAgIHZhciBtID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9bU3ltYm9sLml0ZXJhdG9yXTtcbiAgICBpZiAoIW0pIHJldHVybiBvO1xuICAgIHZhciBpID0gbS5jYWxsKG8pLCByLCBhciA9IFtdLCBlO1xuICAgIHRyeSB7XG4gICAgICAgIHdoaWxlICgobiA9PT0gdm9pZCAwIHx8IG4tLSA+IDApICYmICEociA9IGkubmV4dCgpKS5kb25lKSBhci5wdXNoKHIudmFsdWUpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHsgZSA9IHsgZXJyb3I6IGVycm9yIH07IH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChyICYmICFyLmRvbmUgJiYgKG0gPSBpW1wicmV0dXJuXCJdKSkgbS5jYWxsKGkpO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkgeyBpZiAoZSkgdGhyb3cgZS5lcnJvcjsgfVxuICAgIH1cbiAgICByZXR1cm4gYXI7XG59O1xudmFyIF9fc3ByZWFkQXJyYXkgPSAodGhpcyAmJiB0aGlzLl9fc3ByZWFkQXJyYXkpIHx8IGZ1bmN0aW9uICh0bywgZnJvbSwgcGFjaykge1xuICAgIGlmIChwYWNrIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIGZvciAodmFyIGkgPSAwLCBsID0gZnJvbS5sZW5ndGgsIGFyOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGlmIChhciB8fCAhKGkgaW4gZnJvbSkpIHtcbiAgICAgICAgICAgIGlmICghYXIpIGFyID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSwgMCwgaSk7XG4gICAgICAgICAgICBhcltpXSA9IGZyb21baV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRvLmNvbmNhdChhciB8fCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tKSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BYnN0cmFjdEZhY3RvcnkgPSB2b2lkIDA7XG52YXIgQWJzdHJhY3RGYWN0b3J5ID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBBYnN0cmFjdEZhY3Rvcnkobm9kZXMpIHtcbiAgICAgICAgdmFyIGVfMSwgX2E7XG4gICAgICAgIGlmIChub2RlcyA9PT0gdm9pZCAwKSB7IG5vZGVzID0gbnVsbDsgfVxuICAgICAgICB0aGlzLmRlZmF1bHRLaW5kID0gJ3Vua25vd24nO1xuICAgICAgICB0aGlzLm5vZGVNYXAgPSBuZXcgTWFwKCk7XG4gICAgICAgIHRoaXMubm9kZSA9IHt9O1xuICAgICAgICBpZiAobm9kZXMgPT09IG51bGwpIHtcbiAgICAgICAgICAgIG5vZGVzID0gdGhpcy5jb25zdHJ1Y3Rvci5kZWZhdWx0Tm9kZXM7XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGZvciAodmFyIF9iID0gX192YWx1ZXMoT2JqZWN0LmtleXMobm9kZXMpKSwgX2MgPSBfYi5uZXh0KCk7ICFfYy5kb25lOyBfYyA9IF9iLm5leHQoKSkge1xuICAgICAgICAgICAgICAgIHZhciBraW5kID0gX2MudmFsdWU7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXROb2RlQ2xhc3Moa2luZCwgbm9kZXNba2luZF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlXzFfMSkgeyBlXzEgPSB7IGVycm9yOiBlXzFfMSB9OyB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiAoX2MgJiYgIV9jLmRvbmUgJiYgKF9hID0gX2IucmV0dXJuKSkgX2EuY2FsbChfYik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmaW5hbGx5IHsgaWYgKGVfMSkgdGhyb3cgZV8xLmVycm9yOyB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgQWJzdHJhY3RGYWN0b3J5LnByb3RvdHlwZS5jcmVhdGUgPSBmdW5jdGlvbiAoa2luZCkge1xuICAgICAgICB2YXIgYXJncyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBfaSA9IDE7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgYXJnc1tfaSAtIDFdID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKHRoaXMubm9kZVtraW5kXSB8fCB0aGlzLm5vZGVbdGhpcy5kZWZhdWx0S2luZF0pLmFwcGx5KHZvaWQgMCwgX19zcHJlYWRBcnJheShbXSwgX19yZWFkKGFyZ3MpLCBmYWxzZSkpO1xuICAgIH07XG4gICAgQWJzdHJhY3RGYWN0b3J5LnByb3RvdHlwZS5zZXROb2RlQ2xhc3MgPSBmdW5jdGlvbiAoa2luZCwgbm9kZUNsYXNzKSB7XG4gICAgICAgIHRoaXMubm9kZU1hcC5zZXQoa2luZCwgbm9kZUNsYXNzKTtcbiAgICAgICAgdmFyIFRISVMgPSB0aGlzO1xuICAgICAgICB2YXIgS0lORCA9IHRoaXMubm9kZU1hcC5nZXQoa2luZCk7XG4gICAgICAgIHRoaXMubm9kZVtraW5kXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhcmdzID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBuZXcgKEtJTkQuYmluZC5hcHBseShLSU5ELCBfX3NwcmVhZEFycmF5KFt2b2lkIDAsIFRISVNdLCBfX3JlYWQoYXJncyksIGZhbHNlKSkpKCk7XG4gICAgICAgIH07XG4gICAgfTtcbiAgICBBYnN0cmFjdEZhY3RvcnkucHJvdG90eXBlLmdldE5vZGVDbGFzcyA9IGZ1bmN0aW9uIChraW5kKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm5vZGVNYXAuZ2V0KGtpbmQpO1xuICAgIH07XG4gICAgQWJzdHJhY3RGYWN0b3J5LnByb3RvdHlwZS5kZWxldGVOb2RlQ2xhc3MgPSBmdW5jdGlvbiAoa2luZCkge1xuICAgICAgICB0aGlzLm5vZGVNYXAuZGVsZXRlKGtpbmQpO1xuICAgICAgICBkZWxldGUgdGhpcy5ub2RlW2tpbmRdO1xuICAgIH07XG4gICAgQWJzdHJhY3RGYWN0b3J5LnByb3RvdHlwZS5ub2RlSXNLaW5kID0gZnVuY3Rpb24gKG5vZGUsIGtpbmQpIHtcbiAgICAgICAgcmV0dXJuIChub2RlIGluc3RhbmNlb2YgdGhpcy5nZXROb2RlQ2xhc3Moa2luZCkpO1xuICAgIH07XG4gICAgQWJzdHJhY3RGYWN0b3J5LnByb3RvdHlwZS5nZXRLaW5kcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5ub2RlTWFwLmtleXMoKSk7XG4gICAgfTtcbiAgICBBYnN0cmFjdEZhY3RvcnkuZGVmYXVsdE5vZGVzID0ge307XG4gICAgcmV0dXJuIEFic3RyYWN0RmFjdG9yeTtcbn0oKSk7XG5leHBvcnRzLkFic3RyYWN0RmFjdG9yeSA9IEFic3RyYWN0RmFjdG9yeTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUZhY3RvcnkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/core/Tree/Factory.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/core/Tree/Node.js":
/*!********************************************************!*\
  !*** ./node_modules/mathjax-full/js/core/Tree/Node.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbstractEmptyNode = exports.AbstractNode = void 0;\nvar AbstractNode = (function () {\n    function AbstractNode(factory, properties, children) {\n        var e_1, _a;\n        if (properties === void 0) { properties = {}; }\n        if (children === void 0) { children = []; }\n        this.factory = factory;\n        this.parent = null;\n        this.properties = {};\n        this.childNodes = [];\n        try {\n            for (var _b = __values(Object.keys(properties)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var name_1 = _c.value;\n                this.setProperty(name_1, properties[name_1]);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (children.length) {\n            this.setChildren(children);\n        }\n    }\n    Object.defineProperty(AbstractNode.prototype, \"kind\", {\n        get: function () {\n            return 'unknown';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractNode.prototype.setProperty = function (name, value) {\n        this.properties[name] = value;\n    };\n    AbstractNode.prototype.getProperty = function (name) {\n        return this.properties[name];\n    };\n    AbstractNode.prototype.getPropertyNames = function () {\n        return Object.keys(this.properties);\n    };\n    AbstractNode.prototype.getAllProperties = function () {\n        return this.properties;\n    };\n    AbstractNode.prototype.removeProperty = function () {\n        var e_2, _a;\n        var names = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            names[_i] = arguments[_i];\n        }\n        try {\n            for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {\n                var name_2 = names_1_1.value;\n                delete this.properties[name_2];\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    AbstractNode.prototype.isKind = function (kind) {\n        return this.factory.nodeIsKind(this, kind);\n    };\n    AbstractNode.prototype.setChildren = function (children) {\n        var e_3, _a;\n        this.childNodes = [];\n        try {\n            for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                var child = children_1_1.value;\n                this.appendChild(child);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    AbstractNode.prototype.appendChild = function (child) {\n        this.childNodes.push(child);\n        child.parent = this;\n        return child;\n    };\n    AbstractNode.prototype.replaceChild = function (newChild, oldChild) {\n        var i = this.childIndex(oldChild);\n        if (i !== null) {\n            this.childNodes[i] = newChild;\n            newChild.parent = this;\n            oldChild.parent = null;\n        }\n        return newChild;\n    };\n    AbstractNode.prototype.removeChild = function (child) {\n        var i = this.childIndex(child);\n        if (i !== null) {\n            this.childNodes.splice(i, 1);\n            child.parent = null;\n        }\n        return child;\n    };\n    AbstractNode.prototype.childIndex = function (node) {\n        var i = this.childNodes.indexOf(node);\n        return (i === -1 ? null : i);\n    };\n    AbstractNode.prototype.copy = function () {\n        var e_4, _a;\n        var node = this.factory.create(this.kind);\n        node.properties = __assign({}, this.properties);\n        try {\n            for (var _b = __values(this.childNodes || []), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                if (child) {\n                    node.appendChild(child.copy());\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return node;\n    };\n    AbstractNode.prototype.findNodes = function (kind) {\n        var nodes = [];\n        this.walkTree(function (node) {\n            if (node.isKind(kind)) {\n                nodes.push(node);\n            }\n        });\n        return nodes;\n    };\n    AbstractNode.prototype.walkTree = function (func, data) {\n        var e_5, _a;\n        func(this, data);\n        try {\n            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                if (child) {\n                    child.walkTree(func, data);\n                }\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        return data;\n    };\n    AbstractNode.prototype.toString = function () {\n        return this.kind + '(' + this.childNodes.join(',') + ')';\n    };\n    return AbstractNode;\n}());\nexports.AbstractNode = AbstractNode;\nvar AbstractEmptyNode = (function (_super) {\n    __extends(AbstractEmptyNode, _super);\n    function AbstractEmptyNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AbstractEmptyNode.prototype.setChildren = function (_children) {\n    };\n    AbstractEmptyNode.prototype.appendChild = function (child) {\n        return child;\n    };\n    AbstractEmptyNode.prototype.replaceChild = function (_newChild, oldChild) {\n        return oldChild;\n    };\n    AbstractEmptyNode.prototype.childIndex = function (_node) {\n        return null;\n    };\n    AbstractEmptyNode.prototype.walkTree = function (func, data) {\n        func(this, data);\n        return data;\n    };\n    AbstractEmptyNode.prototype.toString = function () {\n        return this.kind;\n    };\n    return AbstractEmptyNode;\n}(AbstractNode));\nexports.AbstractEmptyNode = AbstractEmptyNode;\n//# sourceMappingURL=Node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/core/Tree/Node.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex.js":
/*!***************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TeX = void 0;\nvar InputJax_js_1 = __webpack_require__(/*! ../core/InputJax.js */ \"./node_modules/mathjax-full/js/core/InputJax.js\");\nvar Options_js_1 = __webpack_require__(/*! ../util/Options.js */ \"./node_modules/mathjax-full/js/util/Options.js\");\nvar FindTeX_js_1 = __webpack_require__(/*! ./tex/FindTeX.js */ \"./node_modules/mathjax-full/js/input/tex/FindTeX.js\");\nvar FilterUtil_js_1 = __importDefault(__webpack_require__(/*! ./tex/FilterUtil.js */ \"./node_modules/mathjax-full/js/input/tex/FilterUtil.js\"));\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ./tex/NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar TexParser_js_1 = __importDefault(__webpack_require__(/*! ./tex/TexParser.js */ \"./node_modules/mathjax-full/js/input/tex/TexParser.js\"));\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ./tex/TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar ParseOptions_js_1 = __importDefault(__webpack_require__(/*! ./tex/ParseOptions.js */ \"./node_modules/mathjax-full/js/input/tex/ParseOptions.js\"));\nvar Tags_js_1 = __webpack_require__(/*! ./tex/Tags.js */ \"./node_modules/mathjax-full/js/input/tex/Tags.js\");\nvar Configuration_js_1 = __webpack_require__(/*! ./tex/Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\n__webpack_require__(/*! ./tex/base/BaseConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseConfiguration.js\");\nvar TeX = (function (_super) {\n    __extends(TeX, _super);\n    function TeX(options) {\n        if (options === void 0) { options = {}; }\n        var _this = this;\n        var _a = __read((0, Options_js_1.separateOptions)(options, TeX.OPTIONS, FindTeX_js_1.FindTeX.OPTIONS), 3), rest = _a[0], tex = _a[1], find = _a[2];\n        _this = _super.call(this, tex) || this;\n        _this.findTeX = _this.options['FindTeX'] || new FindTeX_js_1.FindTeX(find);\n        var packages = _this.options.packages;\n        var configuration = _this.configuration = TeX.configure(packages);\n        var parseOptions = _this._parseOptions =\n            new ParseOptions_js_1.default(configuration, [_this.options, Tags_js_1.TagsFactory.OPTIONS]);\n        (0, Options_js_1.userOptions)(parseOptions.options, rest);\n        configuration.config(_this);\n        TeX.tags(parseOptions, configuration);\n        _this.postFilters.add(FilterUtil_js_1.default.cleanSubSup, -6);\n        _this.postFilters.add(FilterUtil_js_1.default.setInherited, -5);\n        _this.postFilters.add(FilterUtil_js_1.default.moveLimits, -4);\n        _this.postFilters.add(FilterUtil_js_1.default.cleanStretchy, -3);\n        _this.postFilters.add(FilterUtil_js_1.default.cleanAttributes, -2);\n        _this.postFilters.add(FilterUtil_js_1.default.combineRelations, -1);\n        return _this;\n    }\n    TeX.configure = function (packages) {\n        var configuration = new Configuration_js_1.ParserConfiguration(packages, ['tex']);\n        configuration.init();\n        return configuration;\n    };\n    TeX.tags = function (options, configuration) {\n        Tags_js_1.TagsFactory.addTags(configuration.tags);\n        Tags_js_1.TagsFactory.setDefault(options.options.tags);\n        options.tags = Tags_js_1.TagsFactory.getDefault();\n        options.tags.configuration = options;\n    };\n    TeX.prototype.setMmlFactory = function (mmlFactory) {\n        _super.prototype.setMmlFactory.call(this, mmlFactory);\n        this._parseOptions.nodeFactory.setMmlFactory(mmlFactory);\n    };\n    Object.defineProperty(TeX.prototype, \"parseOptions\", {\n        get: function () {\n            return this._parseOptions;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TeX.prototype.reset = function (tag) {\n        if (tag === void 0) { tag = 0; }\n        this.parseOptions.tags.reset(tag);\n    };\n    TeX.prototype.compile = function (math, document) {\n        this.parseOptions.clear();\n        this.executeFilters(this.preFilters, math, document, this.parseOptions);\n        var display = math.display;\n        this.latex = math.math;\n        var node;\n        this.parseOptions.tags.startEquation(math);\n        var globalEnv;\n        try {\n            var parser = new TexParser_js_1.default(this.latex, { display: display, isInner: false }, this.parseOptions);\n            node = parser.mml();\n            globalEnv = parser.stack.global;\n        }\n        catch (err) {\n            if (!(err instanceof TexError_js_1.default)) {\n                throw err;\n            }\n            this.parseOptions.error = true;\n            node = this.options.formatError(this, err);\n        }\n        node = this.parseOptions.nodeFactory.create('node', 'math', [node]);\n        if (globalEnv === null || globalEnv === void 0 ? void 0 : globalEnv.indentalign) {\n            NodeUtil_js_1.default.setAttribute(node, 'indentalign', globalEnv.indentalign);\n        }\n        if (display) {\n            NodeUtil_js_1.default.setAttribute(node, 'display', 'block');\n        }\n        this.parseOptions.tags.finishEquation(math);\n        this.parseOptions.root = node;\n        this.executeFilters(this.postFilters, math, document, this.parseOptions);\n        this.mathNode = this.parseOptions.root;\n        return this.mathNode;\n    };\n    TeX.prototype.findMath = function (strings) {\n        return this.findTeX.findMath(strings);\n    };\n    TeX.prototype.formatError = function (err) {\n        var message = err.message.replace(/\\n.*/, '');\n        return this.parseOptions.nodeFactory.create('error', message, err.id, this.latex);\n    };\n    TeX.NAME = 'TeX';\n    TeX.OPTIONS = __assign(__assign({}, InputJax_js_1.AbstractInputJax.OPTIONS), { FindTeX: null, packages: ['base'], digits: /^(?:[0-9]+(?:\\{,\\}[0-9]{3})*(?:\\.[0-9]*)?|\\.[0-9]+)/, maxBuffer: 5 * 1024, formatError: function (jax, err) { return jax.formatError(err); } });\n    return TeX;\n}(InputJax_js_1.AbstractInputJax));\nexports.TeX = TeX;\n//# sourceMappingURL=tex.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/Configuration.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/Configuration.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ParserConfiguration = exports.ConfigurationHandler = exports.Configuration = void 0;\nvar Options_js_1 = __webpack_require__(/*! ../../util/Options.js */ \"./node_modules/mathjax-full/js/util/Options.js\");\nvar MapHandler_js_1 = __webpack_require__(/*! ./MapHandler.js */ \"./node_modules/mathjax-full/js/input/tex/MapHandler.js\");\nvar FunctionList_js_1 = __webpack_require__(/*! ../../util/FunctionList.js */ \"./node_modules/mathjax-full/js/util/FunctionList.js\");\nvar PrioritizedList_js_1 = __webpack_require__(/*! ../../util/PrioritizedList.js */ \"./node_modules/mathjax-full/js/util/PrioritizedList.js\");\nvar Tags_js_1 = __webpack_require__(/*! ./Tags.js */ \"./node_modules/mathjax-full/js/input/tex/Tags.js\");\nvar Configuration = (function () {\n    function Configuration(name, handler, fallback, items, tags, options, nodes, preprocessors, postprocessors, initMethod, configMethod, priority, parser) {\n        if (handler === void 0) { handler = {}; }\n        if (fallback === void 0) { fallback = {}; }\n        if (items === void 0) { items = {}; }\n        if (tags === void 0) { tags = {}; }\n        if (options === void 0) { options = {}; }\n        if (nodes === void 0) { nodes = {}; }\n        if (preprocessors === void 0) { preprocessors = []; }\n        if (postprocessors === void 0) { postprocessors = []; }\n        if (initMethod === void 0) { initMethod = null; }\n        if (configMethod === void 0) { configMethod = null; }\n        this.name = name;\n        this.handler = handler;\n        this.fallback = fallback;\n        this.items = items;\n        this.tags = tags;\n        this.options = options;\n        this.nodes = nodes;\n        this.preprocessors = preprocessors;\n        this.postprocessors = postprocessors;\n        this.initMethod = initMethod;\n        this.configMethod = configMethod;\n        this.priority = priority;\n        this.parser = parser;\n        this.handler = Object.assign({ character: [], delimiter: [], macro: [], environment: [] }, handler);\n    }\n    Configuration.makeProcessor = function (func, priority) {\n        return Array.isArray(func) ? func : [func, priority];\n    };\n    Configuration._create = function (name, config) {\n        var _this = this;\n        if (config === void 0) { config = {}; }\n        var priority = config.priority || PrioritizedList_js_1.PrioritizedList.DEFAULTPRIORITY;\n        var init = config.init ? this.makeProcessor(config.init, priority) : null;\n        var conf = config.config ? this.makeProcessor(config.config, priority) : null;\n        var preprocessors = (config.preprocessors || []).map(function (pre) { return _this.makeProcessor(pre, priority); });\n        var postprocessors = (config.postprocessors || []).map(function (post) { return _this.makeProcessor(post, priority); });\n        var parser = config.parser || 'tex';\n        return new Configuration(name, config.handler || {}, config.fallback || {}, config.items || {}, config.tags || {}, config.options || {}, config.nodes || {}, preprocessors, postprocessors, init, conf, priority, parser);\n    };\n    Configuration.create = function (name, config) {\n        if (config === void 0) { config = {}; }\n        var configuration = Configuration._create(name, config);\n        ConfigurationHandler.set(name, configuration);\n        return configuration;\n    };\n    Configuration.local = function (config) {\n        if (config === void 0) { config = {}; }\n        return Configuration._create('', config);\n    };\n    Object.defineProperty(Configuration.prototype, \"init\", {\n        get: function () {\n            return this.initMethod ? this.initMethod[0] : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Configuration.prototype, \"config\", {\n        get: function () {\n            return this.configMethod ? this.configMethod[0] : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Configuration;\n}());\nexports.Configuration = Configuration;\nvar ConfigurationHandler;\n(function (ConfigurationHandler) {\n    var maps = new Map();\n    ConfigurationHandler.set = function (name, map) {\n        maps.set(name, map);\n    };\n    ConfigurationHandler.get = function (name) {\n        return maps.get(name);\n    };\n    ConfigurationHandler.keys = function () {\n        return maps.keys();\n    };\n})(ConfigurationHandler = exports.ConfigurationHandler || (exports.ConfigurationHandler = {}));\nvar ParserConfiguration = (function () {\n    function ParserConfiguration(packages, parsers) {\n        var e_1, _a, e_2, _b;\n        if (parsers === void 0) { parsers = ['tex']; }\n        this.initMethod = new FunctionList_js_1.FunctionList();\n        this.configMethod = new FunctionList_js_1.FunctionList();\n        this.configurations = new PrioritizedList_js_1.PrioritizedList();\n        this.parsers = [];\n        this.handlers = new MapHandler_js_1.SubHandlers();\n        this.items = {};\n        this.tags = {};\n        this.options = {};\n        this.nodes = {};\n        this.parsers = parsers;\n        try {\n            for (var _c = __values(packages.slice().reverse()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var pkg = _d.value;\n                this.addPackage(pkg);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        try {\n            for (var _e = __values(this.configurations), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var _g = _f.value, config = _g.item, priority = _g.priority;\n                this.append(config, priority);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    }\n    ParserConfiguration.prototype.init = function () {\n        this.initMethod.execute(this);\n    };\n    ParserConfiguration.prototype.config = function (jax) {\n        var e_3, _a;\n        this.configMethod.execute(this, jax);\n        try {\n            for (var _b = __values(this.configurations), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var config = _c.value;\n                this.addFilters(jax, config.item);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    ParserConfiguration.prototype.addPackage = function (pkg) {\n        var name = typeof pkg === 'string' ? pkg : pkg[0];\n        var conf = this.getPackage(name);\n        conf && this.configurations.add(conf, typeof pkg === 'string' ? conf.priority : pkg[1]);\n    };\n    ParserConfiguration.prototype.add = function (name, jax, options) {\n        var e_4, _a;\n        if (options === void 0) { options = {}; }\n        var config = this.getPackage(name);\n        this.append(config);\n        this.configurations.add(config, config.priority);\n        this.init();\n        var parser = jax.parseOptions;\n        parser.nodeFactory.setCreators(config.nodes);\n        try {\n            for (var _b = __values(Object.keys(config.items)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var kind = _c.value;\n                parser.itemFactory.setNodeClass(kind, config.items[kind]);\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        Tags_js_1.TagsFactory.addTags(config.tags);\n        (0, Options_js_1.defaultOptions)(parser.options, config.options);\n        (0, Options_js_1.userOptions)(parser.options, options);\n        this.addFilters(jax, config);\n        if (config.config) {\n            config.config(this, jax);\n        }\n    };\n    ParserConfiguration.prototype.getPackage = function (name) {\n        var config = ConfigurationHandler.get(name);\n        if (config && this.parsers.indexOf(config.parser) < 0) {\n            throw Error(\"Package \".concat(name, \" doesn't target the proper parser\"));\n        }\n        return config;\n    };\n    ParserConfiguration.prototype.append = function (config, priority) {\n        priority = priority || config.priority;\n        if (config.initMethod) {\n            this.initMethod.add(config.initMethod[0], config.initMethod[1]);\n        }\n        if (config.configMethod) {\n            this.configMethod.add(config.configMethod[0], config.configMethod[1]);\n        }\n        this.handlers.add(config.handler, config.fallback, priority);\n        Object.assign(this.items, config.items);\n        Object.assign(this.tags, config.tags);\n        (0, Options_js_1.defaultOptions)(this.options, config.options);\n        Object.assign(this.nodes, config.nodes);\n    };\n    ParserConfiguration.prototype.addFilters = function (jax, config) {\n        var e_5, _a, e_6, _b;\n        try {\n            for (var _c = __values(config.preprocessors), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var _e = __read(_d.value, 2), pre = _e[0], priority = _e[1];\n                jax.preFilters.add(pre, priority);\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        try {\n            for (var _f = __values(config.postprocessors), _g = _f.next(); !_g.done; _g = _f.next()) {\n                var _h = __read(_g.value, 2), post = _h[0], priority = _h[1];\n                jax.postFilters.add(post, priority);\n            }\n        }\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\n        finally {\n            try {\n                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n            }\n            finally { if (e_6) throw e_6.error; }\n        }\n    };\n    return ParserConfiguration;\n}());\nexports.ParserConfiguration = ParserConfiguration;\n//# sourceMappingURL=Configuration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/Configuration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/FilterUtil.js":
/*!**************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/FilterUtil.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar MmlNode_js_1 = __webpack_require__(/*! ../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ./NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar FilterUtil;\n(function (FilterUtil) {\n    FilterUtil.cleanStretchy = function (arg) {\n        var e_1, _a;\n        var options = arg.data;\n        try {\n            for (var _b = __values(options.getList('fixStretchy')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var mo = _c.value;\n                if (NodeUtil_js_1.default.getProperty(mo, 'fixStretchy')) {\n                    var symbol = NodeUtil_js_1.default.getForm(mo);\n                    if (symbol && symbol[3] && symbol[3]['stretchy']) {\n                        NodeUtil_js_1.default.setAttribute(mo, 'stretchy', false);\n                    }\n                    var parent_1 = mo.parent;\n                    if (!NodeUtil_js_1.default.getTexClass(mo) && (!symbol || !symbol[2])) {\n                        var texAtom = options.nodeFactory.create('node', 'TeXAtom', [mo]);\n                        parent_1.replaceChild(texAtom, mo);\n                        texAtom.inheritAttributesFrom(mo);\n                    }\n                    NodeUtil_js_1.default.removeProperties(mo, 'fixStretchy');\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    FilterUtil.cleanAttributes = function (arg) {\n        var node = arg.data.root;\n        node.walkTree(function (mml, _d) {\n            var e_2, _a;\n            var attribs = mml.attributes;\n            if (!attribs) {\n                return;\n            }\n            var keep = new Set((attribs.get('mjx-keep-attrs') || '').split(/ /));\n            delete (attribs.getAllAttributes())['mjx-keep-attrs'];\n            try {\n                for (var _b = __values(attribs.getExplicitNames()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var key = _c.value;\n                    if (!keep.has(key) && attribs.attributes[key] === mml.attributes.getInherited(key)) {\n                        delete attribs.attributes[key];\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }, {});\n    };\n    FilterUtil.combineRelations = function (arg) {\n        var e_3, _a, e_4, _b;\n        var remove = [];\n        try {\n            for (var _c = __values(arg.data.getList('mo')), _e = _c.next(); !_e.done; _e = _c.next()) {\n                var mo = _e.value;\n                if (mo.getProperty('relationsCombined') || !mo.parent ||\n                    (mo.parent && !NodeUtil_js_1.default.isType(mo.parent, 'mrow')) ||\n                    NodeUtil_js_1.default.getTexClass(mo) !== MmlNode_js_1.TEXCLASS.REL) {\n                    continue;\n                }\n                var mml = mo.parent;\n                var m2 = void 0;\n                var children = mml.childNodes;\n                var next = children.indexOf(mo) + 1;\n                var variantForm = NodeUtil_js_1.default.getProperty(mo, 'variantForm');\n                while (next < children.length && (m2 = children[next]) &&\n                    NodeUtil_js_1.default.isType(m2, 'mo') &&\n                    NodeUtil_js_1.default.getTexClass(m2) === MmlNode_js_1.TEXCLASS.REL) {\n                    if (variantForm === NodeUtil_js_1.default.getProperty(m2, 'variantForm') &&\n                        _compareExplicit(mo, m2)) {\n                        NodeUtil_js_1.default.appendChildren(mo, NodeUtil_js_1.default.getChildren(m2));\n                        _copyExplicit(['stretchy', 'rspace'], mo, m2);\n                        try {\n                            for (var _f = (e_4 = void 0, __values(m2.getPropertyNames())), _g = _f.next(); !_g.done; _g = _f.next()) {\n                                var name_1 = _g.value;\n                                mo.setProperty(name_1, m2.getProperty(name_1));\n                            }\n                        }\n                        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                        finally {\n                            try {\n                                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n                            }\n                            finally { if (e_4) throw e_4.error; }\n                        }\n                        children.splice(next, 1);\n                        remove.push(m2);\n                        m2.parent = null;\n                        m2.setProperty('relationsCombined', true);\n                    }\n                    else {\n                        if (mo.attributes.getExplicit('rspace') == null) {\n                            NodeUtil_js_1.default.setAttribute(mo, 'rspace', '0pt');\n                        }\n                        if (m2.attributes.getExplicit('lspace') == null) {\n                            NodeUtil_js_1.default.setAttribute(m2, 'lspace', '0pt');\n                        }\n                        break;\n                    }\n                }\n                mo.attributes.setInherited('form', mo.getForms()[0]);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_e && !_e.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        arg.data.removeFromList('mo', remove);\n    };\n    var _copyExplicit = function (attrs, node1, node2) {\n        var attr1 = node1.attributes;\n        var attr2 = node2.attributes;\n        attrs.forEach(function (x) {\n            var attr = attr2.getExplicit(x);\n            if (attr != null) {\n                attr1.set(x, attr);\n            }\n        });\n    };\n    var _compareExplicit = function (node1, node2) {\n        var e_5, _a;\n        var filter = function (attr, space) {\n            var exp = attr.getExplicitNames();\n            return exp.filter(function (x) {\n                return x !== space &&\n                    (x !== 'stretchy' ||\n                        attr.getExplicit('stretchy'));\n            });\n        };\n        var attr1 = node1.attributes;\n        var attr2 = node2.attributes;\n        var exp1 = filter(attr1, 'lspace');\n        var exp2 = filter(attr2, 'rspace');\n        if (exp1.length !== exp2.length) {\n            return false;\n        }\n        try {\n            for (var exp1_1 = __values(exp1), exp1_1_1 = exp1_1.next(); !exp1_1_1.done; exp1_1_1 = exp1_1.next()) {\n                var name_2 = exp1_1_1.value;\n                if (attr1.getExplicit(name_2) !== attr2.getExplicit(name_2)) {\n                    return false;\n                }\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (exp1_1_1 && !exp1_1_1.done && (_a = exp1_1.return)) _a.call(exp1_1);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        return true;\n    };\n    var _cleanSubSup = function (options, low, up) {\n        var e_6, _a;\n        var remove = [];\n        try {\n            for (var _b = __values(options.getList('m' + low + up)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var mml = _c.value;\n                var children = mml.childNodes;\n                if (children[mml[low]] && children[mml[up]]) {\n                    continue;\n                }\n                var parent_2 = mml.parent;\n                var newNode = (children[mml[low]] ?\n                    options.nodeFactory.create('node', 'm' + low, [children[mml.base], children[mml[low]]]) :\n                    options.nodeFactory.create('node', 'm' + up, [children[mml.base], children[mml[up]]]));\n                NodeUtil_js_1.default.copyAttributes(mml, newNode);\n                if (parent_2) {\n                    parent_2.replaceChild(newNode, mml);\n                }\n                else {\n                    options.root = newNode;\n                }\n                remove.push(mml);\n            }\n        }\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_6) throw e_6.error; }\n        }\n        options.removeFromList('m' + low + up, remove);\n    };\n    FilterUtil.cleanSubSup = function (arg) {\n        var options = arg.data;\n        if (options.error) {\n            return;\n        }\n        _cleanSubSup(options, 'sub', 'sup');\n        _cleanSubSup(options, 'under', 'over');\n    };\n    var _moveLimits = function (options, underover, subsup) {\n        var e_7, _a;\n        var remove = [];\n        try {\n            for (var _b = __values(options.getList(underover)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var mml = _c.value;\n                if (mml.attributes.get('displaystyle')) {\n                    continue;\n                }\n                var base = mml.childNodes[mml.base];\n                var mo = base.coreMO();\n                if (base.getProperty('movablelimits') && !mo.attributes.getExplicit('movablelimits')) {\n                    var node = options.nodeFactory.create('node', subsup, mml.childNodes);\n                    NodeUtil_js_1.default.copyAttributes(mml, node);\n                    if (mml.parent) {\n                        mml.parent.replaceChild(node, mml);\n                    }\n                    else {\n                        options.root = node;\n                    }\n                    remove.push(mml);\n                }\n            }\n        }\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_7) throw e_7.error; }\n        }\n        options.removeFromList(underover, remove);\n    };\n    FilterUtil.moveLimits = function (arg) {\n        var options = arg.data;\n        _moveLimits(options, 'munderover', 'msubsup');\n        _moveLimits(options, 'munder', 'msub');\n        _moveLimits(options, 'mover', 'msup');\n    };\n    FilterUtil.setInherited = function (arg) {\n        arg.data.root.setInheritedAttributes({}, arg.math['display'], 0, false);\n    };\n})(FilterUtil || (FilterUtil = {}));\nexports[\"default\"] = FilterUtil;\n//# sourceMappingURL=FilterUtil.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/FilterUtil.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/FindTeX.js":
/*!***********************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/FindTeX.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FindTeX = void 0;\nvar FindMath_js_1 = __webpack_require__(/*! ../../core/FindMath.js */ \"./node_modules/mathjax-full/js/core/FindMath.js\");\nvar string_js_1 = __webpack_require__(/*! ../../util/string.js */ \"./node_modules/mathjax-full/js/util/string.js\");\nvar MathItem_js_1 = __webpack_require__(/*! ../../core/MathItem.js */ \"./node_modules/mathjax-full/js/core/MathItem.js\");\nvar FindTeX = (function (_super) {\n    __extends(FindTeX, _super);\n    function FindTeX(options) {\n        var _this = _super.call(this, options) || this;\n        _this.getPatterns();\n        return _this;\n    }\n    FindTeX.prototype.getPatterns = function () {\n        var _this = this;\n        var options = this.options;\n        var starts = [], parts = [], subparts = [];\n        this.end = {};\n        this.env = this.sub = 0;\n        var i = 1;\n        options['inlineMath'].forEach(function (delims) { return _this.addPattern(starts, delims, false); });\n        options['displayMath'].forEach(function (delims) { return _this.addPattern(starts, delims, true); });\n        if (starts.length) {\n            parts.push(starts.sort(string_js_1.sortLength).join('|'));\n        }\n        if (options['processEnvironments']) {\n            parts.push('\\\\\\\\begin\\\\s*\\\\{([^}]*)\\\\}');\n            this.env = i;\n            i++;\n        }\n        if (options['processEscapes']) {\n            subparts.push('\\\\\\\\([\\\\\\\\$])');\n        }\n        if (options['processRefs']) {\n            subparts.push('(\\\\\\\\(?:eq)?ref\\\\s*\\\\{[^}]*\\\\})');\n        }\n        if (subparts.length) {\n            parts.push('(' + subparts.join('|') + ')');\n            this.sub = i;\n        }\n        this.start = new RegExp(parts.join('|'), 'g');\n        this.hasPatterns = (parts.length > 0);\n    };\n    FindTeX.prototype.addPattern = function (starts, delims, display) {\n        var _a = __read(delims, 2), open = _a[0], close = _a[1];\n        starts.push((0, string_js_1.quotePattern)(open));\n        this.end[open] = [close, display, this.endPattern(close)];\n    };\n    FindTeX.prototype.endPattern = function (end, endp) {\n        return new RegExp((endp || (0, string_js_1.quotePattern)(end)) + '|\\\\\\\\(?:[a-zA-Z]|.)|[{}]', 'g');\n    };\n    FindTeX.prototype.findEnd = function (text, n, start, end) {\n        var _a = __read(end, 3), close = _a[0], display = _a[1], pattern = _a[2];\n        var i = pattern.lastIndex = start.index + start[0].length;\n        var match, braces = 0;\n        while ((match = pattern.exec(text))) {\n            if ((match[1] || match[0]) === close && braces === 0) {\n                return (0, MathItem_js_1.protoItem)(start[0], text.substr(i, match.index - i), match[0], n, start.index, match.index + match[0].length, display);\n            }\n            else if (match[0] === '{') {\n                braces++;\n            }\n            else if (match[0] === '}' && braces) {\n                braces--;\n            }\n        }\n        return null;\n    };\n    FindTeX.prototype.findMathInString = function (math, n, text) {\n        var start, match;\n        this.start.lastIndex = 0;\n        while ((start = this.start.exec(text))) {\n            if (start[this.env] !== undefined && this.env) {\n                var end = '\\\\\\\\end\\\\s*(\\\\{' + (0, string_js_1.quotePattern)(start[this.env]) + '\\\\})';\n                match = this.findEnd(text, n, start, ['{' + start[this.env] + '}', true, this.endPattern(null, end)]);\n                if (match) {\n                    match.math = match.open + match.math + match.close;\n                    match.open = match.close = '';\n                }\n            }\n            else if (start[this.sub] !== undefined && this.sub) {\n                var math_1 = start[this.sub];\n                var end = start.index + start[this.sub].length;\n                if (math_1.length === 2) {\n                    match = (0, MathItem_js_1.protoItem)('', math_1.substr(1), '', n, start.index, end);\n                }\n                else {\n                    match = (0, MathItem_js_1.protoItem)('', math_1, '', n, start.index, end, false);\n                }\n            }\n            else {\n                match = this.findEnd(text, n, start, this.end[start[0]]);\n            }\n            if (match) {\n                math.push(match);\n                this.start.lastIndex = match.end.n;\n            }\n        }\n    };\n    FindTeX.prototype.findMath = function (strings) {\n        var math = [];\n        if (this.hasPatterns) {\n            for (var i = 0, m = strings.length; i < m; i++) {\n                this.findMathInString(math, i, strings[i]);\n            }\n        }\n        return math;\n    };\n    FindTeX.OPTIONS = {\n        inlineMath: [\n            ['\\\\(', '\\\\)']\n        ],\n        displayMath: [\n            ['$$', '$$'],\n            ['\\\\[', '\\\\]']\n        ],\n        processEscapes: true,\n        processEnvironments: true,\n        processRefs: true,\n    };\n    return FindTeX;\n}(FindMath_js_1.AbstractFindMath));\nexports.FindTeX = FindTeX;\n//# sourceMappingURL=FindTeX.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/FindTeX.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/MapHandler.js":
/*!**************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/MapHandler.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SubHandlers = exports.SubHandler = exports.MapHandler = void 0;\nvar PrioritizedList_js_1 = __webpack_require__(/*! ../../util/PrioritizedList.js */ \"./node_modules/mathjax-full/js/util/PrioritizedList.js\");\nvar FunctionList_js_1 = __webpack_require__(/*! ../../util/FunctionList.js */ \"./node_modules/mathjax-full/js/util/FunctionList.js\");\nvar MapHandler;\n(function (MapHandler) {\n    var maps = new Map();\n    MapHandler.register = function (map) {\n        maps.set(map.name, map);\n    };\n    MapHandler.getMap = function (name) {\n        return maps.get(name);\n    };\n})(MapHandler = exports.MapHandler || (exports.MapHandler = {}));\nvar SubHandler = (function () {\n    function SubHandler() {\n        this._configuration = new PrioritizedList_js_1.PrioritizedList();\n        this._fallback = new FunctionList_js_1.FunctionList();\n    }\n    SubHandler.prototype.add = function (maps, fallback, priority) {\n        var e_1, _a;\n        if (priority === void 0) { priority = PrioritizedList_js_1.PrioritizedList.DEFAULTPRIORITY; }\n        try {\n            for (var _b = __values(maps.slice().reverse()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var name_1 = _c.value;\n                var map = MapHandler.getMap(name_1);\n                if (!map) {\n                    this.warn('Configuration ' + name_1 + ' not found! Omitted.');\n                    return;\n                }\n                this._configuration.add(map, priority);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (fallback) {\n            this._fallback.add(fallback, priority);\n        }\n    };\n    SubHandler.prototype.parse = function (input) {\n        var e_2, _a;\n        try {\n            for (var _b = __values(this._configuration), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var map = _c.value.item;\n                var result = map.parse(input);\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        var _d = __read(input, 2), env = _d[0], symbol = _d[1];\n        Array.from(this._fallback)[0].item(env, symbol);\n    };\n    SubHandler.prototype.lookup = function (symbol) {\n        var map = this.applicable(symbol);\n        return map ? map.lookup(symbol) : null;\n    };\n    SubHandler.prototype.contains = function (symbol) {\n        return this.applicable(symbol) ? true : false;\n    };\n    SubHandler.prototype.toString = function () {\n        var e_3, _a;\n        var names = [];\n        try {\n            for (var _b = __values(this._configuration), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var map = _c.value.item;\n                names.push(map.name);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return names.join(', ');\n    };\n    SubHandler.prototype.applicable = function (symbol) {\n        var e_4, _a;\n        try {\n            for (var _b = __values(this._configuration), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var map = _c.value.item;\n                if (map.contains(symbol)) {\n                    return map;\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return null;\n    };\n    SubHandler.prototype.retrieve = function (name) {\n        var e_5, _a;\n        try {\n            for (var _b = __values(this._configuration), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var map = _c.value.item;\n                if (map.name === name) {\n                    return map;\n                }\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        return null;\n    };\n    SubHandler.prototype.warn = function (message) {\n        console.log('TexParser Warning: ' + message);\n    };\n    return SubHandler;\n}());\nexports.SubHandler = SubHandler;\nvar SubHandlers = (function () {\n    function SubHandlers() {\n        this.map = new Map();\n    }\n    SubHandlers.prototype.add = function (handlers, fallbacks, priority) {\n        var e_6, _a;\n        if (priority === void 0) { priority = PrioritizedList_js_1.PrioritizedList.DEFAULTPRIORITY; }\n        try {\n            for (var _b = __values(Object.keys(handlers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                var name_2 = key;\n                var subHandler = this.get(name_2);\n                if (!subHandler) {\n                    subHandler = new SubHandler();\n                    this.set(name_2, subHandler);\n                }\n                subHandler.add(handlers[name_2], fallbacks[name_2], priority);\n            }\n        }\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_6) throw e_6.error; }\n        }\n    };\n    SubHandlers.prototype.set = function (name, subHandler) {\n        this.map.set(name, subHandler);\n    };\n    SubHandlers.prototype.get = function (name) {\n        return this.map.get(name);\n    };\n    SubHandlers.prototype.retrieve = function (name) {\n        var e_7, _a;\n        try {\n            for (var _b = __values(this.map.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var handler = _c.value;\n                var map = handler.retrieve(name);\n                if (map) {\n                    return map;\n                }\n            }\n        }\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_7) throw e_7.error; }\n        }\n        return null;\n    };\n    SubHandlers.prototype.keys = function () {\n        return this.map.keys();\n    };\n    return SubHandlers;\n}());\nexports.SubHandlers = SubHandlers;\n//# sourceMappingURL=MapHandler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/MapHandler.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/NodeFactory.js":
/*!***************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/NodeFactory.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NodeFactory = void 0;\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ./NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar NodeFactory = (function () {\n    function NodeFactory() {\n        this.mmlFactory = null;\n        this.factory = { 'node': NodeFactory.createNode,\n            'token': NodeFactory.createToken,\n            'text': NodeFactory.createText,\n            'error': NodeFactory.createError\n        };\n    }\n    NodeFactory.createNode = function (factory, kind, children, def, text) {\n        if (children === void 0) { children = []; }\n        if (def === void 0) { def = {}; }\n        var node = factory.mmlFactory.create(kind);\n        node.setChildren(children);\n        if (text) {\n            node.appendChild(text);\n        }\n        NodeUtil_js_1.default.setProperties(node, def);\n        return node;\n    };\n    NodeFactory.createToken = function (factory, kind, def, text) {\n        if (def === void 0) { def = {}; }\n        if (text === void 0) { text = ''; }\n        var textNode = factory.create('text', text);\n        return factory.create('node', kind, [], def, textNode);\n    };\n    NodeFactory.createText = function (factory, text) {\n        if (text == null) {\n            return null;\n        }\n        return factory.mmlFactory.create('text').setText(text);\n    };\n    NodeFactory.createError = function (factory, message) {\n        var text = factory.create('text', message);\n        var mtext = factory.create('node', 'mtext', [], {}, text);\n        var error = factory.create('node', 'merror', [mtext], { 'data-mjx-error': message });\n        return error;\n    };\n    NodeFactory.prototype.setMmlFactory = function (mmlFactory) {\n        this.mmlFactory = mmlFactory;\n    };\n    NodeFactory.prototype.set = function (kind, func) {\n        this.factory[kind] = func;\n    };\n    NodeFactory.prototype.setCreators = function (maps) {\n        for (var kind in maps) {\n            this.set(kind, maps[kind]);\n        }\n    };\n    NodeFactory.prototype.create = function (kind) {\n        var rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            rest[_i - 1] = arguments[_i];\n        }\n        var func = this.factory[kind] || this.factory['node'];\n        var node = func.apply(void 0, __spreadArray([this, rest[0]], __read(rest.slice(1)), false));\n        if (kind === 'node') {\n            this.configuration.addNode(rest[0], node);\n        }\n        return node;\n    };\n    NodeFactory.prototype.get = function (kind) {\n        return this.factory[kind];\n    };\n    return NodeFactory;\n}());\nexports.NodeFactory = NodeFactory;\n//# sourceMappingURL=NodeFactory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9Ob2RlRmFjdG9yeS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE1BQU07QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RUFBNkUsT0FBTztBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQixvQ0FBb0MsbUJBQU8sQ0FBQywyRUFBZTtBQUMzRDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUIsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwREFBMEQ7QUFDMUQsZ0VBQWdFLDJCQUEyQjtBQUMzRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsdUJBQXVCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9Ob2RlRmFjdG9yeS5qcz82NGJlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fcmVhZCA9ICh0aGlzICYmIHRoaXMuX19yZWFkKSB8fCBmdW5jdGlvbiAobywgbikge1xuICAgIHZhciBtID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9bU3ltYm9sLml0ZXJhdG9yXTtcbiAgICBpZiAoIW0pIHJldHVybiBvO1xuICAgIHZhciBpID0gbS5jYWxsKG8pLCByLCBhciA9IFtdLCBlO1xuICAgIHRyeSB7XG4gICAgICAgIHdoaWxlICgobiA9PT0gdm9pZCAwIHx8IG4tLSA+IDApICYmICEociA9IGkubmV4dCgpKS5kb25lKSBhci5wdXNoKHIudmFsdWUpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHsgZSA9IHsgZXJyb3I6IGVycm9yIH07IH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChyICYmICFyLmRvbmUgJiYgKG0gPSBpW1wicmV0dXJuXCJdKSkgbS5jYWxsKGkpO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkgeyBpZiAoZSkgdGhyb3cgZS5lcnJvcjsgfVxuICAgIH1cbiAgICByZXR1cm4gYXI7XG59O1xudmFyIF9fc3ByZWFkQXJyYXkgPSAodGhpcyAmJiB0aGlzLl9fc3ByZWFkQXJyYXkpIHx8IGZ1bmN0aW9uICh0bywgZnJvbSwgcGFjaykge1xuICAgIGlmIChwYWNrIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIGZvciAodmFyIGkgPSAwLCBsID0gZnJvbS5sZW5ndGgsIGFyOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGlmIChhciB8fCAhKGkgaW4gZnJvbSkpIHtcbiAgICAgICAgICAgIGlmICghYXIpIGFyID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSwgMCwgaSk7XG4gICAgICAgICAgICBhcltpXSA9IGZyb21baV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRvLmNvbmNhdChhciB8fCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tKSk7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Ob2RlRmFjdG9yeSA9IHZvaWQgMDtcbnZhciBOb2RlVXRpbF9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL05vZGVVdGlsLmpzXCIpKTtcbnZhciBOb2RlRmFjdG9yeSA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTm9kZUZhY3RvcnkoKSB7XG4gICAgICAgIHRoaXMubW1sRmFjdG9yeSA9IG51bGw7XG4gICAgICAgIHRoaXMuZmFjdG9yeSA9IHsgJ25vZGUnOiBOb2RlRmFjdG9yeS5jcmVhdGVOb2RlLFxuICAgICAgICAgICAgJ3Rva2VuJzogTm9kZUZhY3RvcnkuY3JlYXRlVG9rZW4sXG4gICAgICAgICAgICAndGV4dCc6IE5vZGVGYWN0b3J5LmNyZWF0ZVRleHQsXG4gICAgICAgICAgICAnZXJyb3InOiBOb2RlRmFjdG9yeS5jcmVhdGVFcnJvclxuICAgICAgICB9O1xuICAgIH1cbiAgICBOb2RlRmFjdG9yeS5jcmVhdGVOb2RlID0gZnVuY3Rpb24gKGZhY3RvcnksIGtpbmQsIGNoaWxkcmVuLCBkZWYsIHRleHQpIHtcbiAgICAgICAgaWYgKGNoaWxkcmVuID09PSB2b2lkIDApIHsgY2hpbGRyZW4gPSBbXTsgfVxuICAgICAgICBpZiAoZGVmID09PSB2b2lkIDApIHsgZGVmID0ge307IH1cbiAgICAgICAgdmFyIG5vZGUgPSBmYWN0b3J5Lm1tbEZhY3RvcnkuY3JlYXRlKGtpbmQpO1xuICAgICAgICBub2RlLnNldENoaWxkcmVuKGNoaWxkcmVuKTtcbiAgICAgICAgaWYgKHRleHQpIHtcbiAgICAgICAgICAgIG5vZGUuYXBwZW5kQ2hpbGQodGV4dCk7XG4gICAgICAgIH1cbiAgICAgICAgTm9kZVV0aWxfanNfMS5kZWZhdWx0LnNldFByb3BlcnRpZXMobm9kZSwgZGVmKTtcbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfTtcbiAgICBOb2RlRmFjdG9yeS5jcmVhdGVUb2tlbiA9IGZ1bmN0aW9uIChmYWN0b3J5LCBraW5kLCBkZWYsIHRleHQpIHtcbiAgICAgICAgaWYgKGRlZiA9PT0gdm9pZCAwKSB7IGRlZiA9IHt9OyB9XG4gICAgICAgIGlmICh0ZXh0ID09PSB2b2lkIDApIHsgdGV4dCA9ICcnOyB9XG4gICAgICAgIHZhciB0ZXh0Tm9kZSA9IGZhY3RvcnkuY3JlYXRlKCd0ZXh0JywgdGV4dCk7XG4gICAgICAgIHJldHVybiBmYWN0b3J5LmNyZWF0ZSgnbm9kZScsIGtpbmQsIFtdLCBkZWYsIHRleHROb2RlKTtcbiAgICB9O1xuICAgIE5vZGVGYWN0b3J5LmNyZWF0ZVRleHQgPSBmdW5jdGlvbiAoZmFjdG9yeSwgdGV4dCkge1xuICAgICAgICBpZiAodGV4dCA9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFjdG9yeS5tbWxGYWN0b3J5LmNyZWF0ZSgndGV4dCcpLnNldFRleHQodGV4dCk7XG4gICAgfTtcbiAgICBOb2RlRmFjdG9yeS5jcmVhdGVFcnJvciA9IGZ1bmN0aW9uIChmYWN0b3J5LCBtZXNzYWdlKSB7XG4gICAgICAgIHZhciB0ZXh0ID0gZmFjdG9yeS5jcmVhdGUoJ3RleHQnLCBtZXNzYWdlKTtcbiAgICAgICAgdmFyIG10ZXh0ID0gZmFjdG9yeS5jcmVhdGUoJ25vZGUnLCAnbXRleHQnLCBbXSwge30sIHRleHQpO1xuICAgICAgICB2YXIgZXJyb3IgPSBmYWN0b3J5LmNyZWF0ZSgnbm9kZScsICdtZXJyb3InLCBbbXRleHRdLCB7ICdkYXRhLW1qeC1lcnJvcic6IG1lc3NhZ2UgfSk7XG4gICAgICAgIHJldHVybiBlcnJvcjtcbiAgICB9O1xuICAgIE5vZGVGYWN0b3J5LnByb3RvdHlwZS5zZXRNbWxGYWN0b3J5ID0gZnVuY3Rpb24gKG1tbEZhY3RvcnkpIHtcbiAgICAgICAgdGhpcy5tbWxGYWN0b3J5ID0gbW1sRmFjdG9yeTtcbiAgICB9O1xuICAgIE5vZGVGYWN0b3J5LnByb3RvdHlwZS5zZXQgPSBmdW5jdGlvbiAoa2luZCwgZnVuYykge1xuICAgICAgICB0aGlzLmZhY3Rvcnlba2luZF0gPSBmdW5jO1xuICAgIH07XG4gICAgTm9kZUZhY3RvcnkucHJvdG90eXBlLnNldENyZWF0b3JzID0gZnVuY3Rpb24gKG1hcHMpIHtcbiAgICAgICAgZm9yICh2YXIga2luZCBpbiBtYXBzKSB7XG4gICAgICAgICAgICB0aGlzLnNldChraW5kLCBtYXBzW2tpbmRdKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgTm9kZUZhY3RvcnkucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uIChraW5kKSB7XG4gICAgICAgIHZhciByZXN0ID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMTsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICByZXN0W19pIC0gMV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICB9XG4gICAgICAgIHZhciBmdW5jID0gdGhpcy5mYWN0b3J5W2tpbmRdIHx8IHRoaXMuZmFjdG9yeVsnbm9kZSddO1xuICAgICAgICB2YXIgbm9kZSA9IGZ1bmMuYXBwbHkodm9pZCAwLCBfX3NwcmVhZEFycmF5KFt0aGlzLCByZXN0WzBdXSwgX19yZWFkKHJlc3Quc2xpY2UoMSkpLCBmYWxzZSkpO1xuICAgICAgICBpZiAoa2luZCA9PT0gJ25vZGUnKSB7XG4gICAgICAgICAgICB0aGlzLmNvbmZpZ3VyYXRpb24uYWRkTm9kZShyZXN0WzBdLCBub2RlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbm9kZTtcbiAgICB9O1xuICAgIE5vZGVGYWN0b3J5LnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAoa2luZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5mYWN0b3J5W2tpbmRdO1xuICAgIH07XG4gICAgcmV0dXJuIE5vZGVGYWN0b3J5O1xufSgpKTtcbmV4cG9ydHMuTm9kZUZhY3RvcnkgPSBOb2RlRmFjdG9yeTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU5vZGVGYWN0b3J5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/NodeFactory.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/NodeUtil.js":
/*!************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/NodeUtil.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar MmlNode_js_1 = __webpack_require__(/*! ../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar mo_js_1 = __webpack_require__(/*! ../../core/MmlTree/MmlNodes/mo.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNodes/mo.js\");\nvar NodeUtil;\n(function (NodeUtil) {\n    var attrs = new Map([\n        ['autoOP', true],\n        ['fnOP', true],\n        ['movesupsub', true],\n        ['subsupOK', true],\n        ['texprimestyle', true],\n        ['useHeight', true],\n        ['variantForm', true],\n        ['withDelims', true],\n        ['mathaccent', true],\n        ['open', true],\n        ['close', true]\n    ]);\n    function createEntity(code) {\n        return String.fromCodePoint(parseInt(code, 16));\n    }\n    NodeUtil.createEntity = createEntity;\n    function getChildren(node) {\n        return node.childNodes;\n    }\n    NodeUtil.getChildren = getChildren;\n    function getText(node) {\n        return node.getText();\n    }\n    NodeUtil.getText = getText;\n    function appendChildren(node, children) {\n        var e_1, _a;\n        try {\n            for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                var child = children_1_1.value;\n                node.appendChild(child);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    NodeUtil.appendChildren = appendChildren;\n    function setAttribute(node, attribute, value) {\n        node.attributes.set(attribute, value);\n    }\n    NodeUtil.setAttribute = setAttribute;\n    function setProperty(node, property, value) {\n        node.setProperty(property, value);\n    }\n    NodeUtil.setProperty = setProperty;\n    function setProperties(node, properties) {\n        var e_2, _a;\n        try {\n            for (var _b = __values(Object.keys(properties)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var name_1 = _c.value;\n                var value = properties[name_1];\n                if (name_1 === 'texClass') {\n                    node.texClass = value;\n                    node.setProperty(name_1, value);\n                }\n                else if (name_1 === 'movablelimits') {\n                    node.setProperty('movablelimits', value);\n                    if (node.isKind('mo') || node.isKind('mstyle')) {\n                        node.attributes.set('movablelimits', value);\n                    }\n                }\n                else if (name_1 === 'inferred') {\n                }\n                else if (attrs.has(name_1)) {\n                    node.setProperty(name_1, value);\n                }\n                else {\n                    node.attributes.set(name_1, value);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    }\n    NodeUtil.setProperties = setProperties;\n    function getProperty(node, property) {\n        return node.getProperty(property);\n    }\n    NodeUtil.getProperty = getProperty;\n    function getAttribute(node, attr) {\n        return node.attributes.get(attr);\n    }\n    NodeUtil.getAttribute = getAttribute;\n    function removeProperties(node) {\n        var properties = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            properties[_i - 1] = arguments[_i];\n        }\n        node.removeProperty.apply(node, __spreadArray([], __read(properties), false));\n    }\n    NodeUtil.removeProperties = removeProperties;\n    function getChildAt(node, position) {\n        return node.childNodes[position];\n    }\n    NodeUtil.getChildAt = getChildAt;\n    function setChild(node, position, child) {\n        var children = node.childNodes;\n        children[position] = child;\n        if (child) {\n            child.parent = node;\n        }\n    }\n    NodeUtil.setChild = setChild;\n    function copyChildren(oldNode, newNode) {\n        var children = oldNode.childNodes;\n        for (var i = 0; i < children.length; i++) {\n            setChild(newNode, i, children[i]);\n        }\n    }\n    NodeUtil.copyChildren = copyChildren;\n    function copyAttributes(oldNode, newNode) {\n        newNode.attributes = oldNode.attributes;\n        setProperties(newNode, oldNode.getAllProperties());\n    }\n    NodeUtil.copyAttributes = copyAttributes;\n    function isType(node, kind) {\n        return node.isKind(kind);\n    }\n    NodeUtil.isType = isType;\n    function isEmbellished(node) {\n        return node.isEmbellished;\n    }\n    NodeUtil.isEmbellished = isEmbellished;\n    function getTexClass(node) {\n        return node.texClass;\n    }\n    NodeUtil.getTexClass = getTexClass;\n    function getCoreMO(node) {\n        return node.coreMO();\n    }\n    NodeUtil.getCoreMO = getCoreMO;\n    function isNode(item) {\n        return item instanceof MmlNode_js_1.AbstractMmlNode || item instanceof MmlNode_js_1.AbstractMmlEmptyNode;\n    }\n    NodeUtil.isNode = isNode;\n    function isInferred(node) {\n        return node.isInferred;\n    }\n    NodeUtil.isInferred = isInferred;\n    function getForm(node) {\n        var e_3, _a;\n        if (!isType(node, 'mo')) {\n            return null;\n        }\n        var mo = node;\n        var forms = mo.getForms();\n        try {\n            for (var forms_1 = __values(forms), forms_1_1 = forms_1.next(); !forms_1_1.done; forms_1_1 = forms_1.next()) {\n                var form = forms_1_1.value;\n                var symbol = mo_js_1.MmlMo.OPTABLE[form][mo.getText()];\n                if (symbol) {\n                    return symbol;\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (forms_1_1 && !forms_1_1.done && (_a = forms_1.return)) _a.call(forms_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return null;\n    }\n    NodeUtil.getForm = getForm;\n})(NodeUtil || (NodeUtil = {}));\nexports[\"default\"] = NodeUtil;\n//# sourceMappingURL=NodeUtil.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/NodeUtil.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/ParseMethods.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/ParseMethods.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ./NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar TexConstants_js_1 = __webpack_require__(/*! ./TexConstants.js */ \"./node_modules/mathjax-full/js/input/tex/TexConstants.js\");\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ./ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar ParseMethods;\n(function (ParseMethods) {\n    function variable(parser, c) {\n        var def = ParseUtil_js_1.default.getFontDef(parser);\n        var env = parser.stack.env;\n        if (env.multiLetterIdentifiers && env.font !== '') {\n            c = parser.string.substr(parser.i - 1).match(env.multiLetterIdentifiers)[0];\n            parser.i += c.length - 1;\n            if (def.mathvariant === TexConstants_js_1.TexConstant.Variant.NORMAL && env.noAutoOP && c.length > 1) {\n                def.autoOP = false;\n            }\n        }\n        var node = parser.create('token', 'mi', def, c);\n        parser.Push(node);\n    }\n    ParseMethods.variable = variable;\n    function digit(parser, c) {\n        var mml;\n        var pattern = parser.configuration.options['digits'];\n        var n = parser.string.slice(parser.i - 1).match(pattern);\n        var def = ParseUtil_js_1.default.getFontDef(parser);\n        if (n) {\n            mml = parser.create('token', 'mn', def, n[0].replace(/[{}]/g, ''));\n            parser.i += n[0].length - 1;\n        }\n        else {\n            mml = parser.create('token', 'mo', def, c);\n        }\n        parser.Push(mml);\n    }\n    ParseMethods.digit = digit;\n    function controlSequence(parser, _c) {\n        var name = parser.GetCS();\n        parser.parse('macro', [parser, name]);\n    }\n    ParseMethods.controlSequence = controlSequence;\n    function mathchar0mi(parser, mchar) {\n        var def = mchar.attributes || { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC };\n        var node = parser.create('token', 'mi', def, mchar.char);\n        parser.Push(node);\n    }\n    ParseMethods.mathchar0mi = mathchar0mi;\n    function mathchar0mo(parser, mchar) {\n        var def = mchar.attributes || {};\n        def['stretchy'] = false;\n        var node = parser.create('token', 'mo', def, mchar.char);\n        NodeUtil_js_1.default.setProperty(node, 'fixStretchy', true);\n        parser.configuration.addNode('fixStretchy', node);\n        parser.Push(node);\n    }\n    ParseMethods.mathchar0mo = mathchar0mo;\n    function mathchar7(parser, mchar) {\n        var def = mchar.attributes || { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL };\n        if (parser.stack.env['font']) {\n            def['mathvariant'] = parser.stack.env['font'];\n        }\n        var node = parser.create('token', 'mi', def, mchar.char);\n        parser.Push(node);\n    }\n    ParseMethods.mathchar7 = mathchar7;\n    function delimiter(parser, delim) {\n        var def = delim.attributes || {};\n        def = Object.assign({ fence: false, stretchy: false }, def);\n        var node = parser.create('token', 'mo', def, delim.char);\n        parser.Push(node);\n    }\n    ParseMethods.delimiter = delimiter;\n    function environment(parser, env, func, args) {\n        var end = args[0];\n        var mml = parser.itemFactory.create('begin').setProperties({ name: env, end: end });\n        mml = func.apply(void 0, __spreadArray([parser, mml], __read(args.slice(1)), false));\n        parser.Push(mml);\n    }\n    ParseMethods.environment = environment;\n})(ParseMethods || (ParseMethods = {}));\nexports[\"default\"] = ParseMethods;\n//# sourceMappingURL=ParseMethods.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9QYXJzZU1ldGhvZHMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixNQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkVBQTZFLE9BQU87QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQ0FBb0MsbUJBQU8sQ0FBQywyRUFBZTtBQUMzRCx3QkFBd0IsbUJBQU8sQ0FBQyxtRkFBbUI7QUFDbkQscUNBQXFDLG1CQUFPLENBQUMsNkVBQWdCO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUVBQXFFO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsK0JBQStCO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFFQUFxRSxxQkFBcUI7QUFDMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLG9DQUFvQztBQUNyQyxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvaW5wdXQvdGV4L1BhcnNlTWV0aG9kcy5qcz9jZGUzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fcmVhZCA9ICh0aGlzICYmIHRoaXMuX19yZWFkKSB8fCBmdW5jdGlvbiAobywgbikge1xuICAgIHZhciBtID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9bU3ltYm9sLml0ZXJhdG9yXTtcbiAgICBpZiAoIW0pIHJldHVybiBvO1xuICAgIHZhciBpID0gbS5jYWxsKG8pLCByLCBhciA9IFtdLCBlO1xuICAgIHRyeSB7XG4gICAgICAgIHdoaWxlICgobiA9PT0gdm9pZCAwIHx8IG4tLSA+IDApICYmICEociA9IGkubmV4dCgpKS5kb25lKSBhci5wdXNoKHIudmFsdWUpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHsgZSA9IHsgZXJyb3I6IGVycm9yIH07IH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChyICYmICFyLmRvbmUgJiYgKG0gPSBpW1wicmV0dXJuXCJdKSkgbS5jYWxsKGkpO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkgeyBpZiAoZSkgdGhyb3cgZS5lcnJvcjsgfVxuICAgIH1cbiAgICByZXR1cm4gYXI7XG59O1xudmFyIF9fc3ByZWFkQXJyYXkgPSAodGhpcyAmJiB0aGlzLl9fc3ByZWFkQXJyYXkpIHx8IGZ1bmN0aW9uICh0bywgZnJvbSwgcGFjaykge1xuICAgIGlmIChwYWNrIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIGZvciAodmFyIGkgPSAwLCBsID0gZnJvbS5sZW5ndGgsIGFyOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGlmIChhciB8fCAhKGkgaW4gZnJvbSkpIHtcbiAgICAgICAgICAgIGlmICghYXIpIGFyID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSwgMCwgaSk7XG4gICAgICAgICAgICBhcltpXSA9IGZyb21baV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRvLmNvbmNhdChhciB8fCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tKSk7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIE5vZGVVdGlsX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vTm9kZVV0aWwuanNcIikpO1xudmFyIFRleENvbnN0YW50c19qc18xID0gcmVxdWlyZShcIi4vVGV4Q29uc3RhbnRzLmpzXCIpO1xudmFyIFBhcnNlVXRpbF9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL1BhcnNlVXRpbC5qc1wiKSk7XG52YXIgUGFyc2VNZXRob2RzO1xuKGZ1bmN0aW9uIChQYXJzZU1ldGhvZHMpIHtcbiAgICBmdW5jdGlvbiB2YXJpYWJsZShwYXJzZXIsIGMpIHtcbiAgICAgICAgdmFyIGRlZiA9IFBhcnNlVXRpbF9qc18xLmRlZmF1bHQuZ2V0Rm9udERlZihwYXJzZXIpO1xuICAgICAgICB2YXIgZW52ID0gcGFyc2VyLnN0YWNrLmVudjtcbiAgICAgICAgaWYgKGVudi5tdWx0aUxldHRlcklkZW50aWZpZXJzICYmIGVudi5mb250ICE9PSAnJykge1xuICAgICAgICAgICAgYyA9IHBhcnNlci5zdHJpbmcuc3Vic3RyKHBhcnNlci5pIC0gMSkubWF0Y2goZW52Lm11bHRpTGV0dGVySWRlbnRpZmllcnMpWzBdO1xuICAgICAgICAgICAgcGFyc2VyLmkgKz0gYy5sZW5ndGggLSAxO1xuICAgICAgICAgICAgaWYgKGRlZi5tYXRodmFyaWFudCA9PT0gVGV4Q29uc3RhbnRzX2pzXzEuVGV4Q29uc3RhbnQuVmFyaWFudC5OT1JNQUwgJiYgZW52Lm5vQXV0b09QICYmIGMubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgIGRlZi5hdXRvT1AgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgbm9kZSA9IHBhcnNlci5jcmVhdGUoJ3Rva2VuJywgJ21pJywgZGVmLCBjKTtcbiAgICAgICAgcGFyc2VyLlB1c2gobm9kZSk7XG4gICAgfVxuICAgIFBhcnNlTWV0aG9kcy52YXJpYWJsZSA9IHZhcmlhYmxlO1xuICAgIGZ1bmN0aW9uIGRpZ2l0KHBhcnNlciwgYykge1xuICAgICAgICB2YXIgbW1sO1xuICAgICAgICB2YXIgcGF0dGVybiA9IHBhcnNlci5jb25maWd1cmF0aW9uLm9wdGlvbnNbJ2RpZ2l0cyddO1xuICAgICAgICB2YXIgbiA9IHBhcnNlci5zdHJpbmcuc2xpY2UocGFyc2VyLmkgLSAxKS5tYXRjaChwYXR0ZXJuKTtcbiAgICAgICAgdmFyIGRlZiA9IFBhcnNlVXRpbF9qc18xLmRlZmF1bHQuZ2V0Rm9udERlZihwYXJzZXIpO1xuICAgICAgICBpZiAobikge1xuICAgICAgICAgICAgbW1sID0gcGFyc2VyLmNyZWF0ZSgndG9rZW4nLCAnbW4nLCBkZWYsIG5bMF0ucmVwbGFjZSgvW3t9XS9nLCAnJykpO1xuICAgICAgICAgICAgcGFyc2VyLmkgKz0gblswXS5sZW5ndGggLSAxO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbW1sID0gcGFyc2VyLmNyZWF0ZSgndG9rZW4nLCAnbW8nLCBkZWYsIGMpO1xuICAgICAgICB9XG4gICAgICAgIHBhcnNlci5QdXNoKG1tbCk7XG4gICAgfVxuICAgIFBhcnNlTWV0aG9kcy5kaWdpdCA9IGRpZ2l0O1xuICAgIGZ1bmN0aW9uIGNvbnRyb2xTZXF1ZW5jZShwYXJzZXIsIF9jKSB7XG4gICAgICAgIHZhciBuYW1lID0gcGFyc2VyLkdldENTKCk7XG4gICAgICAgIHBhcnNlci5wYXJzZSgnbWFjcm8nLCBbcGFyc2VyLCBuYW1lXSk7XG4gICAgfVxuICAgIFBhcnNlTWV0aG9kcy5jb250cm9sU2VxdWVuY2UgPSBjb250cm9sU2VxdWVuY2U7XG4gICAgZnVuY3Rpb24gbWF0aGNoYXIwbWkocGFyc2VyLCBtY2hhcikge1xuICAgICAgICB2YXIgZGVmID0gbWNoYXIuYXR0cmlidXRlcyB8fCB7IG1hdGh2YXJpYW50OiBUZXhDb25zdGFudHNfanNfMS5UZXhDb25zdGFudC5WYXJpYW50LklUQUxJQyB9O1xuICAgICAgICB2YXIgbm9kZSA9IHBhcnNlci5jcmVhdGUoJ3Rva2VuJywgJ21pJywgZGVmLCBtY2hhci5jaGFyKTtcbiAgICAgICAgcGFyc2VyLlB1c2gobm9kZSk7XG4gICAgfVxuICAgIFBhcnNlTWV0aG9kcy5tYXRoY2hhcjBtaSA9IG1hdGhjaGFyMG1pO1xuICAgIGZ1bmN0aW9uIG1hdGhjaGFyMG1vKHBhcnNlciwgbWNoYXIpIHtcbiAgICAgICAgdmFyIGRlZiA9IG1jaGFyLmF0dHJpYnV0ZXMgfHwge307XG4gICAgICAgIGRlZlsnc3RyZXRjaHknXSA9IGZhbHNlO1xuICAgICAgICB2YXIgbm9kZSA9IHBhcnNlci5jcmVhdGUoJ3Rva2VuJywgJ21vJywgZGVmLCBtY2hhci5jaGFyKTtcbiAgICAgICAgTm9kZVV0aWxfanNfMS5kZWZhdWx0LnNldFByb3BlcnR5KG5vZGUsICdmaXhTdHJldGNoeScsIHRydWUpO1xuICAgICAgICBwYXJzZXIuY29uZmlndXJhdGlvbi5hZGROb2RlKCdmaXhTdHJldGNoeScsIG5vZGUpO1xuICAgICAgICBwYXJzZXIuUHVzaChub2RlKTtcbiAgICB9XG4gICAgUGFyc2VNZXRob2RzLm1hdGhjaGFyMG1vID0gbWF0aGNoYXIwbW87XG4gICAgZnVuY3Rpb24gbWF0aGNoYXI3KHBhcnNlciwgbWNoYXIpIHtcbiAgICAgICAgdmFyIGRlZiA9IG1jaGFyLmF0dHJpYnV0ZXMgfHwgeyBtYXRodmFyaWFudDogVGV4Q29uc3RhbnRzX2pzXzEuVGV4Q29uc3RhbnQuVmFyaWFudC5OT1JNQUwgfTtcbiAgICAgICAgaWYgKHBhcnNlci5zdGFjay5lbnZbJ2ZvbnQnXSkge1xuICAgICAgICAgICAgZGVmWydtYXRodmFyaWFudCddID0gcGFyc2VyLnN0YWNrLmVudlsnZm9udCddO1xuICAgICAgICB9XG4gICAgICAgIHZhciBub2RlID0gcGFyc2VyLmNyZWF0ZSgndG9rZW4nLCAnbWknLCBkZWYsIG1jaGFyLmNoYXIpO1xuICAgICAgICBwYXJzZXIuUHVzaChub2RlKTtcbiAgICB9XG4gICAgUGFyc2VNZXRob2RzLm1hdGhjaGFyNyA9IG1hdGhjaGFyNztcbiAgICBmdW5jdGlvbiBkZWxpbWl0ZXIocGFyc2VyLCBkZWxpbSkge1xuICAgICAgICB2YXIgZGVmID0gZGVsaW0uYXR0cmlidXRlcyB8fCB7fTtcbiAgICAgICAgZGVmID0gT2JqZWN0LmFzc2lnbih7IGZlbmNlOiBmYWxzZSwgc3RyZXRjaHk6IGZhbHNlIH0sIGRlZik7XG4gICAgICAgIHZhciBub2RlID0gcGFyc2VyLmNyZWF0ZSgndG9rZW4nLCAnbW8nLCBkZWYsIGRlbGltLmNoYXIpO1xuICAgICAgICBwYXJzZXIuUHVzaChub2RlKTtcbiAgICB9XG4gICAgUGFyc2VNZXRob2RzLmRlbGltaXRlciA9IGRlbGltaXRlcjtcbiAgICBmdW5jdGlvbiBlbnZpcm9ubWVudChwYXJzZXIsIGVudiwgZnVuYywgYXJncykge1xuICAgICAgICB2YXIgZW5kID0gYXJnc1swXTtcbiAgICAgICAgdmFyIG1tbCA9IHBhcnNlci5pdGVtRmFjdG9yeS5jcmVhdGUoJ2JlZ2luJykuc2V0UHJvcGVydGllcyh7IG5hbWU6IGVudiwgZW5kOiBlbmQgfSk7XG4gICAgICAgIG1tbCA9IGZ1bmMuYXBwbHkodm9pZCAwLCBfX3NwcmVhZEFycmF5KFtwYXJzZXIsIG1tbF0sIF9fcmVhZChhcmdzLnNsaWNlKDEpKSwgZmFsc2UpKTtcbiAgICAgICAgcGFyc2VyLlB1c2gobW1sKTtcbiAgICB9XG4gICAgUGFyc2VNZXRob2RzLmVudmlyb25tZW50ID0gZW52aXJvbm1lbnQ7XG59KShQYXJzZU1ldGhvZHMgfHwgKFBhcnNlTWV0aG9kcyA9IHt9KSk7XG5leHBvcnRzLmRlZmF1bHQgPSBQYXJzZU1ldGhvZHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1QYXJzZU1ldGhvZHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/ParseMethods.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/ParseOptions.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/ParseOptions.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar StackItemFactory_js_1 = __importDefault(__webpack_require__(/*! ./StackItemFactory.js */ \"./node_modules/mathjax-full/js/input/tex/StackItemFactory.js\"));\nvar NodeFactory_js_1 = __webpack_require__(/*! ./NodeFactory.js */ \"./node_modules/mathjax-full/js/input/tex/NodeFactory.js\");\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ./NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar Options_js_1 = __webpack_require__(/*! ../../util/Options.js */ \"./node_modules/mathjax-full/js/util/Options.js\");\nvar ParseOptions = (function () {\n    function ParseOptions(configuration, options) {\n        if (options === void 0) { options = []; }\n        this.options = {};\n        this.packageData = new Map();\n        this.parsers = [];\n        this.root = null;\n        this.nodeLists = {};\n        this.error = false;\n        this.handlers = configuration.handlers;\n        this.nodeFactory = new NodeFactory_js_1.NodeFactory();\n        this.nodeFactory.configuration = this;\n        this.nodeFactory.setCreators(configuration.nodes);\n        this.itemFactory = new StackItemFactory_js_1.default(configuration.items);\n        this.itemFactory.configuration = this;\n        Options_js_1.defaultOptions.apply(void 0, __spreadArray([this.options], __read(options), false));\n        (0, Options_js_1.defaultOptions)(this.options, configuration.options);\n    }\n    ParseOptions.prototype.pushParser = function (parser) {\n        this.parsers.unshift(parser);\n    };\n    ParseOptions.prototype.popParser = function () {\n        this.parsers.shift();\n    };\n    Object.defineProperty(ParseOptions.prototype, \"parser\", {\n        get: function () {\n            return this.parsers[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ParseOptions.prototype.clear = function () {\n        this.parsers = [];\n        this.root = null;\n        this.nodeLists = {};\n        this.error = false;\n        this.tags.resetTag();\n    };\n    ParseOptions.prototype.addNode = function (property, node) {\n        var list = this.nodeLists[property];\n        if (!list) {\n            list = this.nodeLists[property] = [];\n        }\n        list.push(node);\n        if (node.kind !== property) {\n            var inlists = (NodeUtil_js_1.default.getProperty(node, 'in-lists') || '');\n            var lists = (inlists ? inlists.split(/,/) : []).concat(property).join(',');\n            NodeUtil_js_1.default.setProperty(node, 'in-lists', lists);\n        }\n    };\n    ParseOptions.prototype.getList = function (property) {\n        var e_1, _a;\n        var list = this.nodeLists[property] || [];\n        var result = [];\n        try {\n            for (var list_1 = __values(list), list_1_1 = list_1.next(); !list_1_1.done; list_1_1 = list_1.next()) {\n                var node = list_1_1.value;\n                if (this.inTree(node)) {\n                    result.push(node);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (list_1_1 && !list_1_1.done && (_a = list_1.return)) _a.call(list_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        this.nodeLists[property] = result;\n        return result;\n    };\n    ParseOptions.prototype.removeFromList = function (property, nodes) {\n        var e_2, _a;\n        var list = this.nodeLists[property] || [];\n        try {\n            for (var nodes_1 = __values(nodes), nodes_1_1 = nodes_1.next(); !nodes_1_1.done; nodes_1_1 = nodes_1.next()) {\n                var node = nodes_1_1.value;\n                var i = list.indexOf(node);\n                if (i >= 0) {\n                    list.splice(i, 1);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (nodes_1_1 && !nodes_1_1.done && (_a = nodes_1.return)) _a.call(nodes_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    ParseOptions.prototype.inTree = function (node) {\n        while (node && node !== this.root) {\n            node = node.parent;\n        }\n        return !!node;\n    };\n    return ParseOptions;\n}());\nexports[\"default\"] = ParseOptions;\n//# sourceMappingURL=ParseOptions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/ParseOptions.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/ParseUtil.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/ParseUtil.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar MmlNode_js_1 = __webpack_require__(/*! ../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ./NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar TexParser_js_1 = __importDefault(__webpack_require__(/*! ./TexParser.js */ \"./node_modules/mathjax-full/js/input/tex/TexParser.js\"));\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ./TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar Entities_js_1 = __webpack_require__(/*! ../../util/Entities.js */ \"./node_modules/mathjax-full/js/util/Entities.js\");\nvar ParseUtil;\n(function (ParseUtil) {\n    var emPerInch = 7.2;\n    var pxPerInch = 72;\n    var UNIT_CASES = {\n        'em': function (m) { return m; },\n        'ex': function (m) { return m * .43; },\n        'pt': function (m) { return m / 10; },\n        'pc': function (m) { return m * 1.2; },\n        'px': function (m) { return m * emPerInch / pxPerInch; },\n        'in': function (m) { return m * emPerInch; },\n        'cm': function (m) { return m * emPerInch / 2.54; },\n        'mm': function (m) { return m * emPerInch / 25.4; },\n        'mu': function (m) { return m / 18; },\n    };\n    var num = '([-+]?([.,]\\\\d+|\\\\d+([.,]\\\\d*)?))';\n    var unit = '(pt|em|ex|mu|px|mm|cm|in|pc)';\n    var dimenEnd = RegExp('^\\\\s*' + num + '\\\\s*' + unit + '\\\\s*$');\n    var dimenRest = RegExp('^\\\\s*' + num + '\\\\s*' + unit + ' ?');\n    function matchDimen(dim, rest) {\n        if (rest === void 0) { rest = false; }\n        var match = dim.match(rest ? dimenRest : dimenEnd);\n        return match ?\n            muReplace([match[1].replace(/,/, '.'), match[4], match[0].length]) :\n            [null, null, 0];\n    }\n    ParseUtil.matchDimen = matchDimen;\n    function muReplace(_a) {\n        var _b = __read(_a, 3), value = _b[0], unit = _b[1], length = _b[2];\n        if (unit !== 'mu') {\n            return [value, unit, length];\n        }\n        var em = Em(UNIT_CASES[unit](parseFloat(value || '1')));\n        return [em.slice(0, -2), 'em', length];\n    }\n    function dimen2em(dim) {\n        var _a = __read(matchDimen(dim), 2), value = _a[0], unit = _a[1];\n        var m = parseFloat(value || '1');\n        var func = UNIT_CASES[unit];\n        return func ? func(m) : 0;\n    }\n    ParseUtil.dimen2em = dimen2em;\n    function Em(m) {\n        if (Math.abs(m) < .0006) {\n            return '0em';\n        }\n        return m.toFixed(3).replace(/\\.?0+$/, '') + 'em';\n    }\n    ParseUtil.Em = Em;\n    function cols() {\n        var W = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            W[_i] = arguments[_i];\n        }\n        return W.map(function (n) { return Em(n); }).join(' ');\n    }\n    ParseUtil.cols = cols;\n    function fenced(configuration, open, mml, close, big, color) {\n        if (big === void 0) { big = ''; }\n        if (color === void 0) { color = ''; }\n        var nf = configuration.nodeFactory;\n        var mrow = nf.create('node', 'mrow', [], { open: open, close: close, texClass: MmlNode_js_1.TEXCLASS.INNER });\n        var mo;\n        if (big) {\n            mo = new TexParser_js_1.default('\\\\' + big + 'l' + open, configuration.parser.stack.env, configuration).mml();\n        }\n        else {\n            var openNode = nf.create('text', open);\n            mo = nf.create('node', 'mo', [], { fence: true, stretchy: true, symmetric: true, texClass: MmlNode_js_1.TEXCLASS.OPEN }, openNode);\n        }\n        NodeUtil_js_1.default.appendChildren(mrow, [mo, mml]);\n        if (big) {\n            mo = new TexParser_js_1.default('\\\\' + big + 'r' + close, configuration.parser.stack.env, configuration).mml();\n        }\n        else {\n            var closeNode = nf.create('text', close);\n            mo = nf.create('node', 'mo', [], { fence: true, stretchy: true, symmetric: true, texClass: MmlNode_js_1.TEXCLASS.CLOSE }, closeNode);\n        }\n        color && mo.attributes.set('mathcolor', color);\n        NodeUtil_js_1.default.appendChildren(mrow, [mo]);\n        return mrow;\n    }\n    ParseUtil.fenced = fenced;\n    function fixedFence(configuration, open, mml, close) {\n        var mrow = configuration.nodeFactory.create('node', 'mrow', [], { open: open, close: close, texClass: MmlNode_js_1.TEXCLASS.ORD });\n        if (open) {\n            NodeUtil_js_1.default.appendChildren(mrow, [mathPalette(configuration, open, 'l')]);\n        }\n        if (NodeUtil_js_1.default.isType(mml, 'mrow')) {\n            NodeUtil_js_1.default.appendChildren(mrow, NodeUtil_js_1.default.getChildren(mml));\n        }\n        else {\n            NodeUtil_js_1.default.appendChildren(mrow, [mml]);\n        }\n        if (close) {\n            NodeUtil_js_1.default.appendChildren(mrow, [mathPalette(configuration, close, 'r')]);\n        }\n        return mrow;\n    }\n    ParseUtil.fixedFence = fixedFence;\n    function mathPalette(configuration, fence, side) {\n        if (fence === '{' || fence === '}') {\n            fence = '\\\\' + fence;\n        }\n        var D = '{\\\\bigg' + side + ' ' + fence + '}';\n        var T = '{\\\\big' + side + ' ' + fence + '}';\n        return new TexParser_js_1.default('\\\\mathchoice' + D + T + T + T, {}, configuration).mml();\n    }\n    ParseUtil.mathPalette = mathPalette;\n    function fixInitialMO(configuration, nodes) {\n        for (var i = 0, m = nodes.length; i < m; i++) {\n            var child = nodes[i];\n            if (child && (!NodeUtil_js_1.default.isType(child, 'mspace') &&\n                (!NodeUtil_js_1.default.isType(child, 'TeXAtom') ||\n                    (NodeUtil_js_1.default.getChildren(child)[0] &&\n                        NodeUtil_js_1.default.getChildren(NodeUtil_js_1.default.getChildren(child)[0]).length)))) {\n                if (NodeUtil_js_1.default.isEmbellished(child) ||\n                    (NodeUtil_js_1.default.isType(child, 'TeXAtom') && NodeUtil_js_1.default.getTexClass(child) === MmlNode_js_1.TEXCLASS.REL)) {\n                    var mi = configuration.nodeFactory.create('node', 'mi');\n                    nodes.unshift(mi);\n                }\n                break;\n            }\n        }\n    }\n    ParseUtil.fixInitialMO = fixInitialMO;\n    function internalMath(parser, text, level, font) {\n        if (parser.configuration.options.internalMath) {\n            return parser.configuration.options.internalMath(parser, text, level, font);\n        }\n        var mathvariant = font || parser.stack.env.font;\n        var def = (mathvariant ? { mathvariant: mathvariant } : {});\n        var mml = [], i = 0, k = 0, c, node, match = '', braces = 0;\n        if (text.match(/\\\\?[${}\\\\]|\\\\\\(|\\\\(eq)?ref\\s*\\{/)) {\n            while (i < text.length) {\n                c = text.charAt(i++);\n                if (c === '$') {\n                    if (match === '$' && braces === 0) {\n                        node = parser.create('node', 'TeXAtom', [(new TexParser_js_1.default(text.slice(k, i - 1), {}, parser.configuration)).mml()]);\n                        mml.push(node);\n                        match = '';\n                        k = i;\n                    }\n                    else if (match === '') {\n                        if (k < i - 1) {\n                            mml.push(internalText(parser, text.slice(k, i - 1), def));\n                        }\n                        match = '$';\n                        k = i;\n                    }\n                }\n                else if (c === '{' && match !== '') {\n                    braces++;\n                }\n                else if (c === '}') {\n                    if (match === '}' && braces === 0) {\n                        var atom = (new TexParser_js_1.default(text.slice(k, i), {}, parser.configuration)).mml();\n                        node = parser.create('node', 'TeXAtom', [atom], def);\n                        mml.push(node);\n                        match = '';\n                        k = i;\n                    }\n                    else if (match !== '') {\n                        if (braces) {\n                            braces--;\n                        }\n                    }\n                }\n                else if (c === '\\\\') {\n                    if (match === '' && text.substr(i).match(/^(eq)?ref\\s*\\{/)) {\n                        var len = RegExp['$&'].length;\n                        if (k < i - 1) {\n                            mml.push(internalText(parser, text.slice(k, i - 1), def));\n                        }\n                        match = '}';\n                        k = i - 1;\n                        i += len;\n                    }\n                    else {\n                        c = text.charAt(i++);\n                        if (c === '(' && match === '') {\n                            if (k < i - 2) {\n                                mml.push(internalText(parser, text.slice(k, i - 2), def));\n                            }\n                            match = ')';\n                            k = i;\n                        }\n                        else if (c === ')' && match === ')' && braces === 0) {\n                            node = parser.create('node', 'TeXAtom', [(new TexParser_js_1.default(text.slice(k, i - 2), {}, parser.configuration)).mml()]);\n                            mml.push(node);\n                            match = '';\n                            k = i;\n                        }\n                        else if (c.match(/[${}\\\\]/) && match === '') {\n                            i--;\n                            text = text.substr(0, i - 1) + text.substr(i);\n                        }\n                    }\n                }\n            }\n            if (match !== '') {\n                throw new TexError_js_1.default('MathNotTerminated', 'Math not terminated in text box');\n            }\n        }\n        if (k < text.length) {\n            mml.push(internalText(parser, text.slice(k), def));\n        }\n        if (level != null) {\n            mml = [parser.create('node', 'mstyle', mml, { displaystyle: false, scriptlevel: level })];\n        }\n        else if (mml.length > 1) {\n            mml = [parser.create('node', 'mrow', mml)];\n        }\n        return mml;\n    }\n    ParseUtil.internalMath = internalMath;\n    function internalText(parser, text, def) {\n        text = text.replace(/^\\s+/, Entities_js_1.entities.nbsp).replace(/\\s+$/, Entities_js_1.entities.nbsp);\n        var textNode = parser.create('text', text);\n        return parser.create('node', 'mtext', [], def, textNode);\n    }\n    ParseUtil.internalText = internalText;\n    function underOver(parser, base, script, pos, stack) {\n        ParseUtil.checkMovableLimits(base);\n        if (NodeUtil_js_1.default.isType(base, 'munderover') && NodeUtil_js_1.default.isEmbellished(base)) {\n            NodeUtil_js_1.default.setProperties(NodeUtil_js_1.default.getCoreMO(base), { lspace: 0, rspace: 0 });\n            var mo = parser.create('node', 'mo', [], { rspace: 0 });\n            base = parser.create('node', 'mrow', [mo, base]);\n        }\n        var mml = parser.create('node', 'munderover', [base]);\n        NodeUtil_js_1.default.setChild(mml, pos === 'over' ? mml.over : mml.under, script);\n        var node = mml;\n        if (stack) {\n            node = parser.create('node', 'TeXAtom', [mml], { texClass: MmlNode_js_1.TEXCLASS.OP, movesupsub: true });\n        }\n        NodeUtil_js_1.default.setProperty(node, 'subsupOK', true);\n        return node;\n    }\n    ParseUtil.underOver = underOver;\n    function checkMovableLimits(base) {\n        var symbol = (NodeUtil_js_1.default.isType(base, 'mo') ? NodeUtil_js_1.default.getForm(base) : null);\n        if (NodeUtil_js_1.default.getProperty(base, 'movablelimits') || (symbol && symbol[3] && symbol[3].movablelimits)) {\n            NodeUtil_js_1.default.setProperties(base, { movablelimits: false });\n        }\n    }\n    ParseUtil.checkMovableLimits = checkMovableLimits;\n    function trimSpaces(text) {\n        if (typeof (text) !== 'string') {\n            return text;\n        }\n        var TEXT = text.trim();\n        if (TEXT.match(/\\\\$/) && text.match(/ $/)) {\n            TEXT += ' ';\n        }\n        return TEXT;\n    }\n    ParseUtil.trimSpaces = trimSpaces;\n    function setArrayAlign(array, align) {\n        align = ParseUtil.trimSpaces(align || '');\n        if (align === 't') {\n            array.arraydef.align = 'baseline 1';\n        }\n        else if (align === 'b') {\n            array.arraydef.align = 'baseline -1';\n        }\n        else if (align === 'c') {\n            array.arraydef.align = 'axis';\n        }\n        else if (align) {\n            array.arraydef.align = align;\n        }\n        return array;\n    }\n    ParseUtil.setArrayAlign = setArrayAlign;\n    function substituteArgs(parser, args, str) {\n        var text = '';\n        var newstring = '';\n        var i = 0;\n        while (i < str.length) {\n            var c = str.charAt(i++);\n            if (c === '\\\\') {\n                text += c + str.charAt(i++);\n            }\n            else if (c === '#') {\n                c = str.charAt(i++);\n                if (c === '#') {\n                    text += c;\n                }\n                else {\n                    if (!c.match(/[1-9]/) || parseInt(c, 10) > args.length) {\n                        throw new TexError_js_1.default('IllegalMacroParam', 'Illegal macro parameter reference');\n                    }\n                    newstring = addArgs(parser, addArgs(parser, newstring, text), args[parseInt(c, 10) - 1]);\n                    text = '';\n                }\n            }\n            else {\n                text += c;\n            }\n        }\n        return addArgs(parser, newstring, text);\n    }\n    ParseUtil.substituteArgs = substituteArgs;\n    function addArgs(parser, s1, s2) {\n        if (s2.match(/^[a-z]/i) && s1.match(/(^|[^\\\\])(\\\\\\\\)*\\\\[a-z]+$/i)) {\n            s1 += ' ';\n        }\n        if (s1.length + s2.length > parser.configuration.options['maxBuffer']) {\n            throw new TexError_js_1.default('MaxBufferSize', 'MathJax internal buffer size exceeded; is there a' +\n                ' recursive macro call?');\n        }\n        return s1 + s2;\n    }\n    ParseUtil.addArgs = addArgs;\n    function checkMaxMacros(parser, isMacro) {\n        if (isMacro === void 0) { isMacro = true; }\n        if (++parser.macroCount <= parser.configuration.options['maxMacros']) {\n            return;\n        }\n        if (isMacro) {\n            throw new TexError_js_1.default('MaxMacroSub1', 'MathJax maximum macro substitution count exceeded; ' +\n                'is here a recursive macro call?');\n        }\n        else {\n            throw new TexError_js_1.default('MaxMacroSub2', 'MathJax maximum substitution count exceeded; ' +\n                'is there a recursive latex environment?');\n        }\n    }\n    ParseUtil.checkMaxMacros = checkMaxMacros;\n    function checkEqnEnv(parser) {\n        if (parser.stack.global.eqnenv) {\n            throw new TexError_js_1.default('ErroneousNestingEq', 'Erroneous nesting of equation structures');\n        }\n        parser.stack.global.eqnenv = true;\n    }\n    ParseUtil.checkEqnEnv = checkEqnEnv;\n    function copyNode(node, parser) {\n        var tree = node.copy();\n        var options = parser.configuration;\n        tree.walkTree(function (n) {\n            var e_1, _a;\n            options.addNode(n.kind, n);\n            var lists = (n.getProperty('in-lists') || '').split(/,/);\n            try {\n                for (var lists_1 = __values(lists), lists_1_1 = lists_1.next(); !lists_1_1.done; lists_1_1 = lists_1.next()) {\n                    var list = lists_1_1.value;\n                    list && options.addNode(list, n);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (lists_1_1 && !lists_1_1.done && (_a = lists_1.return)) _a.call(lists_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        });\n        return tree;\n    }\n    ParseUtil.copyNode = copyNode;\n    function MmlFilterAttribute(_parser, _name, value) {\n        return value;\n    }\n    ParseUtil.MmlFilterAttribute = MmlFilterAttribute;\n    function getFontDef(parser) {\n        var font = parser.stack.env['font'];\n        return (font ? { mathvariant: font } : {});\n    }\n    ParseUtil.getFontDef = getFontDef;\n    function keyvalOptions(attrib, allowed, error) {\n        var e_2, _a;\n        if (allowed === void 0) { allowed = null; }\n        if (error === void 0) { error = false; }\n        var def = readKeyval(attrib);\n        if (allowed) {\n            try {\n                for (var _b = __values(Object.keys(def)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var key = _c.value;\n                    if (!allowed.hasOwnProperty(key)) {\n                        if (error) {\n                            throw new TexError_js_1.default('InvalidOption', 'Invalid option: %1', key);\n                        }\n                        delete def[key];\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n        return def;\n    }\n    ParseUtil.keyvalOptions = keyvalOptions;\n    function readKeyval(text) {\n        var _a, _b;\n        var options = {};\n        var rest = text;\n        var end, key, val;\n        while (rest) {\n            _a = __read(readValue(rest, ['=', ',']), 3), key = _a[0], end = _a[1], rest = _a[2];\n            if (end === '=') {\n                _b = __read(readValue(rest, [',']), 3), val = _b[0], end = _b[1], rest = _b[2];\n                val = (val === 'false' || val === 'true') ?\n                    JSON.parse(val) : val;\n                options[key] = val;\n            }\n            else if (key) {\n                options[key] = true;\n            }\n        }\n        return options;\n    }\n    function removeBraces(text, count) {\n        while (count > 0) {\n            text = text.trim().slice(1, -1);\n            count--;\n        }\n        return text.trim();\n    }\n    function readValue(text, end) {\n        var length = text.length;\n        var braces = 0;\n        var value = '';\n        var index = 0;\n        var start = 0;\n        var startCount = true;\n        var stopCount = false;\n        while (index < length) {\n            var c = text[index++];\n            switch (c) {\n                case ' ':\n                    break;\n                case '{':\n                    if (startCount) {\n                        start++;\n                    }\n                    else {\n                        stopCount = false;\n                        if (start > braces) {\n                            start = braces;\n                        }\n                    }\n                    braces++;\n                    break;\n                case '}':\n                    if (braces) {\n                        braces--;\n                    }\n                    if (startCount || stopCount) {\n                        start--;\n                        stopCount = true;\n                    }\n                    startCount = false;\n                    break;\n                default:\n                    if (!braces && end.indexOf(c) !== -1) {\n                        return [stopCount ? 'true' :\n                                removeBraces(value, start), c, text.slice(index)];\n                    }\n                    startCount = false;\n                    stopCount = false;\n            }\n            value += c;\n        }\n        if (braces) {\n            throw new TexError_js_1.default('ExtraOpenMissingClose', 'Extra open brace or missing close brace');\n        }\n        return [stopCount ? 'true' : removeBraces(value, start), '', text.slice(index)];\n    }\n})(ParseUtil || (ParseUtil = {}));\nexports[\"default\"] = ParseUtil;\n//# sourceMappingURL=ParseUtil.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/ParseUtil.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/Stack.js":
/*!*********************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/Stack.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ./NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar Stack = (function () {\n    function Stack(_factory, _env, inner) {\n        this._factory = _factory;\n        this._env = _env;\n        this.global = {};\n        this.stack = [];\n        this.global = { isInner: inner };\n        this.stack = [this._factory.create('start', this.global)];\n        if (_env) {\n            this.stack[0].env = _env;\n        }\n        this.env = this.stack[0].env;\n    }\n    Object.defineProperty(Stack.prototype, \"env\", {\n        get: function () {\n            return this._env;\n        },\n        set: function (env) {\n            this._env = env;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Stack.prototype.Push = function () {\n        var e_1, _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        try {\n            for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {\n                var node = args_1_1.value;\n                if (!node) {\n                    continue;\n                }\n                var item = NodeUtil_js_1.default.isNode(node) ?\n                    this._factory.create('mml', node) : node;\n                item.global = this.global;\n                var _b = __read(this.stack.length ? this.Top().checkItem(item) : [null, true], 2), top_1 = _b[0], success = _b[1];\n                if (!success) {\n                    continue;\n                }\n                if (top_1) {\n                    this.Pop();\n                    this.Push.apply(this, __spreadArray([], __read(top_1), false));\n                    continue;\n                }\n                this.stack.push(item);\n                if (item.env) {\n                    if (item.copyEnv) {\n                        Object.assign(item.env, this.env);\n                    }\n                    this.env = item.env;\n                }\n                else {\n                    item.env = this.env;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    Stack.prototype.Pop = function () {\n        var item = this.stack.pop();\n        if (!item.isOpen) {\n            delete item.env;\n        }\n        this.env = (this.stack.length ? this.Top().env : {});\n        return item;\n    };\n    Stack.prototype.Top = function (n) {\n        if (n === void 0) { n = 1; }\n        return this.stack.length < n ? null : this.stack[this.stack.length - n];\n    };\n    Stack.prototype.Prev = function (noPop) {\n        var top = this.Top();\n        return noPop ? top.First : top.Pop();\n    };\n    Stack.prototype.toString = function () {\n        return 'stack[\\n  ' + this.stack.join('\\n  ') + '\\n]';\n    };\n    return Stack;\n}());\nexports[\"default\"] = Stack;\n//# sourceMappingURL=Stack.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9TdGFjay5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE1BQU07QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RUFBNkUsT0FBTztBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9DQUFvQyxtQkFBTyxDQUFDLDJFQUFlO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix1QkFBdUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFLGdCQUFnQjtBQUN4RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJEO0FBQzNEO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvaW5wdXQvdGV4L1N0YWNrLmpzPzEwZjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX192YWx1ZXMgPSAodGhpcyAmJiB0aGlzLl9fdmFsdWVzKSB8fCBmdW5jdGlvbihvKSB7XG4gICAgdmFyIHMgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgU3ltYm9sLml0ZXJhdG9yLCBtID0gcyAmJiBvW3NdLCBpID0gMDtcbiAgICBpZiAobSkgcmV0dXJuIG0uY2FsbChvKTtcbiAgICBpZiAobyAmJiB0eXBlb2Ygby5sZW5ndGggPT09IFwibnVtYmVyXCIpIHJldHVybiB7XG4gICAgICAgIG5leHQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChvICYmIGkgPj0gby5sZW5ndGgpIG8gPSB2b2lkIDA7XG4gICAgICAgICAgICByZXR1cm4geyB2YWx1ZTogbyAmJiBvW2krK10sIGRvbmU6ICFvIH07XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IocyA/IFwiT2JqZWN0IGlzIG5vdCBpdGVyYWJsZS5cIiA6IFwiU3ltYm9sLml0ZXJhdG9yIGlzIG5vdCBkZWZpbmVkLlwiKTtcbn07XG52YXIgX19yZWFkID0gKHRoaXMgJiYgdGhpcy5fX3JlYWQpIHx8IGZ1bmN0aW9uIChvLCBuKSB7XG4gICAgdmFyIG0gPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb1tTeW1ib2wuaXRlcmF0b3JdO1xuICAgIGlmICghbSkgcmV0dXJuIG87XG4gICAgdmFyIGkgPSBtLmNhbGwobyksIHIsIGFyID0gW10sIGU7XG4gICAgdHJ5IHtcbiAgICAgICAgd2hpbGUgKChuID09PSB2b2lkIDAgfHwgbi0tID4gMCkgJiYgIShyID0gaS5uZXh0KCkpLmRvbmUpIGFyLnB1c2goci52YWx1ZSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikgeyBlID0geyBlcnJvcjogZXJyb3IgfTsgfVxuICAgIGZpbmFsbHkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKHIgJiYgIXIuZG9uZSAmJiAobSA9IGlbXCJyZXR1cm5cIl0pKSBtLmNhbGwoaSk7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7IGlmIChlKSB0aHJvdyBlLmVycm9yOyB9XG4gICAgfVxuICAgIHJldHVybiBhcjtcbn07XG52YXIgX19zcHJlYWRBcnJheSA9ICh0aGlzICYmIHRoaXMuX19zcHJlYWRBcnJheSkgfHwgZnVuY3Rpb24gKHRvLCBmcm9tLCBwYWNrKSB7XG4gICAgaWYgKHBhY2sgfHwgYXJndW1lbnRzLmxlbmd0aCA9PT0gMikgZm9yICh2YXIgaSA9IDAsIGwgPSBmcm9tLmxlbmd0aCwgYXI7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgaWYgKGFyIHx8ICEoaSBpbiBmcm9tKSkge1xuICAgICAgICAgICAgaWYgKCFhcikgYXIgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tLCAwLCBpKTtcbiAgICAgICAgICAgIGFyW2ldID0gZnJvbVtpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdG8uY29uY2F0KGFyIHx8IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGZyb20pKTtcbn07XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgTm9kZVV0aWxfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9Ob2RlVXRpbC5qc1wiKSk7XG52YXIgU3RhY2sgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFN0YWNrKF9mYWN0b3J5LCBfZW52LCBpbm5lcikge1xuICAgICAgICB0aGlzLl9mYWN0b3J5ID0gX2ZhY3Rvcnk7XG4gICAgICAgIHRoaXMuX2VudiA9IF9lbnY7XG4gICAgICAgIHRoaXMuZ2xvYmFsID0ge307XG4gICAgICAgIHRoaXMuc3RhY2sgPSBbXTtcbiAgICAgICAgdGhpcy5nbG9iYWwgPSB7IGlzSW5uZXI6IGlubmVyIH07XG4gICAgICAgIHRoaXMuc3RhY2sgPSBbdGhpcy5fZmFjdG9yeS5jcmVhdGUoJ3N0YXJ0JywgdGhpcy5nbG9iYWwpXTtcbiAgICAgICAgaWYgKF9lbnYpIHtcbiAgICAgICAgICAgIHRoaXMuc3RhY2tbMF0uZW52ID0gX2VudjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmVudiA9IHRoaXMuc3RhY2tbMF0uZW52O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU3RhY2sucHJvdG90eXBlLCBcImVudlwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2VudjtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAoZW52KSB7XG4gICAgICAgICAgICB0aGlzLl9lbnYgPSBlbnY7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBTdGFjay5wcm90b3R5cGUuUHVzaCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGVfMSwgX2E7XG4gICAgICAgIHZhciBhcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGZvciAodmFyIGFyZ3NfMSA9IF9fdmFsdWVzKGFyZ3MpLCBhcmdzXzFfMSA9IGFyZ3NfMS5uZXh0KCk7ICFhcmdzXzFfMS5kb25lOyBhcmdzXzFfMSA9IGFyZ3NfMS5uZXh0KCkpIHtcbiAgICAgICAgICAgICAgICB2YXIgbm9kZSA9IGFyZ3NfMV8xLnZhbHVlO1xuICAgICAgICAgICAgICAgIGlmICghbm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSBOb2RlVXRpbF9qc18xLmRlZmF1bHQuaXNOb2RlKG5vZGUpID9cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZmFjdG9yeS5jcmVhdGUoJ21tbCcsIG5vZGUpIDogbm9kZTtcbiAgICAgICAgICAgICAgICBpdGVtLmdsb2JhbCA9IHRoaXMuZ2xvYmFsO1xuICAgICAgICAgICAgICAgIHZhciBfYiA9IF9fcmVhZCh0aGlzLnN0YWNrLmxlbmd0aCA/IHRoaXMuVG9wKCkuY2hlY2tJdGVtKGl0ZW0pIDogW251bGwsIHRydWVdLCAyKSwgdG9wXzEgPSBfYlswXSwgc3VjY2VzcyA9IF9iWzFdO1xuICAgICAgICAgICAgICAgIGlmICghc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHRvcF8xKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUG9wKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUHVzaC5hcHBseSh0aGlzLCBfX3NwcmVhZEFycmF5KFtdLCBfX3JlYWQodG9wXzEpLCBmYWxzZSkpO1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5zdGFjay5wdXNoKGl0ZW0pO1xuICAgICAgICAgICAgICAgIGlmIChpdGVtLmVudikge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbS5jb3B5RW52KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKGl0ZW0uZW52LCB0aGlzLmVudik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbnYgPSBpdGVtLmVudjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uZW52ID0gdGhpcy5lbnY7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlXzFfMSkgeyBlXzEgPSB7IGVycm9yOiBlXzFfMSB9OyB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiAoYXJnc18xXzEgJiYgIWFyZ3NfMV8xLmRvbmUgJiYgKF9hID0gYXJnc18xLnJldHVybikpIF9hLmNhbGwoYXJnc18xKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpbmFsbHkgeyBpZiAoZV8xKSB0aHJvdyBlXzEuZXJyb3I7IH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgU3RhY2sucHJvdG90eXBlLlBvcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGl0ZW0gPSB0aGlzLnN0YWNrLnBvcCgpO1xuICAgICAgICBpZiAoIWl0ZW0uaXNPcGVuKSB7XG4gICAgICAgICAgICBkZWxldGUgaXRlbS5lbnY7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5lbnYgPSAodGhpcy5zdGFjay5sZW5ndGggPyB0aGlzLlRvcCgpLmVudiA6IHt9KTtcbiAgICAgICAgcmV0dXJuIGl0ZW07XG4gICAgfTtcbiAgICBTdGFjay5wcm90b3R5cGUuVG9wID0gZnVuY3Rpb24gKG4pIHtcbiAgICAgICAgaWYgKG4gPT09IHZvaWQgMCkgeyBuID0gMTsgfVxuICAgICAgICByZXR1cm4gdGhpcy5zdGFjay5sZW5ndGggPCBuID8gbnVsbCA6IHRoaXMuc3RhY2tbdGhpcy5zdGFjay5sZW5ndGggLSBuXTtcbiAgICB9O1xuICAgIFN0YWNrLnByb3RvdHlwZS5QcmV2ID0gZnVuY3Rpb24gKG5vUG9wKSB7XG4gICAgICAgIHZhciB0b3AgPSB0aGlzLlRvcCgpO1xuICAgICAgICByZXR1cm4gbm9Qb3AgPyB0b3AuRmlyc3QgOiB0b3AuUG9wKCk7XG4gICAgfTtcbiAgICBTdGFjay5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAnc3RhY2tbXFxuICAnICsgdGhpcy5zdGFjay5qb2luKCdcXG4gICcpICsgJ1xcbl0nO1xuICAgIH07XG4gICAgcmV0dXJuIFN0YWNrO1xufSgpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IFN0YWNrO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3RhY2suanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/Stack.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/StackItem.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/StackItem.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BaseItem = exports.MmlStack = void 0;\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ./TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar MmlStack = (function () {\n    function MmlStack(_nodes) {\n        this._nodes = _nodes;\n    }\n    Object.defineProperty(MmlStack.prototype, \"nodes\", {\n        get: function () {\n            return this._nodes;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MmlStack.prototype.Push = function () {\n        var _a;\n        var nodes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            nodes[_i] = arguments[_i];\n        }\n        (_a = this._nodes).push.apply(_a, __spreadArray([], __read(nodes), false));\n    };\n    MmlStack.prototype.Pop = function () {\n        return this._nodes.pop();\n    };\n    Object.defineProperty(MmlStack.prototype, \"First\", {\n        get: function () {\n            return this._nodes[this.Size() - 1];\n        },\n        set: function (node) {\n            this._nodes[this.Size() - 1] = node;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlStack.prototype, \"Last\", {\n        get: function () {\n            return this._nodes[0];\n        },\n        set: function (node) {\n            this._nodes[0] = node;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MmlStack.prototype.Peek = function (n) {\n        if (n == null) {\n            n = 1;\n        }\n        return this._nodes.slice(this.Size() - n);\n    };\n    MmlStack.prototype.Size = function () {\n        return this._nodes.length;\n    };\n    MmlStack.prototype.Clear = function () {\n        this._nodes = [];\n    };\n    MmlStack.prototype.toMml = function (inferred, forceRow) {\n        if (inferred === void 0) { inferred = true; }\n        if (this._nodes.length === 1 && !forceRow) {\n            return this.First;\n        }\n        return this.create('node', inferred ? 'inferredMrow' : 'mrow', this._nodes, {});\n    };\n    MmlStack.prototype.create = function (kind) {\n        var _a;\n        var rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            rest[_i - 1] = arguments[_i];\n        }\n        return (_a = this.factory.configuration.nodeFactory).create.apply(_a, __spreadArray([kind], __read(rest), false));\n    };\n    return MmlStack;\n}());\nexports.MmlStack = MmlStack;\nvar BaseItem = (function (_super) {\n    __extends(BaseItem, _super);\n    function BaseItem(factory) {\n        var nodes = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            nodes[_i - 1] = arguments[_i];\n        }\n        var _this = _super.call(this, nodes) || this;\n        _this.factory = factory;\n        _this.global = {};\n        _this._properties = {};\n        if (_this.isOpen) {\n            _this._env = {};\n        }\n        return _this;\n    }\n    Object.defineProperty(BaseItem.prototype, \"kind\", {\n        get: function () {\n            return 'base';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseItem.prototype, \"env\", {\n        get: function () {\n            return this._env;\n        },\n        set: function (value) {\n            this._env = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseItem.prototype, \"copyEnv\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BaseItem.prototype.getProperty = function (key) {\n        return this._properties[key];\n    };\n    BaseItem.prototype.setProperty = function (key, value) {\n        this._properties[key] = value;\n        return this;\n    };\n    Object.defineProperty(BaseItem.prototype, \"isOpen\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseItem.prototype, \"isClose\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseItem.prototype, \"isFinal\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BaseItem.prototype.isKind = function (kind) {\n        return kind === this.kind;\n    };\n    BaseItem.prototype.checkItem = function (item) {\n        if (item.isKind('over') && this.isOpen) {\n            item.setProperty('num', this.toMml(false));\n            this.Clear();\n        }\n        if (item.isKind('cell') && this.isOpen) {\n            if (item.getProperty('linebreak')) {\n                return BaseItem.fail;\n            }\n            throw new TexError_js_1.default('Misplaced', 'Misplaced %1', item.getName());\n        }\n        if (item.isClose && this.getErrors(item.kind)) {\n            var _a = __read(this.getErrors(item.kind), 2), id = _a[0], message = _a[1];\n            throw new TexError_js_1.default(id, message, item.getName());\n        }\n        if (!item.isFinal) {\n            return BaseItem.success;\n        }\n        this.Push(item.First);\n        return BaseItem.fail;\n    };\n    BaseItem.prototype.clearEnv = function () {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Object.keys(this.env)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var id = _c.value;\n                delete this.env[id];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    BaseItem.prototype.setProperties = function (def) {\n        Object.assign(this._properties, def);\n        return this;\n    };\n    BaseItem.prototype.getName = function () {\n        return this.getProperty('name');\n    };\n    BaseItem.prototype.toString = function () {\n        return this.kind + '[' + this.nodes.join('; ') + ']';\n    };\n    BaseItem.prototype.getErrors = function (kind) {\n        var CLASS = this.constructor;\n        return (CLASS.errors || {})[kind] || BaseItem.errors[kind];\n    };\n    BaseItem.fail = [null, false];\n    BaseItem.success = [null, true];\n    BaseItem.errors = {\n        end: ['MissingBeginExtraEnd', 'Missing \\\\begin{%1} or extra \\\\end{%1}'],\n        close: ['ExtraCloseMissingOpen', 'Extra close brace or missing open brace'],\n        right: ['MissingLeftExtraRight', 'Missing \\\\left or extra \\\\right'],\n        middle: ['ExtraMiddle', 'Extra \\\\middle']\n    };\n    return BaseItem;\n}(MmlStack));\nexports.BaseItem = BaseItem;\n//# sourceMappingURL=StackItem.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9TdGFja0l0ZW0uanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ3ZGLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixNQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkVBQTZFLE9BQU87QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsR0FBRyxnQkFBZ0I7QUFDbkMsb0NBQW9DLG1CQUFPLENBQUMsMkVBQWU7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsdUJBQXVCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBLHNGQUFzRjtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix1QkFBdUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsdUJBQXVCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkVBQTJFLFVBQVU7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRDtBQUNwRDtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsSUFBSSxlQUFlLEdBQUc7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxnQkFBZ0I7QUFDaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvU3RhY2tJdGVtLmpzPzBkMDEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9fcmVhZCA9ICh0aGlzICYmIHRoaXMuX19yZWFkKSB8fCBmdW5jdGlvbiAobywgbikge1xuICAgIHZhciBtID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9bU3ltYm9sLml0ZXJhdG9yXTtcbiAgICBpZiAoIW0pIHJldHVybiBvO1xuICAgIHZhciBpID0gbS5jYWxsKG8pLCByLCBhciA9IFtdLCBlO1xuICAgIHRyeSB7XG4gICAgICAgIHdoaWxlICgobiA9PT0gdm9pZCAwIHx8IG4tLSA+IDApICYmICEociA9IGkubmV4dCgpKS5kb25lKSBhci5wdXNoKHIudmFsdWUpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHsgZSA9IHsgZXJyb3I6IGVycm9yIH07IH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChyICYmICFyLmRvbmUgJiYgKG0gPSBpW1wicmV0dXJuXCJdKSkgbS5jYWxsKGkpO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkgeyBpZiAoZSkgdGhyb3cgZS5lcnJvcjsgfVxuICAgIH1cbiAgICByZXR1cm4gYXI7XG59O1xudmFyIF9fc3ByZWFkQXJyYXkgPSAodGhpcyAmJiB0aGlzLl9fc3ByZWFkQXJyYXkpIHx8IGZ1bmN0aW9uICh0bywgZnJvbSwgcGFjaykge1xuICAgIGlmIChwYWNrIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIGZvciAodmFyIGkgPSAwLCBsID0gZnJvbS5sZW5ndGgsIGFyOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGlmIChhciB8fCAhKGkgaW4gZnJvbSkpIHtcbiAgICAgICAgICAgIGlmICghYXIpIGFyID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSwgMCwgaSk7XG4gICAgICAgICAgICBhcltpXSA9IGZyb21baV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRvLmNvbmNhdChhciB8fCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tKSk7XG59O1xudmFyIF9fdmFsdWVzID0gKHRoaXMgJiYgdGhpcy5fX3ZhbHVlcykgfHwgZnVuY3Rpb24obykge1xuICAgIHZhciBzID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIFN5bWJvbC5pdGVyYXRvciwgbSA9IHMgJiYgb1tzXSwgaSA9IDA7XG4gICAgaWYgKG0pIHJldHVybiBtLmNhbGwobyk7XG4gICAgaWYgKG8gJiYgdHlwZW9mIG8ubGVuZ3RoID09PSBcIm51bWJlclwiKSByZXR1cm4ge1xuICAgICAgICBuZXh0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAobyAmJiBpID49IG8ubGVuZ3RoKSBvID0gdm9pZCAwO1xuICAgICAgICAgICAgcmV0dXJuIHsgdmFsdWU6IG8gJiYgb1tpKytdLCBkb25lOiAhbyB9O1xuICAgICAgICB9XG4gICAgfTtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHMgPyBcIk9iamVjdCBpcyBub3QgaXRlcmFibGUuXCIgOiBcIlN5bWJvbC5pdGVyYXRvciBpcyBub3QgZGVmaW5lZC5cIik7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CYXNlSXRlbSA9IGV4cG9ydHMuTW1sU3RhY2sgPSB2b2lkIDA7XG52YXIgVGV4RXJyb3JfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9UZXhFcnJvci5qc1wiKSk7XG52YXIgTW1sU3RhY2sgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE1tbFN0YWNrKF9ub2Rlcykge1xuICAgICAgICB0aGlzLl9ub2RlcyA9IF9ub2RlcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE1tbFN0YWNrLnByb3RvdHlwZSwgXCJub2Rlc1wiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX25vZGVzO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgTW1sU3RhY2sucHJvdG90eXBlLlB1c2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgdmFyIG5vZGVzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBub2Rlc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICB9XG4gICAgICAgIChfYSA9IHRoaXMuX25vZGVzKS5wdXNoLmFwcGx5KF9hLCBfX3NwcmVhZEFycmF5KFtdLCBfX3JlYWQobm9kZXMpLCBmYWxzZSkpO1xuICAgIH07XG4gICAgTW1sU3RhY2sucHJvdG90eXBlLlBvcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX25vZGVzLnBvcCgpO1xuICAgIH07XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE1tbFN0YWNrLnByb3RvdHlwZSwgXCJGaXJzdFwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX25vZGVzW3RoaXMuU2l6ZSgpIC0gMV07XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgIHRoaXMuX25vZGVzW3RoaXMuU2l6ZSgpIC0gMV0gPSBub2RlO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE1tbFN0YWNrLnByb3RvdHlwZSwgXCJMYXN0XCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fbm9kZXNbMF07XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgIHRoaXMuX25vZGVzWzBdID0gbm9kZTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE1tbFN0YWNrLnByb3RvdHlwZS5QZWVrID0gZnVuY3Rpb24gKG4pIHtcbiAgICAgICAgaWYgKG4gPT0gbnVsbCkge1xuICAgICAgICAgICAgbiA9IDE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX25vZGVzLnNsaWNlKHRoaXMuU2l6ZSgpIC0gbik7XG4gICAgfTtcbiAgICBNbWxTdGFjay5wcm90b3R5cGUuU2l6ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX25vZGVzLmxlbmd0aDtcbiAgICB9O1xuICAgIE1tbFN0YWNrLnByb3RvdHlwZS5DbGVhciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5fbm9kZXMgPSBbXTtcbiAgICB9O1xuICAgIE1tbFN0YWNrLnByb3RvdHlwZS50b01tbCA9IGZ1bmN0aW9uIChpbmZlcnJlZCwgZm9yY2VSb3cpIHtcbiAgICAgICAgaWYgKGluZmVycmVkID09PSB2b2lkIDApIHsgaW5mZXJyZWQgPSB0cnVlOyB9XG4gICAgICAgIGlmICh0aGlzLl9ub2Rlcy5sZW5ndGggPT09IDEgJiYgIWZvcmNlUm93KSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5GaXJzdDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGUoJ25vZGUnLCBpbmZlcnJlZCA/ICdpbmZlcnJlZE1yb3cnIDogJ21yb3cnLCB0aGlzLl9ub2Rlcywge30pO1xuICAgIH07XG4gICAgTW1sU3RhY2sucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uIChraW5kKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgdmFyIHJlc3QgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAxOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIHJlc3RbX2kgLSAxXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChfYSA9IHRoaXMuZmFjdG9yeS5jb25maWd1cmF0aW9uLm5vZGVGYWN0b3J5KS5jcmVhdGUuYXBwbHkoX2EsIF9fc3ByZWFkQXJyYXkoW2tpbmRdLCBfX3JlYWQocmVzdCksIGZhbHNlKSk7XG4gICAgfTtcbiAgICByZXR1cm4gTW1sU3RhY2s7XG59KCkpO1xuZXhwb3J0cy5NbWxTdGFjayA9IE1tbFN0YWNrO1xudmFyIEJhc2VJdGVtID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoQmFzZUl0ZW0sIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQmFzZUl0ZW0oZmFjdG9yeSkge1xuICAgICAgICB2YXIgbm9kZXMgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAxOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIG5vZGVzW19pIC0gMV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICB9XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIG5vZGVzKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5mYWN0b3J5ID0gZmFjdG9yeTtcbiAgICAgICAgX3RoaXMuZ2xvYmFsID0ge307XG4gICAgICAgIF90aGlzLl9wcm9wZXJ0aWVzID0ge307XG4gICAgICAgIGlmIChfdGhpcy5pc09wZW4pIHtcbiAgICAgICAgICAgIF90aGlzLl9lbnYgPSB7fTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShCYXNlSXRlbS5wcm90b3R5cGUsIFwia2luZFwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuICdiYXNlJztcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShCYXNlSXRlbS5wcm90b3R5cGUsIFwiZW52XCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fZW52O1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgdGhpcy5fZW52ID0gdmFsdWU7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQmFzZUl0ZW0ucHJvdG90eXBlLCBcImNvcHlFbnZcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgQmFzZUl0ZW0ucHJvdG90eXBlLmdldFByb3BlcnR5ID0gZnVuY3Rpb24gKGtleSkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcHJvcGVydGllc1trZXldO1xuICAgIH07XG4gICAgQmFzZUl0ZW0ucHJvdG90eXBlLnNldFByb3BlcnR5ID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgICAgICAgdGhpcy5fcHJvcGVydGllc1trZXldID0gdmFsdWU7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEJhc2VJdGVtLnByb3RvdHlwZSwgXCJpc09wZW5cIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShCYXNlSXRlbS5wcm90b3R5cGUsIFwiaXNDbG9zZVwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEJhc2VJdGVtLnByb3RvdHlwZSwgXCJpc0ZpbmFsXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBCYXNlSXRlbS5wcm90b3R5cGUuaXNLaW5kID0gZnVuY3Rpb24gKGtpbmQpIHtcbiAgICAgICAgcmV0dXJuIGtpbmQgPT09IHRoaXMua2luZDtcbiAgICB9O1xuICAgIEJhc2VJdGVtLnByb3RvdHlwZS5jaGVja0l0ZW0gPSBmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICBpZiAoaXRlbS5pc0tpbmQoJ292ZXInKSAmJiB0aGlzLmlzT3Blbikge1xuICAgICAgICAgICAgaXRlbS5zZXRQcm9wZXJ0eSgnbnVtJywgdGhpcy50b01tbChmYWxzZSkpO1xuICAgICAgICAgICAgdGhpcy5DbGVhcigpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpdGVtLmlzS2luZCgnY2VsbCcpICYmIHRoaXMuaXNPcGVuKSB7XG4gICAgICAgICAgICBpZiAoaXRlbS5nZXRQcm9wZXJ0eSgnbGluZWJyZWFrJykpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gQmFzZUl0ZW0uZmFpbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IG5ldyBUZXhFcnJvcl9qc18xLmRlZmF1bHQoJ01pc3BsYWNlZCcsICdNaXNwbGFjZWQgJTEnLCBpdGVtLmdldE5hbWUoKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGl0ZW0uaXNDbG9zZSAmJiB0aGlzLmdldEVycm9ycyhpdGVtLmtpbmQpKSB7XG4gICAgICAgICAgICB2YXIgX2EgPSBfX3JlYWQodGhpcy5nZXRFcnJvcnMoaXRlbS5raW5kKSwgMiksIGlkID0gX2FbMF0sIG1lc3NhZ2UgPSBfYVsxXTtcbiAgICAgICAgICAgIHRocm93IG5ldyBUZXhFcnJvcl9qc18xLmRlZmF1bHQoaWQsIG1lc3NhZ2UsIGl0ZW0uZ2V0TmFtZSgpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWl0ZW0uaXNGaW5hbCkge1xuICAgICAgICAgICAgcmV0dXJuIEJhc2VJdGVtLnN1Y2Nlc3M7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5QdXNoKGl0ZW0uRmlyc3QpO1xuICAgICAgICByZXR1cm4gQmFzZUl0ZW0uZmFpbDtcbiAgICB9O1xuICAgIEJhc2VJdGVtLnByb3RvdHlwZS5jbGVhckVudiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGVfMSwgX2E7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBmb3IgKHZhciBfYiA9IF9fdmFsdWVzKE9iamVjdC5rZXlzKHRoaXMuZW52KSksIF9jID0gX2IubmV4dCgpOyAhX2MuZG9uZTsgX2MgPSBfYi5uZXh0KCkpIHtcbiAgICAgICAgICAgICAgICB2YXIgaWQgPSBfYy52YWx1ZTtcbiAgICAgICAgICAgICAgICBkZWxldGUgdGhpcy5lbnZbaWRdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlXzFfMSkgeyBlXzEgPSB7IGVycm9yOiBlXzFfMSB9OyB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiAoX2MgJiYgIV9jLmRvbmUgJiYgKF9hID0gX2IucmV0dXJuKSkgX2EuY2FsbChfYik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmaW5hbGx5IHsgaWYgKGVfMSkgdGhyb3cgZV8xLmVycm9yOyB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIEJhc2VJdGVtLnByb3RvdHlwZS5zZXRQcm9wZXJ0aWVzID0gZnVuY3Rpb24gKGRlZikge1xuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMuX3Byb3BlcnRpZXMsIGRlZik7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG4gICAgQmFzZUl0ZW0ucHJvdG90eXBlLmdldE5hbWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFByb3BlcnR5KCduYW1lJyk7XG4gICAgfTtcbiAgICBCYXNlSXRlbS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmtpbmQgKyAnWycgKyB0aGlzLm5vZGVzLmpvaW4oJzsgJykgKyAnXSc7XG4gICAgfTtcbiAgICBCYXNlSXRlbS5wcm90b3R5cGUuZ2V0RXJyb3JzID0gZnVuY3Rpb24gKGtpbmQpIHtcbiAgICAgICAgdmFyIENMQVNTID0gdGhpcy5jb25zdHJ1Y3RvcjtcbiAgICAgICAgcmV0dXJuIChDTEFTUy5lcnJvcnMgfHwge30pW2tpbmRdIHx8IEJhc2VJdGVtLmVycm9yc1traW5kXTtcbiAgICB9O1xuICAgIEJhc2VJdGVtLmZhaWwgPSBbbnVsbCwgZmFsc2VdO1xuICAgIEJhc2VJdGVtLnN1Y2Nlc3MgPSBbbnVsbCwgdHJ1ZV07XG4gICAgQmFzZUl0ZW0uZXJyb3JzID0ge1xuICAgICAgICBlbmQ6IFsnTWlzc2luZ0JlZ2luRXh0cmFFbmQnLCAnTWlzc2luZyBcXFxcYmVnaW57JTF9IG9yIGV4dHJhIFxcXFxlbmR7JTF9J10sXG4gICAgICAgIGNsb3NlOiBbJ0V4dHJhQ2xvc2VNaXNzaW5nT3BlbicsICdFeHRyYSBjbG9zZSBicmFjZSBvciBtaXNzaW5nIG9wZW4gYnJhY2UnXSxcbiAgICAgICAgcmlnaHQ6IFsnTWlzc2luZ0xlZnRFeHRyYVJpZ2h0JywgJ01pc3NpbmcgXFxcXGxlZnQgb3IgZXh0cmEgXFxcXHJpZ2h0J10sXG4gICAgICAgIG1pZGRsZTogWydFeHRyYU1pZGRsZScsICdFeHRyYSBcXFxcbWlkZGxlJ11cbiAgICB9O1xuICAgIHJldHVybiBCYXNlSXRlbTtcbn0oTW1sU3RhY2spKTtcbmV4cG9ydHMuQmFzZUl0ZW0gPSBCYXNlSXRlbTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN0YWNrSXRlbS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/StackItem.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/StackItemFactory.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/StackItemFactory.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar StackItem_js_1 = __webpack_require__(/*! ./StackItem.js */ \"./node_modules/mathjax-full/js/input/tex/StackItem.js\");\nvar Factory_js_1 = __webpack_require__(/*! ../../core/Tree/Factory.js */ \"./node_modules/mathjax-full/js/core/Tree/Factory.js\");\nvar DummyItem = (function (_super) {\n    __extends(DummyItem, _super);\n    function DummyItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return DummyItem;\n}(StackItem_js_1.BaseItem));\nvar StackItemFactory = (function (_super) {\n    __extends(StackItemFactory, _super);\n    function StackItemFactory() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.defaultKind = 'dummy';\n        _this.configuration = null;\n        return _this;\n    }\n    StackItemFactory.DefaultStackItems = (_a = {},\n        _a[DummyItem.prototype.kind] = DummyItem,\n        _a);\n    return StackItemFactory;\n}(Factory_js_1.AbstractFactory));\nexports[\"default\"] = StackItemFactory;\n//# sourceMappingURL=StackItemFactory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9TdGFja0l0ZW1GYWN0b3J5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnQkFBZ0Isc0NBQXNDLGtCQUFrQjtBQUN2Riw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLG1CQUFPLENBQUMsNkVBQWdCO0FBQzdDLG1CQUFtQixtQkFBTyxDQUFDLHVGQUE0QjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9TdGFja0l0ZW1GYWN0b3J5LmpzP2I1OWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9hO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIFN0YWNrSXRlbV9qc18xID0gcmVxdWlyZShcIi4vU3RhY2tJdGVtLmpzXCIpO1xudmFyIEZhY3RvcnlfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi9jb3JlL1RyZWUvRmFjdG9yeS5qc1wiKTtcbnZhciBEdW1teUl0ZW0gPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhEdW1teUl0ZW0sIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gRHVtbXlJdGVtKCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIHJldHVybiBEdW1teUl0ZW07XG59KFN0YWNrSXRlbV9qc18xLkJhc2VJdGVtKSk7XG52YXIgU3RhY2tJdGVtRmFjdG9yeSA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFN0YWNrSXRlbUZhY3RvcnksIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gU3RhY2tJdGVtRmFjdG9yeSgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLmRlZmF1bHRLaW5kID0gJ2R1bW15JztcbiAgICAgICAgX3RoaXMuY29uZmlndXJhdGlvbiA9IG51bGw7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgU3RhY2tJdGVtRmFjdG9yeS5EZWZhdWx0U3RhY2tJdGVtcyA9IChfYSA9IHt9LFxuICAgICAgICBfYVtEdW1teUl0ZW0ucHJvdG90eXBlLmtpbmRdID0gRHVtbXlJdGVtLFxuICAgICAgICBfYSk7XG4gICAgcmV0dXJuIFN0YWNrSXRlbUZhY3Rvcnk7XG59KEZhY3RvcnlfanNfMS5BYnN0cmFjdEZhY3RvcnkpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IFN0YWNrSXRlbUZhY3Rvcnk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdGFja0l0ZW1GYWN0b3J5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/StackItemFactory.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/Symbol.js":
/*!**********************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/Symbol.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Macro = exports.Symbol = void 0;\nvar Symbol = (function () {\n    function Symbol(_symbol, _char, _attributes) {\n        this._symbol = _symbol;\n        this._char = _char;\n        this._attributes = _attributes;\n    }\n    Object.defineProperty(Symbol.prototype, \"symbol\", {\n        get: function () {\n            return this._symbol;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Symbol.prototype, \"char\", {\n        get: function () {\n            return this._char;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Symbol.prototype, \"attributes\", {\n        get: function () {\n            return this._attributes;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Symbol;\n}());\nexports.Symbol = Symbol;\nvar Macro = (function () {\n    function Macro(_symbol, _func, _args) {\n        if (_args === void 0) { _args = []; }\n        this._symbol = _symbol;\n        this._func = _func;\n        this._args = _args;\n    }\n    Object.defineProperty(Macro.prototype, \"symbol\", {\n        get: function () {\n            return this._symbol;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Macro.prototype, \"func\", {\n        get: function () {\n            return this._func;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Macro.prototype, \"args\", {\n        get: function () {\n            return this._args;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Macro;\n}());\nexports.Macro = Macro;\n//# sourceMappingURL=Symbol.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9TeW1ib2wuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxHQUFHLGNBQWM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDO0FBQ0QsY0FBYztBQUNkO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7QUFDRCxhQUFhO0FBQ2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvU3ltYm9sLmpzP2NhYjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1hY3JvID0gZXhwb3J0cy5TeW1ib2wgPSB2b2lkIDA7XG52YXIgU3ltYm9sID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTeW1ib2woX3N5bWJvbCwgX2NoYXIsIF9hdHRyaWJ1dGVzKSB7XG4gICAgICAgIHRoaXMuX3N5bWJvbCA9IF9zeW1ib2w7XG4gICAgICAgIHRoaXMuX2NoYXIgPSBfY2hhcjtcbiAgICAgICAgdGhpcy5fYXR0cmlidXRlcyA9IF9hdHRyaWJ1dGVzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU3ltYm9sLnByb3RvdHlwZSwgXCJzeW1ib2xcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9zeW1ib2w7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU3ltYm9sLnByb3RvdHlwZSwgXCJjaGFyXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fY2hhcjtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTeW1ib2wucHJvdG90eXBlLCBcImF0dHJpYnV0ZXNcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9hdHRyaWJ1dGVzO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIFN5bWJvbDtcbn0oKSk7XG5leHBvcnRzLlN5bWJvbCA9IFN5bWJvbDtcbnZhciBNYWNybyA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTWFjcm8oX3N5bWJvbCwgX2Z1bmMsIF9hcmdzKSB7XG4gICAgICAgIGlmIChfYXJncyA9PT0gdm9pZCAwKSB7IF9hcmdzID0gW107IH1cbiAgICAgICAgdGhpcy5fc3ltYm9sID0gX3N5bWJvbDtcbiAgICAgICAgdGhpcy5fZnVuYyA9IF9mdW5jO1xuICAgICAgICB0aGlzLl9hcmdzID0gX2FyZ3M7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShNYWNyby5wcm90b3R5cGUsIFwic3ltYm9sXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fc3ltYm9sO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE1hY3JvLnByb3RvdHlwZSwgXCJmdW5jXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fZnVuYztcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShNYWNyby5wcm90b3R5cGUsIFwiYXJnc1wiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2FyZ3M7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gTWFjcm87XG59KCkpO1xuZXhwb3J0cy5NYWNybyA9IE1hY3JvO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3ltYm9sLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/Symbol.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/SymbolMap.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/SymbolMap.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EnvironmentMap = exports.CommandMap = exports.MacroMap = exports.DelimiterMap = exports.CharacterMap = exports.AbstractParseMap = exports.RegExpMap = exports.AbstractSymbolMap = exports.parseResult = void 0;\nvar Symbol_js_1 = __webpack_require__(/*! ./Symbol.js */ \"./node_modules/mathjax-full/js/input/tex/Symbol.js\");\nvar MapHandler_js_1 = __webpack_require__(/*! ./MapHandler.js */ \"./node_modules/mathjax-full/js/input/tex/MapHandler.js\");\nfunction parseResult(result) {\n    return result === void 0 ? true : result;\n}\nexports.parseResult = parseResult;\nvar AbstractSymbolMap = (function () {\n    function AbstractSymbolMap(_name, _parser) {\n        this._name = _name;\n        this._parser = _parser;\n        MapHandler_js_1.MapHandler.register(this);\n    }\n    Object.defineProperty(AbstractSymbolMap.prototype, \"name\", {\n        get: function () {\n            return this._name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractSymbolMap.prototype.parserFor = function (symbol) {\n        return this.contains(symbol) ? this.parser : null;\n    };\n    AbstractSymbolMap.prototype.parse = function (_a) {\n        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];\n        var parser = this.parserFor(symbol);\n        var mapped = this.lookup(symbol);\n        return (parser && mapped) ? parseResult(parser(env, mapped)) : null;\n    };\n    Object.defineProperty(AbstractSymbolMap.prototype, \"parser\", {\n        get: function () {\n            return this._parser;\n        },\n        set: function (parser) {\n            this._parser = parser;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return AbstractSymbolMap;\n}());\nexports.AbstractSymbolMap = AbstractSymbolMap;\nvar RegExpMap = (function (_super) {\n    __extends(RegExpMap, _super);\n    function RegExpMap(name, parser, _regExp) {\n        var _this = _super.call(this, name, parser) || this;\n        _this._regExp = _regExp;\n        return _this;\n    }\n    RegExpMap.prototype.contains = function (symbol) {\n        return this._regExp.test(symbol);\n    };\n    RegExpMap.prototype.lookup = function (symbol) {\n        return this.contains(symbol) ? symbol : null;\n    };\n    return RegExpMap;\n}(AbstractSymbolMap));\nexports.RegExpMap = RegExpMap;\nvar AbstractParseMap = (function (_super) {\n    __extends(AbstractParseMap, _super);\n    function AbstractParseMap() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.map = new Map();\n        return _this;\n    }\n    AbstractParseMap.prototype.lookup = function (symbol) {\n        return this.map.get(symbol);\n    };\n    AbstractParseMap.prototype.contains = function (symbol) {\n        return this.map.has(symbol);\n    };\n    AbstractParseMap.prototype.add = function (symbol, object) {\n        this.map.set(symbol, object);\n    };\n    AbstractParseMap.prototype.remove = function (symbol) {\n        this.map.delete(symbol);\n    };\n    return AbstractParseMap;\n}(AbstractSymbolMap));\nexports.AbstractParseMap = AbstractParseMap;\nvar CharacterMap = (function (_super) {\n    __extends(CharacterMap, _super);\n    function CharacterMap(name, parser, json) {\n        var e_1, _a;\n        var _this = _super.call(this, name, parser) || this;\n        try {\n            for (var _b = __values(Object.keys(json)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                var value = json[key];\n                var _d = __read((typeof (value) === 'string') ? [value, null] : value, 2), char = _d[0], attrs = _d[1];\n                var character = new Symbol_js_1.Symbol(key, char, attrs);\n                _this.add(key, character);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return _this;\n    }\n    return CharacterMap;\n}(AbstractParseMap));\nexports.CharacterMap = CharacterMap;\nvar DelimiterMap = (function (_super) {\n    __extends(DelimiterMap, _super);\n    function DelimiterMap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DelimiterMap.prototype.parse = function (_a) {\n        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];\n        return _super.prototype.parse.call(this, [env, '\\\\' + symbol]);\n    };\n    return DelimiterMap;\n}(CharacterMap));\nexports.DelimiterMap = DelimiterMap;\nvar MacroMap = (function (_super) {\n    __extends(MacroMap, _super);\n    function MacroMap(name, json, functionMap) {\n        var e_2, _a;\n        var _this = _super.call(this, name, null) || this;\n        try {\n            for (var _b = __values(Object.keys(json)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                var value = json[key];\n                var _d = __read((typeof (value) === 'string') ? [value] : value), func = _d[0], attrs = _d.slice(1);\n                var character = new Symbol_js_1.Macro(key, functionMap[func], attrs);\n                _this.add(key, character);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return _this;\n    }\n    MacroMap.prototype.parserFor = function (symbol) {\n        var macro = this.lookup(symbol);\n        return macro ? macro.func : null;\n    };\n    MacroMap.prototype.parse = function (_a) {\n        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];\n        var macro = this.lookup(symbol);\n        var parser = this.parserFor(symbol);\n        if (!macro || !parser) {\n            return null;\n        }\n        return parseResult(parser.apply(void 0, __spreadArray([env, macro.symbol], __read(macro.args), false)));\n    };\n    return MacroMap;\n}(AbstractParseMap));\nexports.MacroMap = MacroMap;\nvar CommandMap = (function (_super) {\n    __extends(CommandMap, _super);\n    function CommandMap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CommandMap.prototype.parse = function (_a) {\n        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];\n        var macro = this.lookup(symbol);\n        var parser = this.parserFor(symbol);\n        if (!macro || !parser) {\n            return null;\n        }\n        var saveCommand = env.currentCS;\n        env.currentCS = '\\\\' + symbol;\n        var result = parser.apply(void 0, __spreadArray([env, '\\\\' + macro.symbol], __read(macro.args), false));\n        env.currentCS = saveCommand;\n        return parseResult(result);\n    };\n    return CommandMap;\n}(MacroMap));\nexports.CommandMap = CommandMap;\nvar EnvironmentMap = (function (_super) {\n    __extends(EnvironmentMap, _super);\n    function EnvironmentMap(name, parser, json, functionMap) {\n        var _this = _super.call(this, name, json, functionMap) || this;\n        _this.parser = parser;\n        return _this;\n    }\n    EnvironmentMap.prototype.parse = function (_a) {\n        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];\n        var macro = this.lookup(symbol);\n        var envParser = this.parserFor(symbol);\n        if (!macro || !envParser) {\n            return null;\n        }\n        return parseResult(this.parser(env, macro.symbol, envParser, macro.args));\n    };\n    return EnvironmentMap;\n}(MacroMap));\nexports.EnvironmentMap = EnvironmentMap;\n//# sourceMappingURL=SymbolMap.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/SymbolMap.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/Tags.js":
/*!********************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/Tags.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TagsFactory = exports.AllTags = exports.NoTags = exports.AbstractTags = exports.TagInfo = exports.Label = void 0;\nvar TexParser_js_1 = __importDefault(__webpack_require__(/*! ./TexParser.js */ \"./node_modules/mathjax-full/js/input/tex/TexParser.js\"));\nvar Label = (function () {\n    function Label(tag, id) {\n        if (tag === void 0) { tag = '???'; }\n        if (id === void 0) { id = ''; }\n        this.tag = tag;\n        this.id = id;\n    }\n    return Label;\n}());\nexports.Label = Label;\nvar TagInfo = (function () {\n    function TagInfo(env, taggable, defaultTags, tag, tagId, tagFormat, noTag, labelId) {\n        if (env === void 0) { env = ''; }\n        if (taggable === void 0) { taggable = false; }\n        if (defaultTags === void 0) { defaultTags = false; }\n        if (tag === void 0) { tag = null; }\n        if (tagId === void 0) { tagId = ''; }\n        if (tagFormat === void 0) { tagFormat = ''; }\n        if (noTag === void 0) { noTag = false; }\n        if (labelId === void 0) { labelId = ''; }\n        this.env = env;\n        this.taggable = taggable;\n        this.defaultTags = defaultTags;\n        this.tag = tag;\n        this.tagId = tagId;\n        this.tagFormat = tagFormat;\n        this.noTag = noTag;\n        this.labelId = labelId;\n    }\n    return TagInfo;\n}());\nexports.TagInfo = TagInfo;\nvar AbstractTags = (function () {\n    function AbstractTags() {\n        this.counter = 0;\n        this.allCounter = 0;\n        this.configuration = null;\n        this.ids = {};\n        this.allIds = {};\n        this.labels = {};\n        this.allLabels = {};\n        this.redo = false;\n        this.refUpdate = false;\n        this.currentTag = new TagInfo();\n        this.history = [];\n        this.stack = [];\n        this.enTag = function (node, tag) {\n            var nf = this.configuration.nodeFactory;\n            var cell = nf.create('node', 'mtd', [node]);\n            var row = nf.create('node', 'mlabeledtr', [tag, cell]);\n            var table = nf.create('node', 'mtable', [row], {\n                side: this.configuration.options['tagSide'],\n                minlabelspacing: this.configuration.options['tagIndent'],\n                displaystyle: true\n            });\n            return table;\n        };\n    }\n    AbstractTags.prototype.start = function (env, taggable, defaultTags) {\n        if (this.currentTag) {\n            this.stack.push(this.currentTag);\n        }\n        this.currentTag = new TagInfo(env, taggable, defaultTags);\n    };\n    Object.defineProperty(AbstractTags.prototype, \"env\", {\n        get: function () {\n            return this.currentTag.env;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractTags.prototype.end = function () {\n        this.history.push(this.currentTag);\n        this.currentTag = this.stack.pop();\n    };\n    AbstractTags.prototype.tag = function (tag, noFormat) {\n        this.currentTag.tag = tag;\n        this.currentTag.tagFormat = noFormat ? tag : this.formatTag(tag);\n        this.currentTag.noTag = false;\n    };\n    AbstractTags.prototype.notag = function () {\n        this.tag('', true);\n        this.currentTag.noTag = true;\n    };\n    Object.defineProperty(AbstractTags.prototype, \"noTag\", {\n        get: function () {\n            return this.currentTag.noTag;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTags.prototype, \"label\", {\n        get: function () {\n            return this.currentTag.labelId;\n        },\n        set: function (label) {\n            this.currentTag.labelId = label;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractTags.prototype.formatUrl = function (id, base) {\n        return base + '#' + encodeURIComponent(id);\n    };\n    AbstractTags.prototype.formatTag = function (tag) {\n        return '(' + tag + ')';\n    };\n    AbstractTags.prototype.formatId = function (id) {\n        return 'mjx-eqn:' + id.replace(/\\s/g, '_');\n    };\n    AbstractTags.prototype.formatNumber = function (n) {\n        return n.toString();\n    };\n    AbstractTags.prototype.autoTag = function () {\n        if (this.currentTag.tag == null) {\n            this.counter++;\n            this.tag(this.formatNumber(this.counter), false);\n        }\n    };\n    AbstractTags.prototype.clearTag = function () {\n        this.label = '';\n        this.tag(null, true);\n        this.currentTag.tagId = '';\n    };\n    AbstractTags.prototype.getTag = function (force) {\n        if (force === void 0) { force = false; }\n        if (force) {\n            this.autoTag();\n            return this.makeTag();\n        }\n        var ct = this.currentTag;\n        if (ct.taggable && !ct.noTag) {\n            if (ct.defaultTags) {\n                this.autoTag();\n            }\n            if (ct.tag) {\n                return this.makeTag();\n            }\n        }\n        return null;\n    };\n    AbstractTags.prototype.resetTag = function () {\n        this.history = [];\n        this.redo = false;\n        this.refUpdate = false;\n        this.clearTag();\n    };\n    AbstractTags.prototype.reset = function (offset) {\n        if (offset === void 0) { offset = 0; }\n        this.resetTag();\n        this.counter = this.allCounter = offset;\n        this.allLabels = {};\n        this.allIds = {};\n    };\n    AbstractTags.prototype.startEquation = function (math) {\n        this.history = [];\n        this.stack = [];\n        this.clearTag();\n        this.currentTag = new TagInfo('', undefined, undefined);\n        this.labels = {};\n        this.ids = {};\n        this.counter = this.allCounter;\n        this.redo = false;\n        var recompile = math.inputData.recompile;\n        if (recompile) {\n            this.refUpdate = true;\n            this.counter = recompile.counter;\n        }\n    };\n    AbstractTags.prototype.finishEquation = function (math) {\n        if (this.redo) {\n            math.inputData.recompile = {\n                state: math.state(),\n                counter: this.allCounter\n            };\n        }\n        if (!this.refUpdate) {\n            this.allCounter = this.counter;\n        }\n        Object.assign(this.allIds, this.ids);\n        Object.assign(this.allLabels, this.labels);\n    };\n    AbstractTags.prototype.finalize = function (node, env) {\n        if (!env.display || this.currentTag.env ||\n            this.currentTag.tag == null) {\n            return node;\n        }\n        var tag = this.makeTag();\n        var table = this.enTag(node, tag);\n        return table;\n    };\n    AbstractTags.prototype.makeId = function () {\n        this.currentTag.tagId = this.formatId(this.configuration.options['useLabelIds'] ?\n            (this.label || this.currentTag.tag) : this.currentTag.tag);\n    };\n    AbstractTags.prototype.makeTag = function () {\n        this.makeId();\n        if (this.label) {\n            this.labels[this.label] = new Label(this.currentTag.tag, this.currentTag.tagId);\n        }\n        var mml = new TexParser_js_1.default('\\\\text{' + this.currentTag.tagFormat + '}', {}, this.configuration).mml();\n        return this.configuration.nodeFactory.create('node', 'mtd', [mml], { id: this.currentTag.tagId });\n    };\n    return AbstractTags;\n}());\nexports.AbstractTags = AbstractTags;\nvar NoTags = (function (_super) {\n    __extends(NoTags, _super);\n    function NoTags() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoTags.prototype.autoTag = function () { };\n    NoTags.prototype.getTag = function () {\n        return !this.currentTag.tag ? null : _super.prototype.getTag.call(this);\n    };\n    return NoTags;\n}(AbstractTags));\nexports.NoTags = NoTags;\nvar AllTags = (function (_super) {\n    __extends(AllTags, _super);\n    function AllTags() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AllTags.prototype.finalize = function (node, env) {\n        if (!env.display || this.history.find(function (x) { return x.taggable; })) {\n            return node;\n        }\n        var tag = this.getTag(true);\n        return this.enTag(node, tag);\n    };\n    return AllTags;\n}(AbstractTags));\nexports.AllTags = AllTags;\nvar TagsFactory;\n(function (TagsFactory) {\n    var tagsMapping = new Map([\n        ['none', NoTags],\n        ['all', AllTags]\n    ]);\n    var defaultTags = 'none';\n    TagsFactory.OPTIONS = {\n        tags: defaultTags,\n        tagSide: 'right',\n        tagIndent: '0.8em',\n        useLabelIds: true,\n        ignoreDuplicateLabels: false\n    };\n    TagsFactory.add = function (name, constr) {\n        tagsMapping.set(name, constr);\n    };\n    TagsFactory.addTags = function (tags) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Object.keys(tags)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                TagsFactory.add(key, tags[key]);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    TagsFactory.create = function (name) {\n        var constr = tagsMapping.get(name) || tagsMapping.get(defaultTags);\n        if (!constr) {\n            throw Error('Unknown tags class');\n        }\n        return new constr();\n    };\n    TagsFactory.setDefault = function (name) {\n        defaultTags = name;\n    };\n    TagsFactory.getDefault = function () {\n        return TagsFactory.create(defaultTags);\n    };\n})(TagsFactory = exports.TagsFactory || (exports.TagsFactory = {}));\n//# sourceMappingURL=Tags.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/Tags.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/TexConstants.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/TexConstants.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TexConstant = void 0;\nvar TexConstant;\n(function (TexConstant) {\n    TexConstant.Variant = {\n        NORMAL: 'normal',\n        BOLD: 'bold',\n        ITALIC: 'italic',\n        BOLDITALIC: 'bold-italic',\n        DOUBLESTRUCK: 'double-struck',\n        FRAKTUR: 'fraktur',\n        BOLDFRAKTUR: 'bold-fraktur',\n        SCRIPT: 'script',\n        BOLDSCRIPT: 'bold-script',\n        SANSSERIF: 'sans-serif',\n        BOLDSANSSERIF: 'bold-sans-serif',\n        SANSSERIFITALIC: 'sans-serif-italic',\n        SANSSERIFBOLDITALIC: 'sans-serif-bold-italic',\n        MONOSPACE: 'monospace',\n        INITIAL: 'inital',\n        TAILED: 'tailed',\n        LOOPED: 'looped',\n        STRETCHED: 'stretched',\n        CALLIGRAPHIC: '-tex-calligraphic',\n        BOLDCALLIGRAPHIC: '-tex-bold-calligraphic',\n        OLDSTYLE: '-tex-oldstyle',\n        BOLDOLDSTYLE: '-tex-bold-oldstyle',\n        MATHITALIC: '-tex-mathit'\n    };\n    TexConstant.Form = {\n        PREFIX: 'prefix',\n        INFIX: 'infix',\n        POSTFIX: 'postfix'\n    };\n    TexConstant.LineBreak = {\n        AUTO: 'auto',\n        NEWLINE: 'newline',\n        NOBREAK: 'nobreak',\n        GOODBREAK: 'goodbreak',\n        BADBREAK: 'badbreak'\n    };\n    TexConstant.LineBreakStyle = {\n        BEFORE: 'before',\n        AFTER: 'after',\n        DUPLICATE: 'duplicate',\n        INFIXLINBREAKSTYLE: 'infixlinebreakstyle'\n    };\n    TexConstant.IndentAlign = {\n        LEFT: 'left',\n        CENTER: 'center',\n        RIGHT: 'right',\n        AUTO: 'auto',\n        ID: 'id',\n        INDENTALIGN: 'indentalign'\n    };\n    TexConstant.IndentShift = {\n        INDENTSHIFT: 'indentshift'\n    };\n    TexConstant.LineThickness = {\n        THIN: 'thin',\n        MEDIUM: 'medium',\n        THICK: 'thick'\n    };\n    TexConstant.Notation = {\n        LONGDIV: 'longdiv',\n        ACTUARIAL: 'actuarial',\n        PHASORANGLE: 'phasorangle',\n        RADICAL: 'radical',\n        BOX: 'box',\n        ROUNDEDBOX: 'roundedbox',\n        CIRCLE: 'circle',\n        LEFT: 'left',\n        RIGHT: 'right',\n        TOP: 'top',\n        BOTTOM: 'bottom',\n        UPDIAGONALSTRIKE: 'updiagonalstrike',\n        DOWNDIAGONALSTRIKE: 'downdiagonalstrike',\n        VERTICALSTRIKE: 'verticalstrike',\n        HORIZONTALSTRIKE: 'horizontalstrike',\n        NORTHEASTARROW: 'northeastarrow',\n        MADRUWB: 'madruwb',\n        UPDIAGONALARROW: 'updiagonalarrow'\n    };\n    TexConstant.Align = {\n        TOP: 'top',\n        BOTTOM: 'bottom',\n        CENTER: 'center',\n        BASELINE: 'baseline',\n        AXIS: 'axis',\n        LEFT: 'left',\n        RIGHT: 'right'\n    };\n    TexConstant.Lines = {\n        NONE: 'none',\n        SOLID: 'solid',\n        DASHED: 'dashed'\n    };\n    TexConstant.Side = {\n        LEFT: 'left',\n        RIGHT: 'right',\n        LEFTOVERLAP: 'leftoverlap',\n        RIGHTOVERLAP: 'rightoverlap'\n    };\n    TexConstant.Width = {\n        AUTO: 'auto',\n        FIT: 'fit'\n    };\n    TexConstant.Actiontype = {\n        TOGGLE: 'toggle',\n        STATUSLINE: 'statusline',\n        TOOLTIP: 'tooltip',\n        INPUT: 'input'\n    };\n    TexConstant.Overflow = {\n        LINBREAK: 'linebreak',\n        SCROLL: 'scroll',\n        ELIDE: 'elide',\n        TRUNCATE: 'truncate',\n        SCALE: 'scale'\n    };\n    TexConstant.Unit = {\n        EM: 'em',\n        EX: 'ex',\n        PX: 'px',\n        IN: 'in',\n        CM: 'cm',\n        MM: 'mm',\n        PT: 'pt',\n        PC: 'pc'\n    };\n})(TexConstant = exports.TexConstant || (exports.TexConstant = {}));\n//# sourceMappingURL=TexConstants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9UZXhDb25zdGFudHMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdDQUF3QyxtQkFBbUIsS0FBSztBQUNqRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9UZXhDb25zdGFudHMuanM/N2I1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVGV4Q29uc3RhbnQgPSB2b2lkIDA7XG52YXIgVGV4Q29uc3RhbnQ7XG4oZnVuY3Rpb24gKFRleENvbnN0YW50KSB7XG4gICAgVGV4Q29uc3RhbnQuVmFyaWFudCA9IHtcbiAgICAgICAgTk9STUFMOiAnbm9ybWFsJyxcbiAgICAgICAgQk9MRDogJ2JvbGQnLFxuICAgICAgICBJVEFMSUM6ICdpdGFsaWMnLFxuICAgICAgICBCT0xESVRBTElDOiAnYm9sZC1pdGFsaWMnLFxuICAgICAgICBET1VCTEVTVFJVQ0s6ICdkb3VibGUtc3RydWNrJyxcbiAgICAgICAgRlJBS1RVUjogJ2ZyYWt0dXInLFxuICAgICAgICBCT0xERlJBS1RVUjogJ2JvbGQtZnJha3R1cicsXG4gICAgICAgIFNDUklQVDogJ3NjcmlwdCcsXG4gICAgICAgIEJPTERTQ1JJUFQ6ICdib2xkLXNjcmlwdCcsXG4gICAgICAgIFNBTlNTRVJJRjogJ3NhbnMtc2VyaWYnLFxuICAgICAgICBCT0xEU0FOU1NFUklGOiAnYm9sZC1zYW5zLXNlcmlmJyxcbiAgICAgICAgU0FOU1NFUklGSVRBTElDOiAnc2Fucy1zZXJpZi1pdGFsaWMnLFxuICAgICAgICBTQU5TU0VSSUZCT0xESVRBTElDOiAnc2Fucy1zZXJpZi1ib2xkLWl0YWxpYycsXG4gICAgICAgIE1PTk9TUEFDRTogJ21vbm9zcGFjZScsXG4gICAgICAgIElOSVRJQUw6ICdpbml0YWwnLFxuICAgICAgICBUQUlMRUQ6ICd0YWlsZWQnLFxuICAgICAgICBMT09QRUQ6ICdsb29wZWQnLFxuICAgICAgICBTVFJFVENIRUQ6ICdzdHJldGNoZWQnLFxuICAgICAgICBDQUxMSUdSQVBISUM6ICctdGV4LWNhbGxpZ3JhcGhpYycsXG4gICAgICAgIEJPTERDQUxMSUdSQVBISUM6ICctdGV4LWJvbGQtY2FsbGlncmFwaGljJyxcbiAgICAgICAgT0xEU1RZTEU6ICctdGV4LW9sZHN0eWxlJyxcbiAgICAgICAgQk9MRE9MRFNUWUxFOiAnLXRleC1ib2xkLW9sZHN0eWxlJyxcbiAgICAgICAgTUFUSElUQUxJQzogJy10ZXgtbWF0aGl0J1xuICAgIH07XG4gICAgVGV4Q29uc3RhbnQuRm9ybSA9IHtcbiAgICAgICAgUFJFRklYOiAncHJlZml4JyxcbiAgICAgICAgSU5GSVg6ICdpbmZpeCcsXG4gICAgICAgIFBPU1RGSVg6ICdwb3N0Zml4J1xuICAgIH07XG4gICAgVGV4Q29uc3RhbnQuTGluZUJyZWFrID0ge1xuICAgICAgICBBVVRPOiAnYXV0bycsXG4gICAgICAgIE5FV0xJTkU6ICduZXdsaW5lJyxcbiAgICAgICAgTk9CUkVBSzogJ25vYnJlYWsnLFxuICAgICAgICBHT09EQlJFQUs6ICdnb29kYnJlYWsnLFxuICAgICAgICBCQURCUkVBSzogJ2JhZGJyZWFrJ1xuICAgIH07XG4gICAgVGV4Q29uc3RhbnQuTGluZUJyZWFrU3R5bGUgPSB7XG4gICAgICAgIEJFRk9SRTogJ2JlZm9yZScsXG4gICAgICAgIEFGVEVSOiAnYWZ0ZXInLFxuICAgICAgICBEVVBMSUNBVEU6ICdkdXBsaWNhdGUnLFxuICAgICAgICBJTkZJWExJTkJSRUFLU1RZTEU6ICdpbmZpeGxpbmVicmVha3N0eWxlJ1xuICAgIH07XG4gICAgVGV4Q29uc3RhbnQuSW5kZW50QWxpZ24gPSB7XG4gICAgICAgIExFRlQ6ICdsZWZ0JyxcbiAgICAgICAgQ0VOVEVSOiAnY2VudGVyJyxcbiAgICAgICAgUklHSFQ6ICdyaWdodCcsXG4gICAgICAgIEFVVE86ICdhdXRvJyxcbiAgICAgICAgSUQ6ICdpZCcsXG4gICAgICAgIElOREVOVEFMSUdOOiAnaW5kZW50YWxpZ24nXG4gICAgfTtcbiAgICBUZXhDb25zdGFudC5JbmRlbnRTaGlmdCA9IHtcbiAgICAgICAgSU5ERU5UU0hJRlQ6ICdpbmRlbnRzaGlmdCdcbiAgICB9O1xuICAgIFRleENvbnN0YW50LkxpbmVUaGlja25lc3MgPSB7XG4gICAgICAgIFRISU46ICd0aGluJyxcbiAgICAgICAgTUVESVVNOiAnbWVkaXVtJyxcbiAgICAgICAgVEhJQ0s6ICd0aGljaydcbiAgICB9O1xuICAgIFRleENvbnN0YW50Lk5vdGF0aW9uID0ge1xuICAgICAgICBMT05HRElWOiAnbG9uZ2RpdicsXG4gICAgICAgIEFDVFVBUklBTDogJ2FjdHVhcmlhbCcsXG4gICAgICAgIFBIQVNPUkFOR0xFOiAncGhhc29yYW5nbGUnLFxuICAgICAgICBSQURJQ0FMOiAncmFkaWNhbCcsXG4gICAgICAgIEJPWDogJ2JveCcsXG4gICAgICAgIFJPVU5ERURCT1g6ICdyb3VuZGVkYm94JyxcbiAgICAgICAgQ0lSQ0xFOiAnY2lyY2xlJyxcbiAgICAgICAgTEVGVDogJ2xlZnQnLFxuICAgICAgICBSSUdIVDogJ3JpZ2h0JyxcbiAgICAgICAgVE9QOiAndG9wJyxcbiAgICAgICAgQk9UVE9NOiAnYm90dG9tJyxcbiAgICAgICAgVVBESUFHT05BTFNUUklLRTogJ3VwZGlhZ29uYWxzdHJpa2UnLFxuICAgICAgICBET1dORElBR09OQUxTVFJJS0U6ICdkb3duZGlhZ29uYWxzdHJpa2UnLFxuICAgICAgICBWRVJUSUNBTFNUUklLRTogJ3ZlcnRpY2Fsc3RyaWtlJyxcbiAgICAgICAgSE9SSVpPTlRBTFNUUklLRTogJ2hvcml6b250YWxzdHJpa2UnLFxuICAgICAgICBOT1JUSEVBU1RBUlJPVzogJ25vcnRoZWFzdGFycm93JyxcbiAgICAgICAgTUFEUlVXQjogJ21hZHJ1d2InLFxuICAgICAgICBVUERJQUdPTkFMQVJST1c6ICd1cGRpYWdvbmFsYXJyb3cnXG4gICAgfTtcbiAgICBUZXhDb25zdGFudC5BbGlnbiA9IHtcbiAgICAgICAgVE9QOiAndG9wJyxcbiAgICAgICAgQk9UVE9NOiAnYm90dG9tJyxcbiAgICAgICAgQ0VOVEVSOiAnY2VudGVyJyxcbiAgICAgICAgQkFTRUxJTkU6ICdiYXNlbGluZScsXG4gICAgICAgIEFYSVM6ICdheGlzJyxcbiAgICAgICAgTEVGVDogJ2xlZnQnLFxuICAgICAgICBSSUdIVDogJ3JpZ2h0J1xuICAgIH07XG4gICAgVGV4Q29uc3RhbnQuTGluZXMgPSB7XG4gICAgICAgIE5PTkU6ICdub25lJyxcbiAgICAgICAgU09MSUQ6ICdzb2xpZCcsXG4gICAgICAgIERBU0hFRDogJ2Rhc2hlZCdcbiAgICB9O1xuICAgIFRleENvbnN0YW50LlNpZGUgPSB7XG4gICAgICAgIExFRlQ6ICdsZWZ0JyxcbiAgICAgICAgUklHSFQ6ICdyaWdodCcsXG4gICAgICAgIExFRlRPVkVSTEFQOiAnbGVmdG92ZXJsYXAnLFxuICAgICAgICBSSUdIVE9WRVJMQVA6ICdyaWdodG92ZXJsYXAnXG4gICAgfTtcbiAgICBUZXhDb25zdGFudC5XaWR0aCA9IHtcbiAgICAgICAgQVVUTzogJ2F1dG8nLFxuICAgICAgICBGSVQ6ICdmaXQnXG4gICAgfTtcbiAgICBUZXhDb25zdGFudC5BY3Rpb250eXBlID0ge1xuICAgICAgICBUT0dHTEU6ICd0b2dnbGUnLFxuICAgICAgICBTVEFUVVNMSU5FOiAnc3RhdHVzbGluZScsXG4gICAgICAgIFRPT0xUSVA6ICd0b29sdGlwJyxcbiAgICAgICAgSU5QVVQ6ICdpbnB1dCdcbiAgICB9O1xuICAgIFRleENvbnN0YW50Lk92ZXJmbG93ID0ge1xuICAgICAgICBMSU5CUkVBSzogJ2xpbmVicmVhaycsXG4gICAgICAgIFNDUk9MTDogJ3Njcm9sbCcsXG4gICAgICAgIEVMSURFOiAnZWxpZGUnLFxuICAgICAgICBUUlVOQ0FURTogJ3RydW5jYXRlJyxcbiAgICAgICAgU0NBTEU6ICdzY2FsZSdcbiAgICB9O1xuICAgIFRleENvbnN0YW50LlVuaXQgPSB7XG4gICAgICAgIEVNOiAnZW0nLFxuICAgICAgICBFWDogJ2V4JyxcbiAgICAgICAgUFg6ICdweCcsXG4gICAgICAgIElOOiAnaW4nLFxuICAgICAgICBDTTogJ2NtJyxcbiAgICAgICAgTU06ICdtbScsXG4gICAgICAgIFBUOiAncHQnLFxuICAgICAgICBQQzogJ3BjJ1xuICAgIH07XG59KShUZXhDb25zdGFudCA9IGV4cG9ydHMuVGV4Q29uc3RhbnQgfHwgKGV4cG9ydHMuVGV4Q29uc3RhbnQgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VGV4Q29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/TexConstants.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/TexError.js":
/*!************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/TexError.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar TexError = (function () {\n    function TexError(id, message) {\n        var rest = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            rest[_i - 2] = arguments[_i];\n        }\n        this.id = id;\n        this.message = TexError.processString(message, rest);\n    }\n    TexError.processString = function (str, args) {\n        var parts = str.split(TexError.pattern);\n        for (var i = 1, m = parts.length; i < m; i += 2) {\n            var c = parts[i].charAt(0);\n            if (c >= '0' && c <= '9') {\n                parts[i] = args[parseInt(parts[i], 10) - 1];\n                if (typeof parts[i] === 'number') {\n                    parts[i] = parts[i].toString();\n                }\n            }\n            else if (c === '{') {\n                c = parts[i].substr(1);\n                if (c >= '0' && c <= '9') {\n                    parts[i] = args[parseInt(parts[i].substr(1, parts[i].length - 2), 10) - 1];\n                    if (typeof parts[i] === 'number') {\n                        parts[i] = parts[i].toString();\n                    }\n                }\n                else {\n                    var match = parts[i].match(/^\\{([a-z]+):%(\\d+)\\|(.*)\\}$/);\n                    if (match) {\n                        parts[i] = '%' + parts[i];\n                    }\n                }\n            }\n            if (parts[i] == null) {\n                parts[i] = '???';\n            }\n        }\n        return parts.join('');\n    };\n    TexError.pattern = /%(\\d+|\\{\\d+\\}|\\{[a-z]+:\\%\\d+(?:\\|(?:%\\{\\d+\\}|%.|[^\\}])*)+\\}|.)/g;\n    return TexError;\n}());\nexports[\"default\"] = TexError;\n//# sourceMappingURL=TexError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9UZXhFcnJvci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsdUJBQXVCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLE9BQU87QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCx1QkFBdUI7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxLQUFLLEdBQUcsdUJBQXVCLEtBQUssUUFBUSxPQUFPO0FBQ25GO0FBQ0EsQ0FBQztBQUNELGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvVGV4RXJyb3IuanM/ZTgwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBUZXhFcnJvciA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVGV4RXJyb3IoaWQsIG1lc3NhZ2UpIHtcbiAgICAgICAgdmFyIHJlc3QgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAyOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIHJlc3RbX2kgLSAyXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBUZXhFcnJvci5wcm9jZXNzU3RyaW5nKG1lc3NhZ2UsIHJlc3QpO1xuICAgIH1cbiAgICBUZXhFcnJvci5wcm9jZXNzU3RyaW5nID0gZnVuY3Rpb24gKHN0ciwgYXJncykge1xuICAgICAgICB2YXIgcGFydHMgPSBzdHIuc3BsaXQoVGV4RXJyb3IucGF0dGVybik7XG4gICAgICAgIGZvciAodmFyIGkgPSAxLCBtID0gcGFydHMubGVuZ3RoOyBpIDwgbTsgaSArPSAyKSB7XG4gICAgICAgICAgICB2YXIgYyA9IHBhcnRzW2ldLmNoYXJBdCgwKTtcbiAgICAgICAgICAgIGlmIChjID49ICcwJyAmJiBjIDw9ICc5Jykge1xuICAgICAgICAgICAgICAgIHBhcnRzW2ldID0gYXJnc1twYXJzZUludChwYXJ0c1tpXSwgMTApIC0gMV07XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBwYXJ0c1tpXSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgICAgICAgICAgcGFydHNbaV0gPSBwYXJ0c1tpXS50b1N0cmluZygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGMgPT09ICd7Jykge1xuICAgICAgICAgICAgICAgIGMgPSBwYXJ0c1tpXS5zdWJzdHIoMSk7XG4gICAgICAgICAgICAgICAgaWYgKGMgPj0gJzAnICYmIGMgPD0gJzknKSB7XG4gICAgICAgICAgICAgICAgICAgIHBhcnRzW2ldID0gYXJnc1twYXJzZUludChwYXJ0c1tpXS5zdWJzdHIoMSwgcGFydHNbaV0ubGVuZ3RoIC0gMiksIDEwKSAtIDFdO1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHBhcnRzW2ldID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFydHNbaV0gPSBwYXJ0c1tpXS50b1N0cmluZygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbWF0Y2ggPSBwYXJ0c1tpXS5tYXRjaCgvXlxceyhbYS16XSspOiUoXFxkKylcXHwoLiopXFx9JC8pO1xuICAgICAgICAgICAgICAgICAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnRzW2ldID0gJyUnICsgcGFydHNbaV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocGFydHNbaV0gPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHBhcnRzW2ldID0gJz8/Pyc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBhcnRzLmpvaW4oJycpO1xuICAgIH07XG4gICAgVGV4RXJyb3IucGF0dGVybiA9IC8lKFxcZCt8XFx7XFxkK1xcfXxcXHtbYS16XSs6XFwlXFxkKyg/OlxcfCg/OiVcXHtcXGQrXFx9fCUufFteXFx9XSkqKStcXH18LikvZztcbiAgICByZXR1cm4gVGV4RXJyb3I7XG59KCkpO1xuZXhwb3J0cy5kZWZhdWx0ID0gVGV4RXJyb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UZXhFcnJvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/TexError.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/TexParser.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/TexParser.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ./ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar Stack_js_1 = __importDefault(__webpack_require__(/*! ./Stack.js */ \"./node_modules/mathjax-full/js/input/tex/Stack.js\"));\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ./TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar MmlNode_js_1 = __webpack_require__(/*! ../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar TexParser = (function () {\n    function TexParser(_string, env, configuration) {\n        var e_1, _a;\n        this._string = _string;\n        this.configuration = configuration;\n        this.macroCount = 0;\n        this.i = 0;\n        this.currentCS = '';\n        var inner = env.hasOwnProperty('isInner');\n        var isInner = env['isInner'];\n        delete env['isInner'];\n        var ENV;\n        if (env) {\n            ENV = {};\n            try {\n                for (var _b = __values(Object.keys(env)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var id = _c.value;\n                    ENV[id] = env[id];\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        this.configuration.pushParser(this);\n        this.stack = new Stack_js_1.default(this.itemFactory, ENV, inner ? isInner : true);\n        this.Parse();\n        this.Push(this.itemFactory.create('stop'));\n    }\n    Object.defineProperty(TexParser.prototype, \"options\", {\n        get: function () {\n            return this.configuration.options;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TexParser.prototype, \"itemFactory\", {\n        get: function () {\n            return this.configuration.itemFactory;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TexParser.prototype, \"tags\", {\n        get: function () {\n            return this.configuration.tags;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TexParser.prototype, \"string\", {\n        get: function () {\n            return this._string;\n        },\n        set: function (str) {\n            this._string = str;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TexParser.prototype.parse = function (kind, input) {\n        return this.configuration.handlers.get(kind).parse(input);\n    };\n    TexParser.prototype.lookup = function (kind, symbol) {\n        return this.configuration.handlers.get(kind).lookup(symbol);\n    };\n    TexParser.prototype.contains = function (kind, symbol) {\n        return this.configuration.handlers.get(kind).contains(symbol);\n    };\n    TexParser.prototype.toString = function () {\n        var e_2, _a;\n        var str = '';\n        try {\n            for (var _b = __values(Array.from(this.configuration.handlers.keys())), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var config = _c.value;\n                str += config + ': ' +\n                    this.configuration.handlers.get(config) + '\\n';\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return str;\n    };\n    TexParser.prototype.Parse = function () {\n        var c;\n        while (this.i < this.string.length) {\n            c = this.getCodePoint();\n            this.i += c.length;\n            this.parse('character', [this, c]);\n        }\n    };\n    TexParser.prototype.Push = function (arg) {\n        if (arg instanceof MmlNode_js_1.AbstractMmlNode && arg.isInferred) {\n            this.PushAll(arg.childNodes);\n        }\n        else {\n            this.stack.Push(arg);\n        }\n    };\n    TexParser.prototype.PushAll = function (args) {\n        var e_3, _a;\n        try {\n            for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {\n                var arg = args_1_1.value;\n                this.stack.Push(arg);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    TexParser.prototype.mml = function () {\n        if (!this.stack.Top().isKind('mml')) {\n            return null;\n        }\n        var node = this.stack.Top().First;\n        this.configuration.popParser();\n        return node;\n    };\n    TexParser.prototype.convertDelimiter = function (c) {\n        var symbol = this.lookup('delimiter', c);\n        return symbol ? symbol.char : null;\n    };\n    TexParser.prototype.getCodePoint = function () {\n        var code = this.string.codePointAt(this.i);\n        return code === undefined ? '' : String.fromCodePoint(code);\n    };\n    TexParser.prototype.nextIsSpace = function () {\n        return !!this.string.charAt(this.i).match(/\\s/);\n    };\n    TexParser.prototype.GetNext = function () {\n        while (this.nextIsSpace()) {\n            this.i++;\n        }\n        return this.getCodePoint();\n    };\n    TexParser.prototype.GetCS = function () {\n        var CS = this.string.slice(this.i).match(/^(([a-z]+) ?|[\\uD800-\\uDBFF].|.)/i);\n        if (CS) {\n            this.i += CS[0].length;\n            return CS[2] || CS[1];\n        }\n        else {\n            this.i++;\n            return ' ';\n        }\n    };\n    TexParser.prototype.GetArgument = function (_name, noneOK) {\n        switch (this.GetNext()) {\n            case '':\n                if (!noneOK) {\n                    throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', this.currentCS);\n                }\n                return null;\n            case '}':\n                if (!noneOK) {\n                    throw new TexError_js_1.default('ExtraCloseMissingOpen', 'Extra close brace or missing open brace');\n                }\n                return null;\n            case '\\\\':\n                this.i++;\n                return '\\\\' + this.GetCS();\n            case '{':\n                var j = ++this.i, parens = 1;\n                while (this.i < this.string.length) {\n                    switch (this.string.charAt(this.i++)) {\n                        case '\\\\':\n                            this.i++;\n                            break;\n                        case '{':\n                            parens++;\n                            break;\n                        case '}':\n                            if (--parens === 0) {\n                                return this.string.slice(j, this.i - 1);\n                            }\n                            break;\n                    }\n                }\n                throw new TexError_js_1.default('MissingCloseBrace', 'Missing close brace');\n        }\n        var c = this.getCodePoint();\n        this.i += c.length;\n        return c;\n    };\n    TexParser.prototype.GetBrackets = function (_name, def) {\n        if (this.GetNext() !== '[') {\n            return def;\n        }\n        var j = ++this.i, parens = 0;\n        while (this.i < this.string.length) {\n            switch (this.string.charAt(this.i++)) {\n                case '{':\n                    parens++;\n                    break;\n                case '\\\\':\n                    this.i++;\n                    break;\n                case '}':\n                    if (parens-- <= 0) {\n                        throw new TexError_js_1.default('ExtraCloseLooking', 'Extra close brace while looking for %1', '\\']\\'');\n                    }\n                    break;\n                case ']':\n                    if (parens === 0) {\n                        return this.string.slice(j, this.i - 1);\n                    }\n                    break;\n            }\n        }\n        throw new TexError_js_1.default('MissingCloseBracket', 'Could not find closing \\']\\' for argument to %1', this.currentCS);\n    };\n    TexParser.prototype.GetDelimiter = function (name, braceOK) {\n        var c = this.GetNext();\n        this.i += c.length;\n        if (this.i <= this.string.length) {\n            if (c === '\\\\') {\n                c += this.GetCS();\n            }\n            else if (c === '{' && braceOK) {\n                this.i--;\n                c = this.GetArgument(name).trim();\n            }\n            if (this.contains('delimiter', c)) {\n                return this.convertDelimiter(c);\n            }\n        }\n        throw new TexError_js_1.default('MissingOrUnrecognizedDelim', 'Missing or unrecognized delimiter for %1', this.currentCS);\n    };\n    TexParser.prototype.GetDimen = function (name) {\n        if (this.GetNext() === '{') {\n            var dimen = this.GetArgument(name);\n            var _a = __read(ParseUtil_js_1.default.matchDimen(dimen), 2), value = _a[0], unit = _a[1];\n            if (value) {\n                return value + unit;\n            }\n        }\n        else {\n            var dimen = this.string.slice(this.i);\n            var _b = __read(ParseUtil_js_1.default.matchDimen(dimen, true), 3), value = _b[0], unit = _b[1], length_1 = _b[2];\n            if (value) {\n                this.i += length_1;\n                return value + unit;\n            }\n        }\n        throw new TexError_js_1.default('MissingDimOrUnits', 'Missing dimension or its units for %1', this.currentCS);\n    };\n    TexParser.prototype.GetUpTo = function (_name, token) {\n        while (this.nextIsSpace()) {\n            this.i++;\n        }\n        var j = this.i;\n        var parens = 0;\n        while (this.i < this.string.length) {\n            var k = this.i;\n            var c = this.GetNext();\n            this.i += c.length;\n            switch (c) {\n                case '\\\\':\n                    c += this.GetCS();\n                    break;\n                case '{':\n                    parens++;\n                    break;\n                case '}':\n                    if (parens === 0) {\n                        throw new TexError_js_1.default('ExtraCloseLooking', 'Extra close brace while looking for %1', token);\n                    }\n                    parens--;\n                    break;\n            }\n            if (parens === 0 && c === token) {\n                return this.string.slice(j, k);\n            }\n        }\n        throw new TexError_js_1.default('TokenNotFoundForCommand', 'Could not find %1 for %2', token, this.currentCS);\n    };\n    TexParser.prototype.ParseArg = function (name) {\n        return new TexParser(this.GetArgument(name), this.stack.env, this.configuration).mml();\n    };\n    TexParser.prototype.ParseUpTo = function (name, token) {\n        return new TexParser(this.GetUpTo(name, token), this.stack.env, this.configuration).mml();\n    };\n    TexParser.prototype.GetDelimiterArg = function (name) {\n        var c = ParseUtil_js_1.default.trimSpaces(this.GetArgument(name));\n        if (c === '') {\n            return null;\n        }\n        if (this.contains('delimiter', c)) {\n            return c;\n        }\n        throw new TexError_js_1.default('MissingOrUnrecognizedDelim', 'Missing or unrecognized delimiter for %1', this.currentCS);\n    };\n    TexParser.prototype.GetStar = function () {\n        var star = (this.GetNext() === '*');\n        if (star) {\n            this.i++;\n        }\n        return star;\n    };\n    TexParser.prototype.create = function (kind) {\n        var _a;\n        var rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            rest[_i - 1] = arguments[_i];\n        }\n        return (_a = this.configuration.nodeFactory).create.apply(_a, __spreadArray([kind], __read(rest), false));\n    };\n    return TexParser;\n}());\nexports[\"default\"] = TexParser;\n//# sourceMappingURL=TexParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/TexParser.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/base/BaseConfiguration.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/base/BaseConfiguration.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BaseConfiguration = exports.BaseTags = exports.Other = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar MapHandler_js_1 = __webpack_require__(/*! ../MapHandler.js */ \"./node_modules/mathjax-full/js/input/tex/MapHandler.js\");\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar bitem = __importStar(__webpack_require__(/*! ./BaseItems.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseItems.js\"));\nvar Tags_js_1 = __webpack_require__(/*! ../Tags.js */ \"./node_modules/mathjax-full/js/input/tex/Tags.js\");\n__webpack_require__(/*! ./BaseMappings.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseMappings.js\");\nvar OperatorDictionary_js_1 = __webpack_require__(/*! ../../../core/MmlTree/OperatorDictionary.js */ \"./node_modules/mathjax-full/js/core/MmlTree/OperatorDictionary.js\");\nnew SymbolMap_js_1.CharacterMap('remap', null, {\n    '-': '\\u2212',\n    '*': '\\u2217',\n    '`': '\\u2018'\n});\nfunction Other(parser, char) {\n    var font = parser.stack.env['font'];\n    var def = font ?\n        { mathvariant: parser.stack.env['font'] } : {};\n    var remap = MapHandler_js_1.MapHandler.getMap('remap').lookup(char);\n    var range = (0, OperatorDictionary_js_1.getRange)(char);\n    var type = (range ? range[3] : 'mo');\n    var mo = parser.create('token', type, def, (remap ? remap.char : char));\n    range[4] && mo.attributes.set('mathvariant', range[4]);\n    if (type === 'mo') {\n        NodeUtil_js_1.default.setProperty(mo, 'fixStretchy', true);\n        parser.configuration.addNode('fixStretchy', mo);\n    }\n    parser.Push(mo);\n}\nexports.Other = Other;\nfunction csUndefined(_parser, name) {\n    throw new TexError_js_1.default('UndefinedControlSequence', 'Undefined control sequence %1', '\\\\' + name);\n}\nfunction envUndefined(_parser, env) {\n    throw new TexError_js_1.default('UnknownEnv', 'Unknown environment \\'%1\\'', env);\n}\nfunction filterNonscript(_a) {\n    var e_1, _b;\n    var data = _a.data;\n    try {\n        for (var _c = __values(data.getList('nonscript')), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var mml = _d.value;\n            if (mml.attributes.get('scriptlevel') > 0) {\n                var parent_1 = mml.parent;\n                parent_1.childNodes.splice(parent_1.childIndex(mml), 1);\n                data.removeFromList(mml.kind, [mml]);\n                if (mml.isKind('mrow')) {\n                    var mstyle = mml.childNodes[0];\n                    data.removeFromList('mstyle', [mstyle]);\n                    data.removeFromList('mspace', mstyle.childNodes[0].childNodes);\n                }\n            }\n            else if (mml.isKind('mrow')) {\n                mml.parent.replaceChild(mml.childNodes[0], mml);\n                data.removeFromList('mrow', [mml]);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\nvar BaseTags = (function (_super) {\n    __extends(BaseTags, _super);\n    function BaseTags() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return BaseTags;\n}(Tags_js_1.AbstractTags));\nexports.BaseTags = BaseTags;\nexports.BaseConfiguration = Configuration_js_1.Configuration.create('base', {\n    handler: {\n        character: ['command', 'special', 'letter', 'digit'],\n        delimiter: ['delimiter'],\n        macro: ['delimiter', 'macros', 'mathchar0mi', 'mathchar0mo', 'mathchar7'],\n        environment: ['environment']\n    },\n    fallback: {\n        character: Other,\n        macro: csUndefined,\n        environment: envUndefined\n    },\n    items: (_a = {},\n        _a[bitem.StartItem.prototype.kind] = bitem.StartItem,\n        _a[bitem.StopItem.prototype.kind] = bitem.StopItem,\n        _a[bitem.OpenItem.prototype.kind] = bitem.OpenItem,\n        _a[bitem.CloseItem.prototype.kind] = bitem.CloseItem,\n        _a[bitem.PrimeItem.prototype.kind] = bitem.PrimeItem,\n        _a[bitem.SubsupItem.prototype.kind] = bitem.SubsupItem,\n        _a[bitem.OverItem.prototype.kind] = bitem.OverItem,\n        _a[bitem.LeftItem.prototype.kind] = bitem.LeftItem,\n        _a[bitem.Middle.prototype.kind] = bitem.Middle,\n        _a[bitem.RightItem.prototype.kind] = bitem.RightItem,\n        _a[bitem.BeginItem.prototype.kind] = bitem.BeginItem,\n        _a[bitem.EndItem.prototype.kind] = bitem.EndItem,\n        _a[bitem.StyleItem.prototype.kind] = bitem.StyleItem,\n        _a[bitem.PositionItem.prototype.kind] = bitem.PositionItem,\n        _a[bitem.CellItem.prototype.kind] = bitem.CellItem,\n        _a[bitem.MmlItem.prototype.kind] = bitem.MmlItem,\n        _a[bitem.FnItem.prototype.kind] = bitem.FnItem,\n        _a[bitem.NotItem.prototype.kind] = bitem.NotItem,\n        _a[bitem.NonscriptItem.prototype.kind] = bitem.NonscriptItem,\n        _a[bitem.DotsItem.prototype.kind] = bitem.DotsItem,\n        _a[bitem.ArrayItem.prototype.kind] = bitem.ArrayItem,\n        _a[bitem.EqnArrayItem.prototype.kind] = bitem.EqnArrayItem,\n        _a[bitem.EquationItem.prototype.kind] = bitem.EquationItem,\n        _a),\n    options: {\n        maxMacros: 1000,\n        baseURL: (typeof (document) === 'undefined' ||\n            document.getElementsByTagName('base').length === 0) ?\n            '' : String(document.location).replace(/#.*$/, '')\n    },\n    tags: {\n        base: BaseTags\n    },\n    postprocessors: [[filterNonscript, -4]]\n});\n//# sourceMappingURL=BaseConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/base/BaseConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/base/BaseItems.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/base/BaseItems.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EquationItem = exports.EqnArrayItem = exports.ArrayItem = exports.DotsItem = exports.NonscriptItem = exports.NotItem = exports.FnItem = exports.MmlItem = exports.CellItem = exports.PositionItem = exports.StyleItem = exports.EndItem = exports.BeginItem = exports.RightItem = exports.Middle = exports.LeftItem = exports.OverItem = exports.SubsupItem = exports.PrimeItem = exports.CloseItem = exports.OpenItem = exports.StopItem = exports.StartItem = void 0;\nvar MapHandler_js_1 = __webpack_require__(/*! ../MapHandler.js */ \"./node_modules/mathjax-full/js/input/tex/MapHandler.js\");\nvar Entities_js_1 = __webpack_require__(/*! ../../../util/Entities.js */ \"./node_modules/mathjax-full/js/util/Entities.js\");\nvar MmlNode_js_1 = __webpack_require__(/*! ../../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar StackItem_js_1 = __webpack_require__(/*! ../StackItem.js */ \"./node_modules/mathjax-full/js/input/tex/StackItem.js\");\nvar StartItem = (function (_super) {\n    __extends(StartItem, _super);\n    function StartItem(factory, global) {\n        var _this = _super.call(this, factory) || this;\n        _this.global = global;\n        return _this;\n    }\n    Object.defineProperty(StartItem.prototype, \"kind\", {\n        get: function () {\n            return 'start';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StartItem.prototype, \"isOpen\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StartItem.prototype.checkItem = function (item) {\n        if (item.isKind('stop')) {\n            var node = this.toMml();\n            if (!this.global.isInner) {\n                node = this.factory.configuration.tags.finalize(node, this.env);\n            }\n            return [[this.factory.create('mml', node)], true];\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    return StartItem;\n}(StackItem_js_1.BaseItem));\nexports.StartItem = StartItem;\nvar StopItem = (function (_super) {\n    __extends(StopItem, _super);\n    function StopItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(StopItem.prototype, \"kind\", {\n        get: function () {\n            return 'stop';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StopItem.prototype, \"isClose\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return StopItem;\n}(StackItem_js_1.BaseItem));\nexports.StopItem = StopItem;\nvar OpenItem = (function (_super) {\n    __extends(OpenItem, _super);\n    function OpenItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(OpenItem.prototype, \"kind\", {\n        get: function () {\n            return 'open';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(OpenItem.prototype, \"isOpen\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    OpenItem.prototype.checkItem = function (item) {\n        if (item.isKind('close')) {\n            var mml = this.toMml();\n            var node = this.create('node', 'TeXAtom', [mml]);\n            return [[this.factory.create('mml', node)], true];\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    OpenItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {\n        'stop': ['ExtraOpenMissingClose',\n            'Extra open brace or missing close brace']\n    });\n    return OpenItem;\n}(StackItem_js_1.BaseItem));\nexports.OpenItem = OpenItem;\nvar CloseItem = (function (_super) {\n    __extends(CloseItem, _super);\n    function CloseItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(CloseItem.prototype, \"kind\", {\n        get: function () {\n            return 'close';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CloseItem.prototype, \"isClose\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return CloseItem;\n}(StackItem_js_1.BaseItem));\nexports.CloseItem = CloseItem;\nvar PrimeItem = (function (_super) {\n    __extends(PrimeItem, _super);\n    function PrimeItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PrimeItem.prototype, \"kind\", {\n        get: function () {\n            return 'prime';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PrimeItem.prototype.checkItem = function (item) {\n        var _a = __read(this.Peek(2), 2), top0 = _a[0], top1 = _a[1];\n        if (!NodeUtil_js_1.default.isType(top0, 'msubsup') || NodeUtil_js_1.default.isType(top0, 'msup')) {\n            var node = this.create('node', 'msup', [top0, top1]);\n            return [[node, item], true];\n        }\n        NodeUtil_js_1.default.setChild(top0, top0.sup, top1);\n        return [[top0, item], true];\n    };\n    return PrimeItem;\n}(StackItem_js_1.BaseItem));\nexports.PrimeItem = PrimeItem;\nvar SubsupItem = (function (_super) {\n    __extends(SubsupItem, _super);\n    function SubsupItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SubsupItem.prototype, \"kind\", {\n        get: function () {\n            return 'subsup';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SubsupItem.prototype.checkItem = function (item) {\n        if (item.isKind('open') || item.isKind('left')) {\n            return StackItem_js_1.BaseItem.success;\n        }\n        var top = this.First;\n        var position = this.getProperty('position');\n        if (item.isKind('mml')) {\n            if (this.getProperty('primes')) {\n                if (position !== 2) {\n                    NodeUtil_js_1.default.setChild(top, 2, this.getProperty('primes'));\n                }\n                else {\n                    NodeUtil_js_1.default.setProperty(this.getProperty('primes'), 'variantForm', true);\n                    var node = this.create('node', 'mrow', [this.getProperty('primes'), item.First]);\n                    item.First = node;\n                }\n            }\n            NodeUtil_js_1.default.setChild(top, position, item.First);\n            if (this.getProperty('movesupsub') != null) {\n                NodeUtil_js_1.default.setProperty(top, 'movesupsub', this.getProperty('movesupsub'));\n            }\n            var result = this.factory.create('mml', top);\n            return [[result], true];\n        }\n        if (_super.prototype.checkItem.call(this, item)[1]) {\n            var error = this.getErrors(['', 'sub', 'sup'][position]);\n            throw new (TexError_js_1.default.bind.apply(TexError_js_1.default, __spreadArray([void 0, error[0], error[1]], __read(error.splice(2)), false)))();\n        }\n        return null;\n    };\n    SubsupItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {\n        'stop': ['MissingScript',\n            'Missing superscript or subscript argument'],\n        'sup': ['MissingOpenForSup',\n            'Missing open brace for superscript'],\n        'sub': ['MissingOpenForSub',\n            'Missing open brace for subscript']\n    });\n    return SubsupItem;\n}(StackItem_js_1.BaseItem));\nexports.SubsupItem = SubsupItem;\nvar OverItem = (function (_super) {\n    __extends(OverItem, _super);\n    function OverItem(factory) {\n        var _this = _super.call(this, factory) || this;\n        _this.setProperty('name', '\\\\over');\n        return _this;\n    }\n    Object.defineProperty(OverItem.prototype, \"kind\", {\n        get: function () {\n            return 'over';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(OverItem.prototype, \"isClose\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    OverItem.prototype.checkItem = function (item) {\n        if (item.isKind('over')) {\n            throw new TexError_js_1.default('AmbiguousUseOf', 'Ambiguous use of %1', item.getName());\n        }\n        if (item.isClose) {\n            var mml = this.create('node', 'mfrac', [this.getProperty('num'), this.toMml(false)]);\n            if (this.getProperty('thickness') != null) {\n                NodeUtil_js_1.default.setAttribute(mml, 'linethickness', this.getProperty('thickness'));\n            }\n            if (this.getProperty('open') || this.getProperty('close')) {\n                NodeUtil_js_1.default.setProperty(mml, 'withDelims', true);\n                mml = ParseUtil_js_1.default.fixedFence(this.factory.configuration, this.getProperty('open'), mml, this.getProperty('close'));\n            }\n            return [[this.factory.create('mml', mml), item], true];\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    OverItem.prototype.toString = function () {\n        return 'over[' + this.getProperty('num') +\n            ' / ' + this.nodes.join('; ') + ']';\n    };\n    return OverItem;\n}(StackItem_js_1.BaseItem));\nexports.OverItem = OverItem;\nvar LeftItem = (function (_super) {\n    __extends(LeftItem, _super);\n    function LeftItem(factory, delim) {\n        var _this = _super.call(this, factory) || this;\n        _this.setProperty('delim', delim);\n        return _this;\n    }\n    Object.defineProperty(LeftItem.prototype, \"kind\", {\n        get: function () {\n            return 'left';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LeftItem.prototype, \"isOpen\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LeftItem.prototype.checkItem = function (item) {\n        if (item.isKind('right')) {\n            return [[this.factory.create('mml', ParseUtil_js_1.default.fenced(this.factory.configuration, this.getProperty('delim'), this.toMml(), item.getProperty('delim'), '', item.getProperty('color')))], true];\n        }\n        if (item.isKind('middle')) {\n            var def = { stretchy: true };\n            if (item.getProperty('color')) {\n                def.mathcolor = item.getProperty('color');\n            }\n            this.Push(this.create('node', 'TeXAtom', [], { texClass: MmlNode_js_1.TEXCLASS.CLOSE }), this.create('token', 'mo', def, item.getProperty('delim')), this.create('node', 'TeXAtom', [], { texClass: MmlNode_js_1.TEXCLASS.OPEN }));\n            this.env = {};\n            return [[this], true];\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    LeftItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {\n        'stop': ['ExtraLeftMissingRight',\n            'Extra \\\\left or missing \\\\right']\n    });\n    return LeftItem;\n}(StackItem_js_1.BaseItem));\nexports.LeftItem = LeftItem;\nvar Middle = (function (_super) {\n    __extends(Middle, _super);\n    function Middle(factory, delim, color) {\n        var _this = _super.call(this, factory) || this;\n        _this.setProperty('delim', delim);\n        color && _this.setProperty('color', color);\n        return _this;\n    }\n    Object.defineProperty(Middle.prototype, \"kind\", {\n        get: function () {\n            return 'middle';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Middle.prototype, \"isClose\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Middle;\n}(StackItem_js_1.BaseItem));\nexports.Middle = Middle;\nvar RightItem = (function (_super) {\n    __extends(RightItem, _super);\n    function RightItem(factory, delim, color) {\n        var _this = _super.call(this, factory) || this;\n        _this.setProperty('delim', delim);\n        color && _this.setProperty('color', color);\n        return _this;\n    }\n    Object.defineProperty(RightItem.prototype, \"kind\", {\n        get: function () {\n            return 'right';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RightItem.prototype, \"isClose\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return RightItem;\n}(StackItem_js_1.BaseItem));\nexports.RightItem = RightItem;\nvar BeginItem = (function (_super) {\n    __extends(BeginItem, _super);\n    function BeginItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(BeginItem.prototype, \"kind\", {\n        get: function () {\n            return 'begin';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BeginItem.prototype, \"isOpen\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BeginItem.prototype.checkItem = function (item) {\n        if (item.isKind('end')) {\n            if (item.getName() !== this.getName()) {\n                throw new TexError_js_1.default('EnvBadEnd', '\\\\begin{%1} ended with \\\\end{%2}', this.getName(), item.getName());\n            }\n            if (!this.getProperty('end')) {\n                return [[this.factory.create('mml', this.toMml())], true];\n            }\n            return StackItem_js_1.BaseItem.fail;\n        }\n        if (item.isKind('stop')) {\n            throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    return BeginItem;\n}(StackItem_js_1.BaseItem));\nexports.BeginItem = BeginItem;\nvar EndItem = (function (_super) {\n    __extends(EndItem, _super);\n    function EndItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(EndItem.prototype, \"kind\", {\n        get: function () {\n            return 'end';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EndItem.prototype, \"isClose\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return EndItem;\n}(StackItem_js_1.BaseItem));\nexports.EndItem = EndItem;\nvar StyleItem = (function (_super) {\n    __extends(StyleItem, _super);\n    function StyleItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(StyleItem.prototype, \"kind\", {\n        get: function () {\n            return 'style';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StyleItem.prototype.checkItem = function (item) {\n        if (!item.isClose) {\n            return _super.prototype.checkItem.call(this, item);\n        }\n        var mml = this.create('node', 'mstyle', this.nodes, this.getProperty('styles'));\n        return [[this.factory.create('mml', mml), item], true];\n    };\n    return StyleItem;\n}(StackItem_js_1.BaseItem));\nexports.StyleItem = StyleItem;\nvar PositionItem = (function (_super) {\n    __extends(PositionItem, _super);\n    function PositionItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PositionItem.prototype, \"kind\", {\n        get: function () {\n            return 'position';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PositionItem.prototype.checkItem = function (item) {\n        if (item.isClose) {\n            throw new TexError_js_1.default('MissingBoxFor', 'Missing box for %1', this.getName());\n        }\n        if (item.isFinal) {\n            var mml = item.toMml();\n            switch (this.getProperty('move')) {\n                case 'vertical':\n                    mml = this.create('node', 'mpadded', [mml], { height: this.getProperty('dh'),\n                        depth: this.getProperty('dd'),\n                        voffset: this.getProperty('dh') });\n                    return [[this.factory.create('mml', mml)], true];\n                case 'horizontal':\n                    return [[this.factory.create('mml', this.getProperty('left')), item,\n                            this.factory.create('mml', this.getProperty('right'))], true];\n            }\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    return PositionItem;\n}(StackItem_js_1.BaseItem));\nexports.PositionItem = PositionItem;\nvar CellItem = (function (_super) {\n    __extends(CellItem, _super);\n    function CellItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(CellItem.prototype, \"kind\", {\n        get: function () {\n            return 'cell';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CellItem.prototype, \"isClose\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return CellItem;\n}(StackItem_js_1.BaseItem));\nexports.CellItem = CellItem;\nvar MmlItem = (function (_super) {\n    __extends(MmlItem, _super);\n    function MmlItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MmlItem.prototype, \"isFinal\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlItem.prototype, \"kind\", {\n        get: function () {\n            return 'mml';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return MmlItem;\n}(StackItem_js_1.BaseItem));\nexports.MmlItem = MmlItem;\nvar FnItem = (function (_super) {\n    __extends(FnItem, _super);\n    function FnItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(FnItem.prototype, \"kind\", {\n        get: function () {\n            return 'fn';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    FnItem.prototype.checkItem = function (item) {\n        var top = this.First;\n        if (top) {\n            if (item.isOpen) {\n                return StackItem_js_1.BaseItem.success;\n            }\n            if (!item.isKind('fn')) {\n                var mml = item.First;\n                if (!item.isKind('mml') || !mml) {\n                    return [[top, item], true];\n                }\n                if ((NodeUtil_js_1.default.isType(mml, 'mstyle') && mml.childNodes.length &&\n                    NodeUtil_js_1.default.isType(mml.childNodes[0].childNodes[0], 'mspace')) ||\n                    NodeUtil_js_1.default.isType(mml, 'mspace')) {\n                    return [[top, item], true];\n                }\n                if (NodeUtil_js_1.default.isEmbellished(mml)) {\n                    mml = NodeUtil_js_1.default.getCoreMO(mml);\n                }\n                var form = NodeUtil_js_1.default.getForm(mml);\n                if (form != null && [0, 0, 1, 1, 0, 1, 1, 0, 0, 0][form[2]]) {\n                    return [[top, item], true];\n                }\n            }\n            var node = this.create('token', 'mo', { texClass: MmlNode_js_1.TEXCLASS.NONE }, Entities_js_1.entities.ApplyFunction);\n            return [[top, node, item], true];\n        }\n        return _super.prototype.checkItem.apply(this, arguments);\n    };\n    return FnItem;\n}(StackItem_js_1.BaseItem));\nexports.FnItem = FnItem;\nvar NotItem = (function (_super) {\n    __extends(NotItem, _super);\n    function NotItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.remap = MapHandler_js_1.MapHandler.getMap('not_remap');\n        return _this;\n    }\n    Object.defineProperty(NotItem.prototype, \"kind\", {\n        get: function () {\n            return 'not';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    NotItem.prototype.checkItem = function (item) {\n        var mml;\n        var c;\n        var textNode;\n        if (item.isKind('open') || item.isKind('left')) {\n            return StackItem_js_1.BaseItem.success;\n        }\n        if (item.isKind('mml') &&\n            (NodeUtil_js_1.default.isType(item.First, 'mo') || NodeUtil_js_1.default.isType(item.First, 'mi') ||\n                NodeUtil_js_1.default.isType(item.First, 'mtext'))) {\n            mml = item.First;\n            c = NodeUtil_js_1.default.getText(mml);\n            if (c.length === 1 && !NodeUtil_js_1.default.getProperty(mml, 'movesupsub') &&\n                NodeUtil_js_1.default.getChildren(mml).length === 1) {\n                if (this.remap.contains(c)) {\n                    textNode = this.create('text', this.remap.lookup(c).char);\n                    NodeUtil_js_1.default.setChild(mml, 0, textNode);\n                }\n                else {\n                    textNode = this.create('text', '\\u0338');\n                    NodeUtil_js_1.default.appendChildren(mml, [textNode]);\n                }\n                return [[item], true];\n            }\n        }\n        textNode = this.create('text', '\\u29F8');\n        var mtextNode = this.create('node', 'mtext', [], {}, textNode);\n        var paddedNode = this.create('node', 'mpadded', [mtextNode], { width: 0 });\n        mml = this.create('node', 'TeXAtom', [paddedNode], { texClass: MmlNode_js_1.TEXCLASS.REL });\n        return [[mml, item], true];\n    };\n    return NotItem;\n}(StackItem_js_1.BaseItem));\nexports.NotItem = NotItem;\nvar NonscriptItem = (function (_super) {\n    __extends(NonscriptItem, _super);\n    function NonscriptItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(NonscriptItem.prototype, \"kind\", {\n        get: function () {\n            return 'nonscript';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    NonscriptItem.prototype.checkItem = function (item) {\n        if (item.isKind('mml') && item.Size() === 1) {\n            var mml = item.First;\n            if (mml.isKind('mstyle') && mml.notParent) {\n                mml = NodeUtil_js_1.default.getChildren(NodeUtil_js_1.default.getChildren(mml)[0])[0];\n            }\n            if (mml.isKind('mspace')) {\n                if (mml !== item.First) {\n                    var mrow = this.create('node', 'mrow', [item.Pop()]);\n                    item.Push(mrow);\n                }\n                this.factory.configuration.addNode('nonscript', item.First);\n            }\n        }\n        return [[item], true];\n    };\n    return NonscriptItem;\n}(StackItem_js_1.BaseItem));\nexports.NonscriptItem = NonscriptItem;\nvar DotsItem = (function (_super) {\n    __extends(DotsItem, _super);\n    function DotsItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(DotsItem.prototype, \"kind\", {\n        get: function () {\n            return 'dots';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DotsItem.prototype.checkItem = function (item) {\n        if (item.isKind('open') || item.isKind('left')) {\n            return StackItem_js_1.BaseItem.success;\n        }\n        var dots = this.getProperty('ldots');\n        var top = item.First;\n        if (item.isKind('mml') && NodeUtil_js_1.default.isEmbellished(top)) {\n            var tclass = NodeUtil_js_1.default.getTexClass(NodeUtil_js_1.default.getCoreMO(top));\n            if (tclass === MmlNode_js_1.TEXCLASS.BIN || tclass === MmlNode_js_1.TEXCLASS.REL) {\n                dots = this.getProperty('cdots');\n            }\n        }\n        return [[dots, item], true];\n    };\n    return DotsItem;\n}(StackItem_js_1.BaseItem));\nexports.DotsItem = DotsItem;\nvar ArrayItem = (function (_super) {\n    __extends(ArrayItem, _super);\n    function ArrayItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.table = [];\n        _this.row = [];\n        _this.frame = [];\n        _this.hfill = [];\n        _this.arraydef = {};\n        _this.dashed = false;\n        return _this;\n    }\n    Object.defineProperty(ArrayItem.prototype, \"kind\", {\n        get: function () {\n            return 'array';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ArrayItem.prototype, \"isOpen\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ArrayItem.prototype, \"copyEnv\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ArrayItem.prototype.checkItem = function (item) {\n        if (item.isClose && !item.isKind('over')) {\n            if (item.getProperty('isEntry')) {\n                this.EndEntry();\n                this.clearEnv();\n                return StackItem_js_1.BaseItem.fail;\n            }\n            if (item.getProperty('isCR')) {\n                this.EndEntry();\n                this.EndRow();\n                this.clearEnv();\n                return StackItem_js_1.BaseItem.fail;\n            }\n            this.EndTable();\n            this.clearEnv();\n            var newItem = this.factory.create('mml', this.createMml());\n            if (this.getProperty('requireClose')) {\n                if (item.isKind('close')) {\n                    return [[newItem], true];\n                }\n                throw new TexError_js_1.default('MissingCloseBrace', 'Missing close brace');\n            }\n            return [[newItem, item], true];\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    ArrayItem.prototype.createMml = function () {\n        var scriptlevel = this.arraydef['scriptlevel'];\n        delete this.arraydef['scriptlevel'];\n        var mml = this.create('node', 'mtable', this.table, this.arraydef);\n        if (scriptlevel) {\n            mml.setProperty('scriptlevel', scriptlevel);\n        }\n        if (this.frame.length === 4) {\n            NodeUtil_js_1.default.setAttribute(mml, 'frame', this.dashed ? 'dashed' : 'solid');\n        }\n        else if (this.frame.length) {\n            if (this.arraydef['rowlines']) {\n                this.arraydef['rowlines'] =\n                    this.arraydef['rowlines'].replace(/none( none)+$/, 'none');\n            }\n            NodeUtil_js_1.default.setAttribute(mml, 'frame', '');\n            mml = this.create('node', 'menclose', [mml], { notation: this.frame.join(' ') });\n            if ((this.arraydef['columnlines'] || 'none') !== 'none' ||\n                (this.arraydef['rowlines'] || 'none') !== 'none') {\n                NodeUtil_js_1.default.setAttribute(mml, 'data-padding', 0);\n            }\n        }\n        if (this.getProperty('open') || this.getProperty('close')) {\n            mml = ParseUtil_js_1.default.fenced(this.factory.configuration, this.getProperty('open'), mml, this.getProperty('close'));\n        }\n        return mml;\n    };\n    ArrayItem.prototype.EndEntry = function () {\n        var mtd = this.create('node', 'mtd', this.nodes);\n        if (this.hfill.length) {\n            if (this.hfill[0] === 0) {\n                NodeUtil_js_1.default.setAttribute(mtd, 'columnalign', 'right');\n            }\n            if (this.hfill[this.hfill.length - 1] === this.Size()) {\n                NodeUtil_js_1.default.setAttribute(mtd, 'columnalign', NodeUtil_js_1.default.getAttribute(mtd, 'columnalign') ? 'center' : 'left');\n            }\n        }\n        this.row.push(mtd);\n        this.Clear();\n        this.hfill = [];\n    };\n    ArrayItem.prototype.EndRow = function () {\n        var node;\n        if (this.getProperty('isNumbered') && this.row.length === 3) {\n            this.row.unshift(this.row.pop());\n            node = this.create('node', 'mlabeledtr', this.row);\n        }\n        else {\n            node = this.create('node', 'mtr', this.row);\n        }\n        this.table.push(node);\n        this.row = [];\n    };\n    ArrayItem.prototype.EndTable = function () {\n        if (this.Size() || this.row.length) {\n            this.EndEntry();\n            this.EndRow();\n        }\n        this.checkLines();\n    };\n    ArrayItem.prototype.checkLines = function () {\n        if (this.arraydef['rowlines']) {\n            var lines = this.arraydef['rowlines'].split(/ /);\n            if (lines.length === this.table.length) {\n                this.frame.push('bottom');\n                lines.pop();\n                this.arraydef['rowlines'] = lines.join(' ');\n            }\n            else if (lines.length < this.table.length - 1) {\n                this.arraydef['rowlines'] += ' none';\n            }\n        }\n        if (this.getProperty('rowspacing')) {\n            var rows = this.arraydef['rowspacing'].split(/ /);\n            while (rows.length < this.table.length) {\n                rows.push(this.getProperty('rowspacing') + 'em');\n            }\n            this.arraydef['rowspacing'] = rows.join(' ');\n        }\n    };\n    ArrayItem.prototype.addRowSpacing = function (spacing) {\n        if (this.arraydef['rowspacing']) {\n            var rows = this.arraydef['rowspacing'].split(/ /);\n            if (!this.getProperty('rowspacing')) {\n                var dimem = ParseUtil_js_1.default.dimen2em(rows[0]);\n                this.setProperty('rowspacing', dimem);\n            }\n            var rowspacing = this.getProperty('rowspacing');\n            while (rows.length < this.table.length) {\n                rows.push(ParseUtil_js_1.default.Em(rowspacing));\n            }\n            rows[this.table.length - 1] = ParseUtil_js_1.default.Em(Math.max(0, rowspacing + ParseUtil_js_1.default.dimen2em(spacing)));\n            this.arraydef['rowspacing'] = rows.join(' ');\n        }\n    };\n    return ArrayItem;\n}(StackItem_js_1.BaseItem));\nexports.ArrayItem = ArrayItem;\nvar EqnArrayItem = (function (_super) {\n    __extends(EqnArrayItem, _super);\n    function EqnArrayItem(factory) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _this = _super.call(this, factory) || this;\n        _this.maxrow = 0;\n        _this.factory.configuration.tags.start(args[0], args[2], args[1]);\n        return _this;\n    }\n    Object.defineProperty(EqnArrayItem.prototype, \"kind\", {\n        get: function () {\n            return 'eqnarray';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    EqnArrayItem.prototype.EndEntry = function () {\n        if (this.row.length) {\n            ParseUtil_js_1.default.fixInitialMO(this.factory.configuration, this.nodes);\n        }\n        var node = this.create('node', 'mtd', this.nodes);\n        this.row.push(node);\n        this.Clear();\n    };\n    EqnArrayItem.prototype.EndRow = function () {\n        if (this.row.length > this.maxrow) {\n            this.maxrow = this.row.length;\n        }\n        var mtr = 'mtr';\n        var tag = this.factory.configuration.tags.getTag();\n        if (tag) {\n            this.row = [tag].concat(this.row);\n            mtr = 'mlabeledtr';\n        }\n        this.factory.configuration.tags.clearTag();\n        var node = this.create('node', mtr, this.row);\n        this.table.push(node);\n        this.row = [];\n    };\n    EqnArrayItem.prototype.EndTable = function () {\n        _super.prototype.EndTable.call(this);\n        this.factory.configuration.tags.end();\n        this.extendArray('columnalign', this.maxrow);\n        this.extendArray('columnwidth', this.maxrow);\n        this.extendArray('columnspacing', this.maxrow - 1);\n    };\n    EqnArrayItem.prototype.extendArray = function (name, max) {\n        if (!this.arraydef[name])\n            return;\n        var repeat = this.arraydef[name].split(/ /);\n        var columns = __spreadArray([], __read(repeat), false);\n        if (columns.length > 1) {\n            while (columns.length < max) {\n                columns.push.apply(columns, __spreadArray([], __read(repeat), false));\n            }\n            this.arraydef[name] = columns.slice(0, max).join(' ');\n        }\n    };\n    return EqnArrayItem;\n}(ArrayItem));\nexports.EqnArrayItem = EqnArrayItem;\nvar EquationItem = (function (_super) {\n    __extends(EquationItem, _super);\n    function EquationItem(factory) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _this = _super.call(this, factory) || this;\n        _this.factory.configuration.tags.start('equation', true, args[0]);\n        return _this;\n    }\n    Object.defineProperty(EquationItem.prototype, \"kind\", {\n        get: function () {\n            return 'equation';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EquationItem.prototype, \"isOpen\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    EquationItem.prototype.checkItem = function (item) {\n        if (item.isKind('end')) {\n            var mml = this.toMml();\n            var tag = this.factory.configuration.tags.getTag();\n            this.factory.configuration.tags.end();\n            return [[tag ? this.factory.configuration.tags.enTag(mml, tag) : mml, item], true];\n        }\n        if (item.isKind('stop')) {\n            throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    return EquationItem;\n}(StackItem_js_1.BaseItem));\nexports.EquationItem = EquationItem;\n//# sourceMappingURL=BaseItems.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/base/BaseItems.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/base/BaseMappings.js":
/*!*********************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/base/BaseMappings.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar sm = __importStar(__webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\"));\nvar TexConstants_js_1 = __webpack_require__(/*! ../TexConstants.js */ \"./node_modules/mathjax-full/js/input/tex/TexConstants.js\");\nvar BaseMethods_js_1 = __importDefault(__webpack_require__(/*! ./BaseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseMethods.js\"));\nvar ParseMethods_js_1 = __importDefault(__webpack_require__(/*! ../ParseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/ParseMethods.js\"));\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar MmlNode_js_1 = __webpack_require__(/*! ../../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar lengths_js_1 = __webpack_require__(/*! ../../../util/lengths.js */ \"./node_modules/mathjax-full/js/util/lengths.js\");\nnew sm.RegExpMap('letter', ParseMethods_js_1.default.variable, /[a-z]/i);\nnew sm.RegExpMap('digit', ParseMethods_js_1.default.digit, /[0-9.,]/);\nnew sm.RegExpMap('command', ParseMethods_js_1.default.controlSequence, /^\\\\/);\nnew sm.MacroMap('special', {\n    '{': 'Open',\n    '}': 'Close',\n    '~': 'Tilde',\n    '^': 'Superscript',\n    '_': 'Subscript',\n    ' ': 'Space',\n    '\\t': 'Space',\n    '\\r': 'Space',\n    '\\n': 'Space',\n    '\\'': 'Prime',\n    '%': 'Comment',\n    '&': 'Entry',\n    '#': 'Hash',\n    '\\u00A0': 'Space',\n    '\\u2019': 'Prime'\n}, BaseMethods_js_1.default);\nnew sm.CharacterMap('mathchar0mi', ParseMethods_js_1.default.mathchar0mi, {\n    alpha: '\\u03B1',\n    beta: '\\u03B2',\n    gamma: '\\u03B3',\n    delta: '\\u03B4',\n    epsilon: '\\u03F5',\n    zeta: '\\u03B6',\n    eta: '\\u03B7',\n    theta: '\\u03B8',\n    iota: '\\u03B9',\n    kappa: '\\u03BA',\n    lambda: '\\u03BB',\n    mu: '\\u03BC',\n    nu: '\\u03BD',\n    xi: '\\u03BE',\n    omicron: '\\u03BF',\n    pi: '\\u03C0',\n    rho: '\\u03C1',\n    sigma: '\\u03C3',\n    tau: '\\u03C4',\n    upsilon: '\\u03C5',\n    phi: '\\u03D5',\n    chi: '\\u03C7',\n    psi: '\\u03C8',\n    omega: '\\u03C9',\n    varepsilon: '\\u03B5',\n    vartheta: '\\u03D1',\n    varpi: '\\u03D6',\n    varrho: '\\u03F1',\n    varsigma: '\\u03C2',\n    varphi: '\\u03C6',\n    S: ['\\u00A7', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    aleph: ['\\u2135', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    hbar: ['\\u210F', { variantForm: true }],\n    imath: '\\u0131',\n    jmath: '\\u0237',\n    ell: '\\u2113',\n    wp: ['\\u2118', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    Re: ['\\u211C', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    Im: ['\\u2111', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    partial: ['\\u2202', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],\n    infty: ['\\u221E', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    prime: ['\\u2032', { variantForm: true }],\n    emptyset: ['\\u2205', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    nabla: ['\\u2207', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    top: ['\\u22A4', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    bot: ['\\u22A5', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    angle: ['\\u2220', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    triangle: ['\\u25B3', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    backslash: ['\\u2216', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    forall: ['\\u2200', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    exists: ['\\u2203', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    neg: ['\\u00AC', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    lnot: ['\\u00AC', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    flat: ['\\u266D', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    natural: ['\\u266E', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    sharp: ['\\u266F', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    clubsuit: ['\\u2663', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    diamondsuit: ['\\u2662', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    heartsuit: ['\\u2661', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    spadesuit: ['\\u2660', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }]\n});\nnew sm.CharacterMap('mathchar0mo', ParseMethods_js_1.default.mathchar0mo, {\n    surd: '\\u221A',\n    coprod: ['\\u2210', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    bigvee: ['\\u22C1', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    bigwedge: ['\\u22C0', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    biguplus: ['\\u2A04', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    bigcap: ['\\u22C2', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    bigcup: ['\\u22C3', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    'int': ['\\u222B', { texClass: MmlNode_js_1.TEXCLASS.OP }],\n    intop: ['\\u222B', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true, movablelimits: true }],\n    iint: ['\\u222C', { texClass: MmlNode_js_1.TEXCLASS.OP }],\n    iiint: ['\\u222D', { texClass: MmlNode_js_1.TEXCLASS.OP }],\n    prod: ['\\u220F', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    sum: ['\\u2211', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    bigotimes: ['\\u2A02', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    bigoplus: ['\\u2A01', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    bigodot: ['\\u2A00', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    oint: ['\\u222E', { texClass: MmlNode_js_1.TEXCLASS.OP }],\n    bigsqcup: ['\\u2A06', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    smallint: ['\\u222B', { largeop: false }],\n    triangleleft: '\\u25C3',\n    triangleright: '\\u25B9',\n    bigtriangleup: '\\u25B3',\n    bigtriangledown: '\\u25BD',\n    wedge: '\\u2227',\n    land: '\\u2227',\n    vee: '\\u2228',\n    lor: '\\u2228',\n    cap: '\\u2229',\n    cup: '\\u222A',\n    ddagger: '\\u2021',\n    dagger: '\\u2020',\n    sqcap: '\\u2293',\n    sqcup: '\\u2294',\n    uplus: '\\u228E',\n    amalg: '\\u2A3F',\n    diamond: '\\u22C4',\n    bullet: '\\u2219',\n    wr: '\\u2240',\n    div: '\\u00F7',\n    divsymbol: '\\u00F7',\n    odot: ['\\u2299', { largeop: false }],\n    oslash: ['\\u2298', { largeop: false }],\n    otimes: ['\\u2297', { largeop: false }],\n    ominus: ['\\u2296', { largeop: false }],\n    oplus: ['\\u2295', { largeop: false }],\n    mp: '\\u2213',\n    pm: '\\u00B1',\n    circ: '\\u2218',\n    bigcirc: '\\u25EF',\n    setminus: '\\u2216',\n    cdot: '\\u22C5',\n    ast: '\\u2217',\n    times: '\\u00D7',\n    star: '\\u22C6',\n    propto: '\\u221D',\n    sqsubseteq: '\\u2291',\n    sqsupseteq: '\\u2292',\n    parallel: '\\u2225',\n    mid: '\\u2223',\n    dashv: '\\u22A3',\n    vdash: '\\u22A2',\n    leq: '\\u2264',\n    le: '\\u2264',\n    geq: '\\u2265',\n    ge: '\\u2265',\n    lt: '\\u003C',\n    gt: '\\u003E',\n    succ: '\\u227B',\n    prec: '\\u227A',\n    approx: '\\u2248',\n    succeq: '\\u2AB0',\n    preceq: '\\u2AAF',\n    supset: '\\u2283',\n    subset: '\\u2282',\n    supseteq: '\\u2287',\n    subseteq: '\\u2286',\n    'in': '\\u2208',\n    ni: '\\u220B',\n    notin: '\\u2209',\n    owns: '\\u220B',\n    gg: '\\u226B',\n    ll: '\\u226A',\n    sim: '\\u223C',\n    simeq: '\\u2243',\n    perp: '\\u22A5',\n    equiv: '\\u2261',\n    asymp: '\\u224D',\n    smile: '\\u2323',\n    frown: '\\u2322',\n    ne: '\\u2260',\n    neq: '\\u2260',\n    cong: '\\u2245',\n    doteq: '\\u2250',\n    bowtie: '\\u22C8',\n    models: '\\u22A8',\n    notChar: '\\u29F8',\n    Leftrightarrow: '\\u21D4',\n    Leftarrow: '\\u21D0',\n    Rightarrow: '\\u21D2',\n    leftrightarrow: '\\u2194',\n    leftarrow: '\\u2190',\n    gets: '\\u2190',\n    rightarrow: '\\u2192',\n    to: ['\\u2192', { accent: false }],\n    mapsto: '\\u21A6',\n    leftharpoonup: '\\u21BC',\n    leftharpoondown: '\\u21BD',\n    rightharpoonup: '\\u21C0',\n    rightharpoondown: '\\u21C1',\n    nearrow: '\\u2197',\n    searrow: '\\u2198',\n    nwarrow: '\\u2196',\n    swarrow: '\\u2199',\n    rightleftharpoons: '\\u21CC',\n    hookrightarrow: '\\u21AA',\n    hookleftarrow: '\\u21A9',\n    longleftarrow: '\\u27F5',\n    Longleftarrow: '\\u27F8',\n    longrightarrow: '\\u27F6',\n    Longrightarrow: '\\u27F9',\n    Longleftrightarrow: '\\u27FA',\n    longleftrightarrow: '\\u27F7',\n    longmapsto: '\\u27FC',\n    ldots: '\\u2026',\n    cdots: '\\u22EF',\n    vdots: '\\u22EE',\n    ddots: '\\u22F1',\n    dotsc: '\\u2026',\n    dotsb: '\\u22EF',\n    dotsm: '\\u22EF',\n    dotsi: '\\u22EF',\n    dotso: '\\u2026',\n    ldotp: ['\\u002E', { texClass: MmlNode_js_1.TEXCLASS.PUNCT }],\n    cdotp: ['\\u22C5', { texClass: MmlNode_js_1.TEXCLASS.PUNCT }],\n    colon: ['\\u003A', { texClass: MmlNode_js_1.TEXCLASS.PUNCT }]\n});\nnew sm.CharacterMap('mathchar7', ParseMethods_js_1.default.mathchar7, {\n    Gamma: '\\u0393',\n    Delta: '\\u0394',\n    Theta: '\\u0398',\n    Lambda: '\\u039B',\n    Xi: '\\u039E',\n    Pi: '\\u03A0',\n    Sigma: '\\u03A3',\n    Upsilon: '\\u03A5',\n    Phi: '\\u03A6',\n    Psi: '\\u03A8',\n    Omega: '\\u03A9',\n    '_': '\\u005F',\n    '#': '\\u0023',\n    '$': '\\u0024',\n    '%': '\\u0025',\n    '&': '\\u0026',\n    And: '\\u0026'\n});\nnew sm.DelimiterMap('delimiter', ParseMethods_js_1.default.delimiter, {\n    '(': '(',\n    ')': ')',\n    '[': '[',\n    ']': ']',\n    '<': '\\u27E8',\n    '>': '\\u27E9',\n    '\\\\lt': '\\u27E8',\n    '\\\\gt': '\\u27E9',\n    '/': '/',\n    '|': ['|', { texClass: MmlNode_js_1.TEXCLASS.ORD }],\n    '.': '',\n    '\\\\\\\\': '\\\\',\n    '\\\\lmoustache': '\\u23B0',\n    '\\\\rmoustache': '\\u23B1',\n    '\\\\lgroup': '\\u27EE',\n    '\\\\rgroup': '\\u27EF',\n    '\\\\arrowvert': '\\u23D0',\n    '\\\\Arrowvert': '\\u2016',\n    '\\\\bracevert': '\\u23AA',\n    '\\\\Vert': ['\\u2016', { texClass: MmlNode_js_1.TEXCLASS.ORD }],\n    '\\\\|': ['\\u2016', { texClass: MmlNode_js_1.TEXCLASS.ORD }],\n    '\\\\vert': ['|', { texClass: MmlNode_js_1.TEXCLASS.ORD }],\n    '\\\\uparrow': '\\u2191',\n    '\\\\downarrow': '\\u2193',\n    '\\\\updownarrow': '\\u2195',\n    '\\\\Uparrow': '\\u21D1',\n    '\\\\Downarrow': '\\u21D3',\n    '\\\\Updownarrow': '\\u21D5',\n    '\\\\backslash': '\\\\',\n    '\\\\rangle': '\\u27E9',\n    '\\\\langle': '\\u27E8',\n    '\\\\rbrace': '}',\n    '\\\\lbrace': '{',\n    '\\\\}': '}',\n    '\\\\{': '{',\n    '\\\\rceil': '\\u2309',\n    '\\\\lceil': '\\u2308',\n    '\\\\rfloor': '\\u230B',\n    '\\\\lfloor': '\\u230A',\n    '\\\\lbrack': '[',\n    '\\\\rbrack': ']'\n});\nnew sm.CommandMap('macros', {\n    displaystyle: ['SetStyle', 'D', true, 0],\n    textstyle: ['SetStyle', 'T', false, 0],\n    scriptstyle: ['SetStyle', 'S', false, 1],\n    scriptscriptstyle: ['SetStyle', 'SS', false, 2],\n    rm: ['SetFont', TexConstants_js_1.TexConstant.Variant.NORMAL],\n    mit: ['SetFont', TexConstants_js_1.TexConstant.Variant.ITALIC],\n    oldstyle: ['SetFont', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],\n    cal: ['SetFont', TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],\n    it: ['SetFont', TexConstants_js_1.TexConstant.Variant.MATHITALIC],\n    bf: ['SetFont', TexConstants_js_1.TexConstant.Variant.BOLD],\n    bbFont: ['SetFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],\n    scr: ['SetFont', TexConstants_js_1.TexConstant.Variant.SCRIPT],\n    frak: ['SetFont', TexConstants_js_1.TexConstant.Variant.FRAKTUR],\n    sf: ['SetFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],\n    tt: ['SetFont', TexConstants_js_1.TexConstant.Variant.MONOSPACE],\n    mathrm: ['MathFont', TexConstants_js_1.TexConstant.Variant.NORMAL],\n    mathup: ['MathFont', TexConstants_js_1.TexConstant.Variant.NORMAL],\n    mathnormal: ['MathFont', ''],\n    mathbf: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLD],\n    mathbfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLD],\n    mathit: ['MathFont', TexConstants_js_1.TexConstant.Variant.MATHITALIC],\n    mathbfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDITALIC],\n    mathbb: ['MathFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],\n    Bbb: ['MathFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],\n    mathfrak: ['MathFont', TexConstants_js_1.TexConstant.Variant.FRAKTUR],\n    mathbffrak: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDFRAKTUR],\n    mathscr: ['MathFont', TexConstants_js_1.TexConstant.Variant.SCRIPT],\n    mathbfscr: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSCRIPT],\n    mathsf: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],\n    mathsfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],\n    mathbfsf: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF],\n    mathbfsfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF],\n    mathsfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIFITALIC],\n    mathbfsfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIFBOLDITALIC],\n    mathtt: ['MathFont', TexConstants_js_1.TexConstant.Variant.MONOSPACE],\n    mathcal: ['MathFont', TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],\n    mathbfcal: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDCALLIGRAPHIC],\n    symrm: ['MathFont', TexConstants_js_1.TexConstant.Variant.NORMAL],\n    symup: ['MathFont', TexConstants_js_1.TexConstant.Variant.NORMAL],\n    symnormal: ['MathFont', ''],\n    symbf: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLD],\n    symbfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLD],\n    symit: ['MathFont', TexConstants_js_1.TexConstant.Variant.ITALIC],\n    symbfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDITALIC],\n    symbb: ['MathFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],\n    symfrak: ['MathFont', TexConstants_js_1.TexConstant.Variant.FRAKTUR],\n    symbffrak: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDFRAKTUR],\n    symscr: ['MathFont', TexConstants_js_1.TexConstant.Variant.SCRIPT],\n    symbfscr: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSCRIPT],\n    symsf: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],\n    symsfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],\n    symbfsf: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF],\n    symbfsfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF],\n    symsfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIFITALIC],\n    symbfsfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIFBOLDITALIC],\n    symtt: ['MathFont', TexConstants_js_1.TexConstant.Variant.MONOSPACE],\n    symcal: ['MathFont', TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],\n    symbfcal: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDCALLIGRAPHIC],\n    textrm: ['HBox', null, TexConstants_js_1.TexConstant.Variant.NORMAL],\n    textup: ['HBox', null, TexConstants_js_1.TexConstant.Variant.NORMAL],\n    textnormal: ['HBox'],\n    textit: ['HBox', null, TexConstants_js_1.TexConstant.Variant.ITALIC],\n    textbf: ['HBox', null, TexConstants_js_1.TexConstant.Variant.BOLD],\n    textsf: ['HBox', null, TexConstants_js_1.TexConstant.Variant.SANSSERIF],\n    texttt: ['HBox', null, TexConstants_js_1.TexConstant.Variant.MONOSPACE],\n    tiny: ['SetSize', 0.5],\n    Tiny: ['SetSize', 0.6],\n    scriptsize: ['SetSize', 0.7],\n    small: ['SetSize', 0.85],\n    normalsize: ['SetSize', 1.0],\n    large: ['SetSize', 1.2],\n    Large: ['SetSize', 1.44],\n    LARGE: ['SetSize', 1.73],\n    huge: ['SetSize', 2.07],\n    Huge: ['SetSize', 2.49],\n    arcsin: 'NamedFn',\n    arccos: 'NamedFn',\n    arctan: 'NamedFn',\n    arg: 'NamedFn',\n    cos: 'NamedFn',\n    cosh: 'NamedFn',\n    cot: 'NamedFn',\n    coth: 'NamedFn',\n    csc: 'NamedFn',\n    deg: 'NamedFn',\n    det: 'NamedOp',\n    dim: 'NamedFn',\n    exp: 'NamedFn',\n    gcd: 'NamedOp',\n    hom: 'NamedFn',\n    inf: 'NamedOp',\n    ker: 'NamedFn',\n    lg: 'NamedFn',\n    lim: 'NamedOp',\n    liminf: ['NamedOp', 'lim&thinsp;inf'],\n    limsup: ['NamedOp', 'lim&thinsp;sup'],\n    ln: 'NamedFn',\n    log: 'NamedFn',\n    max: 'NamedOp',\n    min: 'NamedOp',\n    Pr: 'NamedOp',\n    sec: 'NamedFn',\n    sin: 'NamedFn',\n    sinh: 'NamedFn',\n    sup: 'NamedOp',\n    tan: 'NamedFn',\n    tanh: 'NamedFn',\n    limits: ['Limits', 1],\n    nolimits: ['Limits', 0],\n    overline: ['UnderOver', '2015'],\n    underline: ['UnderOver', '2015'],\n    overbrace: ['UnderOver', '23DE', 1],\n    underbrace: ['UnderOver', '23DF', 1],\n    overparen: ['UnderOver', '23DC'],\n    underparen: ['UnderOver', '23DD'],\n    overrightarrow: ['UnderOver', '2192'],\n    underrightarrow: ['UnderOver', '2192'],\n    overleftarrow: ['UnderOver', '2190'],\n    underleftarrow: ['UnderOver', '2190'],\n    overleftrightarrow: ['UnderOver', '2194'],\n    underleftrightarrow: ['UnderOver', '2194'],\n    overset: 'Overset',\n    underset: 'Underset',\n    overunderset: 'Overunderset',\n    stackrel: ['Macro', '\\\\mathrel{\\\\mathop{#2}\\\\limits^{#1}}', 2],\n    stackbin: ['Macro', '\\\\mathbin{\\\\mathop{#2}\\\\limits^{#1}}', 2],\n    over: 'Over',\n    overwithdelims: 'Over',\n    atop: 'Over',\n    atopwithdelims: 'Over',\n    above: 'Over',\n    abovewithdelims: 'Over',\n    brace: ['Over', '{', '}'],\n    brack: ['Over', '[', ']'],\n    choose: ['Over', '(', ')'],\n    frac: 'Frac',\n    sqrt: 'Sqrt',\n    root: 'Root',\n    uproot: ['MoveRoot', 'upRoot'],\n    leftroot: ['MoveRoot', 'leftRoot'],\n    left: 'LeftRight',\n    right: 'LeftRight',\n    middle: 'LeftRight',\n    llap: 'Lap',\n    rlap: 'Lap',\n    raise: 'RaiseLower',\n    lower: 'RaiseLower',\n    moveleft: 'MoveLeftRight',\n    moveright: 'MoveLeftRight',\n    ',': ['Spacer', lengths_js_1.MATHSPACE.thinmathspace],\n    ':': ['Spacer', lengths_js_1.MATHSPACE.mediummathspace],\n    '>': ['Spacer', lengths_js_1.MATHSPACE.mediummathspace],\n    ';': ['Spacer', lengths_js_1.MATHSPACE.thickmathspace],\n    '!': ['Spacer', lengths_js_1.MATHSPACE.negativethinmathspace],\n    enspace: ['Spacer', .5],\n    quad: ['Spacer', 1],\n    qquad: ['Spacer', 2],\n    thinspace: ['Spacer', lengths_js_1.MATHSPACE.thinmathspace],\n    negthinspace: ['Spacer', lengths_js_1.MATHSPACE.negativethinmathspace],\n    hskip: 'Hskip',\n    hspace: 'Hskip',\n    kern: 'Hskip',\n    mskip: 'Hskip',\n    mspace: 'Hskip',\n    mkern: 'Hskip',\n    rule: 'rule',\n    Rule: ['Rule'],\n    Space: ['Rule', 'blank'],\n    nonscript: 'Nonscript',\n    big: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 0.85],\n    Big: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 1.15],\n    bigg: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 1.45],\n    Bigg: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 1.75],\n    bigl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 0.85],\n    Bigl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 1.15],\n    biggl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 1.45],\n    Biggl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 1.75],\n    bigr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 0.85],\n    Bigr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 1.15],\n    biggr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 1.45],\n    Biggr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 1.75],\n    bigm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 0.85],\n    Bigm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 1.15],\n    biggm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 1.45],\n    Biggm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 1.75],\n    mathord: ['TeXAtom', MmlNode_js_1.TEXCLASS.ORD],\n    mathop: ['TeXAtom', MmlNode_js_1.TEXCLASS.OP],\n    mathopen: ['TeXAtom', MmlNode_js_1.TEXCLASS.OPEN],\n    mathclose: ['TeXAtom', MmlNode_js_1.TEXCLASS.CLOSE],\n    mathbin: ['TeXAtom', MmlNode_js_1.TEXCLASS.BIN],\n    mathrel: ['TeXAtom', MmlNode_js_1.TEXCLASS.REL],\n    mathpunct: ['TeXAtom', MmlNode_js_1.TEXCLASS.PUNCT],\n    mathinner: ['TeXAtom', MmlNode_js_1.TEXCLASS.INNER],\n    vcenter: ['TeXAtom', MmlNode_js_1.TEXCLASS.VCENTER],\n    buildrel: 'BuildRel',\n    hbox: ['HBox', 0],\n    text: 'HBox',\n    mbox: ['HBox', 0],\n    fbox: 'FBox',\n    boxed: ['Macro', '\\\\fbox{$\\\\displaystyle{#1}$}', 1],\n    framebox: 'FrameBox',\n    strut: 'Strut',\n    mathstrut: ['Macro', '\\\\vphantom{(}'],\n    phantom: 'Phantom',\n    vphantom: ['Phantom', 1, 0],\n    hphantom: ['Phantom', 0, 1],\n    smash: 'Smash',\n    acute: ['Accent', '00B4'],\n    grave: ['Accent', '0060'],\n    ddot: ['Accent', '00A8'],\n    tilde: ['Accent', '007E'],\n    bar: ['Accent', '00AF'],\n    breve: ['Accent', '02D8'],\n    check: ['Accent', '02C7'],\n    hat: ['Accent', '005E'],\n    vec: ['Accent', '2192'],\n    dot: ['Accent', '02D9'],\n    widetilde: ['Accent', '007E', 1],\n    widehat: ['Accent', '005E', 1],\n    matrix: 'Matrix',\n    array: 'Matrix',\n    pmatrix: ['Matrix', '(', ')'],\n    cases: ['Matrix', '{', '', 'left left', null, '.1em', null,\n        true],\n    eqalign: ['Matrix', null, null, 'right left',\n        (0, lengths_js_1.em)(lengths_js_1.MATHSPACE.thickmathspace), '.5em', 'D'],\n    displaylines: ['Matrix', null, null, 'center', null, '.5em', 'D'],\n    cr: 'Cr',\n    '\\\\': 'CrLaTeX',\n    newline: ['CrLaTeX', true],\n    hline: ['HLine', 'solid'],\n    hdashline: ['HLine', 'dashed'],\n    eqalignno: ['Matrix', null, null, 'right left',\n        (0, lengths_js_1.em)(lengths_js_1.MATHSPACE.thickmathspace), '.5em', 'D', null,\n        'right'],\n    leqalignno: ['Matrix', null, null, 'right left',\n        (0, lengths_js_1.em)(lengths_js_1.MATHSPACE.thickmathspace), '.5em', 'D', null,\n        'left'],\n    hfill: 'HFill',\n    hfil: 'HFill',\n    hfilll: 'HFill',\n    bmod: ['Macro', '\\\\mmlToken{mo}[lspace=\"thickmathspace\"' +\n            ' rspace=\"thickmathspace\"]{mod}'],\n    pmod: ['Macro', '\\\\pod{\\\\mmlToken{mi}{mod}\\\\kern 6mu #1}', 1],\n    mod: ['Macro', '\\\\mathchoice{\\\\kern18mu}{\\\\kern12mu}' +\n            '{\\\\kern12mu}{\\\\kern12mu}\\\\mmlToken{mi}{mod}\\\\,\\\\,#1',\n        1],\n    pod: ['Macro', '\\\\mathchoice{\\\\kern18mu}{\\\\kern8mu}' +\n            '{\\\\kern8mu}{\\\\kern8mu}(#1)', 1],\n    iff: ['Macro', '\\\\;\\\\Longleftrightarrow\\\\;'],\n    skew: ['Macro', '{{#2{#3\\\\mkern#1mu}\\\\mkern-#1mu}{}}', 3],\n    pmb: ['Macro', '\\\\rlap{#1}\\\\kern1px{#1}', 1],\n    TeX: ['Macro', 'T\\\\kern-.14em\\\\lower.5ex{E}\\\\kern-.115em X'],\n    LaTeX: ['Macro', 'L\\\\kern-.325em\\\\raise.21em' +\n            '{\\\\scriptstyle{A}}\\\\kern-.17em\\\\TeX'],\n    ' ': ['Macro', '\\\\text{ }'],\n    not: 'Not',\n    dots: 'Dots',\n    space: 'Tilde',\n    '\\u00A0': 'Tilde',\n    begin: 'BeginEnd',\n    end: 'BeginEnd',\n    label: 'HandleLabel',\n    ref: 'HandleRef',\n    nonumber: 'HandleNoTag',\n    mathchoice: 'MathChoice',\n    mmlToken: 'MmlToken'\n}, BaseMethods_js_1.default);\nnew sm.EnvironmentMap('environment', ParseMethods_js_1.default.environment, {\n    array: ['AlignedArray'],\n    equation: ['Equation', null, true],\n    eqnarray: ['EqnArray', null, true, true, 'rcl',\n        ParseUtil_js_1.default.cols(0, lengths_js_1.MATHSPACE.thickmathspace), '.5em']\n}, BaseMethods_js_1.default);\nnew sm.CharacterMap('not_remap', null, {\n    '\\u2190': '\\u219A',\n    '\\u2192': '\\u219B',\n    '\\u2194': '\\u21AE',\n    '\\u21D0': '\\u21CD',\n    '\\u21D2': '\\u21CF',\n    '\\u21D4': '\\u21CE',\n    '\\u2208': '\\u2209',\n    '\\u220B': '\\u220C',\n    '\\u2223': '\\u2224',\n    '\\u2225': '\\u2226',\n    '\\u223C': '\\u2241',\n    '\\u007E': '\\u2241',\n    '\\u2243': '\\u2244',\n    '\\u2245': '\\u2247',\n    '\\u2248': '\\u2249',\n    '\\u224D': '\\u226D',\n    '\\u003D': '\\u2260',\n    '\\u2261': '\\u2262',\n    '\\u003C': '\\u226E',\n    '\\u003E': '\\u226F',\n    '\\u2264': '\\u2270',\n    '\\u2265': '\\u2271',\n    '\\u2272': '\\u2274',\n    '\\u2273': '\\u2275',\n    '\\u2276': '\\u2278',\n    '\\u2277': '\\u2279',\n    '\\u227A': '\\u2280',\n    '\\u227B': '\\u2281',\n    '\\u2282': '\\u2284',\n    '\\u2283': '\\u2285',\n    '\\u2286': '\\u2288',\n    '\\u2287': '\\u2289',\n    '\\u22A2': '\\u22AC',\n    '\\u22A8': '\\u22AD',\n    '\\u22A9': '\\u22AE',\n    '\\u22AB': '\\u22AF',\n    '\\u227C': '\\u22E0',\n    '\\u227D': '\\u22E1',\n    '\\u2291': '\\u22E2',\n    '\\u2292': '\\u22E3',\n    '\\u22B2': '\\u22EA',\n    '\\u22B3': '\\u22EB',\n    '\\u22B4': '\\u22EC',\n    '\\u22B5': '\\u22ED',\n    '\\u2203': '\\u2204'\n});\n//# sourceMappingURL=BaseMappings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/base/BaseMappings.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/base/BaseMethods.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/base/BaseMethods.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar sitem = __importStar(__webpack_require__(/*! ./BaseItems.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseItems.js\"));\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar TexParser_js_1 = __importDefault(__webpack_require__(/*! ../TexParser.js */ \"./node_modules/mathjax-full/js/input/tex/TexParser.js\"));\nvar TexConstants_js_1 = __webpack_require__(/*! ../TexConstants.js */ \"./node_modules/mathjax-full/js/input/tex/TexConstants.js\");\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar MmlNode_js_1 = __webpack_require__(/*! ../../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar Tags_js_1 = __webpack_require__(/*! ../Tags.js */ \"./node_modules/mathjax-full/js/input/tex/Tags.js\");\nvar lengths_js_1 = __webpack_require__(/*! ../../../util/lengths.js */ \"./node_modules/mathjax-full/js/util/lengths.js\");\nvar Entities_js_1 = __webpack_require__(/*! ../../../util/Entities.js */ \"./node_modules/mathjax-full/js/util/Entities.js\");\nvar Options_js_1 = __webpack_require__(/*! ../../../util/Options.js */ \"./node_modules/mathjax-full/js/util/Options.js\");\nvar BaseMethods = {};\nvar P_HEIGHT = 1.2 / .85;\nvar MmlTokenAllow = {\n    fontfamily: 1, fontsize: 1, fontweight: 1, fontstyle: 1,\n    color: 1, background: 1,\n    id: 1, 'class': 1, href: 1, style: 1\n};\nBaseMethods.Open = function (parser, _c) {\n    parser.Push(parser.itemFactory.create('open'));\n};\nBaseMethods.Close = function (parser, _c) {\n    parser.Push(parser.itemFactory.create('close'));\n};\nBaseMethods.Tilde = function (parser, _c) {\n    parser.Push(parser.create('token', 'mtext', {}, Entities_js_1.entities.nbsp));\n};\nBaseMethods.Space = function (_parser, _c) { };\nBaseMethods.Superscript = function (parser, _c) {\n    var _a;\n    if (parser.GetNext().match(/\\d/)) {\n        parser.string = parser.string.substr(0, parser.i + 1) +\n            ' ' + parser.string.substr(parser.i + 1);\n    }\n    var primes;\n    var base;\n    var top = parser.stack.Top();\n    if (top.isKind('prime')) {\n        _a = __read(top.Peek(2), 2), base = _a[0], primes = _a[1];\n        parser.stack.Pop();\n    }\n    else {\n        base = parser.stack.Prev();\n        if (!base) {\n            base = parser.create('token', 'mi', {}, '');\n        }\n    }\n    var movesupsub = NodeUtil_js_1.default.getProperty(base, 'movesupsub');\n    var position = NodeUtil_js_1.default.isType(base, 'msubsup') ? base.sup :\n        base.over;\n    if ((NodeUtil_js_1.default.isType(base, 'msubsup') && !NodeUtil_js_1.default.isType(base, 'msup') &&\n        NodeUtil_js_1.default.getChildAt(base, base.sup)) ||\n        (NodeUtil_js_1.default.isType(base, 'munderover') && !NodeUtil_js_1.default.isType(base, 'mover') &&\n            NodeUtil_js_1.default.getChildAt(base, base.over) &&\n            !NodeUtil_js_1.default.getProperty(base, 'subsupOK'))) {\n        throw new TexError_js_1.default('DoubleExponent', 'Double exponent: use braces to clarify');\n    }\n    if (!NodeUtil_js_1.default.isType(base, 'msubsup') || NodeUtil_js_1.default.isType(base, 'msup')) {\n        if (movesupsub) {\n            if (!NodeUtil_js_1.default.isType(base, 'munderover') || NodeUtil_js_1.default.isType(base, 'mover') ||\n                NodeUtil_js_1.default.getChildAt(base, base.over)) {\n                base = parser.create('node', 'munderover', [base], { movesupsub: true });\n            }\n            position = base.over;\n        }\n        else {\n            base = parser.create('node', 'msubsup', [base]);\n            position = base.sup;\n        }\n    }\n    parser.Push(parser.itemFactory.create('subsup', base).setProperties({\n        position: position, primes: primes, movesupsub: movesupsub\n    }));\n};\nBaseMethods.Subscript = function (parser, _c) {\n    var _a;\n    if (parser.GetNext().match(/\\d/)) {\n        parser.string =\n            parser.string.substr(0, parser.i + 1) + ' ' +\n                parser.string.substr(parser.i + 1);\n    }\n    var primes, base;\n    var top = parser.stack.Top();\n    if (top.isKind('prime')) {\n        _a = __read(top.Peek(2), 2), base = _a[0], primes = _a[1];\n        parser.stack.Pop();\n    }\n    else {\n        base = parser.stack.Prev();\n        if (!base) {\n            base = parser.create('token', 'mi', {}, '');\n        }\n    }\n    var movesupsub = NodeUtil_js_1.default.getProperty(base, 'movesupsub');\n    var position = NodeUtil_js_1.default.isType(base, 'msubsup') ?\n        base.sub : base.under;\n    if ((NodeUtil_js_1.default.isType(base, 'msubsup') && !NodeUtil_js_1.default.isType(base, 'msup') &&\n        NodeUtil_js_1.default.getChildAt(base, base.sub)) ||\n        (NodeUtil_js_1.default.isType(base, 'munderover') && !NodeUtil_js_1.default.isType(base, 'mover') &&\n            NodeUtil_js_1.default.getChildAt(base, base.under) &&\n            !NodeUtil_js_1.default.getProperty(base, 'subsupOK'))) {\n        throw new TexError_js_1.default('DoubleSubscripts', 'Double subscripts: use braces to clarify');\n    }\n    if (!NodeUtil_js_1.default.isType(base, 'msubsup') || NodeUtil_js_1.default.isType(base, 'msup')) {\n        if (movesupsub) {\n            if (!NodeUtil_js_1.default.isType(base, 'munderover') || NodeUtil_js_1.default.isType(base, 'mover') ||\n                NodeUtil_js_1.default.getChildAt(base, base.under)) {\n                base = parser.create('node', 'munderover', [base], { movesupsub: true });\n            }\n            position = base.under;\n        }\n        else {\n            base = parser.create('node', 'msubsup', [base]);\n            position = base.sub;\n        }\n    }\n    parser.Push(parser.itemFactory.create('subsup', base).setProperties({\n        position: position, primes: primes, movesupsub: movesupsub\n    }));\n};\nBaseMethods.Prime = function (parser, c) {\n    var base = parser.stack.Prev();\n    if (!base) {\n        base = parser.create('node', 'mi');\n    }\n    if (NodeUtil_js_1.default.isType(base, 'msubsup') && !NodeUtil_js_1.default.isType(base, 'msup') &&\n        NodeUtil_js_1.default.getChildAt(base, base.sup)) {\n        throw new TexError_js_1.default('DoubleExponentPrime', 'Prime causes double exponent: use braces to clarify');\n    }\n    var sup = '';\n    parser.i--;\n    do {\n        sup += Entities_js_1.entities.prime;\n        parser.i++, c = parser.GetNext();\n    } while (c === '\\'' || c === Entities_js_1.entities.rsquo);\n    sup = ['', '\\u2032', '\\u2033', '\\u2034', '\\u2057'][sup.length] || sup;\n    var node = parser.create('token', 'mo', { variantForm: true }, sup);\n    parser.Push(parser.itemFactory.create('prime', base, node));\n};\nBaseMethods.Comment = function (parser, _c) {\n    while (parser.i < parser.string.length && parser.string.charAt(parser.i) !== '\\n') {\n        parser.i++;\n    }\n};\nBaseMethods.Hash = function (_parser, _c) {\n    throw new TexError_js_1.default('CantUseHash1', 'You can\\'t use \\'macro parameter character #\\' in math mode');\n};\nBaseMethods.MathFont = function (parser, name, variant) {\n    var text = parser.GetArgument(name);\n    var mml = new TexParser_js_1.default(text, __assign(__assign({}, parser.stack.env), { font: variant, multiLetterIdentifiers: /^[a-zA-Z]+/, noAutoOP: true }), parser.configuration).mml();\n    parser.Push(parser.create('node', 'TeXAtom', [mml]));\n};\nBaseMethods.SetFont = function (parser, _name, font) {\n    parser.stack.env['font'] = font;\n};\nBaseMethods.SetStyle = function (parser, _name, texStyle, style, level) {\n    parser.stack.env['style'] = texStyle;\n    parser.stack.env['level'] = level;\n    parser.Push(parser.itemFactory.create('style').setProperty('styles', { displaystyle: style, scriptlevel: level }));\n};\nBaseMethods.SetSize = function (parser, _name, size) {\n    parser.stack.env['size'] = size;\n    parser.Push(parser.itemFactory.create('style').setProperty('styles', { mathsize: (0, lengths_js_1.em)(size) }));\n};\nBaseMethods.Spacer = function (parser, _name, space) {\n    var node = parser.create('node', 'mspace', [], { width: (0, lengths_js_1.em)(space) });\n    var style = parser.create('node', 'mstyle', [node], { scriptlevel: 0 });\n    parser.Push(style);\n};\nBaseMethods.LeftRight = function (parser, name) {\n    var first = name.substr(1);\n    parser.Push(parser.itemFactory.create(first, parser.GetDelimiter(name), parser.stack.env.color));\n};\nBaseMethods.NamedFn = function (parser, name, id) {\n    if (!id) {\n        id = name.substr(1);\n    }\n    var mml = parser.create('token', 'mi', { texClass: MmlNode_js_1.TEXCLASS.OP }, id);\n    parser.Push(parser.itemFactory.create('fn', mml));\n};\nBaseMethods.NamedOp = function (parser, name, id) {\n    if (!id) {\n        id = name.substr(1);\n    }\n    id = id.replace(/&thinsp;/, '\\u2006');\n    var mml = parser.create('token', 'mo', {\n        movablelimits: true,\n        movesupsub: true,\n        form: TexConstants_js_1.TexConstant.Form.PREFIX,\n        texClass: MmlNode_js_1.TEXCLASS.OP\n    }, id);\n    parser.Push(mml);\n};\nBaseMethods.Limits = function (parser, _name, limits) {\n    var op = parser.stack.Prev(true);\n    if (!op || (NodeUtil_js_1.default.getTexClass(NodeUtil_js_1.default.getCoreMO(op)) !== MmlNode_js_1.TEXCLASS.OP &&\n        NodeUtil_js_1.default.getProperty(op, 'movesupsub') == null)) {\n        throw new TexError_js_1.default('MisplacedLimits', '%1 is allowed only on operators', parser.currentCS);\n    }\n    var top = parser.stack.Top();\n    var node;\n    if (NodeUtil_js_1.default.isType(op, 'munderover') && !limits) {\n        node = parser.create('node', 'msubsup');\n        NodeUtil_js_1.default.copyChildren(op, node);\n        op = top.Last = node;\n    }\n    else if (NodeUtil_js_1.default.isType(op, 'msubsup') && limits) {\n        node = parser.create('node', 'munderover');\n        NodeUtil_js_1.default.copyChildren(op, node);\n        op = top.Last = node;\n    }\n    NodeUtil_js_1.default.setProperty(op, 'movesupsub', limits ? true : false);\n    NodeUtil_js_1.default.setProperties(NodeUtil_js_1.default.getCoreMO(op), { 'movablelimits': false });\n    if (NodeUtil_js_1.default.getAttribute(op, 'movablelimits') ||\n        NodeUtil_js_1.default.getProperty(op, 'movablelimits')) {\n        NodeUtil_js_1.default.setProperties(op, { 'movablelimits': false });\n    }\n};\nBaseMethods.Over = function (parser, name, open, close) {\n    var mml = parser.itemFactory.create('over').setProperty('name', parser.currentCS);\n    if (open || close) {\n        mml.setProperty('open', open);\n        mml.setProperty('close', close);\n    }\n    else if (name.match(/withdelims$/)) {\n        mml.setProperty('open', parser.GetDelimiter(name));\n        mml.setProperty('close', parser.GetDelimiter(name));\n    }\n    if (name.match(/^\\\\above/)) {\n        mml.setProperty('thickness', parser.GetDimen(name));\n    }\n    else if (name.match(/^\\\\atop/) || open || close) {\n        mml.setProperty('thickness', 0);\n    }\n    parser.Push(mml);\n};\nBaseMethods.Frac = function (parser, name) {\n    var num = parser.ParseArg(name);\n    var den = parser.ParseArg(name);\n    var node = parser.create('node', 'mfrac', [num, den]);\n    parser.Push(node);\n};\nBaseMethods.Sqrt = function (parser, name) {\n    var n = parser.GetBrackets(name);\n    var arg = parser.GetArgument(name);\n    if (arg === '\\\\frac') {\n        arg += '{' + parser.GetArgument(arg) + '}{' + parser.GetArgument(arg) + '}';\n    }\n    var mml = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();\n    if (!n) {\n        mml = parser.create('node', 'msqrt', [mml]);\n    }\n    else {\n        mml = parser.create('node', 'mroot', [mml, parseRoot(parser, n)]);\n    }\n    parser.Push(mml);\n};\nfunction parseRoot(parser, n) {\n    var env = parser.stack.env;\n    var inRoot = env['inRoot'];\n    env['inRoot'] = true;\n    var newParser = new TexParser_js_1.default(n, env, parser.configuration);\n    var node = newParser.mml();\n    var global = newParser.stack.global;\n    if (global['leftRoot'] || global['upRoot']) {\n        var def = {};\n        if (global['leftRoot']) {\n            def['width'] = global['leftRoot'];\n        }\n        if (global['upRoot']) {\n            def['voffset'] = global['upRoot'];\n            def['height'] = global['upRoot'];\n        }\n        node = parser.create('node', 'mpadded', [node], def);\n    }\n    env['inRoot'] = inRoot;\n    return node;\n}\nBaseMethods.Root = function (parser, name) {\n    var n = parser.GetUpTo(name, '\\\\of');\n    var arg = parser.ParseArg(name);\n    var node = parser.create('node', 'mroot', [arg, parseRoot(parser, n)]);\n    parser.Push(node);\n};\nBaseMethods.MoveRoot = function (parser, name, id) {\n    if (!parser.stack.env['inRoot']) {\n        throw new TexError_js_1.default('MisplacedMoveRoot', '%1 can appear only within a root', parser.currentCS);\n    }\n    if (parser.stack.global[id]) {\n        throw new TexError_js_1.default('MultipleMoveRoot', 'Multiple use of %1', parser.currentCS);\n    }\n    var n = parser.GetArgument(name);\n    if (!n.match(/-?[0-9]+/)) {\n        throw new TexError_js_1.default('IntegerArg', 'The argument to %1 must be an integer', parser.currentCS);\n    }\n    n = (parseInt(n, 10) / 15) + 'em';\n    if (n.substr(0, 1) !== '-') {\n        n = '+' + n;\n    }\n    parser.stack.global[id] = n;\n};\nBaseMethods.Accent = function (parser, name, accent, stretchy) {\n    var c = parser.ParseArg(name);\n    var def = __assign(__assign({}, ParseUtil_js_1.default.getFontDef(parser)), { accent: true, mathaccent: true });\n    var entity = NodeUtil_js_1.default.createEntity(accent);\n    var moNode = parser.create('token', 'mo', def, entity);\n    var mml = moNode;\n    NodeUtil_js_1.default.setAttribute(mml, 'stretchy', stretchy ? true : false);\n    var mo = (NodeUtil_js_1.default.isEmbellished(c) ? NodeUtil_js_1.default.getCoreMO(c) : c);\n    if (NodeUtil_js_1.default.isType(mo, 'mo') || NodeUtil_js_1.default.getProperty(mo, 'movablelimits')) {\n        NodeUtil_js_1.default.setProperties(mo, { 'movablelimits': false });\n    }\n    var muoNode = parser.create('node', 'munderover');\n    NodeUtil_js_1.default.setChild(muoNode, 0, c);\n    NodeUtil_js_1.default.setChild(muoNode, 1, null);\n    NodeUtil_js_1.default.setChild(muoNode, 2, mml);\n    var texAtom = parser.create('node', 'TeXAtom', [muoNode]);\n    parser.Push(texAtom);\n};\nBaseMethods.UnderOver = function (parser, name, c, stack) {\n    var entity = NodeUtil_js_1.default.createEntity(c);\n    var mo = parser.create('token', 'mo', { stretchy: true, accent: true }, entity);\n    var pos = (name.charAt(1) === 'o' ? 'over' : 'under');\n    var base = parser.ParseArg(name);\n    parser.Push(ParseUtil_js_1.default.underOver(parser, base, mo, pos, stack));\n};\nBaseMethods.Overset = function (parser, name) {\n    var top = parser.ParseArg(name);\n    var base = parser.ParseArg(name);\n    ParseUtil_js_1.default.checkMovableLimits(base);\n    if (top.isKind('mo')) {\n        NodeUtil_js_1.default.setAttribute(top, 'accent', false);\n    }\n    var node = parser.create('node', 'mover', [base, top]);\n    parser.Push(node);\n};\nBaseMethods.Underset = function (parser, name) {\n    var bot = parser.ParseArg(name);\n    var base = parser.ParseArg(name);\n    ParseUtil_js_1.default.checkMovableLimits(base);\n    if (bot.isKind('mo')) {\n        NodeUtil_js_1.default.setAttribute(bot, 'accent', false);\n    }\n    var node = parser.create('node', 'munder', [base, bot], { accentunder: false });\n    parser.Push(node);\n};\nBaseMethods.Overunderset = function (parser, name) {\n    var top = parser.ParseArg(name);\n    var bot = parser.ParseArg(name);\n    var base = parser.ParseArg(name);\n    ParseUtil_js_1.default.checkMovableLimits(base);\n    if (top.isKind('mo')) {\n        NodeUtil_js_1.default.setAttribute(top, 'accent', false);\n    }\n    if (bot.isKind('mo')) {\n        NodeUtil_js_1.default.setAttribute(bot, 'accent', false);\n    }\n    var node = parser.create('node', 'munderover', [base, bot, top], { accent: false, accentunder: false });\n    parser.Push(node);\n};\nBaseMethods.TeXAtom = function (parser, name, mclass) {\n    var def = { texClass: mclass };\n    var mml;\n    var node;\n    var parsed;\n    if (mclass === MmlNode_js_1.TEXCLASS.OP) {\n        def['movesupsub'] = def['movablelimits'] = true;\n        var arg = parser.GetArgument(name);\n        var match = arg.match(/^\\s*\\\\rm\\s+([a-zA-Z0-9 ]+)$/);\n        if (match) {\n            def['mathvariant'] = TexConstants_js_1.TexConstant.Variant.NORMAL;\n            node = parser.create('token', 'mi', def, match[1]);\n        }\n        else {\n            parsed = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();\n            node = parser.create('node', 'TeXAtom', [parsed], def);\n        }\n        mml = parser.itemFactory.create('fn', node);\n    }\n    else {\n        parsed = parser.ParseArg(name);\n        mml = parser.create('node', 'TeXAtom', [parsed], def);\n    }\n    parser.Push(mml);\n};\nBaseMethods.MmlToken = function (parser, name) {\n    var kind = parser.GetArgument(name);\n    var attr = parser.GetBrackets(name, '').replace(/^\\s+/, '');\n    var text = parser.GetArgument(name);\n    var def = {};\n    var keep = [];\n    var node;\n    try {\n        node = parser.create('node', kind);\n    }\n    catch (e) {\n        node = null;\n    }\n    if (!node || !node.isToken) {\n        throw new TexError_js_1.default('NotMathMLToken', '%1 is not a token element', kind);\n    }\n    while (attr !== '') {\n        var match = attr.match(/^([a-z]+)\\s*=\\s*('[^']*'|\"[^\"]*\"|[^ ,]*)\\s*,?\\s*/i);\n        if (!match) {\n            throw new TexError_js_1.default('InvalidMathMLAttr', 'Invalid MathML attribute: %1', attr);\n        }\n        if (!node.attributes.hasDefault(match[1]) && !MmlTokenAllow[match[1]]) {\n            throw new TexError_js_1.default('UnknownAttrForElement', '%1 is not a recognized attribute for %2', match[1], kind);\n        }\n        var value = ParseUtil_js_1.default.MmlFilterAttribute(parser, match[1], match[2].replace(/^(['\"])(.*)\\1$/, '$2'));\n        if (value) {\n            if (value.toLowerCase() === 'true') {\n                value = true;\n            }\n            else if (value.toLowerCase() === 'false') {\n                value = false;\n            }\n            def[match[1]] = value;\n            keep.push(match[1]);\n        }\n        attr = attr.substr(match[0].length);\n    }\n    if (keep.length) {\n        def['mjx-keep-attrs'] = keep.join(' ');\n    }\n    var textNode = parser.create('text', text);\n    node.appendChild(textNode);\n    NodeUtil_js_1.default.setProperties(node, def);\n    parser.Push(node);\n};\nBaseMethods.Strut = function (parser, _name) {\n    var row = parser.create('node', 'mrow');\n    var padded = parser.create('node', 'mpadded', [row], { height: '8.6pt', depth: '3pt', width: 0 });\n    parser.Push(padded);\n};\nBaseMethods.Phantom = function (parser, name, v, h) {\n    var box = parser.create('node', 'mphantom', [parser.ParseArg(name)]);\n    if (v || h) {\n        box = parser.create('node', 'mpadded', [box]);\n        if (h) {\n            NodeUtil_js_1.default.setAttribute(box, 'height', 0);\n            NodeUtil_js_1.default.setAttribute(box, 'depth', 0);\n        }\n        if (v) {\n            NodeUtil_js_1.default.setAttribute(box, 'width', 0);\n        }\n    }\n    var atom = parser.create('node', 'TeXAtom', [box]);\n    parser.Push(atom);\n};\nBaseMethods.Smash = function (parser, name) {\n    var bt = ParseUtil_js_1.default.trimSpaces(parser.GetBrackets(name, ''));\n    var smash = parser.create('node', 'mpadded', [parser.ParseArg(name)]);\n    switch (bt) {\n        case 'b':\n            NodeUtil_js_1.default.setAttribute(smash, 'depth', 0);\n            break;\n        case 't':\n            NodeUtil_js_1.default.setAttribute(smash, 'height', 0);\n            break;\n        default:\n            NodeUtil_js_1.default.setAttribute(smash, 'height', 0);\n            NodeUtil_js_1.default.setAttribute(smash, 'depth', 0);\n    }\n    var atom = parser.create('node', 'TeXAtom', [smash]);\n    parser.Push(atom);\n};\nBaseMethods.Lap = function (parser, name) {\n    var mml = parser.create('node', 'mpadded', [parser.ParseArg(name)], { width: 0 });\n    if (name === '\\\\llap') {\n        NodeUtil_js_1.default.setAttribute(mml, 'lspace', '-1width');\n    }\n    var atom = parser.create('node', 'TeXAtom', [mml]);\n    parser.Push(atom);\n};\nBaseMethods.RaiseLower = function (parser, name) {\n    var h = parser.GetDimen(name);\n    var item = parser.itemFactory.create('position').setProperties({ name: parser.currentCS, move: 'vertical' });\n    if (h.charAt(0) === '-') {\n        h = h.slice(1);\n        name = name.substr(1) === 'raise' ? '\\\\lower' : '\\\\raise';\n    }\n    if (name === '\\\\lower') {\n        item.setProperty('dh', '-' + h);\n        item.setProperty('dd', '+' + h);\n    }\n    else {\n        item.setProperty('dh', '+' + h);\n        item.setProperty('dd', '-' + h);\n    }\n    parser.Push(item);\n};\nBaseMethods.MoveLeftRight = function (parser, name) {\n    var h = parser.GetDimen(name);\n    var nh = (h.charAt(0) === '-' ? h.slice(1) : '-' + h);\n    if (name === '\\\\moveleft') {\n        var tmp = h;\n        h = nh;\n        nh = tmp;\n    }\n    parser.Push(parser.itemFactory.create('position').setProperties({\n        name: parser.currentCS, move: 'horizontal',\n        left: parser.create('node', 'mspace', [], { width: h }),\n        right: parser.create('node', 'mspace', [], { width: nh })\n    }));\n};\nBaseMethods.Hskip = function (parser, name) {\n    var node = parser.create('node', 'mspace', [], { width: parser.GetDimen(name) });\n    parser.Push(node);\n};\nBaseMethods.Nonscript = function (parser, _name) {\n    parser.Push(parser.itemFactory.create('nonscript'));\n};\nBaseMethods.Rule = function (parser, name, style) {\n    var w = parser.GetDimen(name), h = parser.GetDimen(name), d = parser.GetDimen(name);\n    var def = { width: w, height: h, depth: d };\n    if (style !== 'blank') {\n        def['mathbackground'] = (parser.stack.env['color'] || 'black');\n    }\n    var node = parser.create('node', 'mspace', [], def);\n    parser.Push(node);\n};\nBaseMethods.rule = function (parser, name) {\n    var v = parser.GetBrackets(name), w = parser.GetDimen(name), h = parser.GetDimen(name);\n    var mml = parser.create('node', 'mspace', [], {\n        width: w, height: h,\n        mathbackground: (parser.stack.env['color'] || 'black')\n    });\n    if (v) {\n        mml = parser.create('node', 'mpadded', [mml], { voffset: v });\n        if (v.match(/^\\-/)) {\n            NodeUtil_js_1.default.setAttribute(mml, 'height', v);\n            NodeUtil_js_1.default.setAttribute(mml, 'depth', '+' + v.substr(1));\n        }\n        else {\n            NodeUtil_js_1.default.setAttribute(mml, 'height', '+' + v);\n        }\n    }\n    parser.Push(mml);\n};\nBaseMethods.MakeBig = function (parser, name, mclass, size) {\n    size *= P_HEIGHT;\n    var sizeStr = String(size).replace(/(\\.\\d\\d\\d).+/, '$1') + 'em';\n    var delim = parser.GetDelimiter(name, true);\n    var mo = parser.create('token', 'mo', {\n        minsize: sizeStr, maxsize: sizeStr,\n        fence: true, stretchy: true, symmetric: true\n    }, delim);\n    var node = parser.create('node', 'TeXAtom', [mo], { texClass: mclass });\n    parser.Push(node);\n};\nBaseMethods.BuildRel = function (parser, name) {\n    var top = parser.ParseUpTo(name, '\\\\over');\n    var bot = parser.ParseArg(name);\n    var node = parser.create('node', 'munderover');\n    NodeUtil_js_1.default.setChild(node, 0, bot);\n    NodeUtil_js_1.default.setChild(node, 1, null);\n    NodeUtil_js_1.default.setChild(node, 2, top);\n    var atom = parser.create('node', 'TeXAtom', [node], { texClass: MmlNode_js_1.TEXCLASS.REL });\n    parser.Push(atom);\n};\nBaseMethods.HBox = function (parser, name, style, font) {\n    parser.PushAll(ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name), style, font));\n};\nBaseMethods.FBox = function (parser, name) {\n    var internal = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name));\n    var node = parser.create('node', 'menclose', internal, { notation: 'box' });\n    parser.Push(node);\n};\nBaseMethods.FrameBox = function (parser, name) {\n    var width = parser.GetBrackets(name);\n    var pos = parser.GetBrackets(name) || 'c';\n    var mml = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name));\n    if (width) {\n        mml = [parser.create('node', 'mpadded', mml, {\n                width: width,\n                'data-align': (0, Options_js_1.lookup)(pos, { l: 'left', r: 'right' }, 'center')\n            })];\n    }\n    var node = parser.create('node', 'TeXAtom', [parser.create('node', 'menclose', mml, { notation: 'box' })], { texClass: MmlNode_js_1.TEXCLASS.ORD });\n    parser.Push(node);\n};\nBaseMethods.Not = function (parser, _name) {\n    parser.Push(parser.itemFactory.create('not'));\n};\nBaseMethods.Dots = function (parser, _name) {\n    var ldotsEntity = NodeUtil_js_1.default.createEntity('2026');\n    var cdotsEntity = NodeUtil_js_1.default.createEntity('22EF');\n    var ldots = parser.create('token', 'mo', { stretchy: false }, ldotsEntity);\n    var cdots = parser.create('token', 'mo', { stretchy: false }, cdotsEntity);\n    parser.Push(parser.itemFactory.create('dots').setProperties({\n        ldots: ldots,\n        cdots: cdots\n    }));\n};\nBaseMethods.Matrix = function (parser, _name, open, close, align, spacing, vspacing, style, cases, numbered) {\n    var c = parser.GetNext();\n    if (c === '') {\n        throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);\n    }\n    if (c === '{') {\n        parser.i++;\n    }\n    else {\n        parser.string = c + '}' + parser.string.slice(parser.i + 1);\n        parser.i = 0;\n    }\n    var array = parser.itemFactory.create('array').setProperty('requireClose', true);\n    array.arraydef = {\n        rowspacing: (vspacing || '4pt'),\n        columnspacing: (spacing || '1em')\n    };\n    if (cases) {\n        array.setProperty('isCases', true);\n    }\n    if (numbered) {\n        array.setProperty('isNumbered', true);\n        array.arraydef.side = numbered;\n    }\n    if (open || close) {\n        array.setProperty('open', open);\n        array.setProperty('close', close);\n    }\n    if (style === 'D') {\n        array.arraydef.displaystyle = true;\n    }\n    if (align != null) {\n        array.arraydef.columnalign = align;\n    }\n    parser.Push(array);\n};\nBaseMethods.Entry = function (parser, name) {\n    parser.Push(parser.itemFactory.create('cell').setProperties({ isEntry: true, name: name }));\n    var top = parser.stack.Top();\n    var env = top.getProperty('casesEnv');\n    var cases = top.getProperty('isCases');\n    if (!cases && !env)\n        return;\n    var str = parser.string;\n    var braces = 0, close = -1, i = parser.i, m = str.length;\n    var end = (env ? new RegExp(\"^\\\\\\\\end\\\\s*\\\\{\".concat(env.replace(/\\*/, '\\\\*'), \"\\\\}\")) : null);\n    while (i < m) {\n        var c = str.charAt(i);\n        if (c === '{') {\n            braces++;\n            i++;\n        }\n        else if (c === '}') {\n            if (braces === 0) {\n                m = 0;\n            }\n            else {\n                braces--;\n                if (braces === 0 && close < 0) {\n                    close = i - parser.i;\n                }\n                i++;\n            }\n        }\n        else if (c === '&' && braces === 0) {\n            throw new TexError_js_1.default('ExtraAlignTab', 'Extra alignment tab in \\\\cases text');\n        }\n        else if (c === '\\\\') {\n            var rest = str.substr(i);\n            if (rest.match(/^((\\\\cr)[^a-zA-Z]|\\\\\\\\)/) || (end && rest.match(end))) {\n                m = 0;\n            }\n            else {\n                i += 2;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    var text = str.substr(parser.i, i - parser.i);\n    if (!text.match(/^\\s*\\\\text[^a-zA-Z]/) || close !== text.replace(/\\s+$/, '').length - 1) {\n        var internal = ParseUtil_js_1.default.internalMath(parser, ParseUtil_js_1.default.trimSpaces(text), 0);\n        parser.PushAll(internal);\n        parser.i = i;\n    }\n};\nBaseMethods.Cr = function (parser, name) {\n    parser.Push(parser.itemFactory.create('cell').setProperties({ isCR: true, name: name }));\n};\nBaseMethods.CrLaTeX = function (parser, name, nobrackets) {\n    if (nobrackets === void 0) { nobrackets = false; }\n    var n;\n    if (!nobrackets) {\n        if (parser.string.charAt(parser.i) === '*') {\n            parser.i++;\n        }\n        if (parser.string.charAt(parser.i) === '[') {\n            var dim = parser.GetBrackets(name, '');\n            var _a = __read(ParseUtil_js_1.default.matchDimen(dim), 2), value = _a[0], unit = _a[1];\n            if (dim && !value) {\n                throw new TexError_js_1.default('BracketMustBeDimension', 'Bracket argument to %1 must be a dimension', parser.currentCS);\n            }\n            n = value + unit;\n        }\n    }\n    parser.Push(parser.itemFactory.create('cell').setProperties({ isCR: true, name: name, linebreak: true }));\n    var top = parser.stack.Top();\n    var node;\n    if (top instanceof sitem.ArrayItem) {\n        if (n) {\n            top.addRowSpacing(n);\n        }\n    }\n    else {\n        if (n) {\n            node = parser.create('node', 'mspace', [], { depth: n });\n            parser.Push(node);\n        }\n        node = parser.create('node', 'mspace', [], { linebreak: TexConstants_js_1.TexConstant.LineBreak.NEWLINE });\n        parser.Push(node);\n    }\n};\nBaseMethods.HLine = function (parser, _name, style) {\n    if (style == null) {\n        style = 'solid';\n    }\n    var top = parser.stack.Top();\n    if (!(top instanceof sitem.ArrayItem) || top.Size()) {\n        throw new TexError_js_1.default('Misplaced', 'Misplaced %1', parser.currentCS);\n    }\n    if (!top.table.length) {\n        top.frame.push('top');\n    }\n    else {\n        var lines = (top.arraydef['rowlines'] ? top.arraydef['rowlines'].split(/ /) : []);\n        while (lines.length < top.table.length) {\n            lines.push('none');\n        }\n        lines[top.table.length - 1] = style;\n        top.arraydef['rowlines'] = lines.join(' ');\n    }\n};\nBaseMethods.HFill = function (parser, _name) {\n    var top = parser.stack.Top();\n    if (top instanceof sitem.ArrayItem) {\n        top.hfill.push(top.Size());\n    }\n    else {\n        throw new TexError_js_1.default('UnsupportedHFill', 'Unsupported use of %1', parser.currentCS);\n    }\n};\nBaseMethods.BeginEnd = function (parser, name) {\n    var env = parser.GetArgument(name);\n    if (env.match(/\\\\/i)) {\n        throw new TexError_js_1.default('InvalidEnv', 'Invalid environment name \\'%1\\'', env);\n    }\n    var macro = parser.configuration.handlers.get('environment').lookup(env);\n    if (macro && name === '\\\\end') {\n        if (!macro.args[0]) {\n            var mml = parser.itemFactory.create('end').setProperty('name', env);\n            parser.Push(mml);\n            return;\n        }\n        parser.stack.env['closing'] = env;\n    }\n    ParseUtil_js_1.default.checkMaxMacros(parser, false);\n    parser.parse('environment', [parser, env]);\n};\nBaseMethods.Array = function (parser, begin, open, close, align, spacing, vspacing, style, raggedHeight) {\n    if (!align) {\n        align = parser.GetArgument('\\\\begin{' + begin.getName() + '}');\n    }\n    var lines = ('c' + align).replace(/[^clr|:]/g, '').replace(/[^|:]([|:])+/g, '$1');\n    align = align.replace(/[^clr]/g, '').split('').join(' ');\n    align = align.replace(/l/g, 'left').replace(/r/g, 'right').replace(/c/g, 'center');\n    var array = parser.itemFactory.create('array');\n    array.arraydef = {\n        columnalign: align,\n        columnspacing: (spacing || '1em'),\n        rowspacing: (vspacing || '4pt')\n    };\n    if (lines.match(/[|:]/)) {\n        if (lines.charAt(0).match(/[|:]/)) {\n            array.frame.push('left');\n            array.dashed = lines.charAt(0) === ':';\n        }\n        if (lines.charAt(lines.length - 1).match(/[|:]/)) {\n            array.frame.push('right');\n        }\n        lines = lines.substr(1, lines.length - 2);\n        array.arraydef.columnlines =\n            lines.split('').join(' ').replace(/[^|: ]/g, 'none').replace(/\\|/g, 'solid').replace(/:/g, 'dashed');\n    }\n    if (open) {\n        array.setProperty('open', parser.convertDelimiter(open));\n    }\n    if (close) {\n        array.setProperty('close', parser.convertDelimiter(close));\n    }\n    if ((style || '').charAt(1) === '\\'') {\n        array.arraydef['data-cramped'] = true;\n        style = style.charAt(0);\n    }\n    if (style === 'D') {\n        array.arraydef['displaystyle'] = true;\n    }\n    else if (style) {\n        array.arraydef['displaystyle'] = false;\n    }\n    if (style === 'S') {\n        array.arraydef['scriptlevel'] = 1;\n    }\n    if (raggedHeight) {\n        array.arraydef['useHeight'] = false;\n    }\n    parser.Push(begin);\n    return array;\n};\nBaseMethods.AlignedArray = function (parser, begin) {\n    var align = parser.GetBrackets('\\\\begin{' + begin.getName() + '}');\n    var item = BaseMethods.Array(parser, begin);\n    return ParseUtil_js_1.default.setArrayAlign(item, align);\n};\nBaseMethods.Equation = function (parser, begin, numbered) {\n    parser.Push(begin);\n    ParseUtil_js_1.default.checkEqnEnv(parser);\n    return parser.itemFactory.create('equation', numbered).\n        setProperty('name', begin.getName());\n};\nBaseMethods.EqnArray = function (parser, begin, numbered, taggable, align, spacing) {\n    parser.Push(begin);\n    if (taggable) {\n        ParseUtil_js_1.default.checkEqnEnv(parser);\n    }\n    align = align.replace(/[^clr]/g, '').split('').join(' ');\n    align = align.replace(/l/g, 'left').replace(/r/g, 'right').replace(/c/g, 'center');\n    var newItem = parser.itemFactory.create('eqnarray', begin.getName(), numbered, taggable, parser.stack.global);\n    newItem.arraydef = {\n        displaystyle: true,\n        columnalign: align,\n        columnspacing: (spacing || '1em'),\n        rowspacing: '3pt',\n        side: parser.options['tagSide'],\n        minlabelspacing: parser.options['tagIndent']\n    };\n    return newItem;\n};\nBaseMethods.HandleNoTag = function (parser, _name) {\n    parser.tags.notag();\n};\nBaseMethods.HandleLabel = function (parser, name) {\n    var label = parser.GetArgument(name);\n    if (label === '') {\n        return;\n    }\n    if (!parser.tags.refUpdate) {\n        if (parser.tags.label) {\n            throw new TexError_js_1.default('MultipleCommand', 'Multiple %1', parser.currentCS);\n        }\n        parser.tags.label = label;\n        if ((parser.tags.allLabels[label] || parser.tags.labels[label]) && !parser.options['ignoreDuplicateLabels']) {\n            throw new TexError_js_1.default('MultipleLabel', 'Label \\'%1\\' multiply defined', label);\n        }\n        parser.tags.labels[label] = new Tags_js_1.Label();\n    }\n};\nBaseMethods.HandleRef = function (parser, name, eqref) {\n    var label = parser.GetArgument(name);\n    var ref = parser.tags.allLabels[label] || parser.tags.labels[label];\n    if (!ref) {\n        if (!parser.tags.refUpdate) {\n            parser.tags.redo = true;\n        }\n        ref = new Tags_js_1.Label();\n    }\n    var tag = ref.tag;\n    if (eqref) {\n        tag = parser.tags.formatTag(tag);\n    }\n    var node = parser.create('node', 'mrow', ParseUtil_js_1.default.internalMath(parser, tag), {\n        href: parser.tags.formatUrl(ref.id, parser.options.baseURL), 'class': 'MathJax_ref'\n    });\n    parser.Push(node);\n};\nBaseMethods.Macro = function (parser, name, macro, argcount, def) {\n    if (argcount) {\n        var args = [];\n        if (def != null) {\n            var optional = parser.GetBrackets(name);\n            args.push(optional == null ? def : optional);\n        }\n        for (var i = args.length; i < argcount; i++) {\n            args.push(parser.GetArgument(name));\n        }\n        macro = ParseUtil_js_1.default.substituteArgs(parser, args, macro);\n    }\n    parser.string = ParseUtil_js_1.default.addArgs(parser, macro, parser.string.slice(parser.i));\n    parser.i = 0;\n    ParseUtil_js_1.default.checkMaxMacros(parser);\n};\nBaseMethods.MathChoice = function (parser, name) {\n    var D = parser.ParseArg(name);\n    var T = parser.ParseArg(name);\n    var S = parser.ParseArg(name);\n    var SS = parser.ParseArg(name);\n    parser.Push(parser.create('node', 'MathChoice', [D, T, S, SS]));\n};\nexports[\"default\"] = BaseMethods;\n//# sourceMappingURL=BaseMethods.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/base/BaseMethods.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/mathjax.js":
/*!*************************************************!*\
  !*** ./node_modules/mathjax-full/js/mathjax.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mathjax = void 0;\nvar version_js_1 = __webpack_require__(/*! ./components/version.js */ \"./node_modules/mathjax-full/js/components/version.js\");\nvar HandlerList_js_1 = __webpack_require__(/*! ./core/HandlerList.js */ \"./node_modules/mathjax-full/js/core/HandlerList.js\");\nvar Retries_js_1 = __webpack_require__(/*! ./util/Retries.js */ \"./node_modules/mathjax-full/js/util/Retries.js\");\nexports.mathjax = {\n    version: version_js_1.VERSION,\n    handlers: new HandlerList_js_1.HandlerList(),\n    document: function (document, options) {\n        return exports.mathjax.handlers.document(document, options);\n    },\n    handleRetriesFor: Retries_js_1.handleRetriesFor,\n    retryAfter: Retries_js_1.retryAfter,\n    asyncLoad: null,\n};\n//# sourceMappingURL=mathjax.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL21hdGhqYXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLG1CQUFtQixtQkFBTyxDQUFDLHFGQUF5QjtBQUNwRCx1QkFBdUIsbUJBQU8sQ0FBQyxpRkFBdUI7QUFDdEQsbUJBQW1CLG1CQUFPLENBQUMseUVBQW1CO0FBQzlDLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvbWF0aGpheC5qcz9iNmQyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tYXRoamF4ID0gdm9pZCAwO1xudmFyIHZlcnNpb25fanNfMSA9IHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvdmVyc2lvbi5qc1wiKTtcbnZhciBIYW5kbGVyTGlzdF9qc18xID0gcmVxdWlyZShcIi4vY29yZS9IYW5kbGVyTGlzdC5qc1wiKTtcbnZhciBSZXRyaWVzX2pzXzEgPSByZXF1aXJlKFwiLi91dGlsL1JldHJpZXMuanNcIik7XG5leHBvcnRzLm1hdGhqYXggPSB7XG4gICAgdmVyc2lvbjogdmVyc2lvbl9qc18xLlZFUlNJT04sXG4gICAgaGFuZGxlcnM6IG5ldyBIYW5kbGVyTGlzdF9qc18xLkhhbmRsZXJMaXN0KCksXG4gICAgZG9jdW1lbnQ6IGZ1bmN0aW9uIChkb2N1bWVudCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gZXhwb3J0cy5tYXRoamF4LmhhbmRsZXJzLmRvY3VtZW50KGRvY3VtZW50LCBvcHRpb25zKTtcbiAgICB9LFxuICAgIGhhbmRsZVJldHJpZXNGb3I6IFJldHJpZXNfanNfMS5oYW5kbGVSZXRyaWVzRm9yLFxuICAgIHJldHJ5QWZ0ZXI6IFJldHJpZXNfanNfMS5yZXRyeUFmdGVyLFxuICAgIGFzeW5jTG9hZDogbnVsbCxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tYXRoamF4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/mathjax.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/util/AsyncLoad.js":
/*!********************************************************!*\
  !*** ./node_modules/mathjax-full/js/util/AsyncLoad.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.asyncLoad = void 0;\nvar mathjax_js_1 = __webpack_require__(/*! ../mathjax.js */ \"./node_modules/mathjax-full/js/mathjax.js\");\nfunction asyncLoad(name) {\n    if (!mathjax_js_1.mathjax.asyncLoad) {\n        return Promise.reject(\"Can't load '\".concat(name, \"': No asyncLoad method specified\"));\n    }\n    return new Promise(function (ok, fail) {\n        var result = mathjax_js_1.mathjax.asyncLoad(name);\n        if (result instanceof Promise) {\n            result.then(function (value) { return ok(value); }).catch(function (err) { return fail(err); });\n        }\n        else {\n            ok(result);\n        }\n    });\n}\nexports.asyncLoad = asyncLoad;\n//# sourceMappingURL=AsyncLoad.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL3V0aWwvQXN5bmNMb2FkLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixtQkFBbUIsbUJBQU8sQ0FBQyxnRUFBZTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxtQkFBbUIseUJBQXlCLG1CQUFtQjtBQUMxRztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGlCQUFpQjtBQUNqQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL3V0aWwvQXN5bmNMb2FkLmpzP2E2MGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmFzeW5jTG9hZCA9IHZvaWQgMDtcbnZhciBtYXRoamF4X2pzXzEgPSByZXF1aXJlKFwiLi4vbWF0aGpheC5qc1wiKTtcbmZ1bmN0aW9uIGFzeW5jTG9hZChuYW1lKSB7XG4gICAgaWYgKCFtYXRoamF4X2pzXzEubWF0aGpheC5hc3luY0xvYWQpIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KFwiQ2FuJ3QgbG9hZCAnXCIuY29uY2F0KG5hbWUsIFwiJzogTm8gYXN5bmNMb2FkIG1ldGhvZCBzcGVjaWZpZWRcIikpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKG9rLCBmYWlsKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSBtYXRoamF4X2pzXzEubWF0aGpheC5hc3luY0xvYWQobmFtZSk7XG4gICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICByZXN1bHQudGhlbihmdW5jdGlvbiAodmFsdWUpIHsgcmV0dXJuIG9rKHZhbHVlKTsgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgeyByZXR1cm4gZmFpbChlcnIpOyB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG9rKHJlc3VsdCk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydHMuYXN5bmNMb2FkID0gYXN5bmNMb2FkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXN5bmNMb2FkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/util/AsyncLoad.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/util/Entities.js":
/*!*******************************************************!*\
  !*** ./node_modules/mathjax-full/js/util/Entities.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.numeric = exports.translate = exports.remove = exports.add = exports.entities = exports.options = void 0;\nvar Retries_js_1 = __webpack_require__(/*! ./Retries.js */ \"./node_modules/mathjax-full/js/util/Retries.js\");\nvar AsyncLoad_js_1 = __webpack_require__(/*! ./AsyncLoad.js */ \"./node_modules/mathjax-full/js/util/AsyncLoad.js\");\nexports.options = {\n    loadMissingEntities: true\n};\nexports.entities = {\n    ApplyFunction: '\\u2061',\n    Backslash: '\\u2216',\n    Because: '\\u2235',\n    Breve: '\\u02D8',\n    Cap: '\\u22D2',\n    CenterDot: '\\u00B7',\n    CircleDot: '\\u2299',\n    CircleMinus: '\\u2296',\n    CirclePlus: '\\u2295',\n    CircleTimes: '\\u2297',\n    Congruent: '\\u2261',\n    ContourIntegral: '\\u222E',\n    Coproduct: '\\u2210',\n    Cross: '\\u2A2F',\n    Cup: '\\u22D3',\n    CupCap: '\\u224D',\n    Dagger: '\\u2021',\n    Del: '\\u2207',\n    Delta: '\\u0394',\n    Diamond: '\\u22C4',\n    DifferentialD: '\\u2146',\n    DotEqual: '\\u2250',\n    DoubleDot: '\\u00A8',\n    DoubleRightTee: '\\u22A8',\n    DoubleVerticalBar: '\\u2225',\n    DownArrow: '\\u2193',\n    DownLeftVector: '\\u21BD',\n    DownRightVector: '\\u21C1',\n    DownTee: '\\u22A4',\n    Downarrow: '\\u21D3',\n    Element: '\\u2208',\n    EqualTilde: '\\u2242',\n    Equilibrium: '\\u21CC',\n    Exists: '\\u2203',\n    ExponentialE: '\\u2147',\n    FilledVerySmallSquare: '\\u25AA',\n    ForAll: '\\u2200',\n    Gamma: '\\u0393',\n    Gg: '\\u22D9',\n    GreaterEqual: '\\u2265',\n    GreaterEqualLess: '\\u22DB',\n    GreaterFullEqual: '\\u2267',\n    GreaterLess: '\\u2277',\n    GreaterSlantEqual: '\\u2A7E',\n    GreaterTilde: '\\u2273',\n    Hacek: '\\u02C7',\n    Hat: '\\u005E',\n    HumpDownHump: '\\u224E',\n    HumpEqual: '\\u224F',\n    Im: '\\u2111',\n    ImaginaryI: '\\u2148',\n    Integral: '\\u222B',\n    Intersection: '\\u22C2',\n    InvisibleComma: '\\u2063',\n    InvisibleTimes: '\\u2062',\n    Lambda: '\\u039B',\n    Larr: '\\u219E',\n    LeftAngleBracket: '\\u27E8',\n    LeftArrow: '\\u2190',\n    LeftArrowRightArrow: '\\u21C6',\n    LeftCeiling: '\\u2308',\n    LeftDownVector: '\\u21C3',\n    LeftFloor: '\\u230A',\n    LeftRightArrow: '\\u2194',\n    LeftTee: '\\u22A3',\n    LeftTriangle: '\\u22B2',\n    LeftTriangleEqual: '\\u22B4',\n    LeftUpVector: '\\u21BF',\n    LeftVector: '\\u21BC',\n    Leftarrow: '\\u21D0',\n    Leftrightarrow: '\\u21D4',\n    LessEqualGreater: '\\u22DA',\n    LessFullEqual: '\\u2266',\n    LessGreater: '\\u2276',\n    LessSlantEqual: '\\u2A7D',\n    LessTilde: '\\u2272',\n    Ll: '\\u22D8',\n    Lleftarrow: '\\u21DA',\n    LongLeftArrow: '\\u27F5',\n    LongLeftRightArrow: '\\u27F7',\n    LongRightArrow: '\\u27F6',\n    Longleftarrow: '\\u27F8',\n    Longleftrightarrow: '\\u27FA',\n    Longrightarrow: '\\u27F9',\n    Lsh: '\\u21B0',\n    MinusPlus: '\\u2213',\n    NestedGreaterGreater: '\\u226B',\n    NestedLessLess: '\\u226A',\n    NotDoubleVerticalBar: '\\u2226',\n    NotElement: '\\u2209',\n    NotEqual: '\\u2260',\n    NotExists: '\\u2204',\n    NotGreater: '\\u226F',\n    NotGreaterEqual: '\\u2271',\n    NotLeftTriangle: '\\u22EA',\n    NotLeftTriangleEqual: '\\u22EC',\n    NotLess: '\\u226E',\n    NotLessEqual: '\\u2270',\n    NotPrecedes: '\\u2280',\n    NotPrecedesSlantEqual: '\\u22E0',\n    NotRightTriangle: '\\u22EB',\n    NotRightTriangleEqual: '\\u22ED',\n    NotSubsetEqual: '\\u2288',\n    NotSucceeds: '\\u2281',\n    NotSucceedsSlantEqual: '\\u22E1',\n    NotSupersetEqual: '\\u2289',\n    NotTilde: '\\u2241',\n    NotVerticalBar: '\\u2224',\n    Omega: '\\u03A9',\n    OverBar: '\\u203E',\n    OverBrace: '\\u23DE',\n    PartialD: '\\u2202',\n    Phi: '\\u03A6',\n    Pi: '\\u03A0',\n    PlusMinus: '\\u00B1',\n    Precedes: '\\u227A',\n    PrecedesEqual: '\\u2AAF',\n    PrecedesSlantEqual: '\\u227C',\n    PrecedesTilde: '\\u227E',\n    Product: '\\u220F',\n    Proportional: '\\u221D',\n    Psi: '\\u03A8',\n    Rarr: '\\u21A0',\n    Re: '\\u211C',\n    ReverseEquilibrium: '\\u21CB',\n    RightAngleBracket: '\\u27E9',\n    RightArrow: '\\u2192',\n    RightArrowLeftArrow: '\\u21C4',\n    RightCeiling: '\\u2309',\n    RightDownVector: '\\u21C2',\n    RightFloor: '\\u230B',\n    RightTee: '\\u22A2',\n    RightTeeArrow: '\\u21A6',\n    RightTriangle: '\\u22B3',\n    RightTriangleEqual: '\\u22B5',\n    RightUpVector: '\\u21BE',\n    RightVector: '\\u21C0',\n    Rightarrow: '\\u21D2',\n    Rrightarrow: '\\u21DB',\n    Rsh: '\\u21B1',\n    Sigma: '\\u03A3',\n    SmallCircle: '\\u2218',\n    Sqrt: '\\u221A',\n    Square: '\\u25A1',\n    SquareIntersection: '\\u2293',\n    SquareSubset: '\\u228F',\n    SquareSubsetEqual: '\\u2291',\n    SquareSuperset: '\\u2290',\n    SquareSupersetEqual: '\\u2292',\n    SquareUnion: '\\u2294',\n    Star: '\\u22C6',\n    Subset: '\\u22D0',\n    SubsetEqual: '\\u2286',\n    Succeeds: '\\u227B',\n    SucceedsEqual: '\\u2AB0',\n    SucceedsSlantEqual: '\\u227D',\n    SucceedsTilde: '\\u227F',\n    SuchThat: '\\u220B',\n    Sum: '\\u2211',\n    Superset: '\\u2283',\n    SupersetEqual: '\\u2287',\n    Supset: '\\u22D1',\n    Therefore: '\\u2234',\n    Theta: '\\u0398',\n    Tilde: '\\u223C',\n    TildeEqual: '\\u2243',\n    TildeFullEqual: '\\u2245',\n    TildeTilde: '\\u2248',\n    UnderBar: '\\u005F',\n    UnderBrace: '\\u23DF',\n    Union: '\\u22C3',\n    UnionPlus: '\\u228E',\n    UpArrow: '\\u2191',\n    UpDownArrow: '\\u2195',\n    UpTee: '\\u22A5',\n    Uparrow: '\\u21D1',\n    Updownarrow: '\\u21D5',\n    Upsilon: '\\u03A5',\n    Vdash: '\\u22A9',\n    Vee: '\\u22C1',\n    VerticalBar: '\\u2223',\n    VerticalTilde: '\\u2240',\n    Vvdash: '\\u22AA',\n    Wedge: '\\u22C0',\n    Xi: '\\u039E',\n    amp: '\\u0026',\n    acute: '\\u00B4',\n    aleph: '\\u2135',\n    alpha: '\\u03B1',\n    amalg: '\\u2A3F',\n    and: '\\u2227',\n    ang: '\\u2220',\n    angmsd: '\\u2221',\n    angsph: '\\u2222',\n    ape: '\\u224A',\n    backprime: '\\u2035',\n    backsim: '\\u223D',\n    backsimeq: '\\u22CD',\n    beta: '\\u03B2',\n    beth: '\\u2136',\n    between: '\\u226C',\n    bigcirc: '\\u25EF',\n    bigodot: '\\u2A00',\n    bigoplus: '\\u2A01',\n    bigotimes: '\\u2A02',\n    bigsqcup: '\\u2A06',\n    bigstar: '\\u2605',\n    bigtriangledown: '\\u25BD',\n    bigtriangleup: '\\u25B3',\n    biguplus: '\\u2A04',\n    blacklozenge: '\\u29EB',\n    blacktriangle: '\\u25B4',\n    blacktriangledown: '\\u25BE',\n    blacktriangleleft: '\\u25C2',\n    bowtie: '\\u22C8',\n    boxdl: '\\u2510',\n    boxdr: '\\u250C',\n    boxminus: '\\u229F',\n    boxplus: '\\u229E',\n    boxtimes: '\\u22A0',\n    boxul: '\\u2518',\n    boxur: '\\u2514',\n    bsol: '\\u005C',\n    bull: '\\u2022',\n    cap: '\\u2229',\n    check: '\\u2713',\n    chi: '\\u03C7',\n    circ: '\\u02C6',\n    circeq: '\\u2257',\n    circlearrowleft: '\\u21BA',\n    circlearrowright: '\\u21BB',\n    circledR: '\\u00AE',\n    circledS: '\\u24C8',\n    circledast: '\\u229B',\n    circledcirc: '\\u229A',\n    circleddash: '\\u229D',\n    clubs: '\\u2663',\n    colon: '\\u003A',\n    comp: '\\u2201',\n    ctdot: '\\u22EF',\n    cuepr: '\\u22DE',\n    cuesc: '\\u22DF',\n    cularr: '\\u21B6',\n    cup: '\\u222A',\n    curarr: '\\u21B7',\n    curlyvee: '\\u22CE',\n    curlywedge: '\\u22CF',\n    dagger: '\\u2020',\n    daleth: '\\u2138',\n    ddarr: '\\u21CA',\n    deg: '\\u00B0',\n    delta: '\\u03B4',\n    digamma: '\\u03DD',\n    div: '\\u00F7',\n    divideontimes: '\\u22C7',\n    dot: '\\u02D9',\n    doteqdot: '\\u2251',\n    dotplus: '\\u2214',\n    dotsquare: '\\u22A1',\n    dtdot: '\\u22F1',\n    ecir: '\\u2256',\n    efDot: '\\u2252',\n    egs: '\\u2A96',\n    ell: '\\u2113',\n    els: '\\u2A95',\n    empty: '\\u2205',\n    epsi: '\\u03B5',\n    epsiv: '\\u03F5',\n    erDot: '\\u2253',\n    eta: '\\u03B7',\n    eth: '\\u00F0',\n    flat: '\\u266D',\n    fork: '\\u22D4',\n    frown: '\\u2322',\n    gEl: '\\u2A8C',\n    gamma: '\\u03B3',\n    gap: '\\u2A86',\n    gimel: '\\u2137',\n    gnE: '\\u2269',\n    gnap: '\\u2A8A',\n    gne: '\\u2A88',\n    gnsim: '\\u22E7',\n    gt: '\\u003E',\n    gtdot: '\\u22D7',\n    harrw: '\\u21AD',\n    hbar: '\\u210F',\n    hellip: '\\u2026',\n    hookleftarrow: '\\u21A9',\n    hookrightarrow: '\\u21AA',\n    imath: '\\u0131',\n    infin: '\\u221E',\n    intcal: '\\u22BA',\n    iota: '\\u03B9',\n    jmath: '\\u0237',\n    kappa: '\\u03BA',\n    kappav: '\\u03F0',\n    lEg: '\\u2A8B',\n    lambda: '\\u03BB',\n    lap: '\\u2A85',\n    larrlp: '\\u21AB',\n    larrtl: '\\u21A2',\n    lbrace: '\\u007B',\n    lbrack: '\\u005B',\n    le: '\\u2264',\n    leftleftarrows: '\\u21C7',\n    leftthreetimes: '\\u22CB',\n    lessdot: '\\u22D6',\n    lmoust: '\\u23B0',\n    lnE: '\\u2268',\n    lnap: '\\u2A89',\n    lne: '\\u2A87',\n    lnsim: '\\u22E6',\n    longmapsto: '\\u27FC',\n    looparrowright: '\\u21AC',\n    lowast: '\\u2217',\n    loz: '\\u25CA',\n    lt: '\\u003C',\n    ltimes: '\\u22C9',\n    ltri: '\\u25C3',\n    macr: '\\u00AF',\n    malt: '\\u2720',\n    mho: '\\u2127',\n    mu: '\\u03BC',\n    multimap: '\\u22B8',\n    nLeftarrow: '\\u21CD',\n    nLeftrightarrow: '\\u21CE',\n    nRightarrow: '\\u21CF',\n    nVDash: '\\u22AF',\n    nVdash: '\\u22AE',\n    natur: '\\u266E',\n    nearr: '\\u2197',\n    nharr: '\\u21AE',\n    nlarr: '\\u219A',\n    not: '\\u00AC',\n    nrarr: '\\u219B',\n    nu: '\\u03BD',\n    nvDash: '\\u22AD',\n    nvdash: '\\u22AC',\n    nwarr: '\\u2196',\n    omega: '\\u03C9',\n    omicron: '\\u03BF',\n    or: '\\u2228',\n    osol: '\\u2298',\n    period: '\\u002E',\n    phi: '\\u03C6',\n    phiv: '\\u03D5',\n    pi: '\\u03C0',\n    piv: '\\u03D6',\n    prap: '\\u2AB7',\n    precnapprox: '\\u2AB9',\n    precneqq: '\\u2AB5',\n    precnsim: '\\u22E8',\n    prime: '\\u2032',\n    psi: '\\u03C8',\n    quot: '\\u0022',\n    rarrtl: '\\u21A3',\n    rbrace: '\\u007D',\n    rbrack: '\\u005D',\n    rho: '\\u03C1',\n    rhov: '\\u03F1',\n    rightrightarrows: '\\u21C9',\n    rightthreetimes: '\\u22CC',\n    ring: '\\u02DA',\n    rmoust: '\\u23B1',\n    rtimes: '\\u22CA',\n    rtri: '\\u25B9',\n    scap: '\\u2AB8',\n    scnE: '\\u2AB6',\n    scnap: '\\u2ABA',\n    scnsim: '\\u22E9',\n    sdot: '\\u22C5',\n    searr: '\\u2198',\n    sect: '\\u00A7',\n    sharp: '\\u266F',\n    sigma: '\\u03C3',\n    sigmav: '\\u03C2',\n    simne: '\\u2246',\n    smile: '\\u2323',\n    spades: '\\u2660',\n    sub: '\\u2282',\n    subE: '\\u2AC5',\n    subnE: '\\u2ACB',\n    subne: '\\u228A',\n    supE: '\\u2AC6',\n    supnE: '\\u2ACC',\n    supne: '\\u228B',\n    swarr: '\\u2199',\n    tau: '\\u03C4',\n    theta: '\\u03B8',\n    thetav: '\\u03D1',\n    tilde: '\\u02DC',\n    times: '\\u00D7',\n    triangle: '\\u25B5',\n    triangleq: '\\u225C',\n    upsi: '\\u03C5',\n    upuparrows: '\\u21C8',\n    veebar: '\\u22BB',\n    vellip: '\\u22EE',\n    weierp: '\\u2118',\n    xi: '\\u03BE',\n    yen: '\\u00A5',\n    zeta: '\\u03B6',\n    zigrarr: '\\u21DD',\n    nbsp: '\\u00A0',\n    rsquo: '\\u2019',\n    lsquo: '\\u2018'\n};\nvar loaded = {};\nfunction add(additions, file) {\n    Object.assign(exports.entities, additions);\n    loaded[file] = true;\n}\nexports.add = add;\nfunction remove(entity) {\n    delete exports.entities[entity];\n}\nexports.remove = remove;\nfunction translate(text) {\n    return text.replace(/&([a-z][a-z0-9]*|#(?:[0-9]+|x[0-9a-f]+));/ig, replace);\n}\nexports.translate = translate;\nfunction replace(match, entity) {\n    if (entity.charAt(0) === '#') {\n        return numeric(entity.slice(1));\n    }\n    if (exports.entities[entity]) {\n        return exports.entities[entity];\n    }\n    if (exports.options['loadMissingEntities']) {\n        var file = (entity.match(/^[a-zA-Z](fr|scr|opf)$/) ? RegExp.$1 : entity.charAt(0).toLowerCase());\n        if (!loaded[file]) {\n            loaded[file] = true;\n            (0, Retries_js_1.retryAfter)((0, AsyncLoad_js_1.asyncLoad)('./util/entities/' + file + '.js'));\n        }\n    }\n    return match;\n}\nfunction numeric(entity) {\n    var n = (entity.charAt(0) === 'x' ?\n        parseInt(entity.slice(1), 16) :\n        parseInt(entity));\n    return String.fromCodePoint(n);\n}\nexports.numeric = numeric;\n//# sourceMappingURL=Entities.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL3V0aWwvRW50aXRpZXMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZSxHQUFHLGlCQUFpQixHQUFHLGNBQWMsR0FBRyxXQUFXLEdBQUcsZ0JBQWdCLEdBQUcsZUFBZTtBQUN2RyxtQkFBbUIsbUJBQU8sQ0FBQyxvRUFBYztBQUN6QyxxQkFBcUIsbUJBQU8sQ0FBQyx3RUFBZ0I7QUFDN0MsZUFBZTtBQUNmO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0Esa0VBQWtFO0FBQ2xFO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvdXRpbC9FbnRpdGllcy5qcz83YWU5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5udW1lcmljID0gZXhwb3J0cy50cmFuc2xhdGUgPSBleHBvcnRzLnJlbW92ZSA9IGV4cG9ydHMuYWRkID0gZXhwb3J0cy5lbnRpdGllcyA9IGV4cG9ydHMub3B0aW9ucyA9IHZvaWQgMDtcbnZhciBSZXRyaWVzX2pzXzEgPSByZXF1aXJlKFwiLi9SZXRyaWVzLmpzXCIpO1xudmFyIEFzeW5jTG9hZF9qc18xID0gcmVxdWlyZShcIi4vQXN5bmNMb2FkLmpzXCIpO1xuZXhwb3J0cy5vcHRpb25zID0ge1xuICAgIGxvYWRNaXNzaW5nRW50aXRpZXM6IHRydWVcbn07XG5leHBvcnRzLmVudGl0aWVzID0ge1xuICAgIEFwcGx5RnVuY3Rpb246ICdcXHUyMDYxJyxcbiAgICBCYWNrc2xhc2g6ICdcXHUyMjE2JyxcbiAgICBCZWNhdXNlOiAnXFx1MjIzNScsXG4gICAgQnJldmU6ICdcXHUwMkQ4JyxcbiAgICBDYXA6ICdcXHUyMkQyJyxcbiAgICBDZW50ZXJEb3Q6ICdcXHUwMEI3JyxcbiAgICBDaXJjbGVEb3Q6ICdcXHUyMjk5JyxcbiAgICBDaXJjbGVNaW51czogJ1xcdTIyOTYnLFxuICAgIENpcmNsZVBsdXM6ICdcXHUyMjk1JyxcbiAgICBDaXJjbGVUaW1lczogJ1xcdTIyOTcnLFxuICAgIENvbmdydWVudDogJ1xcdTIyNjEnLFxuICAgIENvbnRvdXJJbnRlZ3JhbDogJ1xcdTIyMkUnLFxuICAgIENvcHJvZHVjdDogJ1xcdTIyMTAnLFxuICAgIENyb3NzOiAnXFx1MkEyRicsXG4gICAgQ3VwOiAnXFx1MjJEMycsXG4gICAgQ3VwQ2FwOiAnXFx1MjI0RCcsXG4gICAgRGFnZ2VyOiAnXFx1MjAyMScsXG4gICAgRGVsOiAnXFx1MjIwNycsXG4gICAgRGVsdGE6ICdcXHUwMzk0JyxcbiAgICBEaWFtb25kOiAnXFx1MjJDNCcsXG4gICAgRGlmZmVyZW50aWFsRDogJ1xcdTIxNDYnLFxuICAgIERvdEVxdWFsOiAnXFx1MjI1MCcsXG4gICAgRG91YmxlRG90OiAnXFx1MDBBOCcsXG4gICAgRG91YmxlUmlnaHRUZWU6ICdcXHUyMkE4JyxcbiAgICBEb3VibGVWZXJ0aWNhbEJhcjogJ1xcdTIyMjUnLFxuICAgIERvd25BcnJvdzogJ1xcdTIxOTMnLFxuICAgIERvd25MZWZ0VmVjdG9yOiAnXFx1MjFCRCcsXG4gICAgRG93blJpZ2h0VmVjdG9yOiAnXFx1MjFDMScsXG4gICAgRG93blRlZTogJ1xcdTIyQTQnLFxuICAgIERvd25hcnJvdzogJ1xcdTIxRDMnLFxuICAgIEVsZW1lbnQ6ICdcXHUyMjA4JyxcbiAgICBFcXVhbFRpbGRlOiAnXFx1MjI0MicsXG4gICAgRXF1aWxpYnJpdW06ICdcXHUyMUNDJyxcbiAgICBFeGlzdHM6ICdcXHUyMjAzJyxcbiAgICBFeHBvbmVudGlhbEU6ICdcXHUyMTQ3JyxcbiAgICBGaWxsZWRWZXJ5U21hbGxTcXVhcmU6ICdcXHUyNUFBJyxcbiAgICBGb3JBbGw6ICdcXHUyMjAwJyxcbiAgICBHYW1tYTogJ1xcdTAzOTMnLFxuICAgIEdnOiAnXFx1MjJEOScsXG4gICAgR3JlYXRlckVxdWFsOiAnXFx1MjI2NScsXG4gICAgR3JlYXRlckVxdWFsTGVzczogJ1xcdTIyREInLFxuICAgIEdyZWF0ZXJGdWxsRXF1YWw6ICdcXHUyMjY3JyxcbiAgICBHcmVhdGVyTGVzczogJ1xcdTIyNzcnLFxuICAgIEdyZWF0ZXJTbGFudEVxdWFsOiAnXFx1MkE3RScsXG4gICAgR3JlYXRlclRpbGRlOiAnXFx1MjI3MycsXG4gICAgSGFjZWs6ICdcXHUwMkM3JyxcbiAgICBIYXQ6ICdcXHUwMDVFJyxcbiAgICBIdW1wRG93bkh1bXA6ICdcXHUyMjRFJyxcbiAgICBIdW1wRXF1YWw6ICdcXHUyMjRGJyxcbiAgICBJbTogJ1xcdTIxMTEnLFxuICAgIEltYWdpbmFyeUk6ICdcXHUyMTQ4JyxcbiAgICBJbnRlZ3JhbDogJ1xcdTIyMkInLFxuICAgIEludGVyc2VjdGlvbjogJ1xcdTIyQzInLFxuICAgIEludmlzaWJsZUNvbW1hOiAnXFx1MjA2MycsXG4gICAgSW52aXNpYmxlVGltZXM6ICdcXHUyMDYyJyxcbiAgICBMYW1iZGE6ICdcXHUwMzlCJyxcbiAgICBMYXJyOiAnXFx1MjE5RScsXG4gICAgTGVmdEFuZ2xlQnJhY2tldDogJ1xcdTI3RTgnLFxuICAgIExlZnRBcnJvdzogJ1xcdTIxOTAnLFxuICAgIExlZnRBcnJvd1JpZ2h0QXJyb3c6ICdcXHUyMUM2JyxcbiAgICBMZWZ0Q2VpbGluZzogJ1xcdTIzMDgnLFxuICAgIExlZnREb3duVmVjdG9yOiAnXFx1MjFDMycsXG4gICAgTGVmdEZsb29yOiAnXFx1MjMwQScsXG4gICAgTGVmdFJpZ2h0QXJyb3c6ICdcXHUyMTk0JyxcbiAgICBMZWZ0VGVlOiAnXFx1MjJBMycsXG4gICAgTGVmdFRyaWFuZ2xlOiAnXFx1MjJCMicsXG4gICAgTGVmdFRyaWFuZ2xlRXF1YWw6ICdcXHUyMkI0JyxcbiAgICBMZWZ0VXBWZWN0b3I6ICdcXHUyMUJGJyxcbiAgICBMZWZ0VmVjdG9yOiAnXFx1MjFCQycsXG4gICAgTGVmdGFycm93OiAnXFx1MjFEMCcsXG4gICAgTGVmdHJpZ2h0YXJyb3c6ICdcXHUyMUQ0JyxcbiAgICBMZXNzRXF1YWxHcmVhdGVyOiAnXFx1MjJEQScsXG4gICAgTGVzc0Z1bGxFcXVhbDogJ1xcdTIyNjYnLFxuICAgIExlc3NHcmVhdGVyOiAnXFx1MjI3NicsXG4gICAgTGVzc1NsYW50RXF1YWw6ICdcXHUyQTdEJyxcbiAgICBMZXNzVGlsZGU6ICdcXHUyMjcyJyxcbiAgICBMbDogJ1xcdTIyRDgnLFxuICAgIExsZWZ0YXJyb3c6ICdcXHUyMURBJyxcbiAgICBMb25nTGVmdEFycm93OiAnXFx1MjdGNScsXG4gICAgTG9uZ0xlZnRSaWdodEFycm93OiAnXFx1MjdGNycsXG4gICAgTG9uZ1JpZ2h0QXJyb3c6ICdcXHUyN0Y2JyxcbiAgICBMb25nbGVmdGFycm93OiAnXFx1MjdGOCcsXG4gICAgTG9uZ2xlZnRyaWdodGFycm93OiAnXFx1MjdGQScsXG4gICAgTG9uZ3JpZ2h0YXJyb3c6ICdcXHUyN0Y5JyxcbiAgICBMc2g6ICdcXHUyMUIwJyxcbiAgICBNaW51c1BsdXM6ICdcXHUyMjEzJyxcbiAgICBOZXN0ZWRHcmVhdGVyR3JlYXRlcjogJ1xcdTIyNkInLFxuICAgIE5lc3RlZExlc3NMZXNzOiAnXFx1MjI2QScsXG4gICAgTm90RG91YmxlVmVydGljYWxCYXI6ICdcXHUyMjI2JyxcbiAgICBOb3RFbGVtZW50OiAnXFx1MjIwOScsXG4gICAgTm90RXF1YWw6ICdcXHUyMjYwJyxcbiAgICBOb3RFeGlzdHM6ICdcXHUyMjA0JyxcbiAgICBOb3RHcmVhdGVyOiAnXFx1MjI2RicsXG4gICAgTm90R3JlYXRlckVxdWFsOiAnXFx1MjI3MScsXG4gICAgTm90TGVmdFRyaWFuZ2xlOiAnXFx1MjJFQScsXG4gICAgTm90TGVmdFRyaWFuZ2xlRXF1YWw6ICdcXHUyMkVDJyxcbiAgICBOb3RMZXNzOiAnXFx1MjI2RScsXG4gICAgTm90TGVzc0VxdWFsOiAnXFx1MjI3MCcsXG4gICAgTm90UHJlY2VkZXM6ICdcXHUyMjgwJyxcbiAgICBOb3RQcmVjZWRlc1NsYW50RXF1YWw6ICdcXHUyMkUwJyxcbiAgICBOb3RSaWdodFRyaWFuZ2xlOiAnXFx1MjJFQicsXG4gICAgTm90UmlnaHRUcmlhbmdsZUVxdWFsOiAnXFx1MjJFRCcsXG4gICAgTm90U3Vic2V0RXF1YWw6ICdcXHUyMjg4JyxcbiAgICBOb3RTdWNjZWVkczogJ1xcdTIyODEnLFxuICAgIE5vdFN1Y2NlZWRzU2xhbnRFcXVhbDogJ1xcdTIyRTEnLFxuICAgIE5vdFN1cGVyc2V0RXF1YWw6ICdcXHUyMjg5JyxcbiAgICBOb3RUaWxkZTogJ1xcdTIyNDEnLFxuICAgIE5vdFZlcnRpY2FsQmFyOiAnXFx1MjIyNCcsXG4gICAgT21lZ2E6ICdcXHUwM0E5JyxcbiAgICBPdmVyQmFyOiAnXFx1MjAzRScsXG4gICAgT3ZlckJyYWNlOiAnXFx1MjNERScsXG4gICAgUGFydGlhbEQ6ICdcXHUyMjAyJyxcbiAgICBQaGk6ICdcXHUwM0E2JyxcbiAgICBQaTogJ1xcdTAzQTAnLFxuICAgIFBsdXNNaW51czogJ1xcdTAwQjEnLFxuICAgIFByZWNlZGVzOiAnXFx1MjI3QScsXG4gICAgUHJlY2VkZXNFcXVhbDogJ1xcdTJBQUYnLFxuICAgIFByZWNlZGVzU2xhbnRFcXVhbDogJ1xcdTIyN0MnLFxuICAgIFByZWNlZGVzVGlsZGU6ICdcXHUyMjdFJyxcbiAgICBQcm9kdWN0OiAnXFx1MjIwRicsXG4gICAgUHJvcG9ydGlvbmFsOiAnXFx1MjIxRCcsXG4gICAgUHNpOiAnXFx1MDNBOCcsXG4gICAgUmFycjogJ1xcdTIxQTAnLFxuICAgIFJlOiAnXFx1MjExQycsXG4gICAgUmV2ZXJzZUVxdWlsaWJyaXVtOiAnXFx1MjFDQicsXG4gICAgUmlnaHRBbmdsZUJyYWNrZXQ6ICdcXHUyN0U5JyxcbiAgICBSaWdodEFycm93OiAnXFx1MjE5MicsXG4gICAgUmlnaHRBcnJvd0xlZnRBcnJvdzogJ1xcdTIxQzQnLFxuICAgIFJpZ2h0Q2VpbGluZzogJ1xcdTIzMDknLFxuICAgIFJpZ2h0RG93blZlY3RvcjogJ1xcdTIxQzInLFxuICAgIFJpZ2h0Rmxvb3I6ICdcXHUyMzBCJyxcbiAgICBSaWdodFRlZTogJ1xcdTIyQTInLFxuICAgIFJpZ2h0VGVlQXJyb3c6ICdcXHUyMUE2JyxcbiAgICBSaWdodFRyaWFuZ2xlOiAnXFx1MjJCMycsXG4gICAgUmlnaHRUcmlhbmdsZUVxdWFsOiAnXFx1MjJCNScsXG4gICAgUmlnaHRVcFZlY3RvcjogJ1xcdTIxQkUnLFxuICAgIFJpZ2h0VmVjdG9yOiAnXFx1MjFDMCcsXG4gICAgUmlnaHRhcnJvdzogJ1xcdTIxRDInLFxuICAgIFJyaWdodGFycm93OiAnXFx1MjFEQicsXG4gICAgUnNoOiAnXFx1MjFCMScsXG4gICAgU2lnbWE6ICdcXHUwM0EzJyxcbiAgICBTbWFsbENpcmNsZTogJ1xcdTIyMTgnLFxuICAgIFNxcnQ6ICdcXHUyMjFBJyxcbiAgICBTcXVhcmU6ICdcXHUyNUExJyxcbiAgICBTcXVhcmVJbnRlcnNlY3Rpb246ICdcXHUyMjkzJyxcbiAgICBTcXVhcmVTdWJzZXQ6ICdcXHUyMjhGJyxcbiAgICBTcXVhcmVTdWJzZXRFcXVhbDogJ1xcdTIyOTEnLFxuICAgIFNxdWFyZVN1cGVyc2V0OiAnXFx1MjI5MCcsXG4gICAgU3F1YXJlU3VwZXJzZXRFcXVhbDogJ1xcdTIyOTInLFxuICAgIFNxdWFyZVVuaW9uOiAnXFx1MjI5NCcsXG4gICAgU3RhcjogJ1xcdTIyQzYnLFxuICAgIFN1YnNldDogJ1xcdTIyRDAnLFxuICAgIFN1YnNldEVxdWFsOiAnXFx1MjI4NicsXG4gICAgU3VjY2VlZHM6ICdcXHUyMjdCJyxcbiAgICBTdWNjZWVkc0VxdWFsOiAnXFx1MkFCMCcsXG4gICAgU3VjY2VlZHNTbGFudEVxdWFsOiAnXFx1MjI3RCcsXG4gICAgU3VjY2VlZHNUaWxkZTogJ1xcdTIyN0YnLFxuICAgIFN1Y2hUaGF0OiAnXFx1MjIwQicsXG4gICAgU3VtOiAnXFx1MjIxMScsXG4gICAgU3VwZXJzZXQ6ICdcXHUyMjgzJyxcbiAgICBTdXBlcnNldEVxdWFsOiAnXFx1MjI4NycsXG4gICAgU3Vwc2V0OiAnXFx1MjJEMScsXG4gICAgVGhlcmVmb3JlOiAnXFx1MjIzNCcsXG4gICAgVGhldGE6ICdcXHUwMzk4JyxcbiAgICBUaWxkZTogJ1xcdTIyM0MnLFxuICAgIFRpbGRlRXF1YWw6ICdcXHUyMjQzJyxcbiAgICBUaWxkZUZ1bGxFcXVhbDogJ1xcdTIyNDUnLFxuICAgIFRpbGRlVGlsZGU6ICdcXHUyMjQ4JyxcbiAgICBVbmRlckJhcjogJ1xcdTAwNUYnLFxuICAgIFVuZGVyQnJhY2U6ICdcXHUyM0RGJyxcbiAgICBVbmlvbjogJ1xcdTIyQzMnLFxuICAgIFVuaW9uUGx1czogJ1xcdTIyOEUnLFxuICAgIFVwQXJyb3c6ICdcXHUyMTkxJyxcbiAgICBVcERvd25BcnJvdzogJ1xcdTIxOTUnLFxuICAgIFVwVGVlOiAnXFx1MjJBNScsXG4gICAgVXBhcnJvdzogJ1xcdTIxRDEnLFxuICAgIFVwZG93bmFycm93OiAnXFx1MjFENScsXG4gICAgVXBzaWxvbjogJ1xcdTAzQTUnLFxuICAgIFZkYXNoOiAnXFx1MjJBOScsXG4gICAgVmVlOiAnXFx1MjJDMScsXG4gICAgVmVydGljYWxCYXI6ICdcXHUyMjIzJyxcbiAgICBWZXJ0aWNhbFRpbGRlOiAnXFx1MjI0MCcsXG4gICAgVnZkYXNoOiAnXFx1MjJBQScsXG4gICAgV2VkZ2U6ICdcXHUyMkMwJyxcbiAgICBYaTogJ1xcdTAzOUUnLFxuICAgIGFtcDogJ1xcdTAwMjYnLFxuICAgIGFjdXRlOiAnXFx1MDBCNCcsXG4gICAgYWxlcGg6ICdcXHUyMTM1JyxcbiAgICBhbHBoYTogJ1xcdTAzQjEnLFxuICAgIGFtYWxnOiAnXFx1MkEzRicsXG4gICAgYW5kOiAnXFx1MjIyNycsXG4gICAgYW5nOiAnXFx1MjIyMCcsXG4gICAgYW5nbXNkOiAnXFx1MjIyMScsXG4gICAgYW5nc3BoOiAnXFx1MjIyMicsXG4gICAgYXBlOiAnXFx1MjI0QScsXG4gICAgYmFja3ByaW1lOiAnXFx1MjAzNScsXG4gICAgYmFja3NpbTogJ1xcdTIyM0QnLFxuICAgIGJhY2tzaW1lcTogJ1xcdTIyQ0QnLFxuICAgIGJldGE6ICdcXHUwM0IyJyxcbiAgICBiZXRoOiAnXFx1MjEzNicsXG4gICAgYmV0d2VlbjogJ1xcdTIyNkMnLFxuICAgIGJpZ2NpcmM6ICdcXHUyNUVGJyxcbiAgICBiaWdvZG90OiAnXFx1MkEwMCcsXG4gICAgYmlnb3BsdXM6ICdcXHUyQTAxJyxcbiAgICBiaWdvdGltZXM6ICdcXHUyQTAyJyxcbiAgICBiaWdzcWN1cDogJ1xcdTJBMDYnLFxuICAgIGJpZ3N0YXI6ICdcXHUyNjA1JyxcbiAgICBiaWd0cmlhbmdsZWRvd246ICdcXHUyNUJEJyxcbiAgICBiaWd0cmlhbmdsZXVwOiAnXFx1MjVCMycsXG4gICAgYmlndXBsdXM6ICdcXHUyQTA0JyxcbiAgICBibGFja2xvemVuZ2U6ICdcXHUyOUVCJyxcbiAgICBibGFja3RyaWFuZ2xlOiAnXFx1MjVCNCcsXG4gICAgYmxhY2t0cmlhbmdsZWRvd246ICdcXHUyNUJFJyxcbiAgICBibGFja3RyaWFuZ2xlbGVmdDogJ1xcdTI1QzInLFxuICAgIGJvd3RpZTogJ1xcdTIyQzgnLFxuICAgIGJveGRsOiAnXFx1MjUxMCcsXG4gICAgYm94ZHI6ICdcXHUyNTBDJyxcbiAgICBib3htaW51czogJ1xcdTIyOUYnLFxuICAgIGJveHBsdXM6ICdcXHUyMjlFJyxcbiAgICBib3h0aW1lczogJ1xcdTIyQTAnLFxuICAgIGJveHVsOiAnXFx1MjUxOCcsXG4gICAgYm94dXI6ICdcXHUyNTE0JyxcbiAgICBic29sOiAnXFx1MDA1QycsXG4gICAgYnVsbDogJ1xcdTIwMjInLFxuICAgIGNhcDogJ1xcdTIyMjknLFxuICAgIGNoZWNrOiAnXFx1MjcxMycsXG4gICAgY2hpOiAnXFx1MDNDNycsXG4gICAgY2lyYzogJ1xcdTAyQzYnLFxuICAgIGNpcmNlcTogJ1xcdTIyNTcnLFxuICAgIGNpcmNsZWFycm93bGVmdDogJ1xcdTIxQkEnLFxuICAgIGNpcmNsZWFycm93cmlnaHQ6ICdcXHUyMUJCJyxcbiAgICBjaXJjbGVkUjogJ1xcdTAwQUUnLFxuICAgIGNpcmNsZWRTOiAnXFx1MjRDOCcsXG4gICAgY2lyY2xlZGFzdDogJ1xcdTIyOUInLFxuICAgIGNpcmNsZWRjaXJjOiAnXFx1MjI5QScsXG4gICAgY2lyY2xlZGRhc2g6ICdcXHUyMjlEJyxcbiAgICBjbHViczogJ1xcdTI2NjMnLFxuICAgIGNvbG9uOiAnXFx1MDAzQScsXG4gICAgY29tcDogJ1xcdTIyMDEnLFxuICAgIGN0ZG90OiAnXFx1MjJFRicsXG4gICAgY3VlcHI6ICdcXHUyMkRFJyxcbiAgICBjdWVzYzogJ1xcdTIyREYnLFxuICAgIGN1bGFycjogJ1xcdTIxQjYnLFxuICAgIGN1cDogJ1xcdTIyMkEnLFxuICAgIGN1cmFycjogJ1xcdTIxQjcnLFxuICAgIGN1cmx5dmVlOiAnXFx1MjJDRScsXG4gICAgY3VybHl3ZWRnZTogJ1xcdTIyQ0YnLFxuICAgIGRhZ2dlcjogJ1xcdTIwMjAnLFxuICAgIGRhbGV0aDogJ1xcdTIxMzgnLFxuICAgIGRkYXJyOiAnXFx1MjFDQScsXG4gICAgZGVnOiAnXFx1MDBCMCcsXG4gICAgZGVsdGE6ICdcXHUwM0I0JyxcbiAgICBkaWdhbW1hOiAnXFx1MDNERCcsXG4gICAgZGl2OiAnXFx1MDBGNycsXG4gICAgZGl2aWRlb250aW1lczogJ1xcdTIyQzcnLFxuICAgIGRvdDogJ1xcdTAyRDknLFxuICAgIGRvdGVxZG90OiAnXFx1MjI1MScsXG4gICAgZG90cGx1czogJ1xcdTIyMTQnLFxuICAgIGRvdHNxdWFyZTogJ1xcdTIyQTEnLFxuICAgIGR0ZG90OiAnXFx1MjJGMScsXG4gICAgZWNpcjogJ1xcdTIyNTYnLFxuICAgIGVmRG90OiAnXFx1MjI1MicsXG4gICAgZWdzOiAnXFx1MkE5NicsXG4gICAgZWxsOiAnXFx1MjExMycsXG4gICAgZWxzOiAnXFx1MkE5NScsXG4gICAgZW1wdHk6ICdcXHUyMjA1JyxcbiAgICBlcHNpOiAnXFx1MDNCNScsXG4gICAgZXBzaXY6ICdcXHUwM0Y1JyxcbiAgICBlckRvdDogJ1xcdTIyNTMnLFxuICAgIGV0YTogJ1xcdTAzQjcnLFxuICAgIGV0aDogJ1xcdTAwRjAnLFxuICAgIGZsYXQ6ICdcXHUyNjZEJyxcbiAgICBmb3JrOiAnXFx1MjJENCcsXG4gICAgZnJvd246ICdcXHUyMzIyJyxcbiAgICBnRWw6ICdcXHUyQThDJyxcbiAgICBnYW1tYTogJ1xcdTAzQjMnLFxuICAgIGdhcDogJ1xcdTJBODYnLFxuICAgIGdpbWVsOiAnXFx1MjEzNycsXG4gICAgZ25FOiAnXFx1MjI2OScsXG4gICAgZ25hcDogJ1xcdTJBOEEnLFxuICAgIGduZTogJ1xcdTJBODgnLFxuICAgIGduc2ltOiAnXFx1MjJFNycsXG4gICAgZ3Q6ICdcXHUwMDNFJyxcbiAgICBndGRvdDogJ1xcdTIyRDcnLFxuICAgIGhhcnJ3OiAnXFx1MjFBRCcsXG4gICAgaGJhcjogJ1xcdTIxMEYnLFxuICAgIGhlbGxpcDogJ1xcdTIwMjYnLFxuICAgIGhvb2tsZWZ0YXJyb3c6ICdcXHUyMUE5JyxcbiAgICBob29rcmlnaHRhcnJvdzogJ1xcdTIxQUEnLFxuICAgIGltYXRoOiAnXFx1MDEzMScsXG4gICAgaW5maW46ICdcXHUyMjFFJyxcbiAgICBpbnRjYWw6ICdcXHUyMkJBJyxcbiAgICBpb3RhOiAnXFx1MDNCOScsXG4gICAgam1hdGg6ICdcXHUwMjM3JyxcbiAgICBrYXBwYTogJ1xcdTAzQkEnLFxuICAgIGthcHBhdjogJ1xcdTAzRjAnLFxuICAgIGxFZzogJ1xcdTJBOEInLFxuICAgIGxhbWJkYTogJ1xcdTAzQkInLFxuICAgIGxhcDogJ1xcdTJBODUnLFxuICAgIGxhcnJscDogJ1xcdTIxQUInLFxuICAgIGxhcnJ0bDogJ1xcdTIxQTInLFxuICAgIGxicmFjZTogJ1xcdTAwN0InLFxuICAgIGxicmFjazogJ1xcdTAwNUInLFxuICAgIGxlOiAnXFx1MjI2NCcsXG4gICAgbGVmdGxlZnRhcnJvd3M6ICdcXHUyMUM3JyxcbiAgICBsZWZ0dGhyZWV0aW1lczogJ1xcdTIyQ0InLFxuICAgIGxlc3Nkb3Q6ICdcXHUyMkQ2JyxcbiAgICBsbW91c3Q6ICdcXHUyM0IwJyxcbiAgICBsbkU6ICdcXHUyMjY4JyxcbiAgICBsbmFwOiAnXFx1MkE4OScsXG4gICAgbG5lOiAnXFx1MkE4NycsXG4gICAgbG5zaW06ICdcXHUyMkU2JyxcbiAgICBsb25nbWFwc3RvOiAnXFx1MjdGQycsXG4gICAgbG9vcGFycm93cmlnaHQ6ICdcXHUyMUFDJyxcbiAgICBsb3dhc3Q6ICdcXHUyMjE3JyxcbiAgICBsb3o6ICdcXHUyNUNBJyxcbiAgICBsdDogJ1xcdTAwM0MnLFxuICAgIGx0aW1lczogJ1xcdTIyQzknLFxuICAgIGx0cmk6ICdcXHUyNUMzJyxcbiAgICBtYWNyOiAnXFx1MDBBRicsXG4gICAgbWFsdDogJ1xcdTI3MjAnLFxuICAgIG1obzogJ1xcdTIxMjcnLFxuICAgIG11OiAnXFx1MDNCQycsXG4gICAgbXVsdGltYXA6ICdcXHUyMkI4JyxcbiAgICBuTGVmdGFycm93OiAnXFx1MjFDRCcsXG4gICAgbkxlZnRyaWdodGFycm93OiAnXFx1MjFDRScsXG4gICAgblJpZ2h0YXJyb3c6ICdcXHUyMUNGJyxcbiAgICBuVkRhc2g6ICdcXHUyMkFGJyxcbiAgICBuVmRhc2g6ICdcXHUyMkFFJyxcbiAgICBuYXR1cjogJ1xcdTI2NkUnLFxuICAgIG5lYXJyOiAnXFx1MjE5NycsXG4gICAgbmhhcnI6ICdcXHUyMUFFJyxcbiAgICBubGFycjogJ1xcdTIxOUEnLFxuICAgIG5vdDogJ1xcdTAwQUMnLFxuICAgIG5yYXJyOiAnXFx1MjE5QicsXG4gICAgbnU6ICdcXHUwM0JEJyxcbiAgICBudkRhc2g6ICdcXHUyMkFEJyxcbiAgICBudmRhc2g6ICdcXHUyMkFDJyxcbiAgICBud2FycjogJ1xcdTIxOTYnLFxuICAgIG9tZWdhOiAnXFx1MDNDOScsXG4gICAgb21pY3JvbjogJ1xcdTAzQkYnLFxuICAgIG9yOiAnXFx1MjIyOCcsXG4gICAgb3NvbDogJ1xcdTIyOTgnLFxuICAgIHBlcmlvZDogJ1xcdTAwMkUnLFxuICAgIHBoaTogJ1xcdTAzQzYnLFxuICAgIHBoaXY6ICdcXHUwM0Q1JyxcbiAgICBwaTogJ1xcdTAzQzAnLFxuICAgIHBpdjogJ1xcdTAzRDYnLFxuICAgIHByYXA6ICdcXHUyQUI3JyxcbiAgICBwcmVjbmFwcHJveDogJ1xcdTJBQjknLFxuICAgIHByZWNuZXFxOiAnXFx1MkFCNScsXG4gICAgcHJlY25zaW06ICdcXHUyMkU4JyxcbiAgICBwcmltZTogJ1xcdTIwMzInLFxuICAgIHBzaTogJ1xcdTAzQzgnLFxuICAgIHF1b3Q6ICdcXHUwMDIyJyxcbiAgICByYXJydGw6ICdcXHUyMUEzJyxcbiAgICByYnJhY2U6ICdcXHUwMDdEJyxcbiAgICByYnJhY2s6ICdcXHUwMDVEJyxcbiAgICByaG86ICdcXHUwM0MxJyxcbiAgICByaG92OiAnXFx1MDNGMScsXG4gICAgcmlnaHRyaWdodGFycm93czogJ1xcdTIxQzknLFxuICAgIHJpZ2h0dGhyZWV0aW1lczogJ1xcdTIyQ0MnLFxuICAgIHJpbmc6ICdcXHUwMkRBJyxcbiAgICBybW91c3Q6ICdcXHUyM0IxJyxcbiAgICBydGltZXM6ICdcXHUyMkNBJyxcbiAgICBydHJpOiAnXFx1MjVCOScsXG4gICAgc2NhcDogJ1xcdTJBQjgnLFxuICAgIHNjbkU6ICdcXHUyQUI2JyxcbiAgICBzY25hcDogJ1xcdTJBQkEnLFxuICAgIHNjbnNpbTogJ1xcdTIyRTknLFxuICAgIHNkb3Q6ICdcXHUyMkM1JyxcbiAgICBzZWFycjogJ1xcdTIxOTgnLFxuICAgIHNlY3Q6ICdcXHUwMEE3JyxcbiAgICBzaGFycDogJ1xcdTI2NkYnLFxuICAgIHNpZ21hOiAnXFx1MDNDMycsXG4gICAgc2lnbWF2OiAnXFx1MDNDMicsXG4gICAgc2ltbmU6ICdcXHUyMjQ2JyxcbiAgICBzbWlsZTogJ1xcdTIzMjMnLFxuICAgIHNwYWRlczogJ1xcdTI2NjAnLFxuICAgIHN1YjogJ1xcdTIyODInLFxuICAgIHN1YkU6ICdcXHUyQUM1JyxcbiAgICBzdWJuRTogJ1xcdTJBQ0InLFxuICAgIHN1Ym5lOiAnXFx1MjI4QScsXG4gICAgc3VwRTogJ1xcdTJBQzYnLFxuICAgIHN1cG5FOiAnXFx1MkFDQycsXG4gICAgc3VwbmU6ICdcXHUyMjhCJyxcbiAgICBzd2FycjogJ1xcdTIxOTknLFxuICAgIHRhdTogJ1xcdTAzQzQnLFxuICAgIHRoZXRhOiAnXFx1MDNCOCcsXG4gICAgdGhldGF2OiAnXFx1MDNEMScsXG4gICAgdGlsZGU6ICdcXHUwMkRDJyxcbiAgICB0aW1lczogJ1xcdTAwRDcnLFxuICAgIHRyaWFuZ2xlOiAnXFx1MjVCNScsXG4gICAgdHJpYW5nbGVxOiAnXFx1MjI1QycsXG4gICAgdXBzaTogJ1xcdTAzQzUnLFxuICAgIHVwdXBhcnJvd3M6ICdcXHUyMUM4JyxcbiAgICB2ZWViYXI6ICdcXHUyMkJCJyxcbiAgICB2ZWxsaXA6ICdcXHUyMkVFJyxcbiAgICB3ZWllcnA6ICdcXHUyMTE4JyxcbiAgICB4aTogJ1xcdTAzQkUnLFxuICAgIHllbjogJ1xcdTAwQTUnLFxuICAgIHpldGE6ICdcXHUwM0I2JyxcbiAgICB6aWdyYXJyOiAnXFx1MjFERCcsXG4gICAgbmJzcDogJ1xcdTAwQTAnLFxuICAgIHJzcXVvOiAnXFx1MjAxOScsXG4gICAgbHNxdW86ICdcXHUyMDE4J1xufTtcbnZhciBsb2FkZWQgPSB7fTtcbmZ1bmN0aW9uIGFkZChhZGRpdGlvbnMsIGZpbGUpIHtcbiAgICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZW50aXRpZXMsIGFkZGl0aW9ucyk7XG4gICAgbG9hZGVkW2ZpbGVdID0gdHJ1ZTtcbn1cbmV4cG9ydHMuYWRkID0gYWRkO1xuZnVuY3Rpb24gcmVtb3ZlKGVudGl0eSkge1xuICAgIGRlbGV0ZSBleHBvcnRzLmVudGl0aWVzW2VudGl0eV07XG59XG5leHBvcnRzLnJlbW92ZSA9IHJlbW92ZTtcbmZ1bmN0aW9uIHRyYW5zbGF0ZSh0ZXh0KSB7XG4gICAgcmV0dXJuIHRleHQucmVwbGFjZSgvJihbYS16XVthLXowLTldKnwjKD86WzAtOV0rfHhbMC05YS1mXSspKTsvaWcsIHJlcGxhY2UpO1xufVxuZXhwb3J0cy50cmFuc2xhdGUgPSB0cmFuc2xhdGU7XG5mdW5jdGlvbiByZXBsYWNlKG1hdGNoLCBlbnRpdHkpIHtcbiAgICBpZiAoZW50aXR5LmNoYXJBdCgwKSA9PT0gJyMnKSB7XG4gICAgICAgIHJldHVybiBudW1lcmljKGVudGl0eS5zbGljZSgxKSk7XG4gICAgfVxuICAgIGlmIChleHBvcnRzLmVudGl0aWVzW2VudGl0eV0pIHtcbiAgICAgICAgcmV0dXJuIGV4cG9ydHMuZW50aXRpZXNbZW50aXR5XTtcbiAgICB9XG4gICAgaWYgKGV4cG9ydHMub3B0aW9uc1snbG9hZE1pc3NpbmdFbnRpdGllcyddKSB7XG4gICAgICAgIHZhciBmaWxlID0gKGVudGl0eS5tYXRjaCgvXlthLXpBLVpdKGZyfHNjcnxvcGYpJC8pID8gUmVnRXhwLiQxIDogZW50aXR5LmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpKTtcbiAgICAgICAgaWYgKCFsb2FkZWRbZmlsZV0pIHtcbiAgICAgICAgICAgIGxvYWRlZFtmaWxlXSA9IHRydWU7XG4gICAgICAgICAgICAoMCwgUmV0cmllc19qc18xLnJldHJ5QWZ0ZXIpKCgwLCBBc3luY0xvYWRfanNfMS5hc3luY0xvYWQpKCcuL3V0aWwvZW50aXRpZXMvJyArIGZpbGUgKyAnLmpzJykpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBtYXRjaDtcbn1cbmZ1bmN0aW9uIG51bWVyaWMoZW50aXR5KSB7XG4gICAgdmFyIG4gPSAoZW50aXR5LmNoYXJBdCgwKSA9PT0gJ3gnID9cbiAgICAgICAgcGFyc2VJbnQoZW50aXR5LnNsaWNlKDEpLCAxNikgOlxuICAgICAgICBwYXJzZUludChlbnRpdHkpKTtcbiAgICByZXR1cm4gU3RyaW5nLmZyb21Db2RlUG9pbnQobik7XG59XG5leHBvcnRzLm51bWVyaWMgPSBudW1lcmljO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RW50aXRpZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/util/Entities.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/util/FunctionList.js":
/*!***********************************************************!*\
  !*** ./node_modules/mathjax-full/js/util/FunctionList.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FunctionList = void 0;\nvar PrioritizedList_js_1 = __webpack_require__(/*! ./PrioritizedList.js */ \"./node_modules/mathjax-full/js/util/PrioritizedList.js\");\nvar FunctionList = (function (_super) {\n    __extends(FunctionList, _super);\n    function FunctionList() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FunctionList.prototype.execute = function () {\n        var e_1, _a;\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        try {\n            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var item = _c.value;\n                var result = item.item.apply(item, __spreadArray([], __read(data), false));\n                if (result === false) {\n                    return false;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return true;\n    };\n    FunctionList.prototype.asyncExecute = function () {\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        var i = -1;\n        var items = this.items;\n        return new Promise(function (ok, fail) {\n            (function execute() {\n                var _a;\n                while (++i < items.length) {\n                    var result = (_a = items[i]).item.apply(_a, __spreadArray([], __read(data), false));\n                    if (result instanceof Promise) {\n                        result.then(execute).catch(function (err) { return fail(err); });\n                        return;\n                    }\n                    if (result === false) {\n                        ok(false);\n                        return;\n                    }\n                }\n                ok(true);\n            })();\n        });\n    };\n    return FunctionList;\n}(PrioritizedList_js_1.PrioritizedList));\nexports.FunctionList = FunctionList;\n//# sourceMappingURL=FunctionList.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL3V0aWwvRnVuY3Rpb25MaXN0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnQkFBZ0Isc0NBQXNDLGtCQUFrQjtBQUN2Riw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsTUFBTTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RSxPQUFPO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQiwyQkFBMkIsbUJBQU8sQ0FBQyxvRkFBc0I7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix1QkFBdUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0EsMERBQTBELFVBQVU7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHVCQUF1QjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9FQUFvRSxtQkFBbUI7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLENBQUM7QUFDRCxvQkFBb0I7QUFDcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy91dGlsL0Z1bmN0aW9uTGlzdC5qcz9lYzU3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbnZhciBfX3ZhbHVlcyA9ICh0aGlzICYmIHRoaXMuX192YWx1ZXMpIHx8IGZ1bmN0aW9uKG8pIHtcbiAgICB2YXIgcyA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBTeW1ib2wuaXRlcmF0b3IsIG0gPSBzICYmIG9bc10sIGkgPSAwO1xuICAgIGlmIChtKSByZXR1cm4gbS5jYWxsKG8pO1xuICAgIGlmIChvICYmIHR5cGVvZiBvLmxlbmd0aCA9PT0gXCJudW1iZXJcIikgcmV0dXJuIHtcbiAgICAgICAgbmV4dDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKG8gJiYgaSA+PSBvLmxlbmd0aCkgbyA9IHZvaWQgMDtcbiAgICAgICAgICAgIHJldHVybiB7IHZhbHVlOiBvICYmIG9baSsrXSwgZG9uZTogIW8gfTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihzID8gXCJPYmplY3QgaXMgbm90IGl0ZXJhYmxlLlwiIDogXCJTeW1ib2wuaXRlcmF0b3IgaXMgbm90IGRlZmluZWQuXCIpO1xufTtcbnZhciBfX3JlYWQgPSAodGhpcyAmJiB0aGlzLl9fcmVhZCkgfHwgZnVuY3Rpb24gKG8sIG4pIHtcbiAgICB2YXIgbSA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvW1N5bWJvbC5pdGVyYXRvcl07XG4gICAgaWYgKCFtKSByZXR1cm4gbztcbiAgICB2YXIgaSA9IG0uY2FsbChvKSwgciwgYXIgPSBbXSwgZTtcbiAgICB0cnkge1xuICAgICAgICB3aGlsZSAoKG4gPT09IHZvaWQgMCB8fCBuLS0gPiAwKSAmJiAhKHIgPSBpLm5leHQoKSkuZG9uZSkgYXIucHVzaChyLnZhbHVlKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7IGUgPSB7IGVycm9yOiBlcnJvciB9OyB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAociAmJiAhci5kb25lICYmIChtID0gaVtcInJldHVyblwiXSkpIG0uY2FsbChpKTtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHsgaWYgKGUpIHRocm93IGUuZXJyb3I7IH1cbiAgICB9XG4gICAgcmV0dXJuIGFyO1xufTtcbnZhciBfX3NwcmVhZEFycmF5ID0gKHRoaXMgJiYgdGhpcy5fX3NwcmVhZEFycmF5KSB8fCBmdW5jdGlvbiAodG8sIGZyb20sIHBhY2spIHtcbiAgICBpZiAocGFjayB8fCBhcmd1bWVudHMubGVuZ3RoID09PSAyKSBmb3IgKHZhciBpID0gMCwgbCA9IGZyb20ubGVuZ3RoLCBhcjsgaSA8IGw7IGkrKykge1xuICAgICAgICBpZiAoYXIgfHwgIShpIGluIGZyb20pKSB7XG4gICAgICAgICAgICBpZiAoIWFyKSBhciA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGZyb20sIDAsIGkpO1xuICAgICAgICAgICAgYXJbaV0gPSBmcm9tW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0by5jb25jYXQoYXIgfHwgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSkpO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRnVuY3Rpb25MaXN0ID0gdm9pZCAwO1xudmFyIFByaW9yaXRpemVkTGlzdF9qc18xID0gcmVxdWlyZShcIi4vUHJpb3JpdGl6ZWRMaXN0LmpzXCIpO1xudmFyIEZ1bmN0aW9uTGlzdCA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEZ1bmN0aW9uTGlzdCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBGdW5jdGlvbkxpc3QoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICB9XG4gICAgRnVuY3Rpb25MaXN0LnByb3RvdHlwZS5leGVjdXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZV8xLCBfYTtcbiAgICAgICAgdmFyIGRhdGEgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIGRhdGFbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yICh2YXIgX2IgPSBfX3ZhbHVlcyh0aGlzKSwgX2MgPSBfYi5uZXh0KCk7ICFfYy5kb25lOyBfYyA9IF9iLm5leHQoKSkge1xuICAgICAgICAgICAgICAgIHZhciBpdGVtID0gX2MudmFsdWU7XG4gICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9IGl0ZW0uaXRlbS5hcHBseShpdGVtLCBfX3NwcmVhZEFycmF5KFtdLCBfX3JlYWQoZGF0YSksIGZhbHNlKSk7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZV8xXzEpIHsgZV8xID0geyBlcnJvcjogZV8xXzEgfTsgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgaWYgKF9jICYmICFfYy5kb25lICYmIChfYSA9IF9iLnJldHVybikpIF9hLmNhbGwoX2IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZmluYWxseSB7IGlmIChlXzEpIHRocm93IGVfMS5lcnJvcjsgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH07XG4gICAgRnVuY3Rpb25MaXN0LnByb3RvdHlwZS5hc3luY0V4ZWN1dGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBkYXRhID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBkYXRhW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGkgPSAtMTtcbiAgICAgICAgdmFyIGl0ZW1zID0gdGhpcy5pdGVtcztcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChvaywgZmFpbCkge1xuICAgICAgICAgICAgKGZ1bmN0aW9uIGV4ZWN1dGUoKSB7XG4gICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgIHdoaWxlICgrK2kgPCBpdGVtcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9IChfYSA9IGl0ZW1zW2ldKS5pdGVtLmFwcGx5KF9hLCBfX3NwcmVhZEFycmF5KFtdLCBfX3JlYWQoZGF0YSksIGZhbHNlKSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQudGhlbihleGVjdXRlKS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7IHJldHVybiBmYWlsKGVycik7IH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvayhmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgb2sodHJ1ZSk7XG4gICAgICAgICAgICB9KSgpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBGdW5jdGlvbkxpc3Q7XG59KFByaW9yaXRpemVkTGlzdF9qc18xLlByaW9yaXRpemVkTGlzdCkpO1xuZXhwb3J0cy5GdW5jdGlvbkxpc3QgPSBGdW5jdGlvbkxpc3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1GdW5jdGlvbkxpc3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/util/FunctionList.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/util/Options.js":
/*!******************************************************!*\
  !*** ./node_modules/mathjax-full/js/util/Options.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.lookup = exports.separateOptions = exports.selectOptionsFromKeys = exports.selectOptions = exports.userOptions = exports.defaultOptions = exports.insert = exports.copy = exports.keys = exports.makeArray = exports.expandable = exports.Expandable = exports.OPTIONS = exports.REMOVE = exports.APPEND = exports.isObject = void 0;\nvar OBJECT = {}.constructor;\nfunction isObject(obj) {\n    return typeof obj === 'object' && obj !== null &&\n        (obj.constructor === OBJECT || obj.constructor === Expandable);\n}\nexports.isObject = isObject;\nexports.APPEND = '[+]';\nexports.REMOVE = '[-]';\nexports.OPTIONS = {\n    invalidOption: 'warn',\n    optionError: function (message, _key) {\n        if (exports.OPTIONS.invalidOption === 'fatal') {\n            throw new Error(message);\n        }\n        console.warn('MathJax: ' + message);\n    }\n};\nvar Expandable = (function () {\n    function Expandable() {\n    }\n    return Expandable;\n}());\nexports.Expandable = Expandable;\nfunction expandable(def) {\n    return Object.assign(Object.create(Expandable.prototype), def);\n}\nexports.expandable = expandable;\nfunction makeArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\nexports.makeArray = makeArray;\nfunction keys(def) {\n    if (!def) {\n        return [];\n    }\n    return Object.keys(def).concat(Object.getOwnPropertySymbols(def));\n}\nexports.keys = keys;\nfunction copy(def) {\n    var e_1, _a;\n    var props = {};\n    try {\n        for (var _b = __values(keys(def)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var key = _c.value;\n            var prop = Object.getOwnPropertyDescriptor(def, key);\n            var value = prop.value;\n            if (Array.isArray(value)) {\n                prop.value = insert([], value, false);\n            }\n            else if (isObject(value)) {\n                prop.value = copy(value);\n            }\n            if (prop.enumerable) {\n                props[key] = prop;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return Object.defineProperties(def.constructor === Expandable ? expandable({}) : {}, props);\n}\nexports.copy = copy;\nfunction insert(dst, src, warn) {\n    var e_2, _a;\n    if (warn === void 0) { warn = true; }\n    var _loop_1 = function (key) {\n        if (warn && dst[key] === undefined && dst.constructor !== Expandable) {\n            if (typeof key === 'symbol') {\n                key = key.toString();\n            }\n            exports.OPTIONS.optionError(\"Invalid option \\\"\".concat(key, \"\\\" (no default value).\"), key);\n            return \"continue\";\n        }\n        var sval = src[key], dval = dst[key];\n        if (isObject(sval) && dval !== null &&\n            (typeof dval === 'object' || typeof dval === 'function')) {\n            var ids = keys(sval);\n            if (Array.isArray(dval) &&\n                ((ids.length === 1 && (ids[0] === exports.APPEND || ids[0] === exports.REMOVE) && Array.isArray(sval[ids[0]])) ||\n                    (ids.length === 2 && ids.sort().join(',') === exports.APPEND + ',' + exports.REMOVE &&\n                        Array.isArray(sval[exports.APPEND]) && Array.isArray(sval[exports.REMOVE])))) {\n                if (sval[exports.REMOVE]) {\n                    dval = dst[key] = dval.filter(function (x) { return sval[exports.REMOVE].indexOf(x) < 0; });\n                }\n                if (sval[exports.APPEND]) {\n                    dst[key] = __spreadArray(__spreadArray([], __read(dval), false), __read(sval[exports.APPEND]), false);\n                }\n            }\n            else {\n                insert(dval, sval, warn);\n            }\n        }\n        else if (Array.isArray(sval)) {\n            dst[key] = [];\n            insert(dst[key], sval, false);\n        }\n        else if (isObject(sval)) {\n            dst[key] = copy(sval);\n        }\n        else {\n            dst[key] = sval;\n        }\n    };\n    try {\n        for (var _b = __values(keys(src)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var key = _c.value;\n            _loop_1(key);\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return dst;\n}\nexports.insert = insert;\nfunction defaultOptions(options) {\n    var defs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        defs[_i - 1] = arguments[_i];\n    }\n    defs.forEach(function (def) { return insert(options, def, false); });\n    return options;\n}\nexports.defaultOptions = defaultOptions;\nfunction userOptions(options) {\n    var defs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        defs[_i - 1] = arguments[_i];\n    }\n    defs.forEach(function (def) { return insert(options, def, true); });\n    return options;\n}\nexports.userOptions = userOptions;\nfunction selectOptions(options) {\n    var e_3, _a;\n    var keys = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        keys[_i - 1] = arguments[_i];\n    }\n    var subset = {};\n    try {\n        for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n            var key = keys_1_1.value;\n            if (options.hasOwnProperty(key)) {\n                subset[key] = options[key];\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return subset;\n}\nexports.selectOptions = selectOptions;\nfunction selectOptionsFromKeys(options, object) {\n    return selectOptions.apply(void 0, __spreadArray([options], __read(Object.keys(object)), false));\n}\nexports.selectOptionsFromKeys = selectOptionsFromKeys;\nfunction separateOptions(options) {\n    var e_4, _a, e_5, _b;\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    var results = [];\n    try {\n        for (var objects_1 = __values(objects), objects_1_1 = objects_1.next(); !objects_1_1.done; objects_1_1 = objects_1.next()) {\n            var object = objects_1_1.value;\n            var exists = {}, missing = {};\n            try {\n                for (var _c = (e_5 = void 0, __values(Object.keys(options || {}))), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var key = _d.value;\n                    (object[key] === undefined ? missing : exists)[key] = options[key];\n                }\n            }\n            catch (e_5_1) { e_5 = { error: e_5_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n                }\n                finally { if (e_5) throw e_5.error; }\n            }\n            results.push(exists);\n            options = missing;\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (objects_1_1 && !objects_1_1.done && (_a = objects_1.return)) _a.call(objects_1);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n    results.unshift(options);\n    return results;\n}\nexports.separateOptions = separateOptions;\nfunction lookup(name, lookup, def) {\n    if (def === void 0) { def = null; }\n    return (lookup.hasOwnProperty(name) ? lookup[name] : def);\n}\nexports.lookup = lookup;\n//# sourceMappingURL=Options.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/util/Options.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/util/PrioritizedList.js":
/*!**************************************************************!*\
  !*** ./node_modules/mathjax-full/js/util/PrioritizedList.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PrioritizedList = void 0;\nvar PrioritizedList = (function () {\n    function PrioritizedList() {\n        this.items = [];\n        this.items = [];\n    }\n    PrioritizedList.prototype[Symbol.iterator] = function () {\n        var i = 0;\n        var items = this.items;\n        return {\n            next: function () {\n                return { value: items[i++], done: (i > items.length) };\n            }\n        };\n    };\n    PrioritizedList.prototype.add = function (item, priority) {\n        if (priority === void 0) { priority = PrioritizedList.DEFAULTPRIORITY; }\n        var i = this.items.length;\n        do {\n            i--;\n        } while (i >= 0 && priority < this.items[i].priority);\n        this.items.splice(i + 1, 0, { item: item, priority: priority });\n        return item;\n    };\n    PrioritizedList.prototype.remove = function (item) {\n        var i = this.items.length;\n        do {\n            i--;\n        } while (i >= 0 && this.items[i].item !== item);\n        if (i >= 0) {\n            this.items.splice(i, 1);\n        }\n    };\n    PrioritizedList.DEFAULTPRIORITY = 5;\n    return PrioritizedList;\n}());\nexports.PrioritizedList = PrioritizedList;\n//# sourceMappingURL=PrioritizedList.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL3V0aWwvUHJpb3JpdGl6ZWRMaXN0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Ysc0NBQXNDLGdDQUFnQztBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHVCQUF1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL3V0aWwvUHJpb3JpdGl6ZWRMaXN0LmpzP2ZmMjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlByaW9yaXRpemVkTGlzdCA9IHZvaWQgMDtcbnZhciBQcmlvcml0aXplZExpc3QgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFByaW9yaXRpemVkTGlzdCgpIHtcbiAgICAgICAgdGhpcy5pdGVtcyA9IFtdO1xuICAgICAgICB0aGlzLml0ZW1zID0gW107XG4gICAgfVxuICAgIFByaW9yaXRpemVkTGlzdC5wcm90b3R5cGVbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGkgPSAwO1xuICAgICAgICB2YXIgaXRlbXMgPSB0aGlzLml0ZW1zO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmV4dDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB7IHZhbHVlOiBpdGVtc1tpKytdLCBkb25lOiAoaSA+IGl0ZW1zLmxlbmd0aCkgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9O1xuICAgIFByaW9yaXRpemVkTGlzdC5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24gKGl0ZW0sIHByaW9yaXR5KSB7XG4gICAgICAgIGlmIChwcmlvcml0eSA9PT0gdm9pZCAwKSB7IHByaW9yaXR5ID0gUHJpb3JpdGl6ZWRMaXN0LkRFRkFVTFRQUklPUklUWTsgfVxuICAgICAgICB2YXIgaSA9IHRoaXMuaXRlbXMubGVuZ3RoO1xuICAgICAgICBkbyB7XG4gICAgICAgICAgICBpLS07XG4gICAgICAgIH0gd2hpbGUgKGkgPj0gMCAmJiBwcmlvcml0eSA8IHRoaXMuaXRlbXNbaV0ucHJpb3JpdHkpO1xuICAgICAgICB0aGlzLml0ZW1zLnNwbGljZShpICsgMSwgMCwgeyBpdGVtOiBpdGVtLCBwcmlvcml0eTogcHJpb3JpdHkgfSk7XG4gICAgICAgIHJldHVybiBpdGVtO1xuICAgIH07XG4gICAgUHJpb3JpdGl6ZWRMaXN0LnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICB2YXIgaSA9IHRoaXMuaXRlbXMubGVuZ3RoO1xuICAgICAgICBkbyB7XG4gICAgICAgICAgICBpLS07XG4gICAgICAgIH0gd2hpbGUgKGkgPj0gMCAmJiB0aGlzLml0ZW1zW2ldLml0ZW0gIT09IGl0ZW0pO1xuICAgICAgICBpZiAoaSA+PSAwKSB7XG4gICAgICAgICAgICB0aGlzLml0ZW1zLnNwbGljZShpLCAxKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgUHJpb3JpdGl6ZWRMaXN0LkRFRkFVTFRQUklPUklUWSA9IDU7XG4gICAgcmV0dXJuIFByaW9yaXRpemVkTGlzdDtcbn0oKSk7XG5leHBvcnRzLlByaW9yaXRpemVkTGlzdCA9IFByaW9yaXRpemVkTGlzdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVByaW9yaXRpemVkTGlzdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/util/PrioritizedList.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/util/Retries.js":
/*!******************************************************!*\
  !*** ./node_modules/mathjax-full/js/util/Retries.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.retryAfter = exports.handleRetriesFor = void 0;\nfunction handleRetriesFor(code) {\n    return new Promise(function run(ok, fail) {\n        try {\n            ok(code());\n        }\n        catch (err) {\n            if (err.retry && err.retry instanceof Promise) {\n                err.retry.then(function () { return run(ok, fail); })\n                    .catch(function (perr) { return fail(perr); });\n            }\n            else if (err.restart && err.restart.isCallback) {\n                MathJax.Callback.After(function () { return run(ok, fail); }, err.restart);\n            }\n            else {\n                fail(err);\n            }\n        }\n    });\n}\nexports.handleRetriesFor = handleRetriesFor;\nfunction retryAfter(promise) {\n    var err = new Error('MathJax retry');\n    err.retry = promise;\n    throw err;\n}\nexports.retryAfter = retryAfter;\n//# sourceMappingURL=Retries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL3V0aWwvUmV0cmllcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0IsR0FBRyx3QkFBd0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsdUJBQXVCO0FBQ3BFLDZDQUE2QyxvQkFBb0I7QUFDakU7QUFDQTtBQUNBLHFEQUFxRCx1QkFBdUI7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvdXRpbC9SZXRyaWVzLmpzPzU5NDAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnJldHJ5QWZ0ZXIgPSBleHBvcnRzLmhhbmRsZVJldHJpZXNGb3IgPSB2b2lkIDA7XG5mdW5jdGlvbiBoYW5kbGVSZXRyaWVzRm9yKGNvZGUpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gcnVuKG9rLCBmYWlsKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBvayhjb2RlKCkpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIGlmIChlcnIucmV0cnkgJiYgZXJyLnJldHJ5IGluc3RhbmNlb2YgUHJvbWlzZSkge1xuICAgICAgICAgICAgICAgIGVyci5yZXRyeS50aGVuKGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJ1bihvaywgZmFpbCk7IH0pXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAocGVycikgeyByZXR1cm4gZmFpbChwZXJyKTsgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChlcnIucmVzdGFydCAmJiBlcnIucmVzdGFydC5pc0NhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgTWF0aEpheC5DYWxsYmFjay5BZnRlcihmdW5jdGlvbiAoKSB7IHJldHVybiBydW4ob2ssIGZhaWwpOyB9LCBlcnIucmVzdGFydCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBmYWlsKGVycik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydHMuaGFuZGxlUmV0cmllc0ZvciA9IGhhbmRsZVJldHJpZXNGb3I7XG5mdW5jdGlvbiByZXRyeUFmdGVyKHByb21pc2UpIHtcbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKCdNYXRoSmF4IHJldHJ5Jyk7XG4gICAgZXJyLnJldHJ5ID0gcHJvbWlzZTtcbiAgICB0aHJvdyBlcnI7XG59XG5leHBvcnRzLnJldHJ5QWZ0ZXIgPSByZXRyeUFmdGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UmV0cmllcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/util/Retries.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/util/lengths.js":
/*!******************************************************!*\
  !*** ./node_modules/mathjax-full/js/util/lengths.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.px = exports.emRounded = exports.em = exports.percent = exports.length2em = exports.MATHSPACE = exports.RELUNITS = exports.UNITS = exports.BIGDIMEN = void 0;\nexports.BIGDIMEN = 1000000;\nexports.UNITS = {\n    px: 1,\n    'in': 96,\n    cm: 96 / 2.54,\n    mm: 96 / 25.4\n};\nexports.RELUNITS = {\n    em: 1,\n    ex: .431,\n    pt: 1 / 10,\n    pc: 12 / 10,\n    mu: 1 / 18\n};\nexports.MATHSPACE = {\n    veryverythinmathspace: 1 / 18,\n    verythinmathspace: 2 / 18,\n    thinmathspace: 3 / 18,\n    mediummathspace: 4 / 18,\n    thickmathspace: 5 / 18,\n    verythickmathspace: 6 / 18,\n    veryverythickmathspace: 7 / 18,\n    negativeveryverythinmathspace: -1 / 18,\n    negativeverythinmathspace: -2 / 18,\n    negativethinmathspace: -3 / 18,\n    negativemediummathspace: -4 / 18,\n    negativethickmathspace: -5 / 18,\n    negativeverythickmathspace: -6 / 18,\n    negativeveryverythickmathspace: -7 / 18,\n    thin: .04,\n    medium: .06,\n    thick: .1,\n    normal: 1,\n    big: 2,\n    small: 1 / Math.sqrt(2),\n    infinity: exports.BIGDIMEN\n};\nfunction length2em(length, size, scale, em) {\n    if (size === void 0) { size = 0; }\n    if (scale === void 0) { scale = 1; }\n    if (em === void 0) { em = 16; }\n    if (typeof length !== 'string') {\n        length = String(length);\n    }\n    if (length === '' || length == null) {\n        return size;\n    }\n    if (exports.MATHSPACE[length]) {\n        return exports.MATHSPACE[length];\n    }\n    var match = length.match(/^\\s*([-+]?(?:\\.\\d+|\\d+(?:\\.\\d*)?))?(pt|em|ex|mu|px|pc|in|mm|cm|%)?/);\n    if (!match) {\n        return size;\n    }\n    var m = parseFloat(match[1] || '1'), unit = match[2];\n    if (exports.UNITS.hasOwnProperty(unit)) {\n        return m * exports.UNITS[unit] / em / scale;\n    }\n    if (exports.RELUNITS.hasOwnProperty(unit)) {\n        return m * exports.RELUNITS[unit];\n    }\n    if (unit === '%') {\n        return m / 100 * size;\n    }\n    return m * size;\n}\nexports.length2em = length2em;\nfunction percent(m) {\n    return (100 * m).toFixed(1).replace(/\\.?0+$/, '') + '%';\n}\nexports.percent = percent;\nfunction em(m) {\n    if (Math.abs(m) < .001)\n        return '0';\n    return (m.toFixed(3).replace(/\\.?0+$/, '')) + 'em';\n}\nexports.em = em;\nfunction emRounded(m, em) {\n    if (em === void 0) { em = 16; }\n    m = (Math.round(m * em) + .05) / em;\n    if (Math.abs(m) < .001)\n        return '0em';\n    return m.toFixed(3).replace(/\\.?0+$/, '') + 'em';\n}\nexports.emRounded = emRounded;\nfunction px(m, M, em) {\n    if (M === void 0) { M = -exports.BIGDIMEN; }\n    if (em === void 0) { em = 16; }\n    m *= em;\n    if (M && m < M)\n        m = M;\n    if (Math.abs(m) < .1)\n        return '0';\n    return m.toFixed(1).replace(/\\.0$/, '') + 'px';\n}\nexports.px = px;\n//# sourceMappingURL=lengths.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL3V0aWwvbGVuZ3Rocy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxVQUFVLEdBQUcsaUJBQWlCLEdBQUcsVUFBVSxHQUFHLGVBQWUsR0FBRyxpQkFBaUIsR0FBRyxpQkFBaUIsR0FBRyxnQkFBZ0IsR0FBRyxhQUFhLEdBQUcsZ0JBQWdCO0FBQzNKLGdCQUFnQjtBQUNoQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQiw0QkFBNEI7QUFDNUIseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSx3QkFBd0I7QUFDeEIseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvdXRpbC9sZW5ndGhzLmpzP2Y2ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnB4ID0gZXhwb3J0cy5lbVJvdW5kZWQgPSBleHBvcnRzLmVtID0gZXhwb3J0cy5wZXJjZW50ID0gZXhwb3J0cy5sZW5ndGgyZW0gPSBleHBvcnRzLk1BVEhTUEFDRSA9IGV4cG9ydHMuUkVMVU5JVFMgPSBleHBvcnRzLlVOSVRTID0gZXhwb3J0cy5CSUdESU1FTiA9IHZvaWQgMDtcbmV4cG9ydHMuQklHRElNRU4gPSAxMDAwMDAwO1xuZXhwb3J0cy5VTklUUyA9IHtcbiAgICBweDogMSxcbiAgICAnaW4nOiA5NixcbiAgICBjbTogOTYgLyAyLjU0LFxuICAgIG1tOiA5NiAvIDI1LjRcbn07XG5leHBvcnRzLlJFTFVOSVRTID0ge1xuICAgIGVtOiAxLFxuICAgIGV4OiAuNDMxLFxuICAgIHB0OiAxIC8gMTAsXG4gICAgcGM6IDEyIC8gMTAsXG4gICAgbXU6IDEgLyAxOFxufTtcbmV4cG9ydHMuTUFUSFNQQUNFID0ge1xuICAgIHZlcnl2ZXJ5dGhpbm1hdGhzcGFjZTogMSAvIDE4LFxuICAgIHZlcnl0aGlubWF0aHNwYWNlOiAyIC8gMTgsXG4gICAgdGhpbm1hdGhzcGFjZTogMyAvIDE4LFxuICAgIG1lZGl1bW1hdGhzcGFjZTogNCAvIDE4LFxuICAgIHRoaWNrbWF0aHNwYWNlOiA1IC8gMTgsXG4gICAgdmVyeXRoaWNrbWF0aHNwYWNlOiA2IC8gMTgsXG4gICAgdmVyeXZlcnl0aGlja21hdGhzcGFjZTogNyAvIDE4LFxuICAgIG5lZ2F0aXZldmVyeXZlcnl0aGlubWF0aHNwYWNlOiAtMSAvIDE4LFxuICAgIG5lZ2F0aXZldmVyeXRoaW5tYXRoc3BhY2U6IC0yIC8gMTgsXG4gICAgbmVnYXRpdmV0aGlubWF0aHNwYWNlOiAtMyAvIDE4LFxuICAgIG5lZ2F0aXZlbWVkaXVtbWF0aHNwYWNlOiAtNCAvIDE4LFxuICAgIG5lZ2F0aXZldGhpY2ttYXRoc3BhY2U6IC01IC8gMTgsXG4gICAgbmVnYXRpdmV2ZXJ5dGhpY2ttYXRoc3BhY2U6IC02IC8gMTgsXG4gICAgbmVnYXRpdmV2ZXJ5dmVyeXRoaWNrbWF0aHNwYWNlOiAtNyAvIDE4LFxuICAgIHRoaW46IC4wNCxcbiAgICBtZWRpdW06IC4wNixcbiAgICB0aGljazogLjEsXG4gICAgbm9ybWFsOiAxLFxuICAgIGJpZzogMixcbiAgICBzbWFsbDogMSAvIE1hdGguc3FydCgyKSxcbiAgICBpbmZpbml0eTogZXhwb3J0cy5CSUdESU1FTlxufTtcbmZ1bmN0aW9uIGxlbmd0aDJlbShsZW5ndGgsIHNpemUsIHNjYWxlLCBlbSkge1xuICAgIGlmIChzaXplID09PSB2b2lkIDApIHsgc2l6ZSA9IDA7IH1cbiAgICBpZiAoc2NhbGUgPT09IHZvaWQgMCkgeyBzY2FsZSA9IDE7IH1cbiAgICBpZiAoZW0gPT09IHZvaWQgMCkgeyBlbSA9IDE2OyB9XG4gICAgaWYgKHR5cGVvZiBsZW5ndGggIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGxlbmd0aCA9IFN0cmluZyhsZW5ndGgpO1xuICAgIH1cbiAgICBpZiAobGVuZ3RoID09PSAnJyB8fCBsZW5ndGggPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gc2l6ZTtcbiAgICB9XG4gICAgaWYgKGV4cG9ydHMuTUFUSFNQQUNFW2xlbmd0aF0pIHtcbiAgICAgICAgcmV0dXJuIGV4cG9ydHMuTUFUSFNQQUNFW2xlbmd0aF07XG4gICAgfVxuICAgIHZhciBtYXRjaCA9IGxlbmd0aC5tYXRjaCgvXlxccyooWy0rXT8oPzpcXC5cXGQrfFxcZCsoPzpcXC5cXGQqKT8pKT8ocHR8ZW18ZXh8bXV8cHh8cGN8aW58bW18Y218JSk/Lyk7XG4gICAgaWYgKCFtYXRjaCkge1xuICAgICAgICByZXR1cm4gc2l6ZTtcbiAgICB9XG4gICAgdmFyIG0gPSBwYXJzZUZsb2F0KG1hdGNoWzFdIHx8ICcxJyksIHVuaXQgPSBtYXRjaFsyXTtcbiAgICBpZiAoZXhwb3J0cy5VTklUUy5oYXNPd25Qcm9wZXJ0eSh1bml0KSkge1xuICAgICAgICByZXR1cm4gbSAqIGV4cG9ydHMuVU5JVFNbdW5pdF0gLyBlbSAvIHNjYWxlO1xuICAgIH1cbiAgICBpZiAoZXhwb3J0cy5SRUxVTklUUy5oYXNPd25Qcm9wZXJ0eSh1bml0KSkge1xuICAgICAgICByZXR1cm4gbSAqIGV4cG9ydHMuUkVMVU5JVFNbdW5pdF07XG4gICAgfVxuICAgIGlmICh1bml0ID09PSAnJScpIHtcbiAgICAgICAgcmV0dXJuIG0gLyAxMDAgKiBzaXplO1xuICAgIH1cbiAgICByZXR1cm4gbSAqIHNpemU7XG59XG5leHBvcnRzLmxlbmd0aDJlbSA9IGxlbmd0aDJlbTtcbmZ1bmN0aW9uIHBlcmNlbnQobSkge1xuICAgIHJldHVybiAoMTAwICogbSkudG9GaXhlZCgxKS5yZXBsYWNlKC9cXC4/MCskLywgJycpICsgJyUnO1xufVxuZXhwb3J0cy5wZXJjZW50ID0gcGVyY2VudDtcbmZ1bmN0aW9uIGVtKG0pIHtcbiAgICBpZiAoTWF0aC5hYnMobSkgPCAuMDAxKVxuICAgICAgICByZXR1cm4gJzAnO1xuICAgIHJldHVybiAobS50b0ZpeGVkKDMpLnJlcGxhY2UoL1xcLj8wKyQvLCAnJykpICsgJ2VtJztcbn1cbmV4cG9ydHMuZW0gPSBlbTtcbmZ1bmN0aW9uIGVtUm91bmRlZChtLCBlbSkge1xuICAgIGlmIChlbSA9PT0gdm9pZCAwKSB7IGVtID0gMTY7IH1cbiAgICBtID0gKE1hdGgucm91bmQobSAqIGVtKSArIC4wNSkgLyBlbTtcbiAgICBpZiAoTWF0aC5hYnMobSkgPCAuMDAxKVxuICAgICAgICByZXR1cm4gJzBlbSc7XG4gICAgcmV0dXJuIG0udG9GaXhlZCgzKS5yZXBsYWNlKC9cXC4/MCskLywgJycpICsgJ2VtJztcbn1cbmV4cG9ydHMuZW1Sb3VuZGVkID0gZW1Sb3VuZGVkO1xuZnVuY3Rpb24gcHgobSwgTSwgZW0pIHtcbiAgICBpZiAoTSA9PT0gdm9pZCAwKSB7IE0gPSAtZXhwb3J0cy5CSUdESU1FTjsgfVxuICAgIGlmIChlbSA9PT0gdm9pZCAwKSB7IGVtID0gMTY7IH1cbiAgICBtICo9IGVtO1xuICAgIGlmIChNICYmIG0gPCBNKVxuICAgICAgICBtID0gTTtcbiAgICBpZiAoTWF0aC5hYnMobSkgPCAuMSlcbiAgICAgICAgcmV0dXJuICcwJztcbiAgICByZXR1cm4gbS50b0ZpeGVkKDEpLnJlcGxhY2UoL1xcLjAkLywgJycpICsgJ3B4Jztcbn1cbmV4cG9ydHMucHggPSBweDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxlbmd0aHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/util/lengths.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/util/string.js":
/*!*****************************************************!*\
  !*** ./node_modules/mathjax-full/js/util/string.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.split = exports.isPercent = exports.unicodeString = exports.unicodeChars = exports.quotePattern = exports.sortLength = void 0;\nfunction sortLength(a, b) {\n    return a.length !== b.length ? b.length - a.length : a === b ? 0 : a < b ? -1 : 1;\n}\nexports.sortLength = sortLength;\nfunction quotePattern(text) {\n    return text.replace(/([\\^$(){}+*?\\-|\\[\\]\\:\\\\])/g, '\\\\$1');\n}\nexports.quotePattern = quotePattern;\nfunction unicodeChars(text) {\n    return Array.from(text).map(function (c) { return c.codePointAt(0); });\n}\nexports.unicodeChars = unicodeChars;\nfunction unicodeString(data) {\n    return String.fromCodePoint.apply(String, __spreadArray([], __read(data), false));\n}\nexports.unicodeString = unicodeString;\nfunction isPercent(x) {\n    return !!x.match(/%\\s*$/);\n}\nexports.isPercent = isPercent;\nfunction split(x) {\n    return x.trim().split(/\\s+/);\n}\nexports.split = split;\n//# sourceMappingURL=string.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL3V0aWwvc3RyaW5nLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsTUFBTTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RSxPQUFPO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsR0FBRyxpQkFBaUIsR0FBRyxxQkFBcUIsR0FBRyxvQkFBb0IsR0FBRyxvQkFBb0IsR0FBRyxrQkFBa0I7QUFDNUg7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0EsK0NBQStDLDBCQUEwQjtBQUN6RTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL3V0aWwvc3RyaW5nLmpzP2JjNWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19yZWFkID0gKHRoaXMgJiYgdGhpcy5fX3JlYWQpIHx8IGZ1bmN0aW9uIChvLCBuKSB7XG4gICAgdmFyIG0gPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb1tTeW1ib2wuaXRlcmF0b3JdO1xuICAgIGlmICghbSkgcmV0dXJuIG87XG4gICAgdmFyIGkgPSBtLmNhbGwobyksIHIsIGFyID0gW10sIGU7XG4gICAgdHJ5IHtcbiAgICAgICAgd2hpbGUgKChuID09PSB2b2lkIDAgfHwgbi0tID4gMCkgJiYgIShyID0gaS5uZXh0KCkpLmRvbmUpIGFyLnB1c2goci52YWx1ZSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikgeyBlID0geyBlcnJvcjogZXJyb3IgfTsgfVxuICAgIGZpbmFsbHkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKHIgJiYgIXIuZG9uZSAmJiAobSA9IGlbXCJyZXR1cm5cIl0pKSBtLmNhbGwoaSk7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7IGlmIChlKSB0aHJvdyBlLmVycm9yOyB9XG4gICAgfVxuICAgIHJldHVybiBhcjtcbn07XG52YXIgX19zcHJlYWRBcnJheSA9ICh0aGlzICYmIHRoaXMuX19zcHJlYWRBcnJheSkgfHwgZnVuY3Rpb24gKHRvLCBmcm9tLCBwYWNrKSB7XG4gICAgaWYgKHBhY2sgfHwgYXJndW1lbnRzLmxlbmd0aCA9PT0gMikgZm9yICh2YXIgaSA9IDAsIGwgPSBmcm9tLmxlbmd0aCwgYXI7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgaWYgKGFyIHx8ICEoaSBpbiBmcm9tKSkge1xuICAgICAgICAgICAgaWYgKCFhcikgYXIgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tLCAwLCBpKTtcbiAgICAgICAgICAgIGFyW2ldID0gZnJvbVtpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdG8uY29uY2F0KGFyIHx8IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGZyb20pKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNwbGl0ID0gZXhwb3J0cy5pc1BlcmNlbnQgPSBleHBvcnRzLnVuaWNvZGVTdHJpbmcgPSBleHBvcnRzLnVuaWNvZGVDaGFycyA9IGV4cG9ydHMucXVvdGVQYXR0ZXJuID0gZXhwb3J0cy5zb3J0TGVuZ3RoID0gdm9pZCAwO1xuZnVuY3Rpb24gc29ydExlbmd0aChhLCBiKSB7XG4gICAgcmV0dXJuIGEubGVuZ3RoICE9PSBiLmxlbmd0aCA/IGIubGVuZ3RoIC0gYS5sZW5ndGggOiBhID09PSBiID8gMCA6IGEgPCBiID8gLTEgOiAxO1xufVxuZXhwb3J0cy5zb3J0TGVuZ3RoID0gc29ydExlbmd0aDtcbmZ1bmN0aW9uIHF1b3RlUGF0dGVybih0ZXh0KSB7XG4gICAgcmV0dXJuIHRleHQucmVwbGFjZSgvKFtcXF4kKCl7fSsqP1xcLXxcXFtcXF1cXDpcXFxcXSkvZywgJ1xcXFwkMScpO1xufVxuZXhwb3J0cy5xdW90ZVBhdHRlcm4gPSBxdW90ZVBhdHRlcm47XG5mdW5jdGlvbiB1bmljb2RlQ2hhcnModGV4dCkge1xuICAgIHJldHVybiBBcnJheS5mcm9tKHRleHQpLm1hcChmdW5jdGlvbiAoYykgeyByZXR1cm4gYy5jb2RlUG9pbnRBdCgwKTsgfSk7XG59XG5leHBvcnRzLnVuaWNvZGVDaGFycyA9IHVuaWNvZGVDaGFycztcbmZ1bmN0aW9uIHVuaWNvZGVTdHJpbmcoZGF0YSkge1xuICAgIHJldHVybiBTdHJpbmcuZnJvbUNvZGVQb2ludC5hcHBseShTdHJpbmcsIF9fc3ByZWFkQXJyYXkoW10sIF9fcmVhZChkYXRhKSwgZmFsc2UpKTtcbn1cbmV4cG9ydHMudW5pY29kZVN0cmluZyA9IHVuaWNvZGVTdHJpbmc7XG5mdW5jdGlvbiBpc1BlcmNlbnQoeCkge1xuICAgIHJldHVybiAhIXgubWF0Y2goLyVcXHMqJC8pO1xufVxuZXhwb3J0cy5pc1BlcmNlbnQgPSBpc1BlcmNlbnQ7XG5mdW5jdGlvbiBzcGxpdCh4KSB7XG4gICAgcmV0dXJuIHgudHJpbSgpLnNwbGl0KC9cXHMrLyk7XG59XG5leHBvcnRzLnNwbGl0ID0gc3BsaXQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHJpbmcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/util/string.js\n"));

/***/ })

}]);