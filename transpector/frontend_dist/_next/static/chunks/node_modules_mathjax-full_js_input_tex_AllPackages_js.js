"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_mathjax-full_js_input_tex_AllPackages_js"],{

/***/ "./node_modules/mathjax-full/js/components/version.js":
/*!************************************************************!*\
  !*** ./node_modules/mathjax-full/js/components/version.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VERSION = void 0;\nexports.VERSION = '3.2.2';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2NvbXBvbmVudHMvdmVyc2lvbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2YsZUFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvY29tcG9uZW50cy92ZXJzaW9uLmpzP2ViMzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZFUlNJT04gPSB2b2lkIDA7XG5leHBvcnRzLlZFUlNJT04gPSAnMy4yLjInO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/components/version.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/core/HandlerList.js":
/*!**********************************************************!*\
  !*** ./node_modules/mathjax-full/js/core/HandlerList.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HandlerList = void 0;\nvar PrioritizedList_js_1 = __webpack_require__(/*! ../util/PrioritizedList.js */ \"./node_modules/mathjax-full/js/util/PrioritizedList.js\");\nvar HandlerList = (function (_super) {\n    __extends(HandlerList, _super);\n    function HandlerList() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    HandlerList.prototype.register = function (handler) {\n        return this.add(handler, handler.priority);\n    };\n    HandlerList.prototype.unregister = function (handler) {\n        this.remove(handler);\n    };\n    HandlerList.prototype.handlesDocument = function (document) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var item = _c.value;\n                var handler = item.item;\n                if (handler.handlesDocument(document)) {\n                    return handler;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        throw new Error(\"Can't find handler for document\");\n    };\n    HandlerList.prototype.document = function (document, options) {\n        if (options === void 0) { options = null; }\n        return this.handlesDocument(document).create(document, options);\n    };\n    return HandlerList;\n}(PrioritizedList_js_1.PrioritizedList));\nexports.HandlerList = HandlerList;\n//# sourceMappingURL=HandlerList.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2NvcmUvSGFuZGxlckxpc3QuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ3ZGLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CLDJCQUEyQixtQkFBTyxDQUFDLDBGQUE0QjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELFVBQVU7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvY29yZS9IYW5kbGVyTGlzdC5qcz8zZjQyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbnZhciBfX3ZhbHVlcyA9ICh0aGlzICYmIHRoaXMuX192YWx1ZXMpIHx8IGZ1bmN0aW9uKG8pIHtcbiAgICB2YXIgcyA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBTeW1ib2wuaXRlcmF0b3IsIG0gPSBzICYmIG9bc10sIGkgPSAwO1xuICAgIGlmIChtKSByZXR1cm4gbS5jYWxsKG8pO1xuICAgIGlmIChvICYmIHR5cGVvZiBvLmxlbmd0aCA9PT0gXCJudW1iZXJcIikgcmV0dXJuIHtcbiAgICAgICAgbmV4dDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKG8gJiYgaSA+PSBvLmxlbmd0aCkgbyA9IHZvaWQgMDtcbiAgICAgICAgICAgIHJldHVybiB7IHZhbHVlOiBvICYmIG9baSsrXSwgZG9uZTogIW8gfTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihzID8gXCJPYmplY3QgaXMgbm90IGl0ZXJhYmxlLlwiIDogXCJTeW1ib2wuaXRlcmF0b3IgaXMgbm90IGRlZmluZWQuXCIpO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSGFuZGxlckxpc3QgPSB2b2lkIDA7XG52YXIgUHJpb3JpdGl6ZWRMaXN0X2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9Qcmlvcml0aXplZExpc3QuanNcIik7XG52YXIgSGFuZGxlckxpc3QgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhIYW5kbGVyTGlzdCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBIYW5kbGVyTGlzdCgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBIYW5kbGVyTGlzdC5wcm90b3R5cGUucmVnaXN0ZXIgPSBmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICByZXR1cm4gdGhpcy5hZGQoaGFuZGxlciwgaGFuZGxlci5wcmlvcml0eSk7XG4gICAgfTtcbiAgICBIYW5kbGVyTGlzdC5wcm90b3R5cGUudW5yZWdpc3RlciA9IGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlKGhhbmRsZXIpO1xuICAgIH07XG4gICAgSGFuZGxlckxpc3QucHJvdG90eXBlLmhhbmRsZXNEb2N1bWVudCA9IGZ1bmN0aW9uIChkb2N1bWVudCkge1xuICAgICAgICB2YXIgZV8xLCBfYTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGZvciAodmFyIF9iID0gX192YWx1ZXModGhpcyksIF9jID0gX2IubmV4dCgpOyAhX2MuZG9uZTsgX2MgPSBfYi5uZXh0KCkpIHtcbiAgICAgICAgICAgICAgICB2YXIgaXRlbSA9IF9jLnZhbHVlO1xuICAgICAgICAgICAgICAgIHZhciBoYW5kbGVyID0gaXRlbS5pdGVtO1xuICAgICAgICAgICAgICAgIGlmIChoYW5kbGVyLmhhbmRsZXNEb2N1bWVudChkb2N1bWVudCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZXI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlXzFfMSkgeyBlXzEgPSB7IGVycm9yOiBlXzFfMSB9OyB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiAoX2MgJiYgIV9jLmRvbmUgJiYgKF9hID0gX2IucmV0dXJuKSkgX2EuY2FsbChfYik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmaW5hbGx5IHsgaWYgKGVfMSkgdGhyb3cgZV8xLmVycm9yOyB9XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2FuJ3QgZmluZCBoYW5kbGVyIGZvciBkb2N1bWVudFwiKTtcbiAgICB9O1xuICAgIEhhbmRsZXJMaXN0LnByb3RvdHlwZS5kb2N1bWVudCA9IGZ1bmN0aW9uIChkb2N1bWVudCwgb3B0aW9ucykge1xuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSBudWxsOyB9XG4gICAgICAgIHJldHVybiB0aGlzLmhhbmRsZXNEb2N1bWVudChkb2N1bWVudCkuY3JlYXRlKGRvY3VtZW50LCBvcHRpb25zKTtcbiAgICB9O1xuICAgIHJldHVybiBIYW5kbGVyTGlzdDtcbn0oUHJpb3JpdGl6ZWRMaXN0X2pzXzEuUHJpb3JpdGl6ZWRMaXN0KSk7XG5leHBvcnRzLkhhbmRsZXJMaXN0ID0gSGFuZGxlckxpc3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1IYW5kbGVyTGlzdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/core/HandlerList.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/core/MmlTree/Attributes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjax-full/js/core/MmlTree/Attributes.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Attributes = exports.INHERIT = void 0;\nexports.INHERIT = '_inherit_';\nvar Attributes = (function () {\n    function Attributes(defaults, global) {\n        this.global = global;\n        this.defaults = Object.create(global);\n        this.inherited = Object.create(this.defaults);\n        this.attributes = Object.create(this.inherited);\n        Object.assign(this.defaults, defaults);\n    }\n    Attributes.prototype.set = function (name, value) {\n        this.attributes[name] = value;\n    };\n    Attributes.prototype.setList = function (list) {\n        Object.assign(this.attributes, list);\n    };\n    Attributes.prototype.get = function (name) {\n        var value = this.attributes[name];\n        if (value === exports.INHERIT) {\n            value = this.global[name];\n        }\n        return value;\n    };\n    Attributes.prototype.getExplicit = function (name) {\n        if (!this.attributes.hasOwnProperty(name)) {\n            return undefined;\n        }\n        return this.attributes[name];\n    };\n    Attributes.prototype.getList = function () {\n        var e_1, _a;\n        var names = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            names[_i] = arguments[_i];\n        }\n        var values = {};\n        try {\n            for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {\n                var name_1 = names_1_1.value;\n                values[name_1] = this.get(name_1);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return values;\n    };\n    Attributes.prototype.setInherited = function (name, value) {\n        this.inherited[name] = value;\n    };\n    Attributes.prototype.getInherited = function (name) {\n        return this.inherited[name];\n    };\n    Attributes.prototype.getDefault = function (name) {\n        return this.defaults[name];\n    };\n    Attributes.prototype.isSet = function (name) {\n        return this.attributes.hasOwnProperty(name) || this.inherited.hasOwnProperty(name);\n    };\n    Attributes.prototype.hasDefault = function (name) {\n        return (name in this.defaults);\n    };\n    Attributes.prototype.getExplicitNames = function () {\n        return Object.keys(this.attributes);\n    };\n    Attributes.prototype.getInheritedNames = function () {\n        return Object.keys(this.inherited);\n    };\n    Attributes.prototype.getDefaultNames = function () {\n        return Object.keys(this.defaults);\n    };\n    Attributes.prototype.getGlobalNames = function () {\n        return Object.keys(this.global);\n    };\n    Attributes.prototype.getAllAttributes = function () {\n        return this.attributes;\n    };\n    Attributes.prototype.getAllInherited = function () {\n        return this.inherited;\n    };\n    Attributes.prototype.getAllDefaults = function () {\n        return this.defaults;\n    };\n    Attributes.prototype.getAllGlobals = function () {\n        return this.global;\n    };\n    return Attributes;\n}());\nexports.Attributes = Attributes;\n//# sourceMappingURL=Attributes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2NvcmUvTW1sVHJlZS9BdHRyaWJ1dGVzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQixHQUFHLGVBQWU7QUFDcEMsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix1QkFBdUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RUFBNEUsaUJBQWlCO0FBQzdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvY29yZS9NbWxUcmVlL0F0dHJpYnV0ZXMuanM/NGRiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX3ZhbHVlcyA9ICh0aGlzICYmIHRoaXMuX192YWx1ZXMpIHx8IGZ1bmN0aW9uKG8pIHtcbiAgICB2YXIgcyA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBTeW1ib2wuaXRlcmF0b3IsIG0gPSBzICYmIG9bc10sIGkgPSAwO1xuICAgIGlmIChtKSByZXR1cm4gbS5jYWxsKG8pO1xuICAgIGlmIChvICYmIHR5cGVvZiBvLmxlbmd0aCA9PT0gXCJudW1iZXJcIikgcmV0dXJuIHtcbiAgICAgICAgbmV4dDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKG8gJiYgaSA+PSBvLmxlbmd0aCkgbyA9IHZvaWQgMDtcbiAgICAgICAgICAgIHJldHVybiB7IHZhbHVlOiBvICYmIG9baSsrXSwgZG9uZTogIW8gfTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihzID8gXCJPYmplY3QgaXMgbm90IGl0ZXJhYmxlLlwiIDogXCJTeW1ib2wuaXRlcmF0b3IgaXMgbm90IGRlZmluZWQuXCIpO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXR0cmlidXRlcyA9IGV4cG9ydHMuSU5IRVJJVCA9IHZvaWQgMDtcbmV4cG9ydHMuSU5IRVJJVCA9ICdfaW5oZXJpdF8nO1xudmFyIEF0dHJpYnV0ZXMgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEF0dHJpYnV0ZXMoZGVmYXVsdHMsIGdsb2JhbCkge1xuICAgICAgICB0aGlzLmdsb2JhbCA9IGdsb2JhbDtcbiAgICAgICAgdGhpcy5kZWZhdWx0cyA9IE9iamVjdC5jcmVhdGUoZ2xvYmFsKTtcbiAgICAgICAgdGhpcy5pbmhlcml0ZWQgPSBPYmplY3QuY3JlYXRlKHRoaXMuZGVmYXVsdHMpO1xuICAgICAgICB0aGlzLmF0dHJpYnV0ZXMgPSBPYmplY3QuY3JlYXRlKHRoaXMuaW5oZXJpdGVkKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLmRlZmF1bHRzLCBkZWZhdWx0cyk7XG4gICAgfVxuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uIChuYW1lLCB2YWx1ZSkge1xuICAgICAgICB0aGlzLmF0dHJpYnV0ZXNbbmFtZV0gPSB2YWx1ZTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLnNldExpc3QgPSBmdW5jdGlvbiAobGlzdCkge1xuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMuYXR0cmlidXRlcywgbGlzdCk7XG4gICAgfTtcbiAgICBBdHRyaWJ1dGVzLnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICB2YXIgdmFsdWUgPSB0aGlzLmF0dHJpYnV0ZXNbbmFtZV07XG4gICAgICAgIGlmICh2YWx1ZSA9PT0gZXhwb3J0cy5JTkhFUklUKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHRoaXMuZ2xvYmFsW25hbWVdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmdldEV4cGxpY2l0ID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgaWYgKCF0aGlzLmF0dHJpYnV0ZXMuaGFzT3duUHJvcGVydHkobmFtZSkpIHtcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuYXR0cmlidXRlc1tuYW1lXTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmdldExpc3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBlXzEsIF9hO1xuICAgICAgICB2YXIgbmFtZXMgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIG5hbWVzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHZhbHVlcyA9IHt9O1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yICh2YXIgbmFtZXNfMSA9IF9fdmFsdWVzKG5hbWVzKSwgbmFtZXNfMV8xID0gbmFtZXNfMS5uZXh0KCk7ICFuYW1lc18xXzEuZG9uZTsgbmFtZXNfMV8xID0gbmFtZXNfMS5uZXh0KCkpIHtcbiAgICAgICAgICAgICAgICB2YXIgbmFtZV8xID0gbmFtZXNfMV8xLnZhbHVlO1xuICAgICAgICAgICAgICAgIHZhbHVlc1tuYW1lXzFdID0gdGhpcy5nZXQobmFtZV8xKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZV8xXzEpIHsgZV8xID0geyBlcnJvcjogZV8xXzEgfTsgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgaWYgKG5hbWVzXzFfMSAmJiAhbmFtZXNfMV8xLmRvbmUgJiYgKF9hID0gbmFtZXNfMS5yZXR1cm4pKSBfYS5jYWxsKG5hbWVzXzEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZmluYWxseSB7IGlmIChlXzEpIHRocm93IGVfMS5lcnJvcjsgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZXM7XG4gICAgfTtcbiAgICBBdHRyaWJ1dGVzLnByb3RvdHlwZS5zZXRJbmhlcml0ZWQgPSBmdW5jdGlvbiAobmFtZSwgdmFsdWUpIHtcbiAgICAgICAgdGhpcy5pbmhlcml0ZWRbbmFtZV0gPSB2YWx1ZTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmdldEluaGVyaXRlZCA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmluaGVyaXRlZFtuYW1lXTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmdldERlZmF1bHQgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5kZWZhdWx0c1tuYW1lXTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmlzU2V0ID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXR0cmlidXRlcy5oYXNPd25Qcm9wZXJ0eShuYW1lKSB8fCB0aGlzLmluaGVyaXRlZC5oYXNPd25Qcm9wZXJ0eShuYW1lKTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmhhc0RlZmF1bHQgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICByZXR1cm4gKG5hbWUgaW4gdGhpcy5kZWZhdWx0cyk7XG4gICAgfTtcbiAgICBBdHRyaWJ1dGVzLnByb3RvdHlwZS5nZXRFeHBsaWNpdE5hbWVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy5hdHRyaWJ1dGVzKTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmdldEluaGVyaXRlZE5hbWVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy5pbmhlcml0ZWQpO1xuICAgIH07XG4gICAgQXR0cmlidXRlcy5wcm90b3R5cGUuZ2V0RGVmYXVsdE5hbWVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy5kZWZhdWx0cyk7XG4gICAgfTtcbiAgICBBdHRyaWJ1dGVzLnByb3RvdHlwZS5nZXRHbG9iYWxOYW1lcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuZ2xvYmFsKTtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmdldEFsbEF0dHJpYnV0ZXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmF0dHJpYnV0ZXM7XG4gICAgfTtcbiAgICBBdHRyaWJ1dGVzLnByb3RvdHlwZS5nZXRBbGxJbmhlcml0ZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmluaGVyaXRlZDtcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmdldEFsbERlZmF1bHRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kZWZhdWx0cztcbiAgICB9O1xuICAgIEF0dHJpYnV0ZXMucHJvdG90eXBlLmdldEFsbEdsb2JhbHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdsb2JhbDtcbiAgICB9O1xuICAgIHJldHVybiBBdHRyaWJ1dGVzO1xufSgpKTtcbmV4cG9ydHMuQXR0cmlidXRlcyA9IEF0dHJpYnV0ZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdHRyaWJ1dGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/core/MmlTree/Attributes.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js":
/*!**************************************************************!*\
  !*** ./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.XMLNode = exports.TextNode = exports.AbstractMmlEmptyNode = exports.AbstractMmlBaseNode = exports.AbstractMmlLayoutNode = exports.AbstractMmlTokenNode = exports.AbstractMmlNode = exports.indentAttributes = exports.TEXCLASSNAMES = exports.TEXCLASS = void 0;\nvar Attributes_js_1 = __webpack_require__(/*! ./Attributes.js */ \"./node_modules/mathjax-full/js/core/MmlTree/Attributes.js\");\nvar Node_js_1 = __webpack_require__(/*! ../Tree/Node.js */ \"./node_modules/mathjax-full/js/core/Tree/Node.js\");\nexports.TEXCLASS = {\n    ORD: 0,\n    OP: 1,\n    BIN: 2,\n    REL: 3,\n    OPEN: 4,\n    CLOSE: 5,\n    PUNCT: 6,\n    INNER: 7,\n    VCENTER: 8,\n    NONE: -1\n};\nexports.TEXCLASSNAMES = ['ORD', 'OP', 'BIN', 'REL', 'OPEN', 'CLOSE', 'PUNCT', 'INNER', 'VCENTER'];\nvar TEXSPACELENGTH = ['', 'thinmathspace', 'mediummathspace', 'thickmathspace'];\nvar TEXSPACE = [\n    [0, -1, 2, 3, 0, 0, 0, 1],\n    [-1, -1, 0, 3, 0, 0, 0, 1],\n    [2, 2, 0, 0, 2, 0, 0, 2],\n    [3, 3, 0, 0, 3, 0, 0, 3],\n    [0, 0, 0, 0, 0, 0, 0, 0],\n    [0, -1, 2, 3, 0, 0, 0, 1],\n    [1, 1, 0, 1, 1, 1, 1, 1],\n    [1, -1, 2, 3, 1, 0, 1, 1]\n];\nexports.indentAttributes = [\n    'indentalign', 'indentalignfirst',\n    'indentshift', 'indentshiftfirst'\n];\nvar AbstractMmlNode = (function (_super) {\n    __extends(AbstractMmlNode, _super);\n    function AbstractMmlNode(factory, attributes, children) {\n        if (attributes === void 0) { attributes = {}; }\n        if (children === void 0) { children = []; }\n        var _this = _super.call(this, factory) || this;\n        _this.prevClass = null;\n        _this.prevLevel = null;\n        _this.texclass = null;\n        if (_this.arity < 0) {\n            _this.childNodes = [factory.create('inferredMrow')];\n            _this.childNodes[0].parent = _this;\n        }\n        _this.setChildren(children);\n        _this.attributes = new Attributes_js_1.Attributes(factory.getNodeClass(_this.kind).defaults, factory.getNodeClass('math').defaults);\n        _this.attributes.setList(attributes);\n        return _this;\n    }\n    AbstractMmlNode.prototype.copy = function (keepIds) {\n        var e_1, _a, e_2, _b;\n        if (keepIds === void 0) { keepIds = false; }\n        var node = this.factory.create(this.kind);\n        node.properties = __assign({}, this.properties);\n        if (this.attributes) {\n            var attributes = this.attributes.getAllAttributes();\n            try {\n                for (var _c = __values(Object.keys(attributes)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var name_1 = _d.value;\n                    if (name_1 !== 'id' || keepIds) {\n                        node.attributes.set(name_1, attributes[name_1]);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        if (this.childNodes && this.childNodes.length) {\n            var children = this.childNodes;\n            if (children.length === 1 && children[0].isInferred) {\n                children = children[0].childNodes;\n            }\n            try {\n                for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                    var child = children_1_1.value;\n                    if (child) {\n                        node.appendChild(child.copy());\n                    }\n                    else {\n                        node.childNodes.push(null);\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (children_1_1 && !children_1_1.done && (_b = children_1.return)) _b.call(children_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n        return node;\n    };\n    Object.defineProperty(AbstractMmlNode.prototype, \"texClass\", {\n        get: function () {\n            return this.texclass;\n        },\n        set: function (texClass) {\n            this.texclass = texClass;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlNode.prototype, \"isToken\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlNode.prototype, \"isEmbellished\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlNode.prototype, \"isSpacelike\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlNode.prototype, \"linebreakContainer\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlNode.prototype, \"hasNewLine\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlNode.prototype, \"arity\", {\n        get: function () {\n            return Infinity;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlNode.prototype, \"isInferred\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlNode.prototype, \"Parent\", {\n        get: function () {\n            var parent = this.parent;\n            while (parent && parent.notParent) {\n                parent = parent.Parent;\n            }\n            return parent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlNode.prototype, \"notParent\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractMmlNode.prototype.setChildren = function (children) {\n        if (this.arity < 0) {\n            return this.childNodes[0].setChildren(children);\n        }\n        return _super.prototype.setChildren.call(this, children);\n    };\n    AbstractMmlNode.prototype.appendChild = function (child) {\n        var e_3, _a;\n        var _this = this;\n        if (this.arity < 0) {\n            this.childNodes[0].appendChild(child);\n            return child;\n        }\n        if (child.isInferred) {\n            if (this.arity === Infinity) {\n                child.childNodes.forEach(function (node) { return _super.prototype.appendChild.call(_this, node); });\n                return child;\n            }\n            var original = child;\n            child = this.factory.create('mrow');\n            child.setChildren(original.childNodes);\n            child.attributes = original.attributes;\n            try {\n                for (var _b = __values(original.getPropertyNames()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var name_2 = _c.value;\n                    child.setProperty(name_2, original.getProperty(name_2));\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n        }\n        return _super.prototype.appendChild.call(this, child);\n    };\n    AbstractMmlNode.prototype.replaceChild = function (newChild, oldChild) {\n        if (this.arity < 0) {\n            this.childNodes[0].replaceChild(newChild, oldChild);\n            return newChild;\n        }\n        return _super.prototype.replaceChild.call(this, newChild, oldChild);\n    };\n    AbstractMmlNode.prototype.core = function () {\n        return this;\n    };\n    AbstractMmlNode.prototype.coreMO = function () {\n        return this;\n    };\n    AbstractMmlNode.prototype.coreIndex = function () {\n        return 0;\n    };\n    AbstractMmlNode.prototype.childPosition = function () {\n        var e_4, _a;\n        var child = this;\n        var parent = child.parent;\n        while (parent && parent.notParent) {\n            child = parent;\n            parent = parent.parent;\n        }\n        if (parent) {\n            var i = 0;\n            try {\n                for (var _b = __values(parent.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var node = _c.value;\n                    if (node === child) {\n                        return i;\n                    }\n                    i++;\n                }\n            }\n            catch (e_4_1) { e_4 = { error: e_4_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_4) throw e_4.error; }\n            }\n        }\n        return null;\n    };\n    AbstractMmlNode.prototype.setTeXclass = function (prev) {\n        this.getPrevClass(prev);\n        return (this.texClass != null ? this : prev);\n    };\n    AbstractMmlNode.prototype.updateTeXclass = function (core) {\n        if (core) {\n            this.prevClass = core.prevClass;\n            this.prevLevel = core.prevLevel;\n            core.prevClass = core.prevLevel = null;\n            this.texClass = core.texClass;\n        }\n    };\n    AbstractMmlNode.prototype.getPrevClass = function (prev) {\n        if (prev) {\n            this.prevClass = prev.texClass;\n            this.prevLevel = prev.attributes.get('scriptlevel');\n        }\n    };\n    AbstractMmlNode.prototype.texSpacing = function () {\n        var prevClass = (this.prevClass != null ? this.prevClass : exports.TEXCLASS.NONE);\n        var texClass = this.texClass || exports.TEXCLASS.ORD;\n        if (prevClass === exports.TEXCLASS.NONE || texClass === exports.TEXCLASS.NONE) {\n            return '';\n        }\n        if (prevClass === exports.TEXCLASS.VCENTER) {\n            prevClass = exports.TEXCLASS.ORD;\n        }\n        if (texClass === exports.TEXCLASS.VCENTER) {\n            texClass = exports.TEXCLASS.ORD;\n        }\n        var space = TEXSPACE[prevClass][texClass];\n        if ((this.prevLevel > 0 || this.attributes.get('scriptlevel') > 0) && space >= 0) {\n            return '';\n        }\n        return TEXSPACELENGTH[Math.abs(space)];\n    };\n    AbstractMmlNode.prototype.hasSpacingAttributes = function () {\n        return this.isEmbellished && this.coreMO().hasSpacingAttributes();\n    };\n    AbstractMmlNode.prototype.setInheritedAttributes = function (attributes, display, level, prime) {\n        var e_5, _a;\n        if (attributes === void 0) { attributes = {}; }\n        if (display === void 0) { display = false; }\n        if (level === void 0) { level = 0; }\n        if (prime === void 0) { prime = false; }\n        var defaults = this.attributes.getAllDefaults();\n        try {\n            for (var _b = __values(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                if (defaults.hasOwnProperty(key) || AbstractMmlNode.alwaysInherit.hasOwnProperty(key)) {\n                    var _d = __read(attributes[key], 2), node = _d[0], value = _d[1];\n                    var noinherit = (AbstractMmlNode.noInherit[node] || {})[this.kind] || {};\n                    if (!noinherit[key]) {\n                        this.attributes.setInherited(key, value);\n                    }\n                }\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        var displaystyle = this.attributes.getExplicit('displaystyle');\n        if (displaystyle === undefined) {\n            this.attributes.setInherited('displaystyle', display);\n        }\n        var scriptlevel = this.attributes.getExplicit('scriptlevel');\n        if (scriptlevel === undefined) {\n            this.attributes.setInherited('scriptlevel', level);\n        }\n        if (prime) {\n            this.setProperty('texprimestyle', prime);\n        }\n        var arity = this.arity;\n        if (arity >= 0 && arity !== Infinity && ((arity === 1 && this.childNodes.length === 0) ||\n            (arity !== 1 && this.childNodes.length !== arity))) {\n            if (arity < this.childNodes.length) {\n                this.childNodes = this.childNodes.slice(0, arity);\n            }\n            else {\n                while (this.childNodes.length < arity) {\n                    this.appendChild(this.factory.create('mrow'));\n                }\n            }\n        }\n        this.setChildInheritedAttributes(attributes, display, level, prime);\n    };\n    AbstractMmlNode.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {\n        var e_6, _a;\n        try {\n            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                child.setInheritedAttributes(attributes, display, level, prime);\n            }\n        }\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_6) throw e_6.error; }\n        }\n    };\n    AbstractMmlNode.prototype.addInheritedAttributes = function (current, attributes) {\n        var e_7, _a;\n        var updated = __assign({}, current);\n        try {\n            for (var _b = __values(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var name_3 = _c.value;\n                if (name_3 !== 'displaystyle' && name_3 !== 'scriptlevel' && name_3 !== 'style') {\n                    updated[name_3] = [this.kind, attributes[name_3]];\n                }\n            }\n        }\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_7) throw e_7.error; }\n        }\n        return updated;\n    };\n    AbstractMmlNode.prototype.inheritAttributesFrom = function (node) {\n        var attributes = node.attributes;\n        var display = attributes.get('displaystyle');\n        var scriptlevel = attributes.get('scriptlevel');\n        var defaults = (!attributes.isSet('mathsize') ? {} : {\n            mathsize: ['math', attributes.get('mathsize')]\n        });\n        var prime = node.getProperty('texprimestyle') || false;\n        this.setInheritedAttributes(defaults, display, scriptlevel, prime);\n    };\n    AbstractMmlNode.prototype.verifyTree = function (options) {\n        if (options === void 0) { options = null; }\n        if (options === null) {\n            return;\n        }\n        this.verifyAttributes(options);\n        var arity = this.arity;\n        if (options['checkArity']) {\n            if (arity >= 0 && arity !== Infinity &&\n                ((arity === 1 && this.childNodes.length === 0) ||\n                    (arity !== 1 && this.childNodes.length !== arity))) {\n                this.mError('Wrong number of children for \"' + this.kind + '\" node', options, true);\n            }\n        }\n        this.verifyChildren(options);\n    };\n    AbstractMmlNode.prototype.verifyAttributes = function (options) {\n        var e_8, _a;\n        if (options['checkAttributes']) {\n            var attributes = this.attributes;\n            var bad = [];\n            try {\n                for (var _b = __values(attributes.getExplicitNames()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var name_4 = _c.value;\n                    if (name_4.substr(0, 5) !== 'data-' && attributes.getDefault(name_4) === undefined &&\n                        !name_4.match(/^(?:class|style|id|(?:xlink:)?href)$/)) {\n                        bad.push(name_4);\n                    }\n                }\n            }\n            catch (e_8_1) { e_8 = { error: e_8_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_8) throw e_8.error; }\n            }\n            if (bad.length) {\n                this.mError('Unknown attributes for ' + this.kind + ' node: ' + bad.join(', '), options);\n            }\n        }\n    };\n    AbstractMmlNode.prototype.verifyChildren = function (options) {\n        var e_9, _a;\n        try {\n            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                child.verifyTree(options);\n            }\n        }\n        catch (e_9_1) { e_9 = { error: e_9_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_9) throw e_9.error; }\n        }\n    };\n    AbstractMmlNode.prototype.mError = function (message, options, short) {\n        if (short === void 0) { short = false; }\n        if (this.parent && this.parent.isKind('merror')) {\n            return null;\n        }\n        var merror = this.factory.create('merror');\n        merror.attributes.set('data-mjx-message', message);\n        if (options['fullErrors'] || short) {\n            var mtext = this.factory.create('mtext');\n            var text = this.factory.create('text');\n            text.setText(options['fullErrors'] ? message : this.kind);\n            mtext.appendChild(text);\n            merror.appendChild(mtext);\n            this.parent.replaceChild(merror, this);\n        }\n        else {\n            this.parent.replaceChild(merror, this);\n            merror.appendChild(this);\n        }\n        return merror;\n    };\n    AbstractMmlNode.defaults = {\n        mathbackground: Attributes_js_1.INHERIT,\n        mathcolor: Attributes_js_1.INHERIT,\n        mathsize: Attributes_js_1.INHERIT,\n        dir: Attributes_js_1.INHERIT\n    };\n    AbstractMmlNode.noInherit = {\n        mstyle: {\n            mpadded: { width: true, height: true, depth: true, lspace: true, voffset: true },\n            mtable: { width: true, height: true, depth: true, align: true }\n        },\n        maligngroup: {\n            mrow: { groupalign: true },\n            mtable: { groupalign: true }\n        }\n    };\n    AbstractMmlNode.alwaysInherit = {\n        scriptminsize: true,\n        scriptsizemultiplier: true\n    };\n    AbstractMmlNode.verifyDefaults = {\n        checkArity: true,\n        checkAttributes: false,\n        fullErrors: false,\n        fixMmultiscripts: true,\n        fixMtables: true\n    };\n    return AbstractMmlNode;\n}(Node_js_1.AbstractNode));\nexports.AbstractMmlNode = AbstractMmlNode;\nvar AbstractMmlTokenNode = (function (_super) {\n    __extends(AbstractMmlTokenNode, _super);\n    function AbstractMmlTokenNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(AbstractMmlTokenNode.prototype, \"isToken\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractMmlTokenNode.prototype.getText = function () {\n        var e_10, _a;\n        var text = '';\n        try {\n            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                if (child instanceof TextNode) {\n                    text += child.getText();\n                }\n            }\n        }\n        catch (e_10_1) { e_10 = { error: e_10_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_10) throw e_10.error; }\n        }\n        return text;\n    };\n    AbstractMmlTokenNode.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {\n        var e_11, _a;\n        try {\n            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                if (child instanceof AbstractMmlNode) {\n                    child.setInheritedAttributes(attributes, display, level, prime);\n                }\n            }\n        }\n        catch (e_11_1) { e_11 = { error: e_11_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_11) throw e_11.error; }\n        }\n    };\n    AbstractMmlTokenNode.prototype.walkTree = function (func, data) {\n        var e_12, _a;\n        func(this, data);\n        try {\n            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                if (child instanceof AbstractMmlNode) {\n                    child.walkTree(func, data);\n                }\n            }\n        }\n        catch (e_12_1) { e_12 = { error: e_12_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_12) throw e_12.error; }\n        }\n        return data;\n    };\n    AbstractMmlTokenNode.defaults = __assign(__assign({}, AbstractMmlNode.defaults), { mathvariant: 'normal', mathsize: Attributes_js_1.INHERIT });\n    return AbstractMmlTokenNode;\n}(AbstractMmlNode));\nexports.AbstractMmlTokenNode = AbstractMmlTokenNode;\nvar AbstractMmlLayoutNode = (function (_super) {\n    __extends(AbstractMmlLayoutNode, _super);\n    function AbstractMmlLayoutNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(AbstractMmlLayoutNode.prototype, \"isSpacelike\", {\n        get: function () {\n            return this.childNodes[0].isSpacelike;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlLayoutNode.prototype, \"isEmbellished\", {\n        get: function () {\n            return this.childNodes[0].isEmbellished;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlLayoutNode.prototype, \"arity\", {\n        get: function () {\n            return -1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractMmlLayoutNode.prototype.core = function () {\n        return this.childNodes[0];\n    };\n    AbstractMmlLayoutNode.prototype.coreMO = function () {\n        return this.childNodes[0].coreMO();\n    };\n    AbstractMmlLayoutNode.prototype.setTeXclass = function (prev) {\n        prev = this.childNodes[0].setTeXclass(prev);\n        this.updateTeXclass(this.childNodes[0]);\n        return prev;\n    };\n    AbstractMmlLayoutNode.defaults = AbstractMmlNode.defaults;\n    return AbstractMmlLayoutNode;\n}(AbstractMmlNode));\nexports.AbstractMmlLayoutNode = AbstractMmlLayoutNode;\nvar AbstractMmlBaseNode = (function (_super) {\n    __extends(AbstractMmlBaseNode, _super);\n    function AbstractMmlBaseNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(AbstractMmlBaseNode.prototype, \"isEmbellished\", {\n        get: function () {\n            return this.childNodes[0].isEmbellished;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractMmlBaseNode.prototype.core = function () {\n        return this.childNodes[0];\n    };\n    AbstractMmlBaseNode.prototype.coreMO = function () {\n        return this.childNodes[0].coreMO();\n    };\n    AbstractMmlBaseNode.prototype.setTeXclass = function (prev) {\n        var e_13, _a;\n        this.getPrevClass(prev);\n        this.texClass = exports.TEXCLASS.ORD;\n        var base = this.childNodes[0];\n        if (base) {\n            if (this.isEmbellished || base.isKind('mi')) {\n                prev = base.setTeXclass(prev);\n                this.updateTeXclass(this.core());\n            }\n            else {\n                base.setTeXclass(null);\n                prev = this;\n            }\n        }\n        else {\n            prev = this;\n        }\n        try {\n            for (var _b = __values(this.childNodes.slice(1)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                if (child) {\n                    child.setTeXclass(null);\n                }\n            }\n        }\n        catch (e_13_1) { e_13 = { error: e_13_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_13) throw e_13.error; }\n        }\n        return prev;\n    };\n    AbstractMmlBaseNode.defaults = AbstractMmlNode.defaults;\n    return AbstractMmlBaseNode;\n}(AbstractMmlNode));\nexports.AbstractMmlBaseNode = AbstractMmlBaseNode;\nvar AbstractMmlEmptyNode = (function (_super) {\n    __extends(AbstractMmlEmptyNode, _super);\n    function AbstractMmlEmptyNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"isToken\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"isEmbellished\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"isSpacelike\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"linebreakContainer\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"hasNewLine\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"arity\", {\n        get: function () {\n            return 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"isInferred\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"notParent\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"Parent\", {\n        get: function () {\n            return this.parent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"texClass\", {\n        get: function () {\n            return exports.TEXCLASS.NONE;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"prevClass\", {\n        get: function () {\n            return exports.TEXCLASS.NONE;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"prevLevel\", {\n        get: function () {\n            return 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractMmlEmptyNode.prototype.hasSpacingAttributes = function () {\n        return false;\n    };\n    Object.defineProperty(AbstractMmlEmptyNode.prototype, \"attributes\", {\n        get: function () {\n            return null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractMmlEmptyNode.prototype.core = function () {\n        return this;\n    };\n    AbstractMmlEmptyNode.prototype.coreMO = function () {\n        return this;\n    };\n    AbstractMmlEmptyNode.prototype.coreIndex = function () {\n        return 0;\n    };\n    AbstractMmlEmptyNode.prototype.childPosition = function () {\n        return 0;\n    };\n    AbstractMmlEmptyNode.prototype.setTeXclass = function (prev) {\n        return prev;\n    };\n    AbstractMmlEmptyNode.prototype.texSpacing = function () {\n        return '';\n    };\n    AbstractMmlEmptyNode.prototype.setInheritedAttributes = function (_attributes, _display, _level, _prime) { };\n    AbstractMmlEmptyNode.prototype.inheritAttributesFrom = function (_node) { };\n    AbstractMmlEmptyNode.prototype.verifyTree = function (_options) { };\n    AbstractMmlEmptyNode.prototype.mError = function (_message, _options, _short) {\n        if (_short === void 0) { _short = false; }\n        return null;\n    };\n    return AbstractMmlEmptyNode;\n}(Node_js_1.AbstractEmptyNode));\nexports.AbstractMmlEmptyNode = AbstractMmlEmptyNode;\nvar TextNode = (function (_super) {\n    __extends(TextNode, _super);\n    function TextNode() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.text = '';\n        return _this;\n    }\n    Object.defineProperty(TextNode.prototype, \"kind\", {\n        get: function () {\n            return 'text';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TextNode.prototype.getText = function () {\n        return this.text;\n    };\n    TextNode.prototype.setText = function (text) {\n        this.text = text;\n        return this;\n    };\n    TextNode.prototype.copy = function () {\n        return this.factory.create(this.kind).setText(this.getText());\n    };\n    TextNode.prototype.toString = function () {\n        return this.text;\n    };\n    return TextNode;\n}(AbstractMmlEmptyNode));\nexports.TextNode = TextNode;\nvar XMLNode = (function (_super) {\n    __extends(XMLNode, _super);\n    function XMLNode() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.xml = null;\n        _this.adaptor = null;\n        return _this;\n    }\n    Object.defineProperty(XMLNode.prototype, \"kind\", {\n        get: function () {\n            return 'XML';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    XMLNode.prototype.getXML = function () {\n        return this.xml;\n    };\n    XMLNode.prototype.setXML = function (xml, adaptor) {\n        if (adaptor === void 0) { adaptor = null; }\n        this.xml = xml;\n        this.adaptor = adaptor;\n        return this;\n    };\n    XMLNode.prototype.getSerializedXML = function () {\n        return this.adaptor.serializeXML(this.xml);\n    };\n    XMLNode.prototype.copy = function () {\n        return this.factory.create(this.kind).setXML(this.adaptor.clone(this.xml));\n    };\n    XMLNode.prototype.toString = function () {\n        return 'XML data';\n    };\n    return XMLNode;\n}(AbstractMmlEmptyNode));\nexports.XMLNode = XMLNode;\n//# sourceMappingURL=MmlNode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/core/MmlTree/MmlNodes/mo.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjax-full/js/core/MmlTree/MmlNodes/mo.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MmlMo = void 0;\nvar MmlNode_js_1 = __webpack_require__(/*! ../MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar OperatorDictionary_js_1 = __webpack_require__(/*! ../OperatorDictionary.js */ \"./node_modules/mathjax-full/js/core/MmlTree/OperatorDictionary.js\");\nvar string_js_1 = __webpack_require__(/*! ../../../util/string.js */ \"./node_modules/mathjax-full/js/util/string.js\");\nvar MmlMo = (function (_super) {\n    __extends(MmlMo, _super);\n    function MmlMo() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._texClass = null;\n        _this.lspace = 5 / 18;\n        _this.rspace = 5 / 18;\n        return _this;\n    }\n    Object.defineProperty(MmlMo.prototype, \"texClass\", {\n        get: function () {\n            if (this._texClass === null) {\n                var mo = this.getText();\n                var _a = __read(this.handleExplicitForm(this.getForms()), 3), form1 = _a[0], form2 = _a[1], form3 = _a[2];\n                var OPTABLE_1 = this.constructor.OPTABLE;\n                var def = OPTABLE_1[form1][mo] || OPTABLE_1[form2][mo] || OPTABLE_1[form3][mo];\n                return def ? def[2] : MmlNode_js_1.TEXCLASS.REL;\n            }\n            return this._texClass;\n        },\n        set: function (value) {\n            this._texClass = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlMo.prototype, \"kind\", {\n        get: function () {\n            return 'mo';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlMo.prototype, \"isEmbellished\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlMo.prototype, \"hasNewLine\", {\n        get: function () {\n            return this.attributes.get('linebreak') === 'newline';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MmlMo.prototype.coreParent = function () {\n        var embellished = this;\n        var parent = this;\n        var math = this.factory.getNodeClass('math');\n        while (parent && parent.isEmbellished && parent.coreMO() === this && !(parent instanceof math)) {\n            embellished = parent;\n            parent = parent.parent;\n        }\n        return embellished;\n    };\n    MmlMo.prototype.coreText = function (parent) {\n        if (!parent) {\n            return '';\n        }\n        if (parent.isEmbellished) {\n            return parent.coreMO().getText();\n        }\n        while ((((parent.isKind('mrow') ||\n            (parent.isKind('TeXAtom') && parent.texClass !== MmlNode_js_1.TEXCLASS.VCENTER) ||\n            parent.isKind('mstyle') ||\n            parent.isKind('mphantom')) && parent.childNodes.length === 1) ||\n            parent.isKind('munderover')) && parent.childNodes[0]) {\n            parent = parent.childNodes[0];\n        }\n        return (parent.isToken ? parent.getText() : '');\n    };\n    MmlMo.prototype.hasSpacingAttributes = function () {\n        return this.attributes.isSet('lspace') ||\n            this.attributes.isSet('rspace');\n    };\n    Object.defineProperty(MmlMo.prototype, \"isAccent\", {\n        get: function () {\n            var accent = false;\n            var node = this.coreParent().parent;\n            if (node) {\n                var key = (node.isKind('mover') ?\n                    (node.childNodes[node.over].coreMO() ?\n                        'accent' : '') :\n                    node.isKind('munder') ?\n                        (node.childNodes[node.under].coreMO() ?\n                            'accentunder' : '') :\n                        node.isKind('munderover') ?\n                            (this === node.childNodes[node.over].coreMO() ?\n                                'accent' :\n                                this === node.childNodes[node.under].coreMO() ?\n                                    'accentunder' : '') :\n                            '');\n                if (key) {\n                    var value = node.attributes.getExplicit(key);\n                    accent = (value !== undefined ? accent : this.attributes.get('accent'));\n                }\n            }\n            return accent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MmlMo.prototype.setTeXclass = function (prev) {\n        var _a = this.attributes.getList('form', 'fence'), form = _a.form, fence = _a.fence;\n        if (this.getProperty('texClass') === undefined &&\n            (this.attributes.isSet('lspace') || this.attributes.isSet('rspace'))) {\n            return null;\n        }\n        if (fence && this.texClass === MmlNode_js_1.TEXCLASS.REL) {\n            if (form === 'prefix') {\n                this.texClass = MmlNode_js_1.TEXCLASS.OPEN;\n            }\n            if (form === 'postfix') {\n                this.texClass = MmlNode_js_1.TEXCLASS.CLOSE;\n            }\n        }\n        return this.adjustTeXclass(prev);\n    };\n    MmlMo.prototype.adjustTeXclass = function (prev) {\n        var texClass = this.texClass;\n        var prevClass = this.prevClass;\n        if (texClass === MmlNode_js_1.TEXCLASS.NONE) {\n            return prev;\n        }\n        if (prev) {\n            if (prev.getProperty('autoOP') && (texClass === MmlNode_js_1.TEXCLASS.BIN || texClass === MmlNode_js_1.TEXCLASS.REL)) {\n                prevClass = prev.texClass = MmlNode_js_1.TEXCLASS.ORD;\n            }\n            prevClass = this.prevClass = (prev.texClass || MmlNode_js_1.TEXCLASS.ORD);\n            this.prevLevel = this.attributes.getInherited('scriptlevel');\n        }\n        else {\n            prevClass = this.prevClass = MmlNode_js_1.TEXCLASS.NONE;\n        }\n        if (texClass === MmlNode_js_1.TEXCLASS.BIN &&\n            (prevClass === MmlNode_js_1.TEXCLASS.NONE || prevClass === MmlNode_js_1.TEXCLASS.BIN || prevClass === MmlNode_js_1.TEXCLASS.OP ||\n                prevClass === MmlNode_js_1.TEXCLASS.REL || prevClass === MmlNode_js_1.TEXCLASS.OPEN || prevClass === MmlNode_js_1.TEXCLASS.PUNCT)) {\n            this.texClass = MmlNode_js_1.TEXCLASS.ORD;\n        }\n        else if (prevClass === MmlNode_js_1.TEXCLASS.BIN &&\n            (texClass === MmlNode_js_1.TEXCLASS.REL || texClass === MmlNode_js_1.TEXCLASS.CLOSE || texClass === MmlNode_js_1.TEXCLASS.PUNCT)) {\n            prev.texClass = this.prevClass = MmlNode_js_1.TEXCLASS.ORD;\n        }\n        else if (texClass === MmlNode_js_1.TEXCLASS.BIN) {\n            var child = this;\n            var parent_1 = this.parent;\n            while (parent_1 && parent_1.parent && parent_1.isEmbellished &&\n                (parent_1.childNodes.length === 1 ||\n                    (!parent_1.isKind('mrow') && parent_1.core() === child))) {\n                child = parent_1;\n                parent_1 = parent_1.parent;\n            }\n            if (parent_1.childNodes[parent_1.childNodes.length - 1] === child) {\n                this.texClass = MmlNode_js_1.TEXCLASS.ORD;\n            }\n        }\n        return this;\n    };\n    MmlMo.prototype.setInheritedAttributes = function (attributes, display, level, prime) {\n        if (attributes === void 0) { attributes = {}; }\n        if (display === void 0) { display = false; }\n        if (level === void 0) { level = 0; }\n        if (prime === void 0) { prime = false; }\n        _super.prototype.setInheritedAttributes.call(this, attributes, display, level, prime);\n        var mo = this.getText();\n        this.checkOperatorTable(mo);\n        this.checkPseudoScripts(mo);\n        this.checkPrimes(mo);\n        this.checkMathAccent(mo);\n    };\n    MmlMo.prototype.checkOperatorTable = function (mo) {\n        var e_1, _a;\n        var _b = __read(this.handleExplicitForm(this.getForms()), 3), form1 = _b[0], form2 = _b[1], form3 = _b[2];\n        this.attributes.setInherited('form', form1);\n        var OPTABLE = this.constructor.OPTABLE;\n        var def = OPTABLE[form1][mo] || OPTABLE[form2][mo] || OPTABLE[form3][mo];\n        if (def) {\n            if (this.getProperty('texClass') === undefined) {\n                this.texClass = def[2];\n            }\n            try {\n                for (var _c = __values(Object.keys(def[3] || {})), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var name_1 = _d.value;\n                    this.attributes.setInherited(name_1, def[3][name_1]);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            this.lspace = (def[0] + 1) / 18;\n            this.rspace = (def[1] + 1) / 18;\n        }\n        else {\n            var range = (0, OperatorDictionary_js_1.getRange)(mo);\n            if (range) {\n                if (this.getProperty('texClass') === undefined) {\n                    this.texClass = range[2];\n                }\n                var spacing = this.constructor.MMLSPACING[range[2]];\n                this.lspace = (spacing[0] + 1) / 18;\n                this.rspace = (spacing[1] + 1) / 18;\n            }\n        }\n    };\n    MmlMo.prototype.getForms = function () {\n        var core = this;\n        var parent = this.parent;\n        var Parent = this.Parent;\n        while (Parent && Parent.isEmbellished) {\n            core = parent;\n            parent = Parent.parent;\n            Parent = Parent.Parent;\n        }\n        if (parent && parent.isKind('mrow') && parent.nonSpaceLength() !== 1) {\n            if (parent.firstNonSpace() === core) {\n                return ['prefix', 'infix', 'postfix'];\n            }\n            if (parent.lastNonSpace() === core) {\n                return ['postfix', 'infix', 'prefix'];\n            }\n        }\n        return ['infix', 'prefix', 'postfix'];\n    };\n    MmlMo.prototype.handleExplicitForm = function (forms) {\n        if (this.attributes.isSet('form')) {\n            var form_1 = this.attributes.get('form');\n            forms = [form_1].concat(forms.filter(function (name) { return (name !== form_1); }));\n        }\n        return forms;\n    };\n    MmlMo.prototype.checkPseudoScripts = function (mo) {\n        var PSEUDOSCRIPTS = this.constructor.pseudoScripts;\n        if (!mo.match(PSEUDOSCRIPTS))\n            return;\n        var parent = this.coreParent().Parent;\n        var isPseudo = !parent || !(parent.isKind('msubsup') && !parent.isKind('msub'));\n        this.setProperty('pseudoscript', isPseudo);\n        if (isPseudo) {\n            this.attributes.setInherited('lspace', 0);\n            this.attributes.setInherited('rspace', 0);\n        }\n    };\n    MmlMo.prototype.checkPrimes = function (mo) {\n        var PRIMES = this.constructor.primes;\n        if (!mo.match(PRIMES))\n            return;\n        var REMAP = this.constructor.remapPrimes;\n        var primes = (0, string_js_1.unicodeString)((0, string_js_1.unicodeChars)(mo).map(function (c) { return REMAP[c]; }));\n        this.setProperty('primes', primes);\n    };\n    MmlMo.prototype.checkMathAccent = function (mo) {\n        var parent = this.Parent;\n        if (this.getProperty('mathaccent') !== undefined || !parent || !parent.isKind('munderover'))\n            return;\n        var base = parent.childNodes[0];\n        if (base.isEmbellished && base.coreMO() === this)\n            return;\n        var MATHACCENT = this.constructor.mathaccents;\n        if (mo.match(MATHACCENT)) {\n            this.setProperty('mathaccent', true);\n        }\n    };\n    MmlMo.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlTokenNode.defaults), { form: 'infix', fence: false, separator: false, lspace: 'thickmathspace', rspace: 'thickmathspace', stretchy: false, symmetric: false, maxsize: 'infinity', minsize: '0em', largeop: false, movablelimits: false, accent: false, linebreak: 'auto', lineleading: '1ex', linebreakstyle: 'before', indentalign: 'auto', indentshift: '0', indenttarget: '', indentalignfirst: 'indentalign', indentshiftfirst: 'indentshift', indentalignlast: 'indentalign', indentshiftlast: 'indentshift' });\n    MmlMo.MMLSPACING = OperatorDictionary_js_1.MMLSPACING;\n    MmlMo.OPTABLE = OperatorDictionary_js_1.OPTABLE;\n    MmlMo.pseudoScripts = new RegExp([\n        '^[\"\\'*`',\n        '\\u00AA',\n        '\\u00B0',\n        '\\u00B2-\\u00B4',\n        '\\u00B9',\n        '\\u00BA',\n        '\\u2018-\\u201F',\n        '\\u2032-\\u2037\\u2057',\n        '\\u2070\\u2071',\n        '\\u2074-\\u207F',\n        '\\u2080-\\u208E',\n        ']+$'\n    ].join(''));\n    MmlMo.primes = new RegExp([\n        '^[\"\\'`',\n        '\\u2018-\\u201F',\n        ']+$'\n    ].join(''));\n    MmlMo.remapPrimes = {\n        0x0022: 0x2033,\n        0x0027: 0x2032,\n        0x0060: 0x2035,\n        0x2018: 0x2035,\n        0x2019: 0x2032,\n        0x201A: 0x2032,\n        0x201B: 0x2035,\n        0x201C: 0x2036,\n        0x201D: 0x2033,\n        0x201E: 0x2033,\n        0x201F: 0x2036,\n    };\n    MmlMo.mathaccents = new RegExp([\n        '^[',\n        '\\u00B4\\u0301\\u02CA',\n        '\\u0060\\u0300\\u02CB',\n        '\\u00A8\\u0308',\n        '\\u007E\\u0303\\u02DC',\n        '\\u00AF\\u0304\\u02C9',\n        '\\u02D8\\u0306',\n        '\\u02C7\\u030C',\n        '\\u005E\\u0302\\u02C6',\n        '\\u2192\\u20D7',\n        '\\u02D9\\u0307',\n        '\\u02DA\\u030A',\n        '\\u20DB',\n        '\\u20DC',\n        ']$'\n    ].join(''));\n    return MmlMo;\n}(MmlNode_js_1.AbstractMmlTokenNode));\nexports.MmlMo = MmlMo;\n//# sourceMappingURL=mo.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/core/MmlTree/MmlNodes/mo.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/core/MmlTree/OperatorDictionary.js":
/*!*************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/core/MmlTree/OperatorDictionary.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.OPTABLE = exports.MMLSPACING = exports.getRange = exports.RANGES = exports.MO = exports.OPDEF = void 0;\nvar MmlNode_js_1 = __webpack_require__(/*! ./MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nfunction OPDEF(lspace, rspace, texClass, properties) {\n    if (texClass === void 0) { texClass = MmlNode_js_1.TEXCLASS.BIN; }\n    if (properties === void 0) { properties = null; }\n    return [lspace, rspace, texClass, properties];\n}\nexports.OPDEF = OPDEF;\nexports.MO = {\n    ORD: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.ORD),\n    ORD11: OPDEF(1, 1, MmlNode_js_1.TEXCLASS.ORD),\n    ORD21: OPDEF(2, 1, MmlNode_js_1.TEXCLASS.ORD),\n    ORD02: OPDEF(0, 2, MmlNode_js_1.TEXCLASS.ORD),\n    ORD55: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.ORD),\n    NONE: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.NONE),\n    OP: OPDEF(1, 2, MmlNode_js_1.TEXCLASS.OP, { largeop: true, movablelimits: true, symmetric: true }),\n    OPFIXED: OPDEF(1, 2, MmlNode_js_1.TEXCLASS.OP, { largeop: true, movablelimits: true }),\n    INTEGRAL: OPDEF(0, 1, MmlNode_js_1.TEXCLASS.OP, { largeop: true, symmetric: true }),\n    INTEGRAL2: OPDEF(1, 2, MmlNode_js_1.TEXCLASS.OP, { largeop: true, symmetric: true }),\n    BIN3: OPDEF(3, 3, MmlNode_js_1.TEXCLASS.BIN),\n    BIN4: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.BIN),\n    BIN01: OPDEF(0, 1, MmlNode_js_1.TEXCLASS.BIN),\n    BIN5: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.BIN),\n    TALLBIN: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.BIN, { stretchy: true }),\n    BINOP: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.BIN, { largeop: true, movablelimits: true }),\n    REL: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL),\n    REL1: OPDEF(1, 1, MmlNode_js_1.TEXCLASS.REL, { stretchy: true }),\n    REL4: OPDEF(4, 4, MmlNode_js_1.TEXCLASS.REL),\n    RELSTRETCH: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL, { stretchy: true }),\n    RELACCENT: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL, { accent: true }),\n    WIDEREL: OPDEF(5, 5, MmlNode_js_1.TEXCLASS.REL, { accent: true, stretchy: true }),\n    OPEN: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.OPEN, { fence: true, stretchy: true, symmetric: true }),\n    CLOSE: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.CLOSE, { fence: true, stretchy: true, symmetric: true }),\n    INNER: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.INNER),\n    PUNCT: OPDEF(0, 3, MmlNode_js_1.TEXCLASS.PUNCT),\n    ACCENT: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.ORD, { accent: true }),\n    WIDEACCENT: OPDEF(0, 0, MmlNode_js_1.TEXCLASS.ORD, { accent: true, stretchy: true })\n};\nexports.RANGES = [\n    [0x0020, 0x007F, MmlNode_js_1.TEXCLASS.REL, 'mo'],\n    [0x00A0, 0x00BF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x00C0, 0x024F, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0x02B0, 0x036F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x0370, 0x1A20, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0x1AB0, 0x1AFF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x1B00, 0x1DBF, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0x1DC0, 0x1DFF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x1E00, 0x1FFF, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0x2000, 0x206F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x2070, 0x209F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x2100, 0x214F, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0x2150, 0x218F, MmlNode_js_1.TEXCLASS.ORD, 'mn'],\n    [0x2190, 0x21FF, MmlNode_js_1.TEXCLASS.REL, 'mo'],\n    [0x2200, 0x22FF, MmlNode_js_1.TEXCLASS.BIN, 'mo'],\n    [0x2300, 0x23FF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x2460, 0x24FF, MmlNode_js_1.TEXCLASS.ORD, 'mn'],\n    [0x2500, 0x27EF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x27F0, 0x27FF, MmlNode_js_1.TEXCLASS.REL, 'mo'],\n    [0x2800, 0x28FF, MmlNode_js_1.TEXCLASS.ORD, 'mtext'],\n    [0x2900, 0x297F, MmlNode_js_1.TEXCLASS.REL, 'mo'],\n    [0x2980, 0x29FF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x2A00, 0x2AFF, MmlNode_js_1.TEXCLASS.BIN, 'mo'],\n    [0x2B00, 0x2B2F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x2B30, 0x2B4F, MmlNode_js_1.TEXCLASS.REL, 'mo'],\n    [0x2B50, 0x2BFF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x2C00, 0x2DE0, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0x2E00, 0x2E7F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x2E80, 0x2FDF, MmlNode_js_1.TEXCLASS.ORD, 'mi', 'normal'],\n    [0x2FF0, 0x303F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x3040, 0xA49F, MmlNode_js_1.TEXCLASS.ORD, 'mi', 'normal'],\n    [0xA4D0, 0xA82F, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0xA830, 0xA83F, MmlNode_js_1.TEXCLASS.ORD, 'mn'],\n    [0xA840, 0xD7FF, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0xF900, 0xFAFF, MmlNode_js_1.TEXCLASS.ORD, 'mi', 'normal'],\n    [0xFB00, 0xFDFF, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0xFE00, 0xFE6F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0xFE70, 0x100FF, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0x10100, 0x1018F, MmlNode_js_1.TEXCLASS.ORD, 'mn'],\n    [0x10190, 0x123FF, MmlNode_js_1.TEXCLASS.ORD, 'mi', 'normal'],\n    [0x12400, 0x1247F, MmlNode_js_1.TEXCLASS.ORD, 'mn'],\n    [0x12480, 0x1BC9F, MmlNode_js_1.TEXCLASS.ORD, 'mi', 'normal'],\n    [0x1BCA0, 0x1D25F, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x1D360, 0x1D37F, MmlNode_js_1.TEXCLASS.ORD, 'mn'],\n    [0x1D400, 0x1D7CD, MmlNode_js_1.TEXCLASS.ORD, 'mi'],\n    [0x1D7CE, 0x1D7FF, MmlNode_js_1.TEXCLASS.ORD, 'mn'],\n    [0x1DF00, 0x1F7FF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x1F800, 0x1F8FF, MmlNode_js_1.TEXCLASS.REL, 'mo'],\n    [0x1F900, 0x1F9FF, MmlNode_js_1.TEXCLASS.ORD, 'mo'],\n    [0x20000, 0x2FA1F, MmlNode_js_1.TEXCLASS.ORD, 'mi', 'normnal'],\n];\nfunction getRange(text) {\n    var e_1, _a;\n    var n = text.codePointAt(0);\n    try {\n        for (var RANGES_1 = __values(exports.RANGES), RANGES_1_1 = RANGES_1.next(); !RANGES_1_1.done; RANGES_1_1 = RANGES_1.next()) {\n            var range = RANGES_1_1.value;\n            if (n <= range[1]) {\n                if (n >= range[0]) {\n                    return range;\n                }\n                break;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (RANGES_1_1 && !RANGES_1_1.done && (_a = RANGES_1.return)) _a.call(RANGES_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return null;\n}\nexports.getRange = getRange;\nexports.MMLSPACING = [\n    [0, 0],\n    [1, 2],\n    [3, 3],\n    [4, 4],\n    [0, 0],\n    [0, 0],\n    [0, 3]\n];\nexports.OPTABLE = {\n    prefix: {\n        '(': exports.MO.OPEN,\n        '+': exports.MO.BIN01,\n        '-': exports.MO.BIN01,\n        '[': exports.MO.OPEN,\n        '{': exports.MO.OPEN,\n        '|': exports.MO.OPEN,\n        '||': [0, 0, MmlNode_js_1.TEXCLASS.BIN, { fence: true, stretchy: true, symmetric: true }],\n        '|||': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true, symmetric: true }],\n        '\\u00AC': exports.MO.ORD21,\n        '\\u00B1': exports.MO.BIN01,\n        '\\u2016': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true }],\n        '\\u2018': [0, 0, MmlNode_js_1.TEXCLASS.OPEN, { fence: true }],\n        '\\u201C': [0, 0, MmlNode_js_1.TEXCLASS.OPEN, { fence: true }],\n        '\\u2145': exports.MO.ORD21,\n        '\\u2146': OPDEF(2, 0, MmlNode_js_1.TEXCLASS.ORD),\n        '\\u2200': exports.MO.ORD21,\n        '\\u2202': exports.MO.ORD21,\n        '\\u2203': exports.MO.ORD21,\n        '\\u2204': exports.MO.ORD21,\n        '\\u2207': exports.MO.ORD21,\n        '\\u220F': exports.MO.OP,\n        '\\u2210': exports.MO.OP,\n        '\\u2211': exports.MO.OP,\n        '\\u2212': exports.MO.BIN01,\n        '\\u2213': exports.MO.BIN01,\n        '\\u221A': [1, 1, MmlNode_js_1.TEXCLASS.ORD, { stretchy: true }],\n        '\\u221B': exports.MO.ORD11,\n        '\\u221C': exports.MO.ORD11,\n        '\\u2220': exports.MO.ORD,\n        '\\u2221': exports.MO.ORD,\n        '\\u2222': exports.MO.ORD,\n        '\\u222B': exports.MO.INTEGRAL,\n        '\\u222C': exports.MO.INTEGRAL,\n        '\\u222D': exports.MO.INTEGRAL,\n        '\\u222E': exports.MO.INTEGRAL,\n        '\\u222F': exports.MO.INTEGRAL,\n        '\\u2230': exports.MO.INTEGRAL,\n        '\\u2231': exports.MO.INTEGRAL,\n        '\\u2232': exports.MO.INTEGRAL,\n        '\\u2233': exports.MO.INTEGRAL,\n        '\\u22C0': exports.MO.OP,\n        '\\u22C1': exports.MO.OP,\n        '\\u22C2': exports.MO.OP,\n        '\\u22C3': exports.MO.OP,\n        '\\u2308': exports.MO.OPEN,\n        '\\u230A': exports.MO.OPEN,\n        '\\u2329': exports.MO.OPEN,\n        '\\u2772': exports.MO.OPEN,\n        '\\u27E6': exports.MO.OPEN,\n        '\\u27E8': exports.MO.OPEN,\n        '\\u27EA': exports.MO.OPEN,\n        '\\u27EC': exports.MO.OPEN,\n        '\\u27EE': exports.MO.OPEN,\n        '\\u2980': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true }],\n        '\\u2983': exports.MO.OPEN,\n        '\\u2985': exports.MO.OPEN,\n        '\\u2987': exports.MO.OPEN,\n        '\\u2989': exports.MO.OPEN,\n        '\\u298B': exports.MO.OPEN,\n        '\\u298D': exports.MO.OPEN,\n        '\\u298F': exports.MO.OPEN,\n        '\\u2991': exports.MO.OPEN,\n        '\\u2993': exports.MO.OPEN,\n        '\\u2995': exports.MO.OPEN,\n        '\\u2997': exports.MO.OPEN,\n        '\\u29FC': exports.MO.OPEN,\n        '\\u2A00': exports.MO.OP,\n        '\\u2A01': exports.MO.OP,\n        '\\u2A02': exports.MO.OP,\n        '\\u2A03': exports.MO.OP,\n        '\\u2A04': exports.MO.OP,\n        '\\u2A05': exports.MO.OP,\n        '\\u2A06': exports.MO.OP,\n        '\\u2A07': exports.MO.OP,\n        '\\u2A08': exports.MO.OP,\n        '\\u2A09': exports.MO.OP,\n        '\\u2A0A': exports.MO.OP,\n        '\\u2A0B': exports.MO.INTEGRAL2,\n        '\\u2A0C': exports.MO.INTEGRAL,\n        '\\u2A0D': exports.MO.INTEGRAL2,\n        '\\u2A0E': exports.MO.INTEGRAL2,\n        '\\u2A0F': exports.MO.INTEGRAL2,\n        '\\u2A10': exports.MO.OP,\n        '\\u2A11': exports.MO.OP,\n        '\\u2A12': exports.MO.OP,\n        '\\u2A13': exports.MO.OP,\n        '\\u2A14': exports.MO.OP,\n        '\\u2A15': exports.MO.INTEGRAL2,\n        '\\u2A16': exports.MO.INTEGRAL2,\n        '\\u2A17': exports.MO.INTEGRAL2,\n        '\\u2A18': exports.MO.INTEGRAL2,\n        '\\u2A19': exports.MO.INTEGRAL2,\n        '\\u2A1A': exports.MO.INTEGRAL2,\n        '\\u2A1B': exports.MO.INTEGRAL2,\n        '\\u2A1C': exports.MO.INTEGRAL2,\n        '\\u2AFC': exports.MO.OP,\n        '\\u2AFF': exports.MO.OP,\n    },\n    postfix: {\n        '!!': OPDEF(1, 0),\n        '!': [1, 0, MmlNode_js_1.TEXCLASS.CLOSE, null],\n        '\"': exports.MO.ACCENT,\n        '&': exports.MO.ORD,\n        ')': exports.MO.CLOSE,\n        '++': OPDEF(0, 0),\n        '--': OPDEF(0, 0),\n        '..': OPDEF(0, 0),\n        '...': exports.MO.ORD,\n        '\\'': exports.MO.ACCENT,\n        ']': exports.MO.CLOSE,\n        '^': exports.MO.WIDEACCENT,\n        '_': exports.MO.WIDEACCENT,\n        '`': exports.MO.ACCENT,\n        '|': exports.MO.CLOSE,\n        '}': exports.MO.CLOSE,\n        '~': exports.MO.WIDEACCENT,\n        '||': [0, 0, MmlNode_js_1.TEXCLASS.BIN, { fence: true, stretchy: true, symmetric: true }],\n        '|||': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true, symmetric: true }],\n        '\\u00A8': exports.MO.ACCENT,\n        '\\u00AA': exports.MO.ACCENT,\n        '\\u00AF': exports.MO.WIDEACCENT,\n        '\\u00B0': exports.MO.ORD,\n        '\\u00B2': exports.MO.ACCENT,\n        '\\u00B3': exports.MO.ACCENT,\n        '\\u00B4': exports.MO.ACCENT,\n        '\\u00B8': exports.MO.ACCENT,\n        '\\u00B9': exports.MO.ACCENT,\n        '\\u00BA': exports.MO.ACCENT,\n        '\\u02C6': exports.MO.WIDEACCENT,\n        '\\u02C7': exports.MO.WIDEACCENT,\n        '\\u02C9': exports.MO.WIDEACCENT,\n        '\\u02CA': exports.MO.ACCENT,\n        '\\u02CB': exports.MO.ACCENT,\n        '\\u02CD': exports.MO.WIDEACCENT,\n        '\\u02D8': exports.MO.ACCENT,\n        '\\u02D9': exports.MO.ACCENT,\n        '\\u02DA': exports.MO.ACCENT,\n        '\\u02DC': exports.MO.WIDEACCENT,\n        '\\u02DD': exports.MO.ACCENT,\n        '\\u02F7': exports.MO.WIDEACCENT,\n        '\\u0302': exports.MO.WIDEACCENT,\n        '\\u0311': exports.MO.ACCENT,\n        '\\u03F6': exports.MO.REL,\n        '\\u2016': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true }],\n        '\\u2019': [0, 0, MmlNode_js_1.TEXCLASS.CLOSE, { fence: true }],\n        '\\u201A': exports.MO.ACCENT,\n        '\\u201B': exports.MO.ACCENT,\n        '\\u201D': [0, 0, MmlNode_js_1.TEXCLASS.CLOSE, { fence: true }],\n        '\\u201E': exports.MO.ACCENT,\n        '\\u201F': exports.MO.ACCENT,\n        '\\u2032': exports.MO.ORD,\n        '\\u2033': exports.MO.ACCENT,\n        '\\u2034': exports.MO.ACCENT,\n        '\\u2035': exports.MO.ACCENT,\n        '\\u2036': exports.MO.ACCENT,\n        '\\u2037': exports.MO.ACCENT,\n        '\\u203E': exports.MO.WIDEACCENT,\n        '\\u2057': exports.MO.ACCENT,\n        '\\u20DB': exports.MO.ACCENT,\n        '\\u20DC': exports.MO.ACCENT,\n        '\\u2309': exports.MO.CLOSE,\n        '\\u230B': exports.MO.CLOSE,\n        '\\u232A': exports.MO.CLOSE,\n        '\\u23B4': exports.MO.WIDEACCENT,\n        '\\u23B5': exports.MO.WIDEACCENT,\n        '\\u23DC': exports.MO.WIDEACCENT,\n        '\\u23DD': exports.MO.WIDEACCENT,\n        '\\u23DE': exports.MO.WIDEACCENT,\n        '\\u23DF': exports.MO.WIDEACCENT,\n        '\\u23E0': exports.MO.WIDEACCENT,\n        '\\u23E1': exports.MO.WIDEACCENT,\n        '\\u25A0': exports.MO.BIN3,\n        '\\u25A1': exports.MO.BIN3,\n        '\\u25AA': exports.MO.BIN3,\n        '\\u25AB': exports.MO.BIN3,\n        '\\u25AD': exports.MO.BIN3,\n        '\\u25AE': exports.MO.BIN3,\n        '\\u25AF': exports.MO.BIN3,\n        '\\u25B0': exports.MO.BIN3,\n        '\\u25B1': exports.MO.BIN3,\n        '\\u25B2': exports.MO.BIN4,\n        '\\u25B4': exports.MO.BIN4,\n        '\\u25B6': exports.MO.BIN4,\n        '\\u25B7': exports.MO.BIN4,\n        '\\u25B8': exports.MO.BIN4,\n        '\\u25BC': exports.MO.BIN4,\n        '\\u25BE': exports.MO.BIN4,\n        '\\u25C0': exports.MO.BIN4,\n        '\\u25C1': exports.MO.BIN4,\n        '\\u25C2': exports.MO.BIN4,\n        '\\u25C4': exports.MO.BIN4,\n        '\\u25C5': exports.MO.BIN4,\n        '\\u25C6': exports.MO.BIN4,\n        '\\u25C7': exports.MO.BIN4,\n        '\\u25C8': exports.MO.BIN4,\n        '\\u25C9': exports.MO.BIN4,\n        '\\u25CC': exports.MO.BIN4,\n        '\\u25CD': exports.MO.BIN4,\n        '\\u25CE': exports.MO.BIN4,\n        '\\u25CF': exports.MO.BIN4,\n        '\\u25D6': exports.MO.BIN4,\n        '\\u25D7': exports.MO.BIN4,\n        '\\u25E6': exports.MO.BIN4,\n        '\\u266D': exports.MO.ORD02,\n        '\\u266E': exports.MO.ORD02,\n        '\\u266F': exports.MO.ORD02,\n        '\\u2773': exports.MO.CLOSE,\n        '\\u27E7': exports.MO.CLOSE,\n        '\\u27E9': exports.MO.CLOSE,\n        '\\u27EB': exports.MO.CLOSE,\n        '\\u27ED': exports.MO.CLOSE,\n        '\\u27EF': exports.MO.CLOSE,\n        '\\u2980': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true }],\n        '\\u2984': exports.MO.CLOSE,\n        '\\u2986': exports.MO.CLOSE,\n        '\\u2988': exports.MO.CLOSE,\n        '\\u298A': exports.MO.CLOSE,\n        '\\u298C': exports.MO.CLOSE,\n        '\\u298E': exports.MO.CLOSE,\n        '\\u2990': exports.MO.CLOSE,\n        '\\u2992': exports.MO.CLOSE,\n        '\\u2994': exports.MO.CLOSE,\n        '\\u2996': exports.MO.CLOSE,\n        '\\u2998': exports.MO.CLOSE,\n        '\\u29FD': exports.MO.CLOSE,\n    },\n    infix: {\n        '!=': exports.MO.BIN4,\n        '#': exports.MO.ORD,\n        '$': exports.MO.ORD,\n        '%': [3, 3, MmlNode_js_1.TEXCLASS.ORD, null],\n        '&&': exports.MO.BIN4,\n        '': exports.MO.ORD,\n        '*': exports.MO.BIN3,\n        '**': OPDEF(1, 1),\n        '*=': exports.MO.BIN4,\n        '+': exports.MO.BIN4,\n        '+=': exports.MO.BIN4,\n        ',': [0, 3, MmlNode_js_1.TEXCLASS.PUNCT, { linebreakstyle: 'after', separator: true }],\n        '-': exports.MO.BIN4,\n        '-=': exports.MO.BIN4,\n        '->': exports.MO.BIN5,\n        '.': [0, 3, MmlNode_js_1.TEXCLASS.PUNCT, { separator: true }],\n        '/': exports.MO.ORD11,\n        '//': OPDEF(1, 1),\n        '/=': exports.MO.BIN4,\n        ':': [1, 2, MmlNode_js_1.TEXCLASS.REL, null],\n        ':=': exports.MO.BIN4,\n        ';': [0, 3, MmlNode_js_1.TEXCLASS.PUNCT, { linebreakstyle: 'after', separator: true }],\n        '<': exports.MO.REL,\n        '<=': exports.MO.BIN5,\n        '<>': OPDEF(1, 1),\n        '=': exports.MO.REL,\n        '==': exports.MO.BIN4,\n        '>': exports.MO.REL,\n        '>=': exports.MO.BIN5,\n        '?': [1, 1, MmlNode_js_1.TEXCLASS.CLOSE, null],\n        '@': exports.MO.ORD11,\n        '\\\\': exports.MO.ORD,\n        '^': exports.MO.ORD11,\n        '_': exports.MO.ORD11,\n        '|': [2, 2, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true, symmetric: true }],\n        '||': [2, 2, MmlNode_js_1.TEXCLASS.BIN, { fence: true, stretchy: true, symmetric: true }],\n        '|||': [2, 2, MmlNode_js_1.TEXCLASS.ORD, { fence: true, stretchy: true, symmetric: true }],\n        '\\u00B1': exports.MO.BIN4,\n        '\\u00B7': exports.MO.BIN4,\n        '\\u00D7': exports.MO.BIN4,\n        '\\u00F7': exports.MO.BIN4,\n        '\\u02B9': exports.MO.ORD,\n        '\\u0300': exports.MO.ACCENT,\n        '\\u0301': exports.MO.ACCENT,\n        '\\u0303': exports.MO.WIDEACCENT,\n        '\\u0304': exports.MO.ACCENT,\n        '\\u0306': exports.MO.ACCENT,\n        '\\u0307': exports.MO.ACCENT,\n        '\\u0308': exports.MO.ACCENT,\n        '\\u030C': exports.MO.ACCENT,\n        '\\u0332': exports.MO.WIDEACCENT,\n        '\\u0338': exports.MO.REL4,\n        '\\u2015': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { stretchy: true }],\n        '\\u2017': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { stretchy: true }],\n        '\\u2020': exports.MO.BIN3,\n        '\\u2021': exports.MO.BIN3,\n        '\\u2022': exports.MO.BIN4,\n        '\\u2026': exports.MO.INNER,\n        '\\u2043': exports.MO.BIN4,\n        '\\u2044': exports.MO.TALLBIN,\n        '\\u2061': exports.MO.NONE,\n        '\\u2062': exports.MO.NONE,\n        '\\u2063': [0, 0, MmlNode_js_1.TEXCLASS.NONE, { linebreakstyle: 'after', separator: true }],\n        '\\u2064': exports.MO.NONE,\n        '\\u20D7': exports.MO.ACCENT,\n        '\\u2111': exports.MO.ORD,\n        '\\u2113': exports.MO.ORD,\n        '\\u2118': exports.MO.ORD,\n        '\\u211C': exports.MO.ORD,\n        '\\u2190': exports.MO.WIDEREL,\n        '\\u2191': exports.MO.RELSTRETCH,\n        '\\u2192': exports.MO.WIDEREL,\n        '\\u2193': exports.MO.RELSTRETCH,\n        '\\u2194': exports.MO.WIDEREL,\n        '\\u2195': exports.MO.RELSTRETCH,\n        '\\u2196': exports.MO.RELSTRETCH,\n        '\\u2197': exports.MO.RELSTRETCH,\n        '\\u2198': exports.MO.RELSTRETCH,\n        '\\u2199': exports.MO.RELSTRETCH,\n        '\\u219A': exports.MO.RELACCENT,\n        '\\u219B': exports.MO.RELACCENT,\n        '\\u219C': exports.MO.WIDEREL,\n        '\\u219D': exports.MO.WIDEREL,\n        '\\u219E': exports.MO.WIDEREL,\n        '\\u219F': exports.MO.WIDEREL,\n        '\\u21A0': exports.MO.WIDEREL,\n        '\\u21A1': exports.MO.RELSTRETCH,\n        '\\u21A2': exports.MO.WIDEREL,\n        '\\u21A3': exports.MO.WIDEREL,\n        '\\u21A4': exports.MO.WIDEREL,\n        '\\u21A5': exports.MO.RELSTRETCH,\n        '\\u21A6': exports.MO.WIDEREL,\n        '\\u21A7': exports.MO.RELSTRETCH,\n        '\\u21A8': exports.MO.RELSTRETCH,\n        '\\u21A9': exports.MO.WIDEREL,\n        '\\u21AA': exports.MO.WIDEREL,\n        '\\u21AB': exports.MO.WIDEREL,\n        '\\u21AC': exports.MO.WIDEREL,\n        '\\u21AD': exports.MO.WIDEREL,\n        '\\u21AE': exports.MO.RELACCENT,\n        '\\u21AF': exports.MO.RELSTRETCH,\n        '\\u21B0': exports.MO.RELSTRETCH,\n        '\\u21B1': exports.MO.RELSTRETCH,\n        '\\u21B2': exports.MO.RELSTRETCH,\n        '\\u21B3': exports.MO.RELSTRETCH,\n        '\\u21B4': exports.MO.RELSTRETCH,\n        '\\u21B5': exports.MO.RELSTRETCH,\n        '\\u21B6': exports.MO.RELACCENT,\n        '\\u21B7': exports.MO.RELACCENT,\n        '\\u21B8': exports.MO.REL,\n        '\\u21B9': exports.MO.WIDEREL,\n        '\\u21BA': exports.MO.REL,\n        '\\u21BB': exports.MO.REL,\n        '\\u21BC': exports.MO.WIDEREL,\n        '\\u21BD': exports.MO.WIDEREL,\n        '\\u21BE': exports.MO.RELSTRETCH,\n        '\\u21BF': exports.MO.RELSTRETCH,\n        '\\u21C0': exports.MO.WIDEREL,\n        '\\u21C1': exports.MO.WIDEREL,\n        '\\u21C2': exports.MO.RELSTRETCH,\n        '\\u21C3': exports.MO.RELSTRETCH,\n        '\\u21C4': exports.MO.WIDEREL,\n        '\\u21C5': exports.MO.RELSTRETCH,\n        '\\u21C6': exports.MO.WIDEREL,\n        '\\u21C7': exports.MO.WIDEREL,\n        '\\u21C8': exports.MO.RELSTRETCH,\n        '\\u21C9': exports.MO.WIDEREL,\n        '\\u21CA': exports.MO.RELSTRETCH,\n        '\\u21CB': exports.MO.WIDEREL,\n        '\\u21CC': exports.MO.WIDEREL,\n        '\\u21CD': exports.MO.RELACCENT,\n        '\\u21CE': exports.MO.RELACCENT,\n        '\\u21CF': exports.MO.RELACCENT,\n        '\\u21D0': exports.MO.WIDEREL,\n        '\\u21D1': exports.MO.RELSTRETCH,\n        '\\u21D2': exports.MO.WIDEREL,\n        '\\u21D3': exports.MO.RELSTRETCH,\n        '\\u21D4': exports.MO.WIDEREL,\n        '\\u21D5': exports.MO.RELSTRETCH,\n        '\\u21D6': exports.MO.RELSTRETCH,\n        '\\u21D7': exports.MO.RELSTRETCH,\n        '\\u21D8': exports.MO.RELSTRETCH,\n        '\\u21D9': exports.MO.RELSTRETCH,\n        '\\u21DA': exports.MO.WIDEREL,\n        '\\u21DB': exports.MO.WIDEREL,\n        '\\u21DC': exports.MO.WIDEREL,\n        '\\u21DD': exports.MO.WIDEREL,\n        '\\u21DE': exports.MO.REL,\n        '\\u21DF': exports.MO.REL,\n        '\\u21E0': exports.MO.WIDEREL,\n        '\\u21E1': exports.MO.RELSTRETCH,\n        '\\u21E2': exports.MO.WIDEREL,\n        '\\u21E3': exports.MO.RELSTRETCH,\n        '\\u21E4': exports.MO.WIDEREL,\n        '\\u21E5': exports.MO.WIDEREL,\n        '\\u21E6': exports.MO.WIDEREL,\n        '\\u21E7': exports.MO.RELSTRETCH,\n        '\\u21E8': exports.MO.WIDEREL,\n        '\\u21E9': exports.MO.RELSTRETCH,\n        '\\u21EA': exports.MO.RELSTRETCH,\n        '\\u21EB': exports.MO.RELSTRETCH,\n        '\\u21EC': exports.MO.RELSTRETCH,\n        '\\u21ED': exports.MO.RELSTRETCH,\n        '\\u21EE': exports.MO.RELSTRETCH,\n        '\\u21EF': exports.MO.RELSTRETCH,\n        '\\u21F0': exports.MO.WIDEREL,\n        '\\u21F1': exports.MO.REL,\n        '\\u21F2': exports.MO.REL,\n        '\\u21F3': exports.MO.RELSTRETCH,\n        '\\u21F4': exports.MO.RELACCENT,\n        '\\u21F5': exports.MO.RELSTRETCH,\n        '\\u21F6': exports.MO.WIDEREL,\n        '\\u21F7': exports.MO.RELACCENT,\n        '\\u21F8': exports.MO.RELACCENT,\n        '\\u21F9': exports.MO.RELACCENT,\n        '\\u21FA': exports.MO.RELACCENT,\n        '\\u21FB': exports.MO.RELACCENT,\n        '\\u21FC': exports.MO.RELACCENT,\n        '\\u21FD': exports.MO.WIDEREL,\n        '\\u21FE': exports.MO.WIDEREL,\n        '\\u21FF': exports.MO.WIDEREL,\n        '\\u2201': OPDEF(1, 2, MmlNode_js_1.TEXCLASS.ORD),\n        '\\u2205': exports.MO.ORD,\n        '\\u2206': exports.MO.BIN3,\n        '\\u2208': exports.MO.REL,\n        '\\u2209': exports.MO.REL,\n        '\\u220A': exports.MO.REL,\n        '\\u220B': exports.MO.REL,\n        '\\u220C': exports.MO.REL,\n        '\\u220D': exports.MO.REL,\n        '\\u220E': exports.MO.BIN3,\n        '\\u2212': exports.MO.BIN4,\n        '\\u2213': exports.MO.BIN4,\n        '\\u2214': exports.MO.BIN4,\n        '\\u2215': exports.MO.TALLBIN,\n        '\\u2216': exports.MO.BIN4,\n        '\\u2217': exports.MO.BIN4,\n        '\\u2218': exports.MO.BIN4,\n        '\\u2219': exports.MO.BIN4,\n        '\\u221D': exports.MO.REL,\n        '\\u221E': exports.MO.ORD,\n        '\\u221F': exports.MO.REL,\n        '\\u2223': exports.MO.REL,\n        '\\u2224': exports.MO.REL,\n        '\\u2225': exports.MO.REL,\n        '\\u2226': exports.MO.REL,\n        '\\u2227': exports.MO.BIN4,\n        '\\u2228': exports.MO.BIN4,\n        '\\u2229': exports.MO.BIN4,\n        '\\u222A': exports.MO.BIN4,\n        '\\u2234': exports.MO.REL,\n        '\\u2235': exports.MO.REL,\n        '\\u2236': exports.MO.REL,\n        '\\u2237': exports.MO.REL,\n        '\\u2238': exports.MO.BIN4,\n        '\\u2239': exports.MO.REL,\n        '\\u223A': exports.MO.BIN4,\n        '\\u223B': exports.MO.REL,\n        '\\u223C': exports.MO.REL,\n        '\\u223D': exports.MO.REL,\n        '\\u223D\\u0331': exports.MO.BIN3,\n        '\\u223E': exports.MO.REL,\n        '\\u223F': exports.MO.BIN3,\n        '\\u2240': exports.MO.BIN4,\n        '\\u2241': exports.MO.REL,\n        '\\u2242': exports.MO.REL,\n        '\\u2242\\u0338': exports.MO.REL,\n        '\\u2243': exports.MO.REL,\n        '\\u2244': exports.MO.REL,\n        '\\u2245': exports.MO.REL,\n        '\\u2246': exports.MO.REL,\n        '\\u2247': exports.MO.REL,\n        '\\u2248': exports.MO.REL,\n        '\\u2249': exports.MO.REL,\n        '\\u224A': exports.MO.REL,\n        '\\u224B': exports.MO.REL,\n        '\\u224C': exports.MO.REL,\n        '\\u224D': exports.MO.REL,\n        '\\u224E': exports.MO.REL,\n        '\\u224E\\u0338': exports.MO.REL,\n        '\\u224F': exports.MO.REL,\n        '\\u224F\\u0338': exports.MO.REL,\n        '\\u2250': exports.MO.REL,\n        '\\u2251': exports.MO.REL,\n        '\\u2252': exports.MO.REL,\n        '\\u2253': exports.MO.REL,\n        '\\u2254': exports.MO.REL,\n        '\\u2255': exports.MO.REL,\n        '\\u2256': exports.MO.REL,\n        '\\u2257': exports.MO.REL,\n        '\\u2258': exports.MO.REL,\n        '\\u2259': exports.MO.REL,\n        '\\u225A': exports.MO.REL,\n        '\\u225B': exports.MO.REL,\n        '\\u225C': exports.MO.REL,\n        '\\u225D': exports.MO.REL,\n        '\\u225E': exports.MO.REL,\n        '\\u225F': exports.MO.REL,\n        '\\u2260': exports.MO.REL,\n        '\\u2261': exports.MO.REL,\n        '\\u2262': exports.MO.REL,\n        '\\u2263': exports.MO.REL,\n        '\\u2264': exports.MO.REL,\n        '\\u2265': exports.MO.REL,\n        '\\u2266': exports.MO.REL,\n        '\\u2266\\u0338': exports.MO.REL,\n        '\\u2267': exports.MO.REL,\n        '\\u2268': exports.MO.REL,\n        '\\u2269': exports.MO.REL,\n        '\\u226A': exports.MO.REL,\n        '\\u226A\\u0338': exports.MO.REL,\n        '\\u226B': exports.MO.REL,\n        '\\u226B\\u0338': exports.MO.REL,\n        '\\u226C': exports.MO.REL,\n        '\\u226D': exports.MO.REL,\n        '\\u226E': exports.MO.REL,\n        '\\u226F': exports.MO.REL,\n        '\\u2270': exports.MO.REL,\n        '\\u2271': exports.MO.REL,\n        '\\u2272': exports.MO.REL,\n        '\\u2273': exports.MO.REL,\n        '\\u2274': exports.MO.REL,\n        '\\u2275': exports.MO.REL,\n        '\\u2276': exports.MO.REL,\n        '\\u2277': exports.MO.REL,\n        '\\u2278': exports.MO.REL,\n        '\\u2279': exports.MO.REL,\n        '\\u227A': exports.MO.REL,\n        '\\u227B': exports.MO.REL,\n        '\\u227C': exports.MO.REL,\n        '\\u227D': exports.MO.REL,\n        '\\u227E': exports.MO.REL,\n        '\\u227F': exports.MO.REL,\n        '\\u227F\\u0338': exports.MO.REL,\n        '\\u2280': exports.MO.REL,\n        '\\u2281': exports.MO.REL,\n        '\\u2282': exports.MO.REL,\n        '\\u2282\\u20D2': exports.MO.REL,\n        '\\u2283': exports.MO.REL,\n        '\\u2283\\u20D2': exports.MO.REL,\n        '\\u2284': exports.MO.REL,\n        '\\u2285': exports.MO.REL,\n        '\\u2286': exports.MO.REL,\n        '\\u2287': exports.MO.REL,\n        '\\u2288': exports.MO.REL,\n        '\\u2289': exports.MO.REL,\n        '\\u228A': exports.MO.REL,\n        '\\u228B': exports.MO.REL,\n        '\\u228C': exports.MO.BIN4,\n        '\\u228D': exports.MO.BIN4,\n        '\\u228E': exports.MO.BIN4,\n        '\\u228F': exports.MO.REL,\n        '\\u228F\\u0338': exports.MO.REL,\n        '\\u2290': exports.MO.REL,\n        '\\u2290\\u0338': exports.MO.REL,\n        '\\u2291': exports.MO.REL,\n        '\\u2292': exports.MO.REL,\n        '\\u2293': exports.MO.BIN4,\n        '\\u2294': exports.MO.BIN4,\n        '\\u2295': exports.MO.BIN4,\n        '\\u2296': exports.MO.BIN4,\n        '\\u2297': exports.MO.BIN4,\n        '\\u2298': exports.MO.BIN4,\n        '\\u2299': exports.MO.BIN4,\n        '\\u229A': exports.MO.BIN4,\n        '\\u229B': exports.MO.BIN4,\n        '\\u229C': exports.MO.BIN4,\n        '\\u229D': exports.MO.BIN4,\n        '\\u229E': exports.MO.BIN4,\n        '\\u229F': exports.MO.BIN4,\n        '\\u22A0': exports.MO.BIN4,\n        '\\u22A1': exports.MO.BIN4,\n        '\\u22A2': exports.MO.REL,\n        '\\u22A3': exports.MO.REL,\n        '\\u22A4': exports.MO.ORD55,\n        '\\u22A5': exports.MO.REL,\n        '\\u22A6': exports.MO.REL,\n        '\\u22A7': exports.MO.REL,\n        '\\u22A8': exports.MO.REL,\n        '\\u22A9': exports.MO.REL,\n        '\\u22AA': exports.MO.REL,\n        '\\u22AB': exports.MO.REL,\n        '\\u22AC': exports.MO.REL,\n        '\\u22AD': exports.MO.REL,\n        '\\u22AE': exports.MO.REL,\n        '\\u22AF': exports.MO.REL,\n        '\\u22B0': exports.MO.REL,\n        '\\u22B1': exports.MO.REL,\n        '\\u22B2': exports.MO.REL,\n        '\\u22B3': exports.MO.REL,\n        '\\u22B4': exports.MO.REL,\n        '\\u22B5': exports.MO.REL,\n        '\\u22B6': exports.MO.REL,\n        '\\u22B7': exports.MO.REL,\n        '\\u22B8': exports.MO.REL,\n        '\\u22B9': exports.MO.REL,\n        '\\u22BA': exports.MO.BIN4,\n        '\\u22BB': exports.MO.BIN4,\n        '\\u22BC': exports.MO.BIN4,\n        '\\u22BD': exports.MO.BIN4,\n        '\\u22BE': exports.MO.BIN3,\n        '\\u22BF': exports.MO.BIN3,\n        '\\u22C4': exports.MO.BIN4,\n        '\\u22C5': exports.MO.BIN4,\n        '\\u22C6': exports.MO.BIN4,\n        '\\u22C7': exports.MO.BIN4,\n        '\\u22C8': exports.MO.REL,\n        '\\u22C9': exports.MO.BIN4,\n        '\\u22CA': exports.MO.BIN4,\n        '\\u22CB': exports.MO.BIN4,\n        '\\u22CC': exports.MO.BIN4,\n        '\\u22CD': exports.MO.REL,\n        '\\u22CE': exports.MO.BIN4,\n        '\\u22CF': exports.MO.BIN4,\n        '\\u22D0': exports.MO.REL,\n        '\\u22D1': exports.MO.REL,\n        '\\u22D2': exports.MO.BIN4,\n        '\\u22D3': exports.MO.BIN4,\n        '\\u22D4': exports.MO.REL,\n        '\\u22D5': exports.MO.REL,\n        '\\u22D6': exports.MO.REL,\n        '\\u22D7': exports.MO.REL,\n        '\\u22D8': exports.MO.REL,\n        '\\u22D9': exports.MO.REL,\n        '\\u22DA': exports.MO.REL,\n        '\\u22DB': exports.MO.REL,\n        '\\u22DC': exports.MO.REL,\n        '\\u22DD': exports.MO.REL,\n        '\\u22DE': exports.MO.REL,\n        '\\u22DF': exports.MO.REL,\n        '\\u22E0': exports.MO.REL,\n        '\\u22E1': exports.MO.REL,\n        '\\u22E2': exports.MO.REL,\n        '\\u22E3': exports.MO.REL,\n        '\\u22E4': exports.MO.REL,\n        '\\u22E5': exports.MO.REL,\n        '\\u22E6': exports.MO.REL,\n        '\\u22E7': exports.MO.REL,\n        '\\u22E8': exports.MO.REL,\n        '\\u22E9': exports.MO.REL,\n        '\\u22EA': exports.MO.REL,\n        '\\u22EB': exports.MO.REL,\n        '\\u22EC': exports.MO.REL,\n        '\\u22ED': exports.MO.REL,\n        '\\u22EE': exports.MO.ORD55,\n        '\\u22EF': exports.MO.INNER,\n        '\\u22F0': exports.MO.REL,\n        '\\u22F1': [5, 5, MmlNode_js_1.TEXCLASS.INNER, null],\n        '\\u22F2': exports.MO.REL,\n        '\\u22F3': exports.MO.REL,\n        '\\u22F4': exports.MO.REL,\n        '\\u22F5': exports.MO.REL,\n        '\\u22F6': exports.MO.REL,\n        '\\u22F7': exports.MO.REL,\n        '\\u22F8': exports.MO.REL,\n        '\\u22F9': exports.MO.REL,\n        '\\u22FA': exports.MO.REL,\n        '\\u22FB': exports.MO.REL,\n        '\\u22FC': exports.MO.REL,\n        '\\u22FD': exports.MO.REL,\n        '\\u22FE': exports.MO.REL,\n        '\\u22FF': exports.MO.REL,\n        '\\u2305': exports.MO.BIN3,\n        '\\u2306': exports.MO.BIN3,\n        '\\u2322': exports.MO.REL4,\n        '\\u2323': exports.MO.REL4,\n        '\\u2329': exports.MO.OPEN,\n        '\\u232A': exports.MO.CLOSE,\n        '\\u23AA': exports.MO.ORD,\n        '\\u23AF': [0, 0, MmlNode_js_1.TEXCLASS.ORD, { stretchy: true }],\n        '\\u23B0': exports.MO.OPEN,\n        '\\u23B1': exports.MO.CLOSE,\n        '\\u2500': exports.MO.ORD,\n        '\\u25B3': exports.MO.BIN4,\n        '\\u25B5': exports.MO.BIN4,\n        '\\u25B9': exports.MO.BIN4,\n        '\\u25BD': exports.MO.BIN4,\n        '\\u25BF': exports.MO.BIN4,\n        '\\u25C3': exports.MO.BIN4,\n        '\\u25EF': exports.MO.BIN3,\n        '\\u2660': exports.MO.ORD,\n        '\\u2661': exports.MO.ORD,\n        '\\u2662': exports.MO.ORD,\n        '\\u2663': exports.MO.ORD,\n        '\\u2758': exports.MO.REL,\n        '\\u27F0': exports.MO.RELSTRETCH,\n        '\\u27F1': exports.MO.RELSTRETCH,\n        '\\u27F5': exports.MO.WIDEREL,\n        '\\u27F6': exports.MO.WIDEREL,\n        '\\u27F7': exports.MO.WIDEREL,\n        '\\u27F8': exports.MO.WIDEREL,\n        '\\u27F9': exports.MO.WIDEREL,\n        '\\u27FA': exports.MO.WIDEREL,\n        '\\u27FB': exports.MO.WIDEREL,\n        '\\u27FC': exports.MO.WIDEREL,\n        '\\u27FD': exports.MO.WIDEREL,\n        '\\u27FE': exports.MO.WIDEREL,\n        '\\u27FF': exports.MO.WIDEREL,\n        '\\u2900': exports.MO.RELACCENT,\n        '\\u2901': exports.MO.RELACCENT,\n        '\\u2902': exports.MO.RELACCENT,\n        '\\u2903': exports.MO.RELACCENT,\n        '\\u2904': exports.MO.RELACCENT,\n        '\\u2905': exports.MO.RELACCENT,\n        '\\u2906': exports.MO.RELACCENT,\n        '\\u2907': exports.MO.RELACCENT,\n        '\\u2908': exports.MO.REL,\n        '\\u2909': exports.MO.REL,\n        '\\u290A': exports.MO.RELSTRETCH,\n        '\\u290B': exports.MO.RELSTRETCH,\n        '\\u290C': exports.MO.WIDEREL,\n        '\\u290D': exports.MO.WIDEREL,\n        '\\u290E': exports.MO.WIDEREL,\n        '\\u290F': exports.MO.WIDEREL,\n        '\\u2910': exports.MO.WIDEREL,\n        '\\u2911': exports.MO.RELACCENT,\n        '\\u2912': exports.MO.RELSTRETCH,\n        '\\u2913': exports.MO.RELSTRETCH,\n        '\\u2914': exports.MO.RELACCENT,\n        '\\u2915': exports.MO.RELACCENT,\n        '\\u2916': exports.MO.RELACCENT,\n        '\\u2917': exports.MO.RELACCENT,\n        '\\u2918': exports.MO.RELACCENT,\n        '\\u2919': exports.MO.RELACCENT,\n        '\\u291A': exports.MO.RELACCENT,\n        '\\u291B': exports.MO.RELACCENT,\n        '\\u291C': exports.MO.RELACCENT,\n        '\\u291D': exports.MO.RELACCENT,\n        '\\u291E': exports.MO.RELACCENT,\n        '\\u291F': exports.MO.RELACCENT,\n        '\\u2920': exports.MO.RELACCENT,\n        '\\u2921': exports.MO.RELSTRETCH,\n        '\\u2922': exports.MO.RELSTRETCH,\n        '\\u2923': exports.MO.REL,\n        '\\u2924': exports.MO.REL,\n        '\\u2925': exports.MO.REL,\n        '\\u2926': exports.MO.REL,\n        '\\u2927': exports.MO.REL,\n        '\\u2928': exports.MO.REL,\n        '\\u2929': exports.MO.REL,\n        '\\u292A': exports.MO.REL,\n        '\\u292B': exports.MO.REL,\n        '\\u292C': exports.MO.REL,\n        '\\u292D': exports.MO.REL,\n        '\\u292E': exports.MO.REL,\n        '\\u292F': exports.MO.REL,\n        '\\u2930': exports.MO.REL,\n        '\\u2931': exports.MO.REL,\n        '\\u2932': exports.MO.REL,\n        '\\u2933': exports.MO.RELACCENT,\n        '\\u2934': exports.MO.REL,\n        '\\u2935': exports.MO.REL,\n        '\\u2936': exports.MO.REL,\n        '\\u2937': exports.MO.REL,\n        '\\u2938': exports.MO.REL,\n        '\\u2939': exports.MO.REL,\n        '\\u293A': exports.MO.RELACCENT,\n        '\\u293B': exports.MO.RELACCENT,\n        '\\u293C': exports.MO.RELACCENT,\n        '\\u293D': exports.MO.RELACCENT,\n        '\\u293E': exports.MO.REL,\n        '\\u293F': exports.MO.REL,\n        '\\u2940': exports.MO.REL,\n        '\\u2941': exports.MO.REL,\n        '\\u2942': exports.MO.RELACCENT,\n        '\\u2943': exports.MO.RELACCENT,\n        '\\u2944': exports.MO.RELACCENT,\n        '\\u2945': exports.MO.RELACCENT,\n        '\\u2946': exports.MO.RELACCENT,\n        '\\u2947': exports.MO.RELACCENT,\n        '\\u2948': exports.MO.RELACCENT,\n        '\\u2949': exports.MO.REL,\n        '\\u294A': exports.MO.RELACCENT,\n        '\\u294B': exports.MO.RELACCENT,\n        '\\u294C': exports.MO.REL,\n        '\\u294D': exports.MO.REL,\n        '\\u294E': exports.MO.WIDEREL,\n        '\\u294F': exports.MO.RELSTRETCH,\n        '\\u2950': exports.MO.WIDEREL,\n        '\\u2951': exports.MO.RELSTRETCH,\n        '\\u2952': exports.MO.WIDEREL,\n        '\\u2953': exports.MO.WIDEREL,\n        '\\u2954': exports.MO.RELSTRETCH,\n        '\\u2955': exports.MO.RELSTRETCH,\n        '\\u2956': exports.MO.RELSTRETCH,\n        '\\u2957': exports.MO.RELSTRETCH,\n        '\\u2958': exports.MO.RELSTRETCH,\n        '\\u2959': exports.MO.RELSTRETCH,\n        '\\u295A': exports.MO.WIDEREL,\n        '\\u295B': exports.MO.WIDEREL,\n        '\\u295C': exports.MO.RELSTRETCH,\n        '\\u295D': exports.MO.RELSTRETCH,\n        '\\u295E': exports.MO.WIDEREL,\n        '\\u295F': exports.MO.WIDEREL,\n        '\\u2960': exports.MO.RELSTRETCH,\n        '\\u2961': exports.MO.RELSTRETCH,\n        '\\u2962': exports.MO.RELACCENT,\n        '\\u2963': exports.MO.REL,\n        '\\u2964': exports.MO.RELACCENT,\n        '\\u2965': exports.MO.REL,\n        '\\u2966': exports.MO.RELACCENT,\n        '\\u2967': exports.MO.RELACCENT,\n        '\\u2968': exports.MO.RELACCENT,\n        '\\u2969': exports.MO.RELACCENT,\n        '\\u296A': exports.MO.RELACCENT,\n        '\\u296B': exports.MO.RELACCENT,\n        '\\u296C': exports.MO.RELACCENT,\n        '\\u296D': exports.MO.RELACCENT,\n        '\\u296E': exports.MO.RELSTRETCH,\n        '\\u296F': exports.MO.RELSTRETCH,\n        '\\u2970': exports.MO.RELACCENT,\n        '\\u2971': exports.MO.RELACCENT,\n        '\\u2972': exports.MO.RELACCENT,\n        '\\u2973': exports.MO.RELACCENT,\n        '\\u2974': exports.MO.RELACCENT,\n        '\\u2975': exports.MO.RELACCENT,\n        '\\u2976': exports.MO.RELACCENT,\n        '\\u2977': exports.MO.RELACCENT,\n        '\\u2978': exports.MO.RELACCENT,\n        '\\u2979': exports.MO.RELACCENT,\n        '\\u297A': exports.MO.RELACCENT,\n        '\\u297B': exports.MO.RELACCENT,\n        '\\u297C': exports.MO.RELACCENT,\n        '\\u297D': exports.MO.RELACCENT,\n        '\\u297E': exports.MO.REL,\n        '\\u297F': exports.MO.REL,\n        '\\u2981': exports.MO.BIN3,\n        '\\u2982': exports.MO.BIN3,\n        '\\u2999': exports.MO.BIN3,\n        '\\u299A': exports.MO.BIN3,\n        '\\u299B': exports.MO.BIN3,\n        '\\u299C': exports.MO.BIN3,\n        '\\u299D': exports.MO.BIN3,\n        '\\u299E': exports.MO.BIN3,\n        '\\u299F': exports.MO.BIN3,\n        '\\u29A0': exports.MO.BIN3,\n        '\\u29A1': exports.MO.BIN3,\n        '\\u29A2': exports.MO.BIN3,\n        '\\u29A3': exports.MO.BIN3,\n        '\\u29A4': exports.MO.BIN3,\n        '\\u29A5': exports.MO.BIN3,\n        '\\u29A6': exports.MO.BIN3,\n        '\\u29A7': exports.MO.BIN3,\n        '\\u29A8': exports.MO.BIN3,\n        '\\u29A9': exports.MO.BIN3,\n        '\\u29AA': exports.MO.BIN3,\n        '\\u29AB': exports.MO.BIN3,\n        '\\u29AC': exports.MO.BIN3,\n        '\\u29AD': exports.MO.BIN3,\n        '\\u29AE': exports.MO.BIN3,\n        '\\u29AF': exports.MO.BIN3,\n        '\\u29B0': exports.MO.BIN3,\n        '\\u29B1': exports.MO.BIN3,\n        '\\u29B2': exports.MO.BIN3,\n        '\\u29B3': exports.MO.BIN3,\n        '\\u29B4': exports.MO.BIN3,\n        '\\u29B5': exports.MO.BIN3,\n        '\\u29B6': exports.MO.BIN4,\n        '\\u29B7': exports.MO.BIN4,\n        '\\u29B8': exports.MO.BIN4,\n        '\\u29B9': exports.MO.BIN4,\n        '\\u29BA': exports.MO.BIN4,\n        '\\u29BB': exports.MO.BIN4,\n        '\\u29BC': exports.MO.BIN4,\n        '\\u29BD': exports.MO.BIN4,\n        '\\u29BE': exports.MO.BIN4,\n        '\\u29BF': exports.MO.BIN4,\n        '\\u29C0': exports.MO.REL,\n        '\\u29C1': exports.MO.REL,\n        '\\u29C2': exports.MO.BIN3,\n        '\\u29C3': exports.MO.BIN3,\n        '\\u29C4': exports.MO.BIN4,\n        '\\u29C5': exports.MO.BIN4,\n        '\\u29C6': exports.MO.BIN4,\n        '\\u29C7': exports.MO.BIN4,\n        '\\u29C8': exports.MO.BIN4,\n        '\\u29C9': exports.MO.BIN3,\n        '\\u29CA': exports.MO.BIN3,\n        '\\u29CB': exports.MO.BIN3,\n        '\\u29CC': exports.MO.BIN3,\n        '\\u29CD': exports.MO.BIN3,\n        '\\u29CE': exports.MO.REL,\n        '\\u29CF': exports.MO.REL,\n        '\\u29CF\\u0338': exports.MO.REL,\n        '\\u29D0': exports.MO.REL,\n        '\\u29D0\\u0338': exports.MO.REL,\n        '\\u29D1': exports.MO.REL,\n        '\\u29D2': exports.MO.REL,\n        '\\u29D3': exports.MO.REL,\n        '\\u29D4': exports.MO.REL,\n        '\\u29D5': exports.MO.REL,\n        '\\u29D6': exports.MO.BIN4,\n        '\\u29D7': exports.MO.BIN4,\n        '\\u29D8': exports.MO.BIN3,\n        '\\u29D9': exports.MO.BIN3,\n        '\\u29DB': exports.MO.BIN3,\n        '\\u29DC': exports.MO.BIN3,\n        '\\u29DD': exports.MO.BIN3,\n        '\\u29DE': exports.MO.REL,\n        '\\u29DF': exports.MO.BIN3,\n        '\\u29E0': exports.MO.BIN3,\n        '\\u29E1': exports.MO.REL,\n        '\\u29E2': exports.MO.BIN4,\n        '\\u29E3': exports.MO.REL,\n        '\\u29E4': exports.MO.REL,\n        '\\u29E5': exports.MO.REL,\n        '\\u29E6': exports.MO.REL,\n        '\\u29E7': exports.MO.BIN3,\n        '\\u29E8': exports.MO.BIN3,\n        '\\u29E9': exports.MO.BIN3,\n        '\\u29EA': exports.MO.BIN3,\n        '\\u29EB': exports.MO.BIN3,\n        '\\u29EC': exports.MO.BIN3,\n        '\\u29ED': exports.MO.BIN3,\n        '\\u29EE': exports.MO.BIN3,\n        '\\u29EF': exports.MO.BIN3,\n        '\\u29F0': exports.MO.BIN3,\n        '\\u29F1': exports.MO.BIN3,\n        '\\u29F2': exports.MO.BIN3,\n        '\\u29F3': exports.MO.BIN3,\n        '\\u29F4': exports.MO.REL,\n        '\\u29F5': exports.MO.BIN4,\n        '\\u29F6': exports.MO.BIN4,\n        '\\u29F7': exports.MO.BIN4,\n        '\\u29F8': exports.MO.BIN3,\n        '\\u29F9': exports.MO.BIN3,\n        '\\u29FA': exports.MO.BIN3,\n        '\\u29FB': exports.MO.BIN3,\n        '\\u29FE': exports.MO.BIN4,\n        '\\u29FF': exports.MO.BIN4,\n        '\\u2A1D': exports.MO.BIN3,\n        '\\u2A1E': exports.MO.BIN3,\n        '\\u2A1F': exports.MO.BIN3,\n        '\\u2A20': exports.MO.BIN3,\n        '\\u2A21': exports.MO.BIN3,\n        '\\u2A22': exports.MO.BIN4,\n        '\\u2A23': exports.MO.BIN4,\n        '\\u2A24': exports.MO.BIN4,\n        '\\u2A25': exports.MO.BIN4,\n        '\\u2A26': exports.MO.BIN4,\n        '\\u2A27': exports.MO.BIN4,\n        '\\u2A28': exports.MO.BIN4,\n        '\\u2A29': exports.MO.BIN4,\n        '\\u2A2A': exports.MO.BIN4,\n        '\\u2A2B': exports.MO.BIN4,\n        '\\u2A2C': exports.MO.BIN4,\n        '\\u2A2D': exports.MO.BIN4,\n        '\\u2A2E': exports.MO.BIN4,\n        '\\u2A2F': exports.MO.BIN4,\n        '\\u2A30': exports.MO.BIN4,\n        '\\u2A31': exports.MO.BIN4,\n        '\\u2A32': exports.MO.BIN4,\n        '\\u2A33': exports.MO.BIN4,\n        '\\u2A34': exports.MO.BIN4,\n        '\\u2A35': exports.MO.BIN4,\n        '\\u2A36': exports.MO.BIN4,\n        '\\u2A37': exports.MO.BIN4,\n        '\\u2A38': exports.MO.BIN4,\n        '\\u2A39': exports.MO.BIN4,\n        '\\u2A3A': exports.MO.BIN4,\n        '\\u2A3B': exports.MO.BIN4,\n        '\\u2A3C': exports.MO.BIN4,\n        '\\u2A3D': exports.MO.BIN4,\n        '\\u2A3E': exports.MO.BIN4,\n        '\\u2A3F': exports.MO.BIN4,\n        '\\u2A40': exports.MO.BIN4,\n        '\\u2A41': exports.MO.BIN4,\n        '\\u2A42': exports.MO.BIN4,\n        '\\u2A43': exports.MO.BIN4,\n        '\\u2A44': exports.MO.BIN4,\n        '\\u2A45': exports.MO.BIN4,\n        '\\u2A46': exports.MO.BIN4,\n        '\\u2A47': exports.MO.BIN4,\n        '\\u2A48': exports.MO.BIN4,\n        '\\u2A49': exports.MO.BIN4,\n        '\\u2A4A': exports.MO.BIN4,\n        '\\u2A4B': exports.MO.BIN4,\n        '\\u2A4C': exports.MO.BIN4,\n        '\\u2A4D': exports.MO.BIN4,\n        '\\u2A4E': exports.MO.BIN4,\n        '\\u2A4F': exports.MO.BIN4,\n        '\\u2A50': exports.MO.BIN4,\n        '\\u2A51': exports.MO.BIN4,\n        '\\u2A52': exports.MO.BIN4,\n        '\\u2A53': exports.MO.BIN4,\n        '\\u2A54': exports.MO.BIN4,\n        '\\u2A55': exports.MO.BIN4,\n        '\\u2A56': exports.MO.BIN4,\n        '\\u2A57': exports.MO.BIN4,\n        '\\u2A58': exports.MO.BIN4,\n        '\\u2A59': exports.MO.REL,\n        '\\u2A5A': exports.MO.BIN4,\n        '\\u2A5B': exports.MO.BIN4,\n        '\\u2A5C': exports.MO.BIN4,\n        '\\u2A5D': exports.MO.BIN4,\n        '\\u2A5E': exports.MO.BIN4,\n        '\\u2A5F': exports.MO.BIN4,\n        '\\u2A60': exports.MO.BIN4,\n        '\\u2A61': exports.MO.BIN4,\n        '\\u2A62': exports.MO.BIN4,\n        '\\u2A63': exports.MO.BIN4,\n        '\\u2A64': exports.MO.BIN4,\n        '\\u2A65': exports.MO.BIN4,\n        '\\u2A66': exports.MO.REL,\n        '\\u2A67': exports.MO.REL,\n        '\\u2A68': exports.MO.REL,\n        '\\u2A69': exports.MO.REL,\n        '\\u2A6A': exports.MO.REL,\n        '\\u2A6B': exports.MO.REL,\n        '\\u2A6C': exports.MO.REL,\n        '\\u2A6D': exports.MO.REL,\n        '\\u2A6E': exports.MO.REL,\n        '\\u2A6F': exports.MO.REL,\n        '\\u2A70': exports.MO.REL,\n        '\\u2A71': exports.MO.BIN4,\n        '\\u2A72': exports.MO.BIN4,\n        '\\u2A73': exports.MO.REL,\n        '\\u2A74': exports.MO.REL,\n        '\\u2A75': exports.MO.REL,\n        '\\u2A76': exports.MO.REL,\n        '\\u2A77': exports.MO.REL,\n        '\\u2A78': exports.MO.REL,\n        '\\u2A79': exports.MO.REL,\n        '\\u2A7A': exports.MO.REL,\n        '\\u2A7B': exports.MO.REL,\n        '\\u2A7C': exports.MO.REL,\n        '\\u2A7D': exports.MO.REL,\n        '\\u2A7D\\u0338': exports.MO.REL,\n        '\\u2A7E': exports.MO.REL,\n        '\\u2A7E\\u0338': exports.MO.REL,\n        '\\u2A7F': exports.MO.REL,\n        '\\u2A80': exports.MO.REL,\n        '\\u2A81': exports.MO.REL,\n        '\\u2A82': exports.MO.REL,\n        '\\u2A83': exports.MO.REL,\n        '\\u2A84': exports.MO.REL,\n        '\\u2A85': exports.MO.REL,\n        '\\u2A86': exports.MO.REL,\n        '\\u2A87': exports.MO.REL,\n        '\\u2A88': exports.MO.REL,\n        '\\u2A89': exports.MO.REL,\n        '\\u2A8A': exports.MO.REL,\n        '\\u2A8B': exports.MO.REL,\n        '\\u2A8C': exports.MO.REL,\n        '\\u2A8D': exports.MO.REL,\n        '\\u2A8E': exports.MO.REL,\n        '\\u2A8F': exports.MO.REL,\n        '\\u2A90': exports.MO.REL,\n        '\\u2A91': exports.MO.REL,\n        '\\u2A92': exports.MO.REL,\n        '\\u2A93': exports.MO.REL,\n        '\\u2A94': exports.MO.REL,\n        '\\u2A95': exports.MO.REL,\n        '\\u2A96': exports.MO.REL,\n        '\\u2A97': exports.MO.REL,\n        '\\u2A98': exports.MO.REL,\n        '\\u2A99': exports.MO.REL,\n        '\\u2A9A': exports.MO.REL,\n        '\\u2A9B': exports.MO.REL,\n        '\\u2A9C': exports.MO.REL,\n        '\\u2A9D': exports.MO.REL,\n        '\\u2A9E': exports.MO.REL,\n        '\\u2A9F': exports.MO.REL,\n        '\\u2AA0': exports.MO.REL,\n        '\\u2AA1': exports.MO.REL,\n        '\\u2AA1\\u0338': exports.MO.REL,\n        '\\u2AA2': exports.MO.REL,\n        '\\u2AA2\\u0338': exports.MO.REL,\n        '\\u2AA3': exports.MO.REL,\n        '\\u2AA4': exports.MO.REL,\n        '\\u2AA5': exports.MO.REL,\n        '\\u2AA6': exports.MO.REL,\n        '\\u2AA7': exports.MO.REL,\n        '\\u2AA8': exports.MO.REL,\n        '\\u2AA9': exports.MO.REL,\n        '\\u2AAA': exports.MO.REL,\n        '\\u2AAB': exports.MO.REL,\n        '\\u2AAC': exports.MO.REL,\n        '\\u2AAD': exports.MO.REL,\n        '\\u2AAE': exports.MO.REL,\n        '\\u2AAF': exports.MO.REL,\n        '\\u2AAF\\u0338': exports.MO.REL,\n        '\\u2AB0': exports.MO.REL,\n        '\\u2AB0\\u0338': exports.MO.REL,\n        '\\u2AB1': exports.MO.REL,\n        '\\u2AB2': exports.MO.REL,\n        '\\u2AB3': exports.MO.REL,\n        '\\u2AB4': exports.MO.REL,\n        '\\u2AB5': exports.MO.REL,\n        '\\u2AB6': exports.MO.REL,\n        '\\u2AB7': exports.MO.REL,\n        '\\u2AB8': exports.MO.REL,\n        '\\u2AB9': exports.MO.REL,\n        '\\u2ABA': exports.MO.REL,\n        '\\u2ABB': exports.MO.REL,\n        '\\u2ABC': exports.MO.REL,\n        '\\u2ABD': exports.MO.REL,\n        '\\u2ABE': exports.MO.REL,\n        '\\u2ABF': exports.MO.REL,\n        '\\u2AC0': exports.MO.REL,\n        '\\u2AC1': exports.MO.REL,\n        '\\u2AC2': exports.MO.REL,\n        '\\u2AC3': exports.MO.REL,\n        '\\u2AC4': exports.MO.REL,\n        '\\u2AC5': exports.MO.REL,\n        '\\u2AC6': exports.MO.REL,\n        '\\u2AC7': exports.MO.REL,\n        '\\u2AC8': exports.MO.REL,\n        '\\u2AC9': exports.MO.REL,\n        '\\u2ACA': exports.MO.REL,\n        '\\u2ACB': exports.MO.REL,\n        '\\u2ACC': exports.MO.REL,\n        '\\u2ACD': exports.MO.REL,\n        '\\u2ACE': exports.MO.REL,\n        '\\u2ACF': exports.MO.REL,\n        '\\u2AD0': exports.MO.REL,\n        '\\u2AD1': exports.MO.REL,\n        '\\u2AD2': exports.MO.REL,\n        '\\u2AD3': exports.MO.REL,\n        '\\u2AD4': exports.MO.REL,\n        '\\u2AD5': exports.MO.REL,\n        '\\u2AD6': exports.MO.REL,\n        '\\u2AD7': exports.MO.REL,\n        '\\u2AD8': exports.MO.REL,\n        '\\u2AD9': exports.MO.REL,\n        '\\u2ADA': exports.MO.REL,\n        '\\u2ADB': exports.MO.REL,\n        '\\u2ADD': exports.MO.REL,\n        '\\u2ADD\\u0338': exports.MO.REL,\n        '\\u2ADE': exports.MO.REL,\n        '\\u2ADF': exports.MO.REL,\n        '\\u2AE0': exports.MO.REL,\n        '\\u2AE1': exports.MO.REL,\n        '\\u2AE2': exports.MO.REL,\n        '\\u2AE3': exports.MO.REL,\n        '\\u2AE4': exports.MO.REL,\n        '\\u2AE5': exports.MO.REL,\n        '\\u2AE6': exports.MO.REL,\n        '\\u2AE7': exports.MO.REL,\n        '\\u2AE8': exports.MO.REL,\n        '\\u2AE9': exports.MO.REL,\n        '\\u2AEA': exports.MO.REL,\n        '\\u2AEB': exports.MO.REL,\n        '\\u2AEC': exports.MO.REL,\n        '\\u2AED': exports.MO.REL,\n        '\\u2AEE': exports.MO.REL,\n        '\\u2AEF': exports.MO.REL,\n        '\\u2AF0': exports.MO.REL,\n        '\\u2AF1': exports.MO.REL,\n        '\\u2AF2': exports.MO.REL,\n        '\\u2AF3': exports.MO.REL,\n        '\\u2AF4': exports.MO.BIN4,\n        '\\u2AF5': exports.MO.BIN4,\n        '\\u2AF6': exports.MO.BIN4,\n        '\\u2AF7': exports.MO.REL,\n        '\\u2AF8': exports.MO.REL,\n        '\\u2AF9': exports.MO.REL,\n        '\\u2AFA': exports.MO.REL,\n        '\\u2AFB': exports.MO.BIN4,\n        '\\u2AFD': exports.MO.BIN4,\n        '\\u2AFE': exports.MO.BIN3,\n        '\\u2B45': exports.MO.RELSTRETCH,\n        '\\u2B46': exports.MO.RELSTRETCH,\n        '\\u3008': exports.MO.OPEN,\n        '\\u3009': exports.MO.CLOSE,\n        '\\uFE37': exports.MO.WIDEACCENT,\n        '\\uFE38': exports.MO.WIDEACCENT,\n    }\n};\nexports.OPTABLE.infix[\"^\"] = exports.MO.WIDEREL;\nexports.OPTABLE.infix._ = exports.MO.WIDEREL;\nexports.OPTABLE.infix[\"⫝̸\"] = exports.MO.REL;\n//# sourceMappingURL=OperatorDictionary.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/core/MmlTree/OperatorDictionary.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/core/Tree/Factory.js":
/*!***********************************************************!*\
  !*** ./node_modules/mathjax-full/js/core/Tree/Factory.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbstractFactory = void 0;\nvar AbstractFactory = (function () {\n    function AbstractFactory(nodes) {\n        var e_1, _a;\n        if (nodes === void 0) { nodes = null; }\n        this.defaultKind = 'unknown';\n        this.nodeMap = new Map();\n        this.node = {};\n        if (nodes === null) {\n            nodes = this.constructor.defaultNodes;\n        }\n        try {\n            for (var _b = __values(Object.keys(nodes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var kind = _c.value;\n                this.setNodeClass(kind, nodes[kind]);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    AbstractFactory.prototype.create = function (kind) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        return (this.node[kind] || this.node[this.defaultKind]).apply(void 0, __spreadArray([], __read(args), false));\n    };\n    AbstractFactory.prototype.setNodeClass = function (kind, nodeClass) {\n        this.nodeMap.set(kind, nodeClass);\n        var THIS = this;\n        var KIND = this.nodeMap.get(kind);\n        this.node[kind] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (KIND.bind.apply(KIND, __spreadArray([void 0, THIS], __read(args), false)))();\n        };\n    };\n    AbstractFactory.prototype.getNodeClass = function (kind) {\n        return this.nodeMap.get(kind);\n    };\n    AbstractFactory.prototype.deleteNodeClass = function (kind) {\n        this.nodeMap.delete(kind);\n        delete this.node[kind];\n    };\n    AbstractFactory.prototype.nodeIsKind = function (node, kind) {\n        return (node instanceof this.getNodeClass(kind));\n    };\n    AbstractFactory.prototype.getKinds = function () {\n        return Array.from(this.nodeMap.keys());\n    };\n    AbstractFactory.defaultNodes = {};\n    return AbstractFactory;\n}());\nexports.AbstractFactory = AbstractFactory;\n//# sourceMappingURL=Factory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2NvcmUvVHJlZS9GYWN0b3J5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsTUFBTTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RSxPQUFPO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0UsVUFBVTtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHVCQUF1QjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qix1QkFBdUI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCx1QkFBdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9jb3JlL1RyZWUvRmFjdG9yeS5qcz80MGY5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fdmFsdWVzID0gKHRoaXMgJiYgdGhpcy5fX3ZhbHVlcykgfHwgZnVuY3Rpb24obykge1xuICAgIHZhciBzID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIFN5bWJvbC5pdGVyYXRvciwgbSA9IHMgJiYgb1tzXSwgaSA9IDA7XG4gICAgaWYgKG0pIHJldHVybiBtLmNhbGwobyk7XG4gICAgaWYgKG8gJiYgdHlwZW9mIG8ubGVuZ3RoID09PSBcIm51bWJlclwiKSByZXR1cm4ge1xuICAgICAgICBuZXh0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAobyAmJiBpID49IG8ubGVuZ3RoKSBvID0gdm9pZCAwO1xuICAgICAgICAgICAgcmV0dXJuIHsgdmFsdWU6IG8gJiYgb1tpKytdLCBkb25lOiAhbyB9O1xuICAgICAgICB9XG4gICAgfTtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHMgPyBcIk9iamVjdCBpcyBub3QgaXRlcmFibGUuXCIgOiBcIlN5bWJvbC5pdGVyYXRvciBpcyBub3QgZGVmaW5lZC5cIik7XG59O1xudmFyIF9fcmVhZCA9ICh0aGlzICYmIHRoaXMuX19yZWFkKSB8fCBmdW5jdGlvbiAobywgbikge1xuICAgIHZhciBtID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9bU3ltYm9sLml0ZXJhdG9yXTtcbiAgICBpZiAoIW0pIHJldHVybiBvO1xuICAgIHZhciBpID0gbS5jYWxsKG8pLCByLCBhciA9IFtdLCBlO1xuICAgIHRyeSB7XG4gICAgICAgIHdoaWxlICgobiA9PT0gdm9pZCAwIHx8IG4tLSA+IDApICYmICEociA9IGkubmV4dCgpKS5kb25lKSBhci5wdXNoKHIudmFsdWUpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHsgZSA9IHsgZXJyb3I6IGVycm9yIH07IH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChyICYmICFyLmRvbmUgJiYgKG0gPSBpW1wicmV0dXJuXCJdKSkgbS5jYWxsKGkpO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkgeyBpZiAoZSkgdGhyb3cgZS5lcnJvcjsgfVxuICAgIH1cbiAgICByZXR1cm4gYXI7XG59O1xudmFyIF9fc3ByZWFkQXJyYXkgPSAodGhpcyAmJiB0aGlzLl9fc3ByZWFkQXJyYXkpIHx8IGZ1bmN0aW9uICh0bywgZnJvbSwgcGFjaykge1xuICAgIGlmIChwYWNrIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIGZvciAodmFyIGkgPSAwLCBsID0gZnJvbS5sZW5ndGgsIGFyOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGlmIChhciB8fCAhKGkgaW4gZnJvbSkpIHtcbiAgICAgICAgICAgIGlmICghYXIpIGFyID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSwgMCwgaSk7XG4gICAgICAgICAgICBhcltpXSA9IGZyb21baV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRvLmNvbmNhdChhciB8fCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tKSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BYnN0cmFjdEZhY3RvcnkgPSB2b2lkIDA7XG52YXIgQWJzdHJhY3RGYWN0b3J5ID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBBYnN0cmFjdEZhY3Rvcnkobm9kZXMpIHtcbiAgICAgICAgdmFyIGVfMSwgX2E7XG4gICAgICAgIGlmIChub2RlcyA9PT0gdm9pZCAwKSB7IG5vZGVzID0gbnVsbDsgfVxuICAgICAgICB0aGlzLmRlZmF1bHRLaW5kID0gJ3Vua25vd24nO1xuICAgICAgICB0aGlzLm5vZGVNYXAgPSBuZXcgTWFwKCk7XG4gICAgICAgIHRoaXMubm9kZSA9IHt9O1xuICAgICAgICBpZiAobm9kZXMgPT09IG51bGwpIHtcbiAgICAgICAgICAgIG5vZGVzID0gdGhpcy5jb25zdHJ1Y3Rvci5kZWZhdWx0Tm9kZXM7XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGZvciAodmFyIF9iID0gX192YWx1ZXMoT2JqZWN0LmtleXMobm9kZXMpKSwgX2MgPSBfYi5uZXh0KCk7ICFfYy5kb25lOyBfYyA9IF9iLm5leHQoKSkge1xuICAgICAgICAgICAgICAgIHZhciBraW5kID0gX2MudmFsdWU7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXROb2RlQ2xhc3Moa2luZCwgbm9kZXNba2luZF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlXzFfMSkgeyBlXzEgPSB7IGVycm9yOiBlXzFfMSB9OyB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiAoX2MgJiYgIV9jLmRvbmUgJiYgKF9hID0gX2IucmV0dXJuKSkgX2EuY2FsbChfYik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmaW5hbGx5IHsgaWYgKGVfMSkgdGhyb3cgZV8xLmVycm9yOyB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgQWJzdHJhY3RGYWN0b3J5LnByb3RvdHlwZS5jcmVhdGUgPSBmdW5jdGlvbiAoa2luZCkge1xuICAgICAgICB2YXIgYXJncyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBfaSA9IDE7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgYXJnc1tfaSAtIDFdID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKHRoaXMubm9kZVtraW5kXSB8fCB0aGlzLm5vZGVbdGhpcy5kZWZhdWx0S2luZF0pLmFwcGx5KHZvaWQgMCwgX19zcHJlYWRBcnJheShbXSwgX19yZWFkKGFyZ3MpLCBmYWxzZSkpO1xuICAgIH07XG4gICAgQWJzdHJhY3RGYWN0b3J5LnByb3RvdHlwZS5zZXROb2RlQ2xhc3MgPSBmdW5jdGlvbiAoa2luZCwgbm9kZUNsYXNzKSB7XG4gICAgICAgIHRoaXMubm9kZU1hcC5zZXQoa2luZCwgbm9kZUNsYXNzKTtcbiAgICAgICAgdmFyIFRISVMgPSB0aGlzO1xuICAgICAgICB2YXIgS0lORCA9IHRoaXMubm9kZU1hcC5nZXQoa2luZCk7XG4gICAgICAgIHRoaXMubm9kZVtraW5kXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBhcmdzID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBuZXcgKEtJTkQuYmluZC5hcHBseShLSU5ELCBfX3NwcmVhZEFycmF5KFt2b2lkIDAsIFRISVNdLCBfX3JlYWQoYXJncyksIGZhbHNlKSkpKCk7XG4gICAgICAgIH07XG4gICAgfTtcbiAgICBBYnN0cmFjdEZhY3RvcnkucHJvdG90eXBlLmdldE5vZGVDbGFzcyA9IGZ1bmN0aW9uIChraW5kKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm5vZGVNYXAuZ2V0KGtpbmQpO1xuICAgIH07XG4gICAgQWJzdHJhY3RGYWN0b3J5LnByb3RvdHlwZS5kZWxldGVOb2RlQ2xhc3MgPSBmdW5jdGlvbiAoa2luZCkge1xuICAgICAgICB0aGlzLm5vZGVNYXAuZGVsZXRlKGtpbmQpO1xuICAgICAgICBkZWxldGUgdGhpcy5ub2RlW2tpbmRdO1xuICAgIH07XG4gICAgQWJzdHJhY3RGYWN0b3J5LnByb3RvdHlwZS5ub2RlSXNLaW5kID0gZnVuY3Rpb24gKG5vZGUsIGtpbmQpIHtcbiAgICAgICAgcmV0dXJuIChub2RlIGluc3RhbmNlb2YgdGhpcy5nZXROb2RlQ2xhc3Moa2luZCkpO1xuICAgIH07XG4gICAgQWJzdHJhY3RGYWN0b3J5LnByb3RvdHlwZS5nZXRLaW5kcyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIEFycmF5LmZyb20odGhpcy5ub2RlTWFwLmtleXMoKSk7XG4gICAgfTtcbiAgICBBYnN0cmFjdEZhY3RvcnkuZGVmYXVsdE5vZGVzID0ge307XG4gICAgcmV0dXJuIEFic3RyYWN0RmFjdG9yeTtcbn0oKSk7XG5leHBvcnRzLkFic3RyYWN0RmFjdG9yeSA9IEFic3RyYWN0RmFjdG9yeTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUZhY3RvcnkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/core/Tree/Factory.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/core/Tree/Node.js":
/*!********************************************************!*\
  !*** ./node_modules/mathjax-full/js/core/Tree/Node.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbstractEmptyNode = exports.AbstractNode = void 0;\nvar AbstractNode = (function () {\n    function AbstractNode(factory, properties, children) {\n        var e_1, _a;\n        if (properties === void 0) { properties = {}; }\n        if (children === void 0) { children = []; }\n        this.factory = factory;\n        this.parent = null;\n        this.properties = {};\n        this.childNodes = [];\n        try {\n            for (var _b = __values(Object.keys(properties)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var name_1 = _c.value;\n                this.setProperty(name_1, properties[name_1]);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (children.length) {\n            this.setChildren(children);\n        }\n    }\n    Object.defineProperty(AbstractNode.prototype, \"kind\", {\n        get: function () {\n            return 'unknown';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractNode.prototype.setProperty = function (name, value) {\n        this.properties[name] = value;\n    };\n    AbstractNode.prototype.getProperty = function (name) {\n        return this.properties[name];\n    };\n    AbstractNode.prototype.getPropertyNames = function () {\n        return Object.keys(this.properties);\n    };\n    AbstractNode.prototype.getAllProperties = function () {\n        return this.properties;\n    };\n    AbstractNode.prototype.removeProperty = function () {\n        var e_2, _a;\n        var names = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            names[_i] = arguments[_i];\n        }\n        try {\n            for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {\n                var name_2 = names_1_1.value;\n                delete this.properties[name_2];\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    AbstractNode.prototype.isKind = function (kind) {\n        return this.factory.nodeIsKind(this, kind);\n    };\n    AbstractNode.prototype.setChildren = function (children) {\n        var e_3, _a;\n        this.childNodes = [];\n        try {\n            for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                var child = children_1_1.value;\n                this.appendChild(child);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    AbstractNode.prototype.appendChild = function (child) {\n        this.childNodes.push(child);\n        child.parent = this;\n        return child;\n    };\n    AbstractNode.prototype.replaceChild = function (newChild, oldChild) {\n        var i = this.childIndex(oldChild);\n        if (i !== null) {\n            this.childNodes[i] = newChild;\n            newChild.parent = this;\n            oldChild.parent = null;\n        }\n        return newChild;\n    };\n    AbstractNode.prototype.removeChild = function (child) {\n        var i = this.childIndex(child);\n        if (i !== null) {\n            this.childNodes.splice(i, 1);\n            child.parent = null;\n        }\n        return child;\n    };\n    AbstractNode.prototype.childIndex = function (node) {\n        var i = this.childNodes.indexOf(node);\n        return (i === -1 ? null : i);\n    };\n    AbstractNode.prototype.copy = function () {\n        var e_4, _a;\n        var node = this.factory.create(this.kind);\n        node.properties = __assign({}, this.properties);\n        try {\n            for (var _b = __values(this.childNodes || []), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                if (child) {\n                    node.appendChild(child.copy());\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return node;\n    };\n    AbstractNode.prototype.findNodes = function (kind) {\n        var nodes = [];\n        this.walkTree(function (node) {\n            if (node.isKind(kind)) {\n                nodes.push(node);\n            }\n        });\n        return nodes;\n    };\n    AbstractNode.prototype.walkTree = function (func, data) {\n        var e_5, _a;\n        func(this, data);\n        try {\n            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                if (child) {\n                    child.walkTree(func, data);\n                }\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        return data;\n    };\n    AbstractNode.prototype.toString = function () {\n        return this.kind + '(' + this.childNodes.join(',') + ')';\n    };\n    return AbstractNode;\n}());\nexports.AbstractNode = AbstractNode;\nvar AbstractEmptyNode = (function (_super) {\n    __extends(AbstractEmptyNode, _super);\n    function AbstractEmptyNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AbstractEmptyNode.prototype.setChildren = function (_children) {\n    };\n    AbstractEmptyNode.prototype.appendChild = function (child) {\n        return child;\n    };\n    AbstractEmptyNode.prototype.replaceChild = function (_newChild, oldChild) {\n        return oldChild;\n    };\n    AbstractEmptyNode.prototype.childIndex = function (_node) {\n        return null;\n    };\n    AbstractEmptyNode.prototype.walkTree = function (func, data) {\n        func(this, data);\n        return data;\n    };\n    AbstractEmptyNode.prototype.toString = function () {\n        return this.kind;\n    };\n    return AbstractEmptyNode;\n}(AbstractNode));\nexports.AbstractEmptyNode = AbstractEmptyNode;\n//# sourceMappingURL=Node.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/core/Tree/Node.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/AllPackages.js":
/*!***************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/AllPackages.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AllPackages = void 0;\n__webpack_require__(/*! ./base/BaseConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseConfiguration.js\");\n__webpack_require__(/*! ./action/ActionConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/action/ActionConfiguration.js\");\n__webpack_require__(/*! ./ams/AmsConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/ams/AmsConfiguration.js\");\n__webpack_require__(/*! ./amscd/AmsCdConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/amscd/AmsCdConfiguration.js\");\n__webpack_require__(/*! ./bbox/BboxConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/bbox/BboxConfiguration.js\");\n__webpack_require__(/*! ./boldsymbol/BoldsymbolConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/boldsymbol/BoldsymbolConfiguration.js\");\n__webpack_require__(/*! ./braket/BraketConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/braket/BraketConfiguration.js\");\n__webpack_require__(/*! ./bussproofs/BussproofsConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsConfiguration.js\");\n__webpack_require__(/*! ./cancel/CancelConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/cancel/CancelConfiguration.js\");\n__webpack_require__(/*! ./cases/CasesConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/cases/CasesConfiguration.js\");\n__webpack_require__(/*! ./centernot/CenternotConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/centernot/CenternotConfiguration.js\");\n__webpack_require__(/*! ./color/ColorConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/color/ColorConfiguration.js\");\n__webpack_require__(/*! ./colorv2/ColorV2Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/colorv2/ColorV2Configuration.js\");\n__webpack_require__(/*! ./colortbl/ColortblConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/colortbl/ColortblConfiguration.js\");\n__webpack_require__(/*! ./configmacros/ConfigMacrosConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/configmacros/ConfigMacrosConfiguration.js\");\n__webpack_require__(/*! ./empheq/EmpheqConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/empheq/EmpheqConfiguration.js\");\n__webpack_require__(/*! ./enclose/EncloseConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/enclose/EncloseConfiguration.js\");\n__webpack_require__(/*! ./extpfeil/ExtpfeilConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/extpfeil/ExtpfeilConfiguration.js\");\n__webpack_require__(/*! ./gensymb/GensymbConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/gensymb/GensymbConfiguration.js\");\n__webpack_require__(/*! ./html/HtmlConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/html/HtmlConfiguration.js\");\n__webpack_require__(/*! ./mathtools/MathtoolsConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsConfiguration.js\");\n__webpack_require__(/*! ./mhchem/MhchemConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/mhchem/MhchemConfiguration.js\");\n__webpack_require__(/*! ./newcommand/NewcommandConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandConfiguration.js\");\n__webpack_require__(/*! ./noerrors/NoErrorsConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/noerrors/NoErrorsConfiguration.js\");\n__webpack_require__(/*! ./noundefined/NoUndefinedConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/noundefined/NoUndefinedConfiguration.js\");\n__webpack_require__(/*! ./physics/PhysicsConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/physics/PhysicsConfiguration.js\");\n__webpack_require__(/*! ./setoptions/SetOptionsConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/setoptions/SetOptionsConfiguration.js\");\n__webpack_require__(/*! ./tagformat/TagFormatConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/tagformat/TagFormatConfiguration.js\");\n__webpack_require__(/*! ./textcomp/TextcompConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/textcomp/TextcompConfiguration.js\");\n__webpack_require__(/*! ./textmacros/TextMacrosConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/textmacros/TextMacrosConfiguration.js\");\n__webpack_require__(/*! ./upgreek/UpgreekConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/upgreek/UpgreekConfiguration.js\");\n__webpack_require__(/*! ./unicode/UnicodeConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/unicode/UnicodeConfiguration.js\");\n__webpack_require__(/*! ./verb/VerbConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/verb/VerbConfiguration.js\");\nif (typeof MathJax !== 'undefined' && MathJax.loader) {\n    MathJax.loader.preLoad('[tex]/action', '[tex]/ams', '[tex]/amscd', '[tex]/bbox', '[tex]/boldsymbol', '[tex]/braket', '[tex]/bussproofs', '[tex]/cancel', '[tex]/cases', '[tex]/centernot', '[tex]/color', '[tex]/colorv2', '[tex]/colortbl', '[tex]/empheq', '[tex]/enclose', '[tex]/extpfeil', '[tex]/gensymb', '[tex]/html', '[tex]/mathtools', '[tex]/mhchem', '[tex]/newcommand', '[tex]/noerrors', '[tex]/noundefined', '[tex]/physics', '[tex]/upgreek', '[tex]/unicode', '[tex]/verb', '[tex]/configmacros', '[tex]/tagformat', '[tex]/textcomp', '[tex]/textmacros', '[tex]/setoptions');\n}\nexports.AllPackages = [\n    'base',\n    'action',\n    'ams',\n    'amscd',\n    'bbox',\n    'boldsymbol',\n    'braket',\n    'bussproofs',\n    'cancel',\n    'cases',\n    'centernot',\n    'color',\n    'colortbl',\n    'empheq',\n    'enclose',\n    'extpfeil',\n    'gensymb',\n    'html',\n    'mathtools',\n    'mhchem',\n    'newcommand',\n    'noerrors',\n    'noundefined',\n    'upgreek',\n    'unicode',\n    'verb',\n    'configmacros',\n    'tagformat',\n    'textcomp',\n    'textmacros'\n];\n//# sourceMappingURL=AllPackages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9BbGxQYWNrYWdlcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkIsbUJBQU8sQ0FBQyx1R0FBNkI7QUFDckMsbUJBQU8sQ0FBQywrR0FBaUM7QUFDekMsbUJBQU8sQ0FBQyxtR0FBMkI7QUFDbkMsbUJBQU8sQ0FBQywyR0FBK0I7QUFDdkMsbUJBQU8sQ0FBQyx1R0FBNkI7QUFDckMsbUJBQU8sQ0FBQywrSEFBeUM7QUFDakQsbUJBQU8sQ0FBQywrR0FBaUM7QUFDekMsbUJBQU8sQ0FBQywrSEFBeUM7QUFDakQsbUJBQU8sQ0FBQywrR0FBaUM7QUFDekMsbUJBQU8sQ0FBQywyR0FBK0I7QUFDdkMsbUJBQU8sQ0FBQywySEFBdUM7QUFDL0MsbUJBQU8sQ0FBQywyR0FBK0I7QUFDdkMsbUJBQU8sQ0FBQyxtSEFBbUM7QUFDM0MsbUJBQU8sQ0FBQyx1SEFBcUM7QUFDN0MsbUJBQU8sQ0FBQyx1SUFBNkM7QUFDckQsbUJBQU8sQ0FBQywrR0FBaUM7QUFDekMsbUJBQU8sQ0FBQyxtSEFBbUM7QUFDM0MsbUJBQU8sQ0FBQyx1SEFBcUM7QUFDN0MsbUJBQU8sQ0FBQyxtSEFBbUM7QUFDM0MsbUJBQU8sQ0FBQyx1R0FBNkI7QUFDckMsbUJBQU8sQ0FBQywySEFBdUM7QUFDL0MsbUJBQU8sQ0FBQywrR0FBaUM7QUFDekMsbUJBQU8sQ0FBQywrSEFBeUM7QUFDakQsbUJBQU8sQ0FBQyx1SEFBcUM7QUFDN0MsbUJBQU8sQ0FBQyxtSUFBMkM7QUFDbkQsbUJBQU8sQ0FBQyxtSEFBbUM7QUFDM0MsbUJBQU8sQ0FBQywrSEFBeUM7QUFDakQsbUJBQU8sQ0FBQywySEFBdUM7QUFDL0MsbUJBQU8sQ0FBQyx1SEFBcUM7QUFDN0MsbUJBQU8sQ0FBQywrSEFBeUM7QUFDakQsbUJBQU8sQ0FBQyxtSEFBbUM7QUFDM0MsbUJBQU8sQ0FBQyxtSEFBbUM7QUFDM0MsbUJBQU8sQ0FBQyx1R0FBNkI7QUFDckM7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvQWxsUGFja2FnZXMuanM/ZmJiNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWxsUGFja2FnZXMgPSB2b2lkIDA7XG5yZXF1aXJlKFwiLi9iYXNlL0Jhc2VDb25maWd1cmF0aW9uLmpzXCIpO1xucmVxdWlyZShcIi4vYWN0aW9uL0FjdGlvbkNvbmZpZ3VyYXRpb24uanNcIik7XG5yZXF1aXJlKFwiLi9hbXMvQW1zQ29uZmlndXJhdGlvbi5qc1wiKTtcbnJlcXVpcmUoXCIuL2Ftc2NkL0Ftc0NkQ29uZmlndXJhdGlvbi5qc1wiKTtcbnJlcXVpcmUoXCIuL2Jib3gvQmJveENvbmZpZ3VyYXRpb24uanNcIik7XG5yZXF1aXJlKFwiLi9ib2xkc3ltYm9sL0JvbGRzeW1ib2xDb25maWd1cmF0aW9uLmpzXCIpO1xucmVxdWlyZShcIi4vYnJha2V0L0JyYWtldENvbmZpZ3VyYXRpb24uanNcIik7XG5yZXF1aXJlKFwiLi9idXNzcHJvb2ZzL0J1c3Nwcm9vZnNDb25maWd1cmF0aW9uLmpzXCIpO1xucmVxdWlyZShcIi4vY2FuY2VsL0NhbmNlbENvbmZpZ3VyYXRpb24uanNcIik7XG5yZXF1aXJlKFwiLi9jYXNlcy9DYXNlc0NvbmZpZ3VyYXRpb24uanNcIik7XG5yZXF1aXJlKFwiLi9jZW50ZXJub3QvQ2VudGVybm90Q29uZmlndXJhdGlvbi5qc1wiKTtcbnJlcXVpcmUoXCIuL2NvbG9yL0NvbG9yQ29uZmlndXJhdGlvbi5qc1wiKTtcbnJlcXVpcmUoXCIuL2NvbG9ydjIvQ29sb3JWMkNvbmZpZ3VyYXRpb24uanNcIik7XG5yZXF1aXJlKFwiLi9jb2xvcnRibC9Db2xvcnRibENvbmZpZ3VyYXRpb24uanNcIik7XG5yZXF1aXJlKFwiLi9jb25maWdtYWNyb3MvQ29uZmlnTWFjcm9zQ29uZmlndXJhdGlvbi5qc1wiKTtcbnJlcXVpcmUoXCIuL2VtcGhlcS9FbXBoZXFDb25maWd1cmF0aW9uLmpzXCIpO1xucmVxdWlyZShcIi4vZW5jbG9zZS9FbmNsb3NlQ29uZmlndXJhdGlvbi5qc1wiKTtcbnJlcXVpcmUoXCIuL2V4dHBmZWlsL0V4dHBmZWlsQ29uZmlndXJhdGlvbi5qc1wiKTtcbnJlcXVpcmUoXCIuL2dlbnN5bWIvR2Vuc3ltYkNvbmZpZ3VyYXRpb24uanNcIik7XG5yZXF1aXJlKFwiLi9odG1sL0h0bWxDb25maWd1cmF0aW9uLmpzXCIpO1xucmVxdWlyZShcIi4vbWF0aHRvb2xzL01hdGh0b29sc0NvbmZpZ3VyYXRpb24uanNcIik7XG5yZXF1aXJlKFwiLi9taGNoZW0vTWhjaGVtQ29uZmlndXJhdGlvbi5qc1wiKTtcbnJlcXVpcmUoXCIuL25ld2NvbW1hbmQvTmV3Y29tbWFuZENvbmZpZ3VyYXRpb24uanNcIik7XG5yZXF1aXJlKFwiLi9ub2Vycm9ycy9Ob0Vycm9yc0NvbmZpZ3VyYXRpb24uanNcIik7XG5yZXF1aXJlKFwiLi9ub3VuZGVmaW5lZC9Ob1VuZGVmaW5lZENvbmZpZ3VyYXRpb24uanNcIik7XG5yZXF1aXJlKFwiLi9waHlzaWNzL1BoeXNpY3NDb25maWd1cmF0aW9uLmpzXCIpO1xucmVxdWlyZShcIi4vc2V0b3B0aW9ucy9TZXRPcHRpb25zQ29uZmlndXJhdGlvbi5qc1wiKTtcbnJlcXVpcmUoXCIuL3RhZ2Zvcm1hdC9UYWdGb3JtYXRDb25maWd1cmF0aW9uLmpzXCIpO1xucmVxdWlyZShcIi4vdGV4dGNvbXAvVGV4dGNvbXBDb25maWd1cmF0aW9uLmpzXCIpO1xucmVxdWlyZShcIi4vdGV4dG1hY3Jvcy9UZXh0TWFjcm9zQ29uZmlndXJhdGlvbi5qc1wiKTtcbnJlcXVpcmUoXCIuL3VwZ3JlZWsvVXBncmVla0NvbmZpZ3VyYXRpb24uanNcIik7XG5yZXF1aXJlKFwiLi91bmljb2RlL1VuaWNvZGVDb25maWd1cmF0aW9uLmpzXCIpO1xucmVxdWlyZShcIi4vdmVyYi9WZXJiQ29uZmlndXJhdGlvbi5qc1wiKTtcbmlmICh0eXBlb2YgTWF0aEpheCAhPT0gJ3VuZGVmaW5lZCcgJiYgTWF0aEpheC5sb2FkZXIpIHtcbiAgICBNYXRoSmF4LmxvYWRlci5wcmVMb2FkKCdbdGV4XS9hY3Rpb24nLCAnW3RleF0vYW1zJywgJ1t0ZXhdL2Ftc2NkJywgJ1t0ZXhdL2Jib3gnLCAnW3RleF0vYm9sZHN5bWJvbCcsICdbdGV4XS9icmFrZXQnLCAnW3RleF0vYnVzc3Byb29mcycsICdbdGV4XS9jYW5jZWwnLCAnW3RleF0vY2FzZXMnLCAnW3RleF0vY2VudGVybm90JywgJ1t0ZXhdL2NvbG9yJywgJ1t0ZXhdL2NvbG9ydjInLCAnW3RleF0vY29sb3J0YmwnLCAnW3RleF0vZW1waGVxJywgJ1t0ZXhdL2VuY2xvc2UnLCAnW3RleF0vZXh0cGZlaWwnLCAnW3RleF0vZ2Vuc3ltYicsICdbdGV4XS9odG1sJywgJ1t0ZXhdL21hdGh0b29scycsICdbdGV4XS9taGNoZW0nLCAnW3RleF0vbmV3Y29tbWFuZCcsICdbdGV4XS9ub2Vycm9ycycsICdbdGV4XS9ub3VuZGVmaW5lZCcsICdbdGV4XS9waHlzaWNzJywgJ1t0ZXhdL3VwZ3JlZWsnLCAnW3RleF0vdW5pY29kZScsICdbdGV4XS92ZXJiJywgJ1t0ZXhdL2NvbmZpZ21hY3JvcycsICdbdGV4XS90YWdmb3JtYXQnLCAnW3RleF0vdGV4dGNvbXAnLCAnW3RleF0vdGV4dG1hY3JvcycsICdbdGV4XS9zZXRvcHRpb25zJyk7XG59XG5leHBvcnRzLkFsbFBhY2thZ2VzID0gW1xuICAgICdiYXNlJyxcbiAgICAnYWN0aW9uJyxcbiAgICAnYW1zJyxcbiAgICAnYW1zY2QnLFxuICAgICdiYm94JyxcbiAgICAnYm9sZHN5bWJvbCcsXG4gICAgJ2JyYWtldCcsXG4gICAgJ2J1c3Nwcm9vZnMnLFxuICAgICdjYW5jZWwnLFxuICAgICdjYXNlcycsXG4gICAgJ2NlbnRlcm5vdCcsXG4gICAgJ2NvbG9yJyxcbiAgICAnY29sb3J0YmwnLFxuICAgICdlbXBoZXEnLFxuICAgICdlbmNsb3NlJyxcbiAgICAnZXh0cGZlaWwnLFxuICAgICdnZW5zeW1iJyxcbiAgICAnaHRtbCcsXG4gICAgJ21hdGh0b29scycsXG4gICAgJ21oY2hlbScsXG4gICAgJ25ld2NvbW1hbmQnLFxuICAgICdub2Vycm9ycycsXG4gICAgJ25vdW5kZWZpbmVkJyxcbiAgICAndXBncmVlaycsXG4gICAgJ3VuaWNvZGUnLFxuICAgICd2ZXJiJyxcbiAgICAnY29uZmlnbWFjcm9zJyxcbiAgICAndGFnZm9ybWF0JyxcbiAgICAndGV4dGNvbXAnLFxuICAgICd0ZXh0bWFjcm9zJ1xuXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFsbFBhY2thZ2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/AllPackages.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/Configuration.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/Configuration.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ParserConfiguration = exports.ConfigurationHandler = exports.Configuration = void 0;\nvar Options_js_1 = __webpack_require__(/*! ../../util/Options.js */ \"./node_modules/mathjax-full/js/util/Options.js\");\nvar MapHandler_js_1 = __webpack_require__(/*! ./MapHandler.js */ \"./node_modules/mathjax-full/js/input/tex/MapHandler.js\");\nvar FunctionList_js_1 = __webpack_require__(/*! ../../util/FunctionList.js */ \"./node_modules/mathjax-full/js/util/FunctionList.js\");\nvar PrioritizedList_js_1 = __webpack_require__(/*! ../../util/PrioritizedList.js */ \"./node_modules/mathjax-full/js/util/PrioritizedList.js\");\nvar Tags_js_1 = __webpack_require__(/*! ./Tags.js */ \"./node_modules/mathjax-full/js/input/tex/Tags.js\");\nvar Configuration = (function () {\n    function Configuration(name, handler, fallback, items, tags, options, nodes, preprocessors, postprocessors, initMethod, configMethod, priority, parser) {\n        if (handler === void 0) { handler = {}; }\n        if (fallback === void 0) { fallback = {}; }\n        if (items === void 0) { items = {}; }\n        if (tags === void 0) { tags = {}; }\n        if (options === void 0) { options = {}; }\n        if (nodes === void 0) { nodes = {}; }\n        if (preprocessors === void 0) { preprocessors = []; }\n        if (postprocessors === void 0) { postprocessors = []; }\n        if (initMethod === void 0) { initMethod = null; }\n        if (configMethod === void 0) { configMethod = null; }\n        this.name = name;\n        this.handler = handler;\n        this.fallback = fallback;\n        this.items = items;\n        this.tags = tags;\n        this.options = options;\n        this.nodes = nodes;\n        this.preprocessors = preprocessors;\n        this.postprocessors = postprocessors;\n        this.initMethod = initMethod;\n        this.configMethod = configMethod;\n        this.priority = priority;\n        this.parser = parser;\n        this.handler = Object.assign({ character: [], delimiter: [], macro: [], environment: [] }, handler);\n    }\n    Configuration.makeProcessor = function (func, priority) {\n        return Array.isArray(func) ? func : [func, priority];\n    };\n    Configuration._create = function (name, config) {\n        var _this = this;\n        if (config === void 0) { config = {}; }\n        var priority = config.priority || PrioritizedList_js_1.PrioritizedList.DEFAULTPRIORITY;\n        var init = config.init ? this.makeProcessor(config.init, priority) : null;\n        var conf = config.config ? this.makeProcessor(config.config, priority) : null;\n        var preprocessors = (config.preprocessors || []).map(function (pre) { return _this.makeProcessor(pre, priority); });\n        var postprocessors = (config.postprocessors || []).map(function (post) { return _this.makeProcessor(post, priority); });\n        var parser = config.parser || 'tex';\n        return new Configuration(name, config.handler || {}, config.fallback || {}, config.items || {}, config.tags || {}, config.options || {}, config.nodes || {}, preprocessors, postprocessors, init, conf, priority, parser);\n    };\n    Configuration.create = function (name, config) {\n        if (config === void 0) { config = {}; }\n        var configuration = Configuration._create(name, config);\n        ConfigurationHandler.set(name, configuration);\n        return configuration;\n    };\n    Configuration.local = function (config) {\n        if (config === void 0) { config = {}; }\n        return Configuration._create('', config);\n    };\n    Object.defineProperty(Configuration.prototype, \"init\", {\n        get: function () {\n            return this.initMethod ? this.initMethod[0] : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Configuration.prototype, \"config\", {\n        get: function () {\n            return this.configMethod ? this.configMethod[0] : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Configuration;\n}());\nexports.Configuration = Configuration;\nvar ConfigurationHandler;\n(function (ConfigurationHandler) {\n    var maps = new Map();\n    ConfigurationHandler.set = function (name, map) {\n        maps.set(name, map);\n    };\n    ConfigurationHandler.get = function (name) {\n        return maps.get(name);\n    };\n    ConfigurationHandler.keys = function () {\n        return maps.keys();\n    };\n})(ConfigurationHandler = exports.ConfigurationHandler || (exports.ConfigurationHandler = {}));\nvar ParserConfiguration = (function () {\n    function ParserConfiguration(packages, parsers) {\n        var e_1, _a, e_2, _b;\n        if (parsers === void 0) { parsers = ['tex']; }\n        this.initMethod = new FunctionList_js_1.FunctionList();\n        this.configMethod = new FunctionList_js_1.FunctionList();\n        this.configurations = new PrioritizedList_js_1.PrioritizedList();\n        this.parsers = [];\n        this.handlers = new MapHandler_js_1.SubHandlers();\n        this.items = {};\n        this.tags = {};\n        this.options = {};\n        this.nodes = {};\n        this.parsers = parsers;\n        try {\n            for (var _c = __values(packages.slice().reverse()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var pkg = _d.value;\n                this.addPackage(pkg);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        try {\n            for (var _e = __values(this.configurations), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var _g = _f.value, config = _g.item, priority = _g.priority;\n                this.append(config, priority);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    }\n    ParserConfiguration.prototype.init = function () {\n        this.initMethod.execute(this);\n    };\n    ParserConfiguration.prototype.config = function (jax) {\n        var e_3, _a;\n        this.configMethod.execute(this, jax);\n        try {\n            for (var _b = __values(this.configurations), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var config = _c.value;\n                this.addFilters(jax, config.item);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    ParserConfiguration.prototype.addPackage = function (pkg) {\n        var name = typeof pkg === 'string' ? pkg : pkg[0];\n        var conf = this.getPackage(name);\n        conf && this.configurations.add(conf, typeof pkg === 'string' ? conf.priority : pkg[1]);\n    };\n    ParserConfiguration.prototype.add = function (name, jax, options) {\n        var e_4, _a;\n        if (options === void 0) { options = {}; }\n        var config = this.getPackage(name);\n        this.append(config);\n        this.configurations.add(config, config.priority);\n        this.init();\n        var parser = jax.parseOptions;\n        parser.nodeFactory.setCreators(config.nodes);\n        try {\n            for (var _b = __values(Object.keys(config.items)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var kind = _c.value;\n                parser.itemFactory.setNodeClass(kind, config.items[kind]);\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        Tags_js_1.TagsFactory.addTags(config.tags);\n        (0, Options_js_1.defaultOptions)(parser.options, config.options);\n        (0, Options_js_1.userOptions)(parser.options, options);\n        this.addFilters(jax, config);\n        if (config.config) {\n            config.config(this, jax);\n        }\n    };\n    ParserConfiguration.prototype.getPackage = function (name) {\n        var config = ConfigurationHandler.get(name);\n        if (config && this.parsers.indexOf(config.parser) < 0) {\n            throw Error(\"Package \".concat(name, \" doesn't target the proper parser\"));\n        }\n        return config;\n    };\n    ParserConfiguration.prototype.append = function (config, priority) {\n        priority = priority || config.priority;\n        if (config.initMethod) {\n            this.initMethod.add(config.initMethod[0], config.initMethod[1]);\n        }\n        if (config.configMethod) {\n            this.configMethod.add(config.configMethod[0], config.configMethod[1]);\n        }\n        this.handlers.add(config.handler, config.fallback, priority);\n        Object.assign(this.items, config.items);\n        Object.assign(this.tags, config.tags);\n        (0, Options_js_1.defaultOptions)(this.options, config.options);\n        Object.assign(this.nodes, config.nodes);\n    };\n    ParserConfiguration.prototype.addFilters = function (jax, config) {\n        var e_5, _a, e_6, _b;\n        try {\n            for (var _c = __values(config.preprocessors), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var _e = __read(_d.value, 2), pre = _e[0], priority = _e[1];\n                jax.preFilters.add(pre, priority);\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        try {\n            for (var _f = __values(config.postprocessors), _g = _f.next(); !_g.done; _g = _f.next()) {\n                var _h = __read(_g.value, 2), post = _h[0], priority = _h[1];\n                jax.postFilters.add(post, priority);\n            }\n        }\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\n        finally {\n            try {\n                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n            }\n            finally { if (e_6) throw e_6.error; }\n        }\n    };\n    return ParserConfiguration;\n}());\nexports.ParserConfiguration = ParserConfiguration;\n//# sourceMappingURL=Configuration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9Db25maWd1cmF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsTUFBTTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcsNEJBQTRCLEdBQUcscUJBQXFCO0FBQ2xGLG1CQUFtQixtQkFBTyxDQUFDLDZFQUF1QjtBQUNsRCxzQkFBc0IsbUJBQU8sQ0FBQywrRUFBaUI7QUFDL0Msd0JBQXdCLG1CQUFPLENBQUMsdUZBQTRCO0FBQzVELDJCQUEyQixtQkFBTyxDQUFDLDZGQUErQjtBQUNsRSxnQkFBZ0IsbUJBQU8sQ0FBQyxtRUFBVztBQUNuQztBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDLG1DQUFtQztBQUNuQyxnQ0FBZ0M7QUFDaEMsK0JBQStCO0FBQy9CLGtDQUFrQztBQUNsQyxnQ0FBZ0M7QUFDaEMsd0NBQXdDO0FBQ3hDLHlDQUF5QztBQUN6QyxxQ0FBcUM7QUFDckMsdUNBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLDBEQUEwRDtBQUNqRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0EsOEVBQThFLDRDQUE0QztBQUMxSCxpRkFBaUYsNkNBQTZDO0FBQzlIO0FBQ0EsMkRBQTJELHVCQUF1QixvQkFBb0IsbUJBQW1CLHNCQUFzQixvQkFBb0I7QUFDbks7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7QUFDRCxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywwREFBMEQsNEJBQTRCLEtBQUs7QUFDNUY7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRkFBZ0YsVUFBVTtBQUMxRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQSx5RUFBeUUsVUFBVTtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlFQUF5RSxVQUFVO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0VBQStFLFVBQVU7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwRUFBMEUsVUFBVTtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQSwyRUFBMkUsVUFBVTtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCwyQkFBMkI7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvQ29uZmlndXJhdGlvbi5qcz8zMzI4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fdmFsdWVzID0gKHRoaXMgJiYgdGhpcy5fX3ZhbHVlcykgfHwgZnVuY3Rpb24obykge1xuICAgIHZhciBzID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIFN5bWJvbC5pdGVyYXRvciwgbSA9IHMgJiYgb1tzXSwgaSA9IDA7XG4gICAgaWYgKG0pIHJldHVybiBtLmNhbGwobyk7XG4gICAgaWYgKG8gJiYgdHlwZW9mIG8ubGVuZ3RoID09PSBcIm51bWJlclwiKSByZXR1cm4ge1xuICAgICAgICBuZXh0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAobyAmJiBpID49IG8ubGVuZ3RoKSBvID0gdm9pZCAwO1xuICAgICAgICAgICAgcmV0dXJuIHsgdmFsdWU6IG8gJiYgb1tpKytdLCBkb25lOiAhbyB9O1xuICAgICAgICB9XG4gICAgfTtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHMgPyBcIk9iamVjdCBpcyBub3QgaXRlcmFibGUuXCIgOiBcIlN5bWJvbC5pdGVyYXRvciBpcyBub3QgZGVmaW5lZC5cIik7XG59O1xudmFyIF9fcmVhZCA9ICh0aGlzICYmIHRoaXMuX19yZWFkKSB8fCBmdW5jdGlvbiAobywgbikge1xuICAgIHZhciBtID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9bU3ltYm9sLml0ZXJhdG9yXTtcbiAgICBpZiAoIW0pIHJldHVybiBvO1xuICAgIHZhciBpID0gbS5jYWxsKG8pLCByLCBhciA9IFtdLCBlO1xuICAgIHRyeSB7XG4gICAgICAgIHdoaWxlICgobiA9PT0gdm9pZCAwIHx8IG4tLSA+IDApICYmICEociA9IGkubmV4dCgpKS5kb25lKSBhci5wdXNoKHIudmFsdWUpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHsgZSA9IHsgZXJyb3I6IGVycm9yIH07IH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChyICYmICFyLmRvbmUgJiYgKG0gPSBpW1wicmV0dXJuXCJdKSkgbS5jYWxsKGkpO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkgeyBpZiAoZSkgdGhyb3cgZS5lcnJvcjsgfVxuICAgIH1cbiAgICByZXR1cm4gYXI7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5QYXJzZXJDb25maWd1cmF0aW9uID0gZXhwb3J0cy5Db25maWd1cmF0aW9uSGFuZGxlciA9IGV4cG9ydHMuQ29uZmlndXJhdGlvbiA9IHZvaWQgMDtcbnZhciBPcHRpb25zX2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbC9PcHRpb25zLmpzXCIpO1xudmFyIE1hcEhhbmRsZXJfanNfMSA9IHJlcXVpcmUoXCIuL01hcEhhbmRsZXIuanNcIik7XG52YXIgRnVuY3Rpb25MaXN0X2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbC9GdW5jdGlvbkxpc3QuanNcIik7XG52YXIgUHJpb3JpdGl6ZWRMaXN0X2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbC9Qcmlvcml0aXplZExpc3QuanNcIik7XG52YXIgVGFnc19qc18xID0gcmVxdWlyZShcIi4vVGFncy5qc1wiKTtcbnZhciBDb25maWd1cmF0aW9uID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBDb25maWd1cmF0aW9uKG5hbWUsIGhhbmRsZXIsIGZhbGxiYWNrLCBpdGVtcywgdGFncywgb3B0aW9ucywgbm9kZXMsIHByZXByb2Nlc3NvcnMsIHBvc3Rwcm9jZXNzb3JzLCBpbml0TWV0aG9kLCBjb25maWdNZXRob2QsIHByaW9yaXR5LCBwYXJzZXIpIHtcbiAgICAgICAgaWYgKGhhbmRsZXIgPT09IHZvaWQgMCkgeyBoYW5kbGVyID0ge307IH1cbiAgICAgICAgaWYgKGZhbGxiYWNrID09PSB2b2lkIDApIHsgZmFsbGJhY2sgPSB7fTsgfVxuICAgICAgICBpZiAoaXRlbXMgPT09IHZvaWQgMCkgeyBpdGVtcyA9IHt9OyB9XG4gICAgICAgIGlmICh0YWdzID09PSB2b2lkIDApIHsgdGFncyA9IHt9OyB9XG4gICAgICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XG4gICAgICAgIGlmIChub2RlcyA9PT0gdm9pZCAwKSB7IG5vZGVzID0ge307IH1cbiAgICAgICAgaWYgKHByZXByb2Nlc3NvcnMgPT09IHZvaWQgMCkgeyBwcmVwcm9jZXNzb3JzID0gW107IH1cbiAgICAgICAgaWYgKHBvc3Rwcm9jZXNzb3JzID09PSB2b2lkIDApIHsgcG9zdHByb2Nlc3NvcnMgPSBbXTsgfVxuICAgICAgICBpZiAoaW5pdE1ldGhvZCA9PT0gdm9pZCAwKSB7IGluaXRNZXRob2QgPSBudWxsOyB9XG4gICAgICAgIGlmIChjb25maWdNZXRob2QgPT09IHZvaWQgMCkgeyBjb25maWdNZXRob2QgPSBudWxsOyB9XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuaGFuZGxlciA9IGhhbmRsZXI7XG4gICAgICAgIHRoaXMuZmFsbGJhY2sgPSBmYWxsYmFjaztcbiAgICAgICAgdGhpcy5pdGVtcyA9IGl0ZW1zO1xuICAgICAgICB0aGlzLnRhZ3MgPSB0YWdzO1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgICB0aGlzLm5vZGVzID0gbm9kZXM7XG4gICAgICAgIHRoaXMucHJlcHJvY2Vzc29ycyA9IHByZXByb2Nlc3NvcnM7XG4gICAgICAgIHRoaXMucG9zdHByb2Nlc3NvcnMgPSBwb3N0cHJvY2Vzc29ycztcbiAgICAgICAgdGhpcy5pbml0TWV0aG9kID0gaW5pdE1ldGhvZDtcbiAgICAgICAgdGhpcy5jb25maWdNZXRob2QgPSBjb25maWdNZXRob2Q7XG4gICAgICAgIHRoaXMucHJpb3JpdHkgPSBwcmlvcml0eTtcbiAgICAgICAgdGhpcy5wYXJzZXIgPSBwYXJzZXI7XG4gICAgICAgIHRoaXMuaGFuZGxlciA9IE9iamVjdC5hc3NpZ24oeyBjaGFyYWN0ZXI6IFtdLCBkZWxpbWl0ZXI6IFtdLCBtYWNybzogW10sIGVudmlyb25tZW50OiBbXSB9LCBoYW5kbGVyKTtcbiAgICB9XG4gICAgQ29uZmlndXJhdGlvbi5tYWtlUHJvY2Vzc29yID0gZnVuY3Rpb24gKGZ1bmMsIHByaW9yaXR5KSB7XG4gICAgICAgIHJldHVybiBBcnJheS5pc0FycmF5KGZ1bmMpID8gZnVuYyA6IFtmdW5jLCBwcmlvcml0eV07XG4gICAgfTtcbiAgICBDb25maWd1cmF0aW9uLl9jcmVhdGUgPSBmdW5jdGlvbiAobmFtZSwgY29uZmlnKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIGlmIChjb25maWcgPT09IHZvaWQgMCkgeyBjb25maWcgPSB7fTsgfVxuICAgICAgICB2YXIgcHJpb3JpdHkgPSBjb25maWcucHJpb3JpdHkgfHwgUHJpb3JpdGl6ZWRMaXN0X2pzXzEuUHJpb3JpdGl6ZWRMaXN0LkRFRkFVTFRQUklPUklUWTtcbiAgICAgICAgdmFyIGluaXQgPSBjb25maWcuaW5pdCA/IHRoaXMubWFrZVByb2Nlc3Nvcihjb25maWcuaW5pdCwgcHJpb3JpdHkpIDogbnVsbDtcbiAgICAgICAgdmFyIGNvbmYgPSBjb25maWcuY29uZmlnID8gdGhpcy5tYWtlUHJvY2Vzc29yKGNvbmZpZy5jb25maWcsIHByaW9yaXR5KSA6IG51bGw7XG4gICAgICAgIHZhciBwcmVwcm9jZXNzb3JzID0gKGNvbmZpZy5wcmVwcm9jZXNzb3JzIHx8IFtdKS5tYXAoZnVuY3Rpb24gKHByZSkgeyByZXR1cm4gX3RoaXMubWFrZVByb2Nlc3NvcihwcmUsIHByaW9yaXR5KTsgfSk7XG4gICAgICAgIHZhciBwb3N0cHJvY2Vzc29ycyA9IChjb25maWcucG9zdHByb2Nlc3NvcnMgfHwgW10pLm1hcChmdW5jdGlvbiAocG9zdCkgeyByZXR1cm4gX3RoaXMubWFrZVByb2Nlc3Nvcihwb3N0LCBwcmlvcml0eSk7IH0pO1xuICAgICAgICB2YXIgcGFyc2VyID0gY29uZmlnLnBhcnNlciB8fCAndGV4JztcbiAgICAgICAgcmV0dXJuIG5ldyBDb25maWd1cmF0aW9uKG5hbWUsIGNvbmZpZy5oYW5kbGVyIHx8IHt9LCBjb25maWcuZmFsbGJhY2sgfHwge30sIGNvbmZpZy5pdGVtcyB8fCB7fSwgY29uZmlnLnRhZ3MgfHwge30sIGNvbmZpZy5vcHRpb25zIHx8IHt9LCBjb25maWcubm9kZXMgfHwge30sIHByZXByb2Nlc3NvcnMsIHBvc3Rwcm9jZXNzb3JzLCBpbml0LCBjb25mLCBwcmlvcml0eSwgcGFyc2VyKTtcbiAgICB9O1xuICAgIENvbmZpZ3VyYXRpb24uY3JlYXRlID0gZnVuY3Rpb24gKG5hbWUsIGNvbmZpZykge1xuICAgICAgICBpZiAoY29uZmlnID09PSB2b2lkIDApIHsgY29uZmlnID0ge307IH1cbiAgICAgICAgdmFyIGNvbmZpZ3VyYXRpb24gPSBDb25maWd1cmF0aW9uLl9jcmVhdGUobmFtZSwgY29uZmlnKTtcbiAgICAgICAgQ29uZmlndXJhdGlvbkhhbmRsZXIuc2V0KG5hbWUsIGNvbmZpZ3VyYXRpb24pO1xuICAgICAgICByZXR1cm4gY29uZmlndXJhdGlvbjtcbiAgICB9O1xuICAgIENvbmZpZ3VyYXRpb24ubG9jYWwgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gICAgICAgIGlmIChjb25maWcgPT09IHZvaWQgMCkgeyBjb25maWcgPSB7fTsgfVxuICAgICAgICByZXR1cm4gQ29uZmlndXJhdGlvbi5fY3JlYXRlKCcnLCBjb25maWcpO1xuICAgIH07XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KENvbmZpZ3VyYXRpb24ucHJvdG90eXBlLCBcImluaXRcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmluaXRNZXRob2QgPyB0aGlzLmluaXRNZXRob2RbMF0gOiBudWxsO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KENvbmZpZ3VyYXRpb24ucHJvdG90eXBlLCBcImNvbmZpZ1wiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29uZmlnTWV0aG9kID8gdGhpcy5jb25maWdNZXRob2RbMF0gOiBudWxsO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIENvbmZpZ3VyYXRpb247XG59KCkpO1xuZXhwb3J0cy5Db25maWd1cmF0aW9uID0gQ29uZmlndXJhdGlvbjtcbnZhciBDb25maWd1cmF0aW9uSGFuZGxlcjtcbihmdW5jdGlvbiAoQ29uZmlndXJhdGlvbkhhbmRsZXIpIHtcbiAgICB2YXIgbWFwcyA9IG5ldyBNYXAoKTtcbiAgICBDb25maWd1cmF0aW9uSGFuZGxlci5zZXQgPSBmdW5jdGlvbiAobmFtZSwgbWFwKSB7XG4gICAgICAgIG1hcHMuc2V0KG5hbWUsIG1hcCk7XG4gICAgfTtcbiAgICBDb25maWd1cmF0aW9uSGFuZGxlci5nZXQgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICByZXR1cm4gbWFwcy5nZXQobmFtZSk7XG4gICAgfTtcbiAgICBDb25maWd1cmF0aW9uSGFuZGxlci5rZXlzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gbWFwcy5rZXlzKCk7XG4gICAgfTtcbn0pKENvbmZpZ3VyYXRpb25IYW5kbGVyID0gZXhwb3J0cy5Db25maWd1cmF0aW9uSGFuZGxlciB8fCAoZXhwb3J0cy5Db25maWd1cmF0aW9uSGFuZGxlciA9IHt9KSk7XG52YXIgUGFyc2VyQ29uZmlndXJhdGlvbiA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUGFyc2VyQ29uZmlndXJhdGlvbihwYWNrYWdlcywgcGFyc2Vycykge1xuICAgICAgICB2YXIgZV8xLCBfYSwgZV8yLCBfYjtcbiAgICAgICAgaWYgKHBhcnNlcnMgPT09IHZvaWQgMCkgeyBwYXJzZXJzID0gWyd0ZXgnXTsgfVxuICAgICAgICB0aGlzLmluaXRNZXRob2QgPSBuZXcgRnVuY3Rpb25MaXN0X2pzXzEuRnVuY3Rpb25MaXN0KCk7XG4gICAgICAgIHRoaXMuY29uZmlnTWV0aG9kID0gbmV3IEZ1bmN0aW9uTGlzdF9qc18xLkZ1bmN0aW9uTGlzdCgpO1xuICAgICAgICB0aGlzLmNvbmZpZ3VyYXRpb25zID0gbmV3IFByaW9yaXRpemVkTGlzdF9qc18xLlByaW9yaXRpemVkTGlzdCgpO1xuICAgICAgICB0aGlzLnBhcnNlcnMgPSBbXTtcbiAgICAgICAgdGhpcy5oYW5kbGVycyA9IG5ldyBNYXBIYW5kbGVyX2pzXzEuU3ViSGFuZGxlcnMoKTtcbiAgICAgICAgdGhpcy5pdGVtcyA9IHt9O1xuICAgICAgICB0aGlzLnRhZ3MgPSB7fTtcbiAgICAgICAgdGhpcy5vcHRpb25zID0ge307XG4gICAgICAgIHRoaXMubm9kZXMgPSB7fTtcbiAgICAgICAgdGhpcy5wYXJzZXJzID0gcGFyc2VycztcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGZvciAodmFyIF9jID0gX192YWx1ZXMocGFja2FnZXMuc2xpY2UoKS5yZXZlcnNlKCkpLCBfZCA9IF9jLm5leHQoKTsgIV9kLmRvbmU7IF9kID0gX2MubmV4dCgpKSB7XG4gICAgICAgICAgICAgICAgdmFyIHBrZyA9IF9kLnZhbHVlO1xuICAgICAgICAgICAgICAgIHRoaXMuYWRkUGFja2FnZShwa2cpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlXzFfMSkgeyBlXzEgPSB7IGVycm9yOiBlXzFfMSB9OyB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiAoX2QgJiYgIV9kLmRvbmUgJiYgKF9hID0gX2MucmV0dXJuKSkgX2EuY2FsbChfYyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmaW5hbGx5IHsgaWYgKGVfMSkgdGhyb3cgZV8xLmVycm9yOyB9XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGZvciAodmFyIF9lID0gX192YWx1ZXModGhpcy5jb25maWd1cmF0aW9ucyksIF9mID0gX2UubmV4dCgpOyAhX2YuZG9uZTsgX2YgPSBfZS5uZXh0KCkpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2cgPSBfZi52YWx1ZSwgY29uZmlnID0gX2cuaXRlbSwgcHJpb3JpdHkgPSBfZy5wcmlvcml0eTtcbiAgICAgICAgICAgICAgICB0aGlzLmFwcGVuZChjb25maWcsIHByaW9yaXR5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZV8yXzEpIHsgZV8yID0geyBlcnJvcjogZV8yXzEgfTsgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgaWYgKF9mICYmICFfZi5kb25lICYmIChfYiA9IF9lLnJldHVybikpIF9iLmNhbGwoX2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZmluYWxseSB7IGlmIChlXzIpIHRocm93IGVfMi5lcnJvcjsgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFBhcnNlckNvbmZpZ3VyYXRpb24ucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuaW5pdE1ldGhvZC5leGVjdXRlKHRoaXMpO1xuICAgIH07XG4gICAgUGFyc2VyQ29uZmlndXJhdGlvbi5wcm90b3R5cGUuY29uZmlnID0gZnVuY3Rpb24gKGpheCkge1xuICAgICAgICB2YXIgZV8zLCBfYTtcbiAgICAgICAgdGhpcy5jb25maWdNZXRob2QuZXhlY3V0ZSh0aGlzLCBqYXgpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yICh2YXIgX2IgPSBfX3ZhbHVlcyh0aGlzLmNvbmZpZ3VyYXRpb25zKSwgX2MgPSBfYi5uZXh0KCk7ICFfYy5kb25lOyBfYyA9IF9iLm5leHQoKSkge1xuICAgICAgICAgICAgICAgIHZhciBjb25maWcgPSBfYy52YWx1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLmFkZEZpbHRlcnMoamF4LCBjb25maWcuaXRlbSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVfM18xKSB7IGVfMyA9IHsgZXJyb3I6IGVfM18xIH07IH1cbiAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGlmIChfYyAmJiAhX2MuZG9uZSAmJiAoX2EgPSBfYi5yZXR1cm4pKSBfYS5jYWxsKF9iKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpbmFsbHkgeyBpZiAoZV8zKSB0aHJvdyBlXzMuZXJyb3I7IH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgUGFyc2VyQ29uZmlndXJhdGlvbi5wcm90b3R5cGUuYWRkUGFja2FnZSA9IGZ1bmN0aW9uIChwa2cpIHtcbiAgICAgICAgdmFyIG5hbWUgPSB0eXBlb2YgcGtnID09PSAnc3RyaW5nJyA/IHBrZyA6IHBrZ1swXTtcbiAgICAgICAgdmFyIGNvbmYgPSB0aGlzLmdldFBhY2thZ2UobmFtZSk7XG4gICAgICAgIGNvbmYgJiYgdGhpcy5jb25maWd1cmF0aW9ucy5hZGQoY29uZiwgdHlwZW9mIHBrZyA9PT0gJ3N0cmluZycgPyBjb25mLnByaW9yaXR5IDogcGtnWzFdKTtcbiAgICB9O1xuICAgIFBhcnNlckNvbmZpZ3VyYXRpb24ucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uIChuYW1lLCBqYXgsIG9wdGlvbnMpIHtcbiAgICAgICAgdmFyIGVfNCwgX2E7XG4gICAgICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XG4gICAgICAgIHZhciBjb25maWcgPSB0aGlzLmdldFBhY2thZ2UobmFtZSk7XG4gICAgICAgIHRoaXMuYXBwZW5kKGNvbmZpZyk7XG4gICAgICAgIHRoaXMuY29uZmlndXJhdGlvbnMuYWRkKGNvbmZpZywgY29uZmlnLnByaW9yaXR5KTtcbiAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgICAgIHZhciBwYXJzZXIgPSBqYXgucGFyc2VPcHRpb25zO1xuICAgICAgICBwYXJzZXIubm9kZUZhY3Rvcnkuc2V0Q3JlYXRvcnMoY29uZmlnLm5vZGVzKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGZvciAodmFyIF9iID0gX192YWx1ZXMoT2JqZWN0LmtleXMoY29uZmlnLml0ZW1zKSksIF9jID0gX2IubmV4dCgpOyAhX2MuZG9uZTsgX2MgPSBfYi5uZXh0KCkpIHtcbiAgICAgICAgICAgICAgICB2YXIga2luZCA9IF9jLnZhbHVlO1xuICAgICAgICAgICAgICAgIHBhcnNlci5pdGVtRmFjdG9yeS5zZXROb2RlQ2xhc3Moa2luZCwgY29uZmlnLml0ZW1zW2tpbmRdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZV80XzEpIHsgZV80ID0geyBlcnJvcjogZV80XzEgfTsgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgaWYgKF9jICYmICFfYy5kb25lICYmIChfYSA9IF9iLnJldHVybikpIF9hLmNhbGwoX2IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZmluYWxseSB7IGlmIChlXzQpIHRocm93IGVfNC5lcnJvcjsgfVxuICAgICAgICB9XG4gICAgICAgIFRhZ3NfanNfMS5UYWdzRmFjdG9yeS5hZGRUYWdzKGNvbmZpZy50YWdzKTtcbiAgICAgICAgKDAsIE9wdGlvbnNfanNfMS5kZWZhdWx0T3B0aW9ucykocGFyc2VyLm9wdGlvbnMsIGNvbmZpZy5vcHRpb25zKTtcbiAgICAgICAgKDAsIE9wdGlvbnNfanNfMS51c2VyT3B0aW9ucykocGFyc2VyLm9wdGlvbnMsIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLmFkZEZpbHRlcnMoamF4LCBjb25maWcpO1xuICAgICAgICBpZiAoY29uZmlnLmNvbmZpZykge1xuICAgICAgICAgICAgY29uZmlnLmNvbmZpZyh0aGlzLCBqYXgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBQYXJzZXJDb25maWd1cmF0aW9uLnByb3RvdHlwZS5nZXRQYWNrYWdlID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgdmFyIGNvbmZpZyA9IENvbmZpZ3VyYXRpb25IYW5kbGVyLmdldChuYW1lKTtcbiAgICAgICAgaWYgKGNvbmZpZyAmJiB0aGlzLnBhcnNlcnMuaW5kZXhPZihjb25maWcucGFyc2VyKSA8IDApIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKFwiUGFja2FnZSBcIi5jb25jYXQobmFtZSwgXCIgZG9lc24ndCB0YXJnZXQgdGhlIHByb3BlciBwYXJzZXJcIikpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjb25maWc7XG4gICAgfTtcbiAgICBQYXJzZXJDb25maWd1cmF0aW9uLnByb3RvdHlwZS5hcHBlbmQgPSBmdW5jdGlvbiAoY29uZmlnLCBwcmlvcml0eSkge1xuICAgICAgICBwcmlvcml0eSA9IHByaW9yaXR5IHx8IGNvbmZpZy5wcmlvcml0eTtcbiAgICAgICAgaWYgKGNvbmZpZy5pbml0TWV0aG9kKSB7XG4gICAgICAgICAgICB0aGlzLmluaXRNZXRob2QuYWRkKGNvbmZpZy5pbml0TWV0aG9kWzBdLCBjb25maWcuaW5pdE1ldGhvZFsxXSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvbmZpZy5jb25maWdNZXRob2QpIHtcbiAgICAgICAgICAgIHRoaXMuY29uZmlnTWV0aG9kLmFkZChjb25maWcuY29uZmlnTWV0aG9kWzBdLCBjb25maWcuY29uZmlnTWV0aG9kWzFdKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmhhbmRsZXJzLmFkZChjb25maWcuaGFuZGxlciwgY29uZmlnLmZhbGxiYWNrLCBwcmlvcml0eSk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24odGhpcy5pdGVtcywgY29uZmlnLml0ZW1zKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLnRhZ3MsIGNvbmZpZy50YWdzKTtcbiAgICAgICAgKDAsIE9wdGlvbnNfanNfMS5kZWZhdWx0T3B0aW9ucykodGhpcy5vcHRpb25zLCBjb25maWcub3B0aW9ucyk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24odGhpcy5ub2RlcywgY29uZmlnLm5vZGVzKTtcbiAgICB9O1xuICAgIFBhcnNlckNvbmZpZ3VyYXRpb24ucHJvdG90eXBlLmFkZEZpbHRlcnMgPSBmdW5jdGlvbiAoamF4LCBjb25maWcpIHtcbiAgICAgICAgdmFyIGVfNSwgX2EsIGVfNiwgX2I7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBmb3IgKHZhciBfYyA9IF9fdmFsdWVzKGNvbmZpZy5wcmVwcm9jZXNzb3JzKSwgX2QgPSBfYy5uZXh0KCk7ICFfZC5kb25lOyBfZCA9IF9jLm5leHQoKSkge1xuICAgICAgICAgICAgICAgIHZhciBfZSA9IF9fcmVhZChfZC52YWx1ZSwgMiksIHByZSA9IF9lWzBdLCBwcmlvcml0eSA9IF9lWzFdO1xuICAgICAgICAgICAgICAgIGpheC5wcmVGaWx0ZXJzLmFkZChwcmUsIHByaW9yaXR5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZV81XzEpIHsgZV81ID0geyBlcnJvcjogZV81XzEgfTsgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgaWYgKF9kICYmICFfZC5kb25lICYmIChfYSA9IF9jLnJldHVybikpIF9hLmNhbGwoX2MpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZmluYWxseSB7IGlmIChlXzUpIHRocm93IGVfNS5lcnJvcjsgfVxuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBmb3IgKHZhciBfZiA9IF9fdmFsdWVzKGNvbmZpZy5wb3N0cHJvY2Vzc29ycyksIF9nID0gX2YubmV4dCgpOyAhX2cuZG9uZTsgX2cgPSBfZi5uZXh0KCkpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2ggPSBfX3JlYWQoX2cudmFsdWUsIDIpLCBwb3N0ID0gX2hbMF0sIHByaW9yaXR5ID0gX2hbMV07XG4gICAgICAgICAgICAgICAgamF4LnBvc3RGaWx0ZXJzLmFkZChwb3N0LCBwcmlvcml0eSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVfNl8xKSB7IGVfNiA9IHsgZXJyb3I6IGVfNl8xIH07IH1cbiAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGlmIChfZyAmJiAhX2cuZG9uZSAmJiAoX2IgPSBfZi5yZXR1cm4pKSBfYi5jYWxsKF9mKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpbmFsbHkgeyBpZiAoZV82KSB0aHJvdyBlXzYuZXJyb3I7IH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIFBhcnNlckNvbmZpZ3VyYXRpb247XG59KCkpO1xuZXhwb3J0cy5QYXJzZXJDb25maWd1cmF0aW9uID0gUGFyc2VyQ29uZmlndXJhdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbmZpZ3VyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/Configuration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/MapHandler.js":
/*!**************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/MapHandler.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SubHandlers = exports.SubHandler = exports.MapHandler = void 0;\nvar PrioritizedList_js_1 = __webpack_require__(/*! ../../util/PrioritizedList.js */ \"./node_modules/mathjax-full/js/util/PrioritizedList.js\");\nvar FunctionList_js_1 = __webpack_require__(/*! ../../util/FunctionList.js */ \"./node_modules/mathjax-full/js/util/FunctionList.js\");\nvar MapHandler;\n(function (MapHandler) {\n    var maps = new Map();\n    MapHandler.register = function (map) {\n        maps.set(map.name, map);\n    };\n    MapHandler.getMap = function (name) {\n        return maps.get(name);\n    };\n})(MapHandler = exports.MapHandler || (exports.MapHandler = {}));\nvar SubHandler = (function () {\n    function SubHandler() {\n        this._configuration = new PrioritizedList_js_1.PrioritizedList();\n        this._fallback = new FunctionList_js_1.FunctionList();\n    }\n    SubHandler.prototype.add = function (maps, fallback, priority) {\n        var e_1, _a;\n        if (priority === void 0) { priority = PrioritizedList_js_1.PrioritizedList.DEFAULTPRIORITY; }\n        try {\n            for (var _b = __values(maps.slice().reverse()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var name_1 = _c.value;\n                var map = MapHandler.getMap(name_1);\n                if (!map) {\n                    this.warn('Configuration ' + name_1 + ' not found! Omitted.');\n                    return;\n                }\n                this._configuration.add(map, priority);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (fallback) {\n            this._fallback.add(fallback, priority);\n        }\n    };\n    SubHandler.prototype.parse = function (input) {\n        var e_2, _a;\n        try {\n            for (var _b = __values(this._configuration), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var map = _c.value.item;\n                var result = map.parse(input);\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        var _d = __read(input, 2), env = _d[0], symbol = _d[1];\n        Array.from(this._fallback)[0].item(env, symbol);\n    };\n    SubHandler.prototype.lookup = function (symbol) {\n        var map = this.applicable(symbol);\n        return map ? map.lookup(symbol) : null;\n    };\n    SubHandler.prototype.contains = function (symbol) {\n        return this.applicable(symbol) ? true : false;\n    };\n    SubHandler.prototype.toString = function () {\n        var e_3, _a;\n        var names = [];\n        try {\n            for (var _b = __values(this._configuration), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var map = _c.value.item;\n                names.push(map.name);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return names.join(', ');\n    };\n    SubHandler.prototype.applicable = function (symbol) {\n        var e_4, _a;\n        try {\n            for (var _b = __values(this._configuration), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var map = _c.value.item;\n                if (map.contains(symbol)) {\n                    return map;\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return null;\n    };\n    SubHandler.prototype.retrieve = function (name) {\n        var e_5, _a;\n        try {\n            for (var _b = __values(this._configuration), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var map = _c.value.item;\n                if (map.name === name) {\n                    return map;\n                }\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        return null;\n    };\n    SubHandler.prototype.warn = function (message) {\n        console.log('TexParser Warning: ' + message);\n    };\n    return SubHandler;\n}());\nexports.SubHandler = SubHandler;\nvar SubHandlers = (function () {\n    function SubHandlers() {\n        this.map = new Map();\n    }\n    SubHandlers.prototype.add = function (handlers, fallbacks, priority) {\n        var e_6, _a;\n        if (priority === void 0) { priority = PrioritizedList_js_1.PrioritizedList.DEFAULTPRIORITY; }\n        try {\n            for (var _b = __values(Object.keys(handlers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                var name_2 = key;\n                var subHandler = this.get(name_2);\n                if (!subHandler) {\n                    subHandler = new SubHandler();\n                    this.set(name_2, subHandler);\n                }\n                subHandler.add(handlers[name_2], fallbacks[name_2], priority);\n            }\n        }\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_6) throw e_6.error; }\n        }\n    };\n    SubHandlers.prototype.set = function (name, subHandler) {\n        this.map.set(name, subHandler);\n    };\n    SubHandlers.prototype.get = function (name) {\n        return this.map.get(name);\n    };\n    SubHandlers.prototype.retrieve = function (name) {\n        var e_7, _a;\n        try {\n            for (var _b = __values(this.map.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var handler = _c.value;\n                var map = handler.retrieve(name);\n                if (map) {\n                    return map;\n                }\n            }\n        }\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_7) throw e_7.error; }\n        }\n        return null;\n    };\n    SubHandlers.prototype.keys = function () {\n        return this.map.keys();\n    };\n    return SubHandlers;\n}());\nexports.SubHandlers = SubHandlers;\n//# sourceMappingURL=MapHandler.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9NYXBIYW5kbGVyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsTUFBTTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CLEdBQUcsa0JBQWtCLEdBQUcsa0JBQWtCO0FBQzdELDJCQUEyQixtQkFBTyxDQUFDLDZGQUErQjtBQUNsRSx3QkFBd0IsbUJBQU8sQ0FBQyx1RkFBNEI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzQ0FBc0Msa0JBQWtCLEtBQUs7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkM7QUFDQSw0RUFBNEUsVUFBVTtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFLFVBQVU7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsVUFBVTtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlFQUF5RSxVQUFVO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlFQUF5RSxVQUFVO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkM7QUFDQSwyRUFBMkUsVUFBVTtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1RUFBdUUsVUFBVTtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9NYXBIYW5kbGVyLmpzPzE3YWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX192YWx1ZXMgPSAodGhpcyAmJiB0aGlzLl9fdmFsdWVzKSB8fCBmdW5jdGlvbihvKSB7XG4gICAgdmFyIHMgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgU3ltYm9sLml0ZXJhdG9yLCBtID0gcyAmJiBvW3NdLCBpID0gMDtcbiAgICBpZiAobSkgcmV0dXJuIG0uY2FsbChvKTtcbiAgICBpZiAobyAmJiB0eXBlb2Ygby5sZW5ndGggPT09IFwibnVtYmVyXCIpIHJldHVybiB7XG4gICAgICAgIG5leHQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChvICYmIGkgPj0gby5sZW5ndGgpIG8gPSB2b2lkIDA7XG4gICAgICAgICAgICByZXR1cm4geyB2YWx1ZTogbyAmJiBvW2krK10sIGRvbmU6ICFvIH07XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IocyA/IFwiT2JqZWN0IGlzIG5vdCBpdGVyYWJsZS5cIiA6IFwiU3ltYm9sLml0ZXJhdG9yIGlzIG5vdCBkZWZpbmVkLlwiKTtcbn07XG52YXIgX19yZWFkID0gKHRoaXMgJiYgdGhpcy5fX3JlYWQpIHx8IGZ1bmN0aW9uIChvLCBuKSB7XG4gICAgdmFyIG0gPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb1tTeW1ib2wuaXRlcmF0b3JdO1xuICAgIGlmICghbSkgcmV0dXJuIG87XG4gICAgdmFyIGkgPSBtLmNhbGwobyksIHIsIGFyID0gW10sIGU7XG4gICAgdHJ5IHtcbiAgICAgICAgd2hpbGUgKChuID09PSB2b2lkIDAgfHwgbi0tID4gMCkgJiYgIShyID0gaS5uZXh0KCkpLmRvbmUpIGFyLnB1c2goci52YWx1ZSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikgeyBlID0geyBlcnJvcjogZXJyb3IgfTsgfVxuICAgIGZpbmFsbHkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKHIgJiYgIXIuZG9uZSAmJiAobSA9IGlbXCJyZXR1cm5cIl0pKSBtLmNhbGwoaSk7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7IGlmIChlKSB0aHJvdyBlLmVycm9yOyB9XG4gICAgfVxuICAgIHJldHVybiBhcjtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlN1YkhhbmRsZXJzID0gZXhwb3J0cy5TdWJIYW5kbGVyID0gZXhwb3J0cy5NYXBIYW5kbGVyID0gdm9pZCAwO1xudmFyIFByaW9yaXRpemVkTGlzdF9qc18xID0gcmVxdWlyZShcIi4uLy4uL3V0aWwvUHJpb3JpdGl6ZWRMaXN0LmpzXCIpO1xudmFyIEZ1bmN0aW9uTGlzdF9qc18xID0gcmVxdWlyZShcIi4uLy4uL3V0aWwvRnVuY3Rpb25MaXN0LmpzXCIpO1xudmFyIE1hcEhhbmRsZXI7XG4oZnVuY3Rpb24gKE1hcEhhbmRsZXIpIHtcbiAgICB2YXIgbWFwcyA9IG5ldyBNYXAoKTtcbiAgICBNYXBIYW5kbGVyLnJlZ2lzdGVyID0gZnVuY3Rpb24gKG1hcCkge1xuICAgICAgICBtYXBzLnNldChtYXAubmFtZSwgbWFwKTtcbiAgICB9O1xuICAgIE1hcEhhbmRsZXIuZ2V0TWFwID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIG1hcHMuZ2V0KG5hbWUpO1xuICAgIH07XG59KShNYXBIYW5kbGVyID0gZXhwb3J0cy5NYXBIYW5kbGVyIHx8IChleHBvcnRzLk1hcEhhbmRsZXIgPSB7fSkpO1xudmFyIFN1YkhhbmRsZXIgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFN1YkhhbmRsZXIoKSB7XG4gICAgICAgIHRoaXMuX2NvbmZpZ3VyYXRpb24gPSBuZXcgUHJpb3JpdGl6ZWRMaXN0X2pzXzEuUHJpb3JpdGl6ZWRMaXN0KCk7XG4gICAgICAgIHRoaXMuX2ZhbGxiYWNrID0gbmV3IEZ1bmN0aW9uTGlzdF9qc18xLkZ1bmN0aW9uTGlzdCgpO1xuICAgIH1cbiAgICBTdWJIYW5kbGVyLnByb3RvdHlwZS5hZGQgPSBmdW5jdGlvbiAobWFwcywgZmFsbGJhY2ssIHByaW9yaXR5KSB7XG4gICAgICAgIHZhciBlXzEsIF9hO1xuICAgICAgICBpZiAocHJpb3JpdHkgPT09IHZvaWQgMCkgeyBwcmlvcml0eSA9IFByaW9yaXRpemVkTGlzdF9qc18xLlByaW9yaXRpemVkTGlzdC5ERUZBVUxUUFJJT1JJVFk7IH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGZvciAodmFyIF9iID0gX192YWx1ZXMobWFwcy5zbGljZSgpLnJldmVyc2UoKSksIF9jID0gX2IubmV4dCgpOyAhX2MuZG9uZTsgX2MgPSBfYi5uZXh0KCkpIHtcbiAgICAgICAgICAgICAgICB2YXIgbmFtZV8xID0gX2MudmFsdWU7XG4gICAgICAgICAgICAgICAgdmFyIG1hcCA9IE1hcEhhbmRsZXIuZ2V0TWFwKG5hbWVfMSk7XG4gICAgICAgICAgICAgICAgaWYgKCFtYXApIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy53YXJuKCdDb25maWd1cmF0aW9uICcgKyBuYW1lXzEgKyAnIG5vdCBmb3VuZCEgT21pdHRlZC4nKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLl9jb25maWd1cmF0aW9uLmFkZChtYXAsIHByaW9yaXR5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZV8xXzEpIHsgZV8xID0geyBlcnJvcjogZV8xXzEgfTsgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgaWYgKF9jICYmICFfYy5kb25lICYmIChfYSA9IF9iLnJldHVybikpIF9hLmNhbGwoX2IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZmluYWxseSB7IGlmIChlXzEpIHRocm93IGVfMS5lcnJvcjsgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChmYWxsYmFjaykge1xuICAgICAgICAgICAgdGhpcy5fZmFsbGJhY2suYWRkKGZhbGxiYWNrLCBwcmlvcml0eSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFN1YkhhbmRsZXIucHJvdG90eXBlLnBhcnNlID0gZnVuY3Rpb24gKGlucHV0KSB7XG4gICAgICAgIHZhciBlXzIsIF9hO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yICh2YXIgX2IgPSBfX3ZhbHVlcyh0aGlzLl9jb25maWd1cmF0aW9uKSwgX2MgPSBfYi5uZXh0KCk7ICFfYy5kb25lOyBfYyA9IF9iLm5leHQoKSkge1xuICAgICAgICAgICAgICAgIHZhciBtYXAgPSBfYy52YWx1ZS5pdGVtO1xuICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSBtYXAucGFyc2UoaW5wdXQpO1xuICAgICAgICAgICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVfMl8xKSB7IGVfMiA9IHsgZXJyb3I6IGVfMl8xIH07IH1cbiAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGlmIChfYyAmJiAhX2MuZG9uZSAmJiAoX2EgPSBfYi5yZXR1cm4pKSBfYS5jYWxsKF9iKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpbmFsbHkgeyBpZiAoZV8yKSB0aHJvdyBlXzIuZXJyb3I7IH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgX2QgPSBfX3JlYWQoaW5wdXQsIDIpLCBlbnYgPSBfZFswXSwgc3ltYm9sID0gX2RbMV07XG4gICAgICAgIEFycmF5LmZyb20odGhpcy5fZmFsbGJhY2spWzBdLml0ZW0oZW52LCBzeW1ib2wpO1xuICAgIH07XG4gICAgU3ViSGFuZGxlci5wcm90b3R5cGUubG9va3VwID0gZnVuY3Rpb24gKHN5bWJvbCkge1xuICAgICAgICB2YXIgbWFwID0gdGhpcy5hcHBsaWNhYmxlKHN5bWJvbCk7XG4gICAgICAgIHJldHVybiBtYXAgPyBtYXAubG9va3VwKHN5bWJvbCkgOiBudWxsO1xuICAgIH07XG4gICAgU3ViSGFuZGxlci5wcm90b3R5cGUuY29udGFpbnMgPSBmdW5jdGlvbiAoc3ltYm9sKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFwcGxpY2FibGUoc3ltYm9sKSA/IHRydWUgOiBmYWxzZTtcbiAgICB9O1xuICAgIFN1YkhhbmRsZXIucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZV8zLCBfYTtcbiAgICAgICAgdmFyIG5hbWVzID0gW107XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBmb3IgKHZhciBfYiA9IF9fdmFsdWVzKHRoaXMuX2NvbmZpZ3VyYXRpb24pLCBfYyA9IF9iLm5leHQoKTsgIV9jLmRvbmU7IF9jID0gX2IubmV4dCgpKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1hcCA9IF9jLnZhbHVlLml0ZW07XG4gICAgICAgICAgICAgICAgbmFtZXMucHVzaChtYXAubmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVfM18xKSB7IGVfMyA9IHsgZXJyb3I6IGVfM18xIH07IH1cbiAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGlmIChfYyAmJiAhX2MuZG9uZSAmJiAoX2EgPSBfYi5yZXR1cm4pKSBfYS5jYWxsKF9iKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpbmFsbHkgeyBpZiAoZV8zKSB0aHJvdyBlXzMuZXJyb3I7IH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmFtZXMuam9pbignLCAnKTtcbiAgICB9O1xuICAgIFN1YkhhbmRsZXIucHJvdG90eXBlLmFwcGxpY2FibGUgPSBmdW5jdGlvbiAoc3ltYm9sKSB7XG4gICAgICAgIHZhciBlXzQsIF9hO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yICh2YXIgX2IgPSBfX3ZhbHVlcyh0aGlzLl9jb25maWd1cmF0aW9uKSwgX2MgPSBfYi5uZXh0KCk7ICFfYy5kb25lOyBfYyA9IF9iLm5leHQoKSkge1xuICAgICAgICAgICAgICAgIHZhciBtYXAgPSBfYy52YWx1ZS5pdGVtO1xuICAgICAgICAgICAgICAgIGlmIChtYXAuY29udGFpbnMoc3ltYm9sKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWFwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZV80XzEpIHsgZV80ID0geyBlcnJvcjogZV80XzEgfTsgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgaWYgKF9jICYmICFfYy5kb25lICYmIChfYSA9IF9iLnJldHVybikpIF9hLmNhbGwoX2IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZmluYWxseSB7IGlmIChlXzQpIHRocm93IGVfNC5lcnJvcjsgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgU3ViSGFuZGxlci5wcm90b3R5cGUucmV0cmlldmUgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICB2YXIgZV81LCBfYTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGZvciAodmFyIF9iID0gX192YWx1ZXModGhpcy5fY29uZmlndXJhdGlvbiksIF9jID0gX2IubmV4dCgpOyAhX2MuZG9uZTsgX2MgPSBfYi5uZXh0KCkpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWFwID0gX2MudmFsdWUuaXRlbTtcbiAgICAgICAgICAgICAgICBpZiAobWFwLm5hbWUgPT09IG5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1hcDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVfNV8xKSB7IGVfNSA9IHsgZXJyb3I6IGVfNV8xIH07IH1cbiAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGlmIChfYyAmJiAhX2MuZG9uZSAmJiAoX2EgPSBfYi5yZXR1cm4pKSBfYS5jYWxsKF9iKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpbmFsbHkgeyBpZiAoZV81KSB0aHJvdyBlXzUuZXJyb3I7IH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9O1xuICAgIFN1YkhhbmRsZXIucHJvdG90eXBlLndhcm4gPSBmdW5jdGlvbiAobWVzc2FnZSkge1xuICAgICAgICBjb25zb2xlLmxvZygnVGV4UGFyc2VyIFdhcm5pbmc6ICcgKyBtZXNzYWdlKTtcbiAgICB9O1xuICAgIHJldHVybiBTdWJIYW5kbGVyO1xufSgpKTtcbmV4cG9ydHMuU3ViSGFuZGxlciA9IFN1YkhhbmRsZXI7XG52YXIgU3ViSGFuZGxlcnMgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFN1YkhhbmRsZXJzKCkge1xuICAgICAgICB0aGlzLm1hcCA9IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgU3ViSGFuZGxlcnMucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uIChoYW5kbGVycywgZmFsbGJhY2tzLCBwcmlvcml0eSkge1xuICAgICAgICB2YXIgZV82LCBfYTtcbiAgICAgICAgaWYgKHByaW9yaXR5ID09PSB2b2lkIDApIHsgcHJpb3JpdHkgPSBQcmlvcml0aXplZExpc3RfanNfMS5Qcmlvcml0aXplZExpc3QuREVGQVVMVFBSSU9SSVRZOyB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBmb3IgKHZhciBfYiA9IF9fdmFsdWVzKE9iamVjdC5rZXlzKGhhbmRsZXJzKSksIF9jID0gX2IubmV4dCgpOyAhX2MuZG9uZTsgX2MgPSBfYi5uZXh0KCkpIHtcbiAgICAgICAgICAgICAgICB2YXIga2V5ID0gX2MudmFsdWU7XG4gICAgICAgICAgICAgICAgdmFyIG5hbWVfMiA9IGtleTtcbiAgICAgICAgICAgICAgICB2YXIgc3ViSGFuZGxlciA9IHRoaXMuZ2V0KG5hbWVfMik7XG4gICAgICAgICAgICAgICAgaWYgKCFzdWJIYW5kbGVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHN1YkhhbmRsZXIgPSBuZXcgU3ViSGFuZGxlcigpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldChuYW1lXzIsIHN1YkhhbmRsZXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzdWJIYW5kbGVyLmFkZChoYW5kbGVyc1tuYW1lXzJdLCBmYWxsYmFja3NbbmFtZV8yXSwgcHJpb3JpdHkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlXzZfMSkgeyBlXzYgPSB7IGVycm9yOiBlXzZfMSB9OyB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiAoX2MgJiYgIV9jLmRvbmUgJiYgKF9hID0gX2IucmV0dXJuKSkgX2EuY2FsbChfYik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmaW5hbGx5IHsgaWYgKGVfNikgdGhyb3cgZV82LmVycm9yOyB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFN1YkhhbmRsZXJzLnByb3RvdHlwZS5zZXQgPSBmdW5jdGlvbiAobmFtZSwgc3ViSGFuZGxlcikge1xuICAgICAgICB0aGlzLm1hcC5zZXQobmFtZSwgc3ViSGFuZGxlcik7XG4gICAgfTtcbiAgICBTdWJIYW5kbGVycy5wcm90b3R5cGUuZ2V0ID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWFwLmdldChuYW1lKTtcbiAgICB9O1xuICAgIFN1YkhhbmRsZXJzLnByb3RvdHlwZS5yZXRyaWV2ZSA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgIHZhciBlXzcsIF9hO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yICh2YXIgX2IgPSBfX3ZhbHVlcyh0aGlzLm1hcC52YWx1ZXMoKSksIF9jID0gX2IubmV4dCgpOyAhX2MuZG9uZTsgX2MgPSBfYi5uZXh0KCkpIHtcbiAgICAgICAgICAgICAgICB2YXIgaGFuZGxlciA9IF9jLnZhbHVlO1xuICAgICAgICAgICAgICAgIHZhciBtYXAgPSBoYW5kbGVyLnJldHJpZXZlKG5hbWUpO1xuICAgICAgICAgICAgICAgIGlmIChtYXApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1hcDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVfN18xKSB7IGVfNyA9IHsgZXJyb3I6IGVfN18xIH07IH1cbiAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGlmIChfYyAmJiAhX2MuZG9uZSAmJiAoX2EgPSBfYi5yZXR1cm4pKSBfYS5jYWxsKF9iKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpbmFsbHkgeyBpZiAoZV83KSB0aHJvdyBlXzcuZXJyb3I7IH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9O1xuICAgIFN1YkhhbmRsZXJzLnByb3RvdHlwZS5rZXlzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAua2V5cygpO1xuICAgIH07XG4gICAgcmV0dXJuIFN1YkhhbmRsZXJzO1xufSgpKTtcbmV4cG9ydHMuU3ViSGFuZGxlcnMgPSBTdWJIYW5kbGVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1hcEhhbmRsZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/MapHandler.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/NodeFactory.js":
/*!***************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/NodeFactory.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NodeFactory = void 0;\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ./NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar NodeFactory = (function () {\n    function NodeFactory() {\n        this.mmlFactory = null;\n        this.factory = { 'node': NodeFactory.createNode,\n            'token': NodeFactory.createToken,\n            'text': NodeFactory.createText,\n            'error': NodeFactory.createError\n        };\n    }\n    NodeFactory.createNode = function (factory, kind, children, def, text) {\n        if (children === void 0) { children = []; }\n        if (def === void 0) { def = {}; }\n        var node = factory.mmlFactory.create(kind);\n        node.setChildren(children);\n        if (text) {\n            node.appendChild(text);\n        }\n        NodeUtil_js_1.default.setProperties(node, def);\n        return node;\n    };\n    NodeFactory.createToken = function (factory, kind, def, text) {\n        if (def === void 0) { def = {}; }\n        if (text === void 0) { text = ''; }\n        var textNode = factory.create('text', text);\n        return factory.create('node', kind, [], def, textNode);\n    };\n    NodeFactory.createText = function (factory, text) {\n        if (text == null) {\n            return null;\n        }\n        return factory.mmlFactory.create('text').setText(text);\n    };\n    NodeFactory.createError = function (factory, message) {\n        var text = factory.create('text', message);\n        var mtext = factory.create('node', 'mtext', [], {}, text);\n        var error = factory.create('node', 'merror', [mtext], { 'data-mjx-error': message });\n        return error;\n    };\n    NodeFactory.prototype.setMmlFactory = function (mmlFactory) {\n        this.mmlFactory = mmlFactory;\n    };\n    NodeFactory.prototype.set = function (kind, func) {\n        this.factory[kind] = func;\n    };\n    NodeFactory.prototype.setCreators = function (maps) {\n        for (var kind in maps) {\n            this.set(kind, maps[kind]);\n        }\n    };\n    NodeFactory.prototype.create = function (kind) {\n        var rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            rest[_i - 1] = arguments[_i];\n        }\n        var func = this.factory[kind] || this.factory['node'];\n        var node = func.apply(void 0, __spreadArray([this, rest[0]], __read(rest.slice(1)), false));\n        if (kind === 'node') {\n            this.configuration.addNode(rest[0], node);\n        }\n        return node;\n    };\n    NodeFactory.prototype.get = function (kind) {\n        return this.factory[kind];\n    };\n    return NodeFactory;\n}());\nexports.NodeFactory = NodeFactory;\n//# sourceMappingURL=NodeFactory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9Ob2RlRmFjdG9yeS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE1BQU07QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RUFBNkUsT0FBTztBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQixvQ0FBb0MsbUJBQU8sQ0FBQywyRUFBZTtBQUMzRDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUIsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwREFBMEQ7QUFDMUQsZ0VBQWdFLDJCQUEyQjtBQUMzRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsdUJBQXVCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9Ob2RlRmFjdG9yeS5qcz82NGJlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fcmVhZCA9ICh0aGlzICYmIHRoaXMuX19yZWFkKSB8fCBmdW5jdGlvbiAobywgbikge1xuICAgIHZhciBtID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9bU3ltYm9sLml0ZXJhdG9yXTtcbiAgICBpZiAoIW0pIHJldHVybiBvO1xuICAgIHZhciBpID0gbS5jYWxsKG8pLCByLCBhciA9IFtdLCBlO1xuICAgIHRyeSB7XG4gICAgICAgIHdoaWxlICgobiA9PT0gdm9pZCAwIHx8IG4tLSA+IDApICYmICEociA9IGkubmV4dCgpKS5kb25lKSBhci5wdXNoKHIudmFsdWUpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHsgZSA9IHsgZXJyb3I6IGVycm9yIH07IH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChyICYmICFyLmRvbmUgJiYgKG0gPSBpW1wicmV0dXJuXCJdKSkgbS5jYWxsKGkpO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkgeyBpZiAoZSkgdGhyb3cgZS5lcnJvcjsgfVxuICAgIH1cbiAgICByZXR1cm4gYXI7XG59O1xudmFyIF9fc3ByZWFkQXJyYXkgPSAodGhpcyAmJiB0aGlzLl9fc3ByZWFkQXJyYXkpIHx8IGZ1bmN0aW9uICh0bywgZnJvbSwgcGFjaykge1xuICAgIGlmIChwYWNrIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIGZvciAodmFyIGkgPSAwLCBsID0gZnJvbS5sZW5ndGgsIGFyOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGlmIChhciB8fCAhKGkgaW4gZnJvbSkpIHtcbiAgICAgICAgICAgIGlmICghYXIpIGFyID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSwgMCwgaSk7XG4gICAgICAgICAgICBhcltpXSA9IGZyb21baV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRvLmNvbmNhdChhciB8fCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tKSk7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Ob2RlRmFjdG9yeSA9IHZvaWQgMDtcbnZhciBOb2RlVXRpbF9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL05vZGVVdGlsLmpzXCIpKTtcbnZhciBOb2RlRmFjdG9yeSA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTm9kZUZhY3RvcnkoKSB7XG4gICAgICAgIHRoaXMubW1sRmFjdG9yeSA9IG51bGw7XG4gICAgICAgIHRoaXMuZmFjdG9yeSA9IHsgJ25vZGUnOiBOb2RlRmFjdG9yeS5jcmVhdGVOb2RlLFxuICAgICAgICAgICAgJ3Rva2VuJzogTm9kZUZhY3RvcnkuY3JlYXRlVG9rZW4sXG4gICAgICAgICAgICAndGV4dCc6IE5vZGVGYWN0b3J5LmNyZWF0ZVRleHQsXG4gICAgICAgICAgICAnZXJyb3InOiBOb2RlRmFjdG9yeS5jcmVhdGVFcnJvclxuICAgICAgICB9O1xuICAgIH1cbiAgICBOb2RlRmFjdG9yeS5jcmVhdGVOb2RlID0gZnVuY3Rpb24gKGZhY3RvcnksIGtpbmQsIGNoaWxkcmVuLCBkZWYsIHRleHQpIHtcbiAgICAgICAgaWYgKGNoaWxkcmVuID09PSB2b2lkIDApIHsgY2hpbGRyZW4gPSBbXTsgfVxuICAgICAgICBpZiAoZGVmID09PSB2b2lkIDApIHsgZGVmID0ge307IH1cbiAgICAgICAgdmFyIG5vZGUgPSBmYWN0b3J5Lm1tbEZhY3RvcnkuY3JlYXRlKGtpbmQpO1xuICAgICAgICBub2RlLnNldENoaWxkcmVuKGNoaWxkcmVuKTtcbiAgICAgICAgaWYgKHRleHQpIHtcbiAgICAgICAgICAgIG5vZGUuYXBwZW5kQ2hpbGQodGV4dCk7XG4gICAgICAgIH1cbiAgICAgICAgTm9kZVV0aWxfanNfMS5kZWZhdWx0LnNldFByb3BlcnRpZXMobm9kZSwgZGVmKTtcbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfTtcbiAgICBOb2RlRmFjdG9yeS5jcmVhdGVUb2tlbiA9IGZ1bmN0aW9uIChmYWN0b3J5LCBraW5kLCBkZWYsIHRleHQpIHtcbiAgICAgICAgaWYgKGRlZiA9PT0gdm9pZCAwKSB7IGRlZiA9IHt9OyB9XG4gICAgICAgIGlmICh0ZXh0ID09PSB2b2lkIDApIHsgdGV4dCA9ICcnOyB9XG4gICAgICAgIHZhciB0ZXh0Tm9kZSA9IGZhY3RvcnkuY3JlYXRlKCd0ZXh0JywgdGV4dCk7XG4gICAgICAgIHJldHVybiBmYWN0b3J5LmNyZWF0ZSgnbm9kZScsIGtpbmQsIFtdLCBkZWYsIHRleHROb2RlKTtcbiAgICB9O1xuICAgIE5vZGVGYWN0b3J5LmNyZWF0ZVRleHQgPSBmdW5jdGlvbiAoZmFjdG9yeSwgdGV4dCkge1xuICAgICAgICBpZiAodGV4dCA9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFjdG9yeS5tbWxGYWN0b3J5LmNyZWF0ZSgndGV4dCcpLnNldFRleHQodGV4dCk7XG4gICAgfTtcbiAgICBOb2RlRmFjdG9yeS5jcmVhdGVFcnJvciA9IGZ1bmN0aW9uIChmYWN0b3J5LCBtZXNzYWdlKSB7XG4gICAgICAgIHZhciB0ZXh0ID0gZmFjdG9yeS5jcmVhdGUoJ3RleHQnLCBtZXNzYWdlKTtcbiAgICAgICAgdmFyIG10ZXh0ID0gZmFjdG9yeS5jcmVhdGUoJ25vZGUnLCAnbXRleHQnLCBbXSwge30sIHRleHQpO1xuICAgICAgICB2YXIgZXJyb3IgPSBmYWN0b3J5LmNyZWF0ZSgnbm9kZScsICdtZXJyb3InLCBbbXRleHRdLCB7ICdkYXRhLW1qeC1lcnJvcic6IG1lc3NhZ2UgfSk7XG4gICAgICAgIHJldHVybiBlcnJvcjtcbiAgICB9O1xuICAgIE5vZGVGYWN0b3J5LnByb3RvdHlwZS5zZXRNbWxGYWN0b3J5ID0gZnVuY3Rpb24gKG1tbEZhY3RvcnkpIHtcbiAgICAgICAgdGhpcy5tbWxGYWN0b3J5ID0gbW1sRmFjdG9yeTtcbiAgICB9O1xuICAgIE5vZGVGYWN0b3J5LnByb3RvdHlwZS5zZXQgPSBmdW5jdGlvbiAoa2luZCwgZnVuYykge1xuICAgICAgICB0aGlzLmZhY3Rvcnlba2luZF0gPSBmdW5jO1xuICAgIH07XG4gICAgTm9kZUZhY3RvcnkucHJvdG90eXBlLnNldENyZWF0b3JzID0gZnVuY3Rpb24gKG1hcHMpIHtcbiAgICAgICAgZm9yICh2YXIga2luZCBpbiBtYXBzKSB7XG4gICAgICAgICAgICB0aGlzLnNldChraW5kLCBtYXBzW2tpbmRdKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgTm9kZUZhY3RvcnkucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uIChraW5kKSB7XG4gICAgICAgIHZhciByZXN0ID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMTsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICByZXN0W19pIC0gMV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICB9XG4gICAgICAgIHZhciBmdW5jID0gdGhpcy5mYWN0b3J5W2tpbmRdIHx8IHRoaXMuZmFjdG9yeVsnbm9kZSddO1xuICAgICAgICB2YXIgbm9kZSA9IGZ1bmMuYXBwbHkodm9pZCAwLCBfX3NwcmVhZEFycmF5KFt0aGlzLCByZXN0WzBdXSwgX19yZWFkKHJlc3Quc2xpY2UoMSkpLCBmYWxzZSkpO1xuICAgICAgICBpZiAoa2luZCA9PT0gJ25vZGUnKSB7XG4gICAgICAgICAgICB0aGlzLmNvbmZpZ3VyYXRpb24uYWRkTm9kZShyZXN0WzBdLCBub2RlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbm9kZTtcbiAgICB9O1xuICAgIE5vZGVGYWN0b3J5LnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAoa2luZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5mYWN0b3J5W2tpbmRdO1xuICAgIH07XG4gICAgcmV0dXJuIE5vZGVGYWN0b3J5O1xufSgpKTtcbmV4cG9ydHMuTm9kZUZhY3RvcnkgPSBOb2RlRmFjdG9yeTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU5vZGVGYWN0b3J5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/NodeFactory.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/NodeUtil.js":
/*!************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/NodeUtil.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar MmlNode_js_1 = __webpack_require__(/*! ../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar mo_js_1 = __webpack_require__(/*! ../../core/MmlTree/MmlNodes/mo.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNodes/mo.js\");\nvar NodeUtil;\n(function (NodeUtil) {\n    var attrs = new Map([\n        ['autoOP', true],\n        ['fnOP', true],\n        ['movesupsub', true],\n        ['subsupOK', true],\n        ['texprimestyle', true],\n        ['useHeight', true],\n        ['variantForm', true],\n        ['withDelims', true],\n        ['mathaccent', true],\n        ['open', true],\n        ['close', true]\n    ]);\n    function createEntity(code) {\n        return String.fromCodePoint(parseInt(code, 16));\n    }\n    NodeUtil.createEntity = createEntity;\n    function getChildren(node) {\n        return node.childNodes;\n    }\n    NodeUtil.getChildren = getChildren;\n    function getText(node) {\n        return node.getText();\n    }\n    NodeUtil.getText = getText;\n    function appendChildren(node, children) {\n        var e_1, _a;\n        try {\n            for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                var child = children_1_1.value;\n                node.appendChild(child);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    NodeUtil.appendChildren = appendChildren;\n    function setAttribute(node, attribute, value) {\n        node.attributes.set(attribute, value);\n    }\n    NodeUtil.setAttribute = setAttribute;\n    function setProperty(node, property, value) {\n        node.setProperty(property, value);\n    }\n    NodeUtil.setProperty = setProperty;\n    function setProperties(node, properties) {\n        var e_2, _a;\n        try {\n            for (var _b = __values(Object.keys(properties)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var name_1 = _c.value;\n                var value = properties[name_1];\n                if (name_1 === 'texClass') {\n                    node.texClass = value;\n                    node.setProperty(name_1, value);\n                }\n                else if (name_1 === 'movablelimits') {\n                    node.setProperty('movablelimits', value);\n                    if (node.isKind('mo') || node.isKind('mstyle')) {\n                        node.attributes.set('movablelimits', value);\n                    }\n                }\n                else if (name_1 === 'inferred') {\n                }\n                else if (attrs.has(name_1)) {\n                    node.setProperty(name_1, value);\n                }\n                else {\n                    node.attributes.set(name_1, value);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    }\n    NodeUtil.setProperties = setProperties;\n    function getProperty(node, property) {\n        return node.getProperty(property);\n    }\n    NodeUtil.getProperty = getProperty;\n    function getAttribute(node, attr) {\n        return node.attributes.get(attr);\n    }\n    NodeUtil.getAttribute = getAttribute;\n    function removeProperties(node) {\n        var properties = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            properties[_i - 1] = arguments[_i];\n        }\n        node.removeProperty.apply(node, __spreadArray([], __read(properties), false));\n    }\n    NodeUtil.removeProperties = removeProperties;\n    function getChildAt(node, position) {\n        return node.childNodes[position];\n    }\n    NodeUtil.getChildAt = getChildAt;\n    function setChild(node, position, child) {\n        var children = node.childNodes;\n        children[position] = child;\n        if (child) {\n            child.parent = node;\n        }\n    }\n    NodeUtil.setChild = setChild;\n    function copyChildren(oldNode, newNode) {\n        var children = oldNode.childNodes;\n        for (var i = 0; i < children.length; i++) {\n            setChild(newNode, i, children[i]);\n        }\n    }\n    NodeUtil.copyChildren = copyChildren;\n    function copyAttributes(oldNode, newNode) {\n        newNode.attributes = oldNode.attributes;\n        setProperties(newNode, oldNode.getAllProperties());\n    }\n    NodeUtil.copyAttributes = copyAttributes;\n    function isType(node, kind) {\n        return node.isKind(kind);\n    }\n    NodeUtil.isType = isType;\n    function isEmbellished(node) {\n        return node.isEmbellished;\n    }\n    NodeUtil.isEmbellished = isEmbellished;\n    function getTexClass(node) {\n        return node.texClass;\n    }\n    NodeUtil.getTexClass = getTexClass;\n    function getCoreMO(node) {\n        return node.coreMO();\n    }\n    NodeUtil.getCoreMO = getCoreMO;\n    function isNode(item) {\n        return item instanceof MmlNode_js_1.AbstractMmlNode || item instanceof MmlNode_js_1.AbstractMmlEmptyNode;\n    }\n    NodeUtil.isNode = isNode;\n    function isInferred(node) {\n        return node.isInferred;\n    }\n    NodeUtil.isInferred = isInferred;\n    function getForm(node) {\n        var e_3, _a;\n        if (!isType(node, 'mo')) {\n            return null;\n        }\n        var mo = node;\n        var forms = mo.getForms();\n        try {\n            for (var forms_1 = __values(forms), forms_1_1 = forms_1.next(); !forms_1_1.done; forms_1_1 = forms_1.next()) {\n                var form = forms_1_1.value;\n                var symbol = mo_js_1.MmlMo.OPTABLE[form][mo.getText()];\n                if (symbol) {\n                    return symbol;\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (forms_1_1 && !forms_1_1.done && (_a = forms_1.return)) _a.call(forms_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return null;\n    }\n    NodeUtil.getForm = getForm;\n})(NodeUtil || (NodeUtil = {}));\nexports[\"default\"] = NodeUtil;\n//# sourceMappingURL=NodeUtil.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/NodeUtil.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/ParseMethods.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/ParseMethods.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ./NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar TexConstants_js_1 = __webpack_require__(/*! ./TexConstants.js */ \"./node_modules/mathjax-full/js/input/tex/TexConstants.js\");\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ./ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar ParseMethods;\n(function (ParseMethods) {\n    function variable(parser, c) {\n        var def = ParseUtil_js_1.default.getFontDef(parser);\n        var env = parser.stack.env;\n        if (env.multiLetterIdentifiers && env.font !== '') {\n            c = parser.string.substr(parser.i - 1).match(env.multiLetterIdentifiers)[0];\n            parser.i += c.length - 1;\n            if (def.mathvariant === TexConstants_js_1.TexConstant.Variant.NORMAL && env.noAutoOP && c.length > 1) {\n                def.autoOP = false;\n            }\n        }\n        var node = parser.create('token', 'mi', def, c);\n        parser.Push(node);\n    }\n    ParseMethods.variable = variable;\n    function digit(parser, c) {\n        var mml;\n        var pattern = parser.configuration.options['digits'];\n        var n = parser.string.slice(parser.i - 1).match(pattern);\n        var def = ParseUtil_js_1.default.getFontDef(parser);\n        if (n) {\n            mml = parser.create('token', 'mn', def, n[0].replace(/[{}]/g, ''));\n            parser.i += n[0].length - 1;\n        }\n        else {\n            mml = parser.create('token', 'mo', def, c);\n        }\n        parser.Push(mml);\n    }\n    ParseMethods.digit = digit;\n    function controlSequence(parser, _c) {\n        var name = parser.GetCS();\n        parser.parse('macro', [parser, name]);\n    }\n    ParseMethods.controlSequence = controlSequence;\n    function mathchar0mi(parser, mchar) {\n        var def = mchar.attributes || { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC };\n        var node = parser.create('token', 'mi', def, mchar.char);\n        parser.Push(node);\n    }\n    ParseMethods.mathchar0mi = mathchar0mi;\n    function mathchar0mo(parser, mchar) {\n        var def = mchar.attributes || {};\n        def['stretchy'] = false;\n        var node = parser.create('token', 'mo', def, mchar.char);\n        NodeUtil_js_1.default.setProperty(node, 'fixStretchy', true);\n        parser.configuration.addNode('fixStretchy', node);\n        parser.Push(node);\n    }\n    ParseMethods.mathchar0mo = mathchar0mo;\n    function mathchar7(parser, mchar) {\n        var def = mchar.attributes || { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL };\n        if (parser.stack.env['font']) {\n            def['mathvariant'] = parser.stack.env['font'];\n        }\n        var node = parser.create('token', 'mi', def, mchar.char);\n        parser.Push(node);\n    }\n    ParseMethods.mathchar7 = mathchar7;\n    function delimiter(parser, delim) {\n        var def = delim.attributes || {};\n        def = Object.assign({ fence: false, stretchy: false }, def);\n        var node = parser.create('token', 'mo', def, delim.char);\n        parser.Push(node);\n    }\n    ParseMethods.delimiter = delimiter;\n    function environment(parser, env, func, args) {\n        var end = args[0];\n        var mml = parser.itemFactory.create('begin').setProperties({ name: env, end: end });\n        mml = func.apply(void 0, __spreadArray([parser, mml], __read(args.slice(1)), false));\n        parser.Push(mml);\n    }\n    ParseMethods.environment = environment;\n})(ParseMethods || (ParseMethods = {}));\nexports[\"default\"] = ParseMethods;\n//# sourceMappingURL=ParseMethods.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9QYXJzZU1ldGhvZHMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixNQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkVBQTZFLE9BQU87QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQ0FBb0MsbUJBQU8sQ0FBQywyRUFBZTtBQUMzRCx3QkFBd0IsbUJBQU8sQ0FBQyxtRkFBbUI7QUFDbkQscUNBQXFDLG1CQUFPLENBQUMsNkVBQWdCO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUVBQXFFO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsK0JBQStCO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFFQUFxRSxxQkFBcUI7QUFDMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLG9DQUFvQztBQUNyQyxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvaW5wdXQvdGV4L1BhcnNlTWV0aG9kcy5qcz9jZGUzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fcmVhZCA9ICh0aGlzICYmIHRoaXMuX19yZWFkKSB8fCBmdW5jdGlvbiAobywgbikge1xuICAgIHZhciBtID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9bU3ltYm9sLml0ZXJhdG9yXTtcbiAgICBpZiAoIW0pIHJldHVybiBvO1xuICAgIHZhciBpID0gbS5jYWxsKG8pLCByLCBhciA9IFtdLCBlO1xuICAgIHRyeSB7XG4gICAgICAgIHdoaWxlICgobiA9PT0gdm9pZCAwIHx8IG4tLSA+IDApICYmICEociA9IGkubmV4dCgpKS5kb25lKSBhci5wdXNoKHIudmFsdWUpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHsgZSA9IHsgZXJyb3I6IGVycm9yIH07IH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChyICYmICFyLmRvbmUgJiYgKG0gPSBpW1wicmV0dXJuXCJdKSkgbS5jYWxsKGkpO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkgeyBpZiAoZSkgdGhyb3cgZS5lcnJvcjsgfVxuICAgIH1cbiAgICByZXR1cm4gYXI7XG59O1xudmFyIF9fc3ByZWFkQXJyYXkgPSAodGhpcyAmJiB0aGlzLl9fc3ByZWFkQXJyYXkpIHx8IGZ1bmN0aW9uICh0bywgZnJvbSwgcGFjaykge1xuICAgIGlmIChwYWNrIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIGZvciAodmFyIGkgPSAwLCBsID0gZnJvbS5sZW5ndGgsIGFyOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGlmIChhciB8fCAhKGkgaW4gZnJvbSkpIHtcbiAgICAgICAgICAgIGlmICghYXIpIGFyID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSwgMCwgaSk7XG4gICAgICAgICAgICBhcltpXSA9IGZyb21baV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRvLmNvbmNhdChhciB8fCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tKSk7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIE5vZGVVdGlsX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vTm9kZVV0aWwuanNcIikpO1xudmFyIFRleENvbnN0YW50c19qc18xID0gcmVxdWlyZShcIi4vVGV4Q29uc3RhbnRzLmpzXCIpO1xudmFyIFBhcnNlVXRpbF9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL1BhcnNlVXRpbC5qc1wiKSk7XG52YXIgUGFyc2VNZXRob2RzO1xuKGZ1bmN0aW9uIChQYXJzZU1ldGhvZHMpIHtcbiAgICBmdW5jdGlvbiB2YXJpYWJsZShwYXJzZXIsIGMpIHtcbiAgICAgICAgdmFyIGRlZiA9IFBhcnNlVXRpbF9qc18xLmRlZmF1bHQuZ2V0Rm9udERlZihwYXJzZXIpO1xuICAgICAgICB2YXIgZW52ID0gcGFyc2VyLnN0YWNrLmVudjtcbiAgICAgICAgaWYgKGVudi5tdWx0aUxldHRlcklkZW50aWZpZXJzICYmIGVudi5mb250ICE9PSAnJykge1xuICAgICAgICAgICAgYyA9IHBhcnNlci5zdHJpbmcuc3Vic3RyKHBhcnNlci5pIC0gMSkubWF0Y2goZW52Lm11bHRpTGV0dGVySWRlbnRpZmllcnMpWzBdO1xuICAgICAgICAgICAgcGFyc2VyLmkgKz0gYy5sZW5ndGggLSAxO1xuICAgICAgICAgICAgaWYgKGRlZi5tYXRodmFyaWFudCA9PT0gVGV4Q29uc3RhbnRzX2pzXzEuVGV4Q29uc3RhbnQuVmFyaWFudC5OT1JNQUwgJiYgZW52Lm5vQXV0b09QICYmIGMubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgIGRlZi5hdXRvT1AgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgbm9kZSA9IHBhcnNlci5jcmVhdGUoJ3Rva2VuJywgJ21pJywgZGVmLCBjKTtcbiAgICAgICAgcGFyc2VyLlB1c2gobm9kZSk7XG4gICAgfVxuICAgIFBhcnNlTWV0aG9kcy52YXJpYWJsZSA9IHZhcmlhYmxlO1xuICAgIGZ1bmN0aW9uIGRpZ2l0KHBhcnNlciwgYykge1xuICAgICAgICB2YXIgbW1sO1xuICAgICAgICB2YXIgcGF0dGVybiA9IHBhcnNlci5jb25maWd1cmF0aW9uLm9wdGlvbnNbJ2RpZ2l0cyddO1xuICAgICAgICB2YXIgbiA9IHBhcnNlci5zdHJpbmcuc2xpY2UocGFyc2VyLmkgLSAxKS5tYXRjaChwYXR0ZXJuKTtcbiAgICAgICAgdmFyIGRlZiA9IFBhcnNlVXRpbF9qc18xLmRlZmF1bHQuZ2V0Rm9udERlZihwYXJzZXIpO1xuICAgICAgICBpZiAobikge1xuICAgICAgICAgICAgbW1sID0gcGFyc2VyLmNyZWF0ZSgndG9rZW4nLCAnbW4nLCBkZWYsIG5bMF0ucmVwbGFjZSgvW3t9XS9nLCAnJykpO1xuICAgICAgICAgICAgcGFyc2VyLmkgKz0gblswXS5sZW5ndGggLSAxO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbW1sID0gcGFyc2VyLmNyZWF0ZSgndG9rZW4nLCAnbW8nLCBkZWYsIGMpO1xuICAgICAgICB9XG4gICAgICAgIHBhcnNlci5QdXNoKG1tbCk7XG4gICAgfVxuICAgIFBhcnNlTWV0aG9kcy5kaWdpdCA9IGRpZ2l0O1xuICAgIGZ1bmN0aW9uIGNvbnRyb2xTZXF1ZW5jZShwYXJzZXIsIF9jKSB7XG4gICAgICAgIHZhciBuYW1lID0gcGFyc2VyLkdldENTKCk7XG4gICAgICAgIHBhcnNlci5wYXJzZSgnbWFjcm8nLCBbcGFyc2VyLCBuYW1lXSk7XG4gICAgfVxuICAgIFBhcnNlTWV0aG9kcy5jb250cm9sU2VxdWVuY2UgPSBjb250cm9sU2VxdWVuY2U7XG4gICAgZnVuY3Rpb24gbWF0aGNoYXIwbWkocGFyc2VyLCBtY2hhcikge1xuICAgICAgICB2YXIgZGVmID0gbWNoYXIuYXR0cmlidXRlcyB8fCB7IG1hdGh2YXJpYW50OiBUZXhDb25zdGFudHNfanNfMS5UZXhDb25zdGFudC5WYXJpYW50LklUQUxJQyB9O1xuICAgICAgICB2YXIgbm9kZSA9IHBhcnNlci5jcmVhdGUoJ3Rva2VuJywgJ21pJywgZGVmLCBtY2hhci5jaGFyKTtcbiAgICAgICAgcGFyc2VyLlB1c2gobm9kZSk7XG4gICAgfVxuICAgIFBhcnNlTWV0aG9kcy5tYXRoY2hhcjBtaSA9IG1hdGhjaGFyMG1pO1xuICAgIGZ1bmN0aW9uIG1hdGhjaGFyMG1vKHBhcnNlciwgbWNoYXIpIHtcbiAgICAgICAgdmFyIGRlZiA9IG1jaGFyLmF0dHJpYnV0ZXMgfHwge307XG4gICAgICAgIGRlZlsnc3RyZXRjaHknXSA9IGZhbHNlO1xuICAgICAgICB2YXIgbm9kZSA9IHBhcnNlci5jcmVhdGUoJ3Rva2VuJywgJ21vJywgZGVmLCBtY2hhci5jaGFyKTtcbiAgICAgICAgTm9kZVV0aWxfanNfMS5kZWZhdWx0LnNldFByb3BlcnR5KG5vZGUsICdmaXhTdHJldGNoeScsIHRydWUpO1xuICAgICAgICBwYXJzZXIuY29uZmlndXJhdGlvbi5hZGROb2RlKCdmaXhTdHJldGNoeScsIG5vZGUpO1xuICAgICAgICBwYXJzZXIuUHVzaChub2RlKTtcbiAgICB9XG4gICAgUGFyc2VNZXRob2RzLm1hdGhjaGFyMG1vID0gbWF0aGNoYXIwbW87XG4gICAgZnVuY3Rpb24gbWF0aGNoYXI3KHBhcnNlciwgbWNoYXIpIHtcbiAgICAgICAgdmFyIGRlZiA9IG1jaGFyLmF0dHJpYnV0ZXMgfHwgeyBtYXRodmFyaWFudDogVGV4Q29uc3RhbnRzX2pzXzEuVGV4Q29uc3RhbnQuVmFyaWFudC5OT1JNQUwgfTtcbiAgICAgICAgaWYgKHBhcnNlci5zdGFjay5lbnZbJ2ZvbnQnXSkge1xuICAgICAgICAgICAgZGVmWydtYXRodmFyaWFudCddID0gcGFyc2VyLnN0YWNrLmVudlsnZm9udCddO1xuICAgICAgICB9XG4gICAgICAgIHZhciBub2RlID0gcGFyc2VyLmNyZWF0ZSgndG9rZW4nLCAnbWknLCBkZWYsIG1jaGFyLmNoYXIpO1xuICAgICAgICBwYXJzZXIuUHVzaChub2RlKTtcbiAgICB9XG4gICAgUGFyc2VNZXRob2RzLm1hdGhjaGFyNyA9IG1hdGhjaGFyNztcbiAgICBmdW5jdGlvbiBkZWxpbWl0ZXIocGFyc2VyLCBkZWxpbSkge1xuICAgICAgICB2YXIgZGVmID0gZGVsaW0uYXR0cmlidXRlcyB8fCB7fTtcbiAgICAgICAgZGVmID0gT2JqZWN0LmFzc2lnbih7IGZlbmNlOiBmYWxzZSwgc3RyZXRjaHk6IGZhbHNlIH0sIGRlZik7XG4gICAgICAgIHZhciBub2RlID0gcGFyc2VyLmNyZWF0ZSgndG9rZW4nLCAnbW8nLCBkZWYsIGRlbGltLmNoYXIpO1xuICAgICAgICBwYXJzZXIuUHVzaChub2RlKTtcbiAgICB9XG4gICAgUGFyc2VNZXRob2RzLmRlbGltaXRlciA9IGRlbGltaXRlcjtcbiAgICBmdW5jdGlvbiBlbnZpcm9ubWVudChwYXJzZXIsIGVudiwgZnVuYywgYXJncykge1xuICAgICAgICB2YXIgZW5kID0gYXJnc1swXTtcbiAgICAgICAgdmFyIG1tbCA9IHBhcnNlci5pdGVtRmFjdG9yeS5jcmVhdGUoJ2JlZ2luJykuc2V0UHJvcGVydGllcyh7IG5hbWU6IGVudiwgZW5kOiBlbmQgfSk7XG4gICAgICAgIG1tbCA9IGZ1bmMuYXBwbHkodm9pZCAwLCBfX3NwcmVhZEFycmF5KFtwYXJzZXIsIG1tbF0sIF9fcmVhZChhcmdzLnNsaWNlKDEpKSwgZmFsc2UpKTtcbiAgICAgICAgcGFyc2VyLlB1c2gobW1sKTtcbiAgICB9XG4gICAgUGFyc2VNZXRob2RzLmVudmlyb25tZW50ID0gZW52aXJvbm1lbnQ7XG59KShQYXJzZU1ldGhvZHMgfHwgKFBhcnNlTWV0aG9kcyA9IHt9KSk7XG5leHBvcnRzLmRlZmF1bHQgPSBQYXJzZU1ldGhvZHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1QYXJzZU1ldGhvZHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/ParseMethods.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/ParseOptions.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/ParseOptions.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar StackItemFactory_js_1 = __importDefault(__webpack_require__(/*! ./StackItemFactory.js */ \"./node_modules/mathjax-full/js/input/tex/StackItemFactory.js\"));\nvar NodeFactory_js_1 = __webpack_require__(/*! ./NodeFactory.js */ \"./node_modules/mathjax-full/js/input/tex/NodeFactory.js\");\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ./NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar Options_js_1 = __webpack_require__(/*! ../../util/Options.js */ \"./node_modules/mathjax-full/js/util/Options.js\");\nvar ParseOptions = (function () {\n    function ParseOptions(configuration, options) {\n        if (options === void 0) { options = []; }\n        this.options = {};\n        this.packageData = new Map();\n        this.parsers = [];\n        this.root = null;\n        this.nodeLists = {};\n        this.error = false;\n        this.handlers = configuration.handlers;\n        this.nodeFactory = new NodeFactory_js_1.NodeFactory();\n        this.nodeFactory.configuration = this;\n        this.nodeFactory.setCreators(configuration.nodes);\n        this.itemFactory = new StackItemFactory_js_1.default(configuration.items);\n        this.itemFactory.configuration = this;\n        Options_js_1.defaultOptions.apply(void 0, __spreadArray([this.options], __read(options), false));\n        (0, Options_js_1.defaultOptions)(this.options, configuration.options);\n    }\n    ParseOptions.prototype.pushParser = function (parser) {\n        this.parsers.unshift(parser);\n    };\n    ParseOptions.prototype.popParser = function () {\n        this.parsers.shift();\n    };\n    Object.defineProperty(ParseOptions.prototype, \"parser\", {\n        get: function () {\n            return this.parsers[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ParseOptions.prototype.clear = function () {\n        this.parsers = [];\n        this.root = null;\n        this.nodeLists = {};\n        this.error = false;\n        this.tags.resetTag();\n    };\n    ParseOptions.prototype.addNode = function (property, node) {\n        var list = this.nodeLists[property];\n        if (!list) {\n            list = this.nodeLists[property] = [];\n        }\n        list.push(node);\n        if (node.kind !== property) {\n            var inlists = (NodeUtil_js_1.default.getProperty(node, 'in-lists') || '');\n            var lists = (inlists ? inlists.split(/,/) : []).concat(property).join(',');\n            NodeUtil_js_1.default.setProperty(node, 'in-lists', lists);\n        }\n    };\n    ParseOptions.prototype.getList = function (property) {\n        var e_1, _a;\n        var list = this.nodeLists[property] || [];\n        var result = [];\n        try {\n            for (var list_1 = __values(list), list_1_1 = list_1.next(); !list_1_1.done; list_1_1 = list_1.next()) {\n                var node = list_1_1.value;\n                if (this.inTree(node)) {\n                    result.push(node);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (list_1_1 && !list_1_1.done && (_a = list_1.return)) _a.call(list_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        this.nodeLists[property] = result;\n        return result;\n    };\n    ParseOptions.prototype.removeFromList = function (property, nodes) {\n        var e_2, _a;\n        var list = this.nodeLists[property] || [];\n        try {\n            for (var nodes_1 = __values(nodes), nodes_1_1 = nodes_1.next(); !nodes_1_1.done; nodes_1_1 = nodes_1.next()) {\n                var node = nodes_1_1.value;\n                var i = list.indexOf(node);\n                if (i >= 0) {\n                    list.splice(i, 1);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (nodes_1_1 && !nodes_1_1.done && (_a = nodes_1.return)) _a.call(nodes_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    ParseOptions.prototype.inTree = function (node) {\n        while (node && node !== this.root) {\n            node = node.parent;\n        }\n        return !!node;\n    };\n    return ParseOptions;\n}());\nexports[\"default\"] = ParseOptions;\n//# sourceMappingURL=ParseOptions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/ParseOptions.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/ParseUtil.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/ParseUtil.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar MmlNode_js_1 = __webpack_require__(/*! ../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ./NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar TexParser_js_1 = __importDefault(__webpack_require__(/*! ./TexParser.js */ \"./node_modules/mathjax-full/js/input/tex/TexParser.js\"));\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ./TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar Entities_js_1 = __webpack_require__(/*! ../../util/Entities.js */ \"./node_modules/mathjax-full/js/util/Entities.js\");\nvar ParseUtil;\n(function (ParseUtil) {\n    var emPerInch = 7.2;\n    var pxPerInch = 72;\n    var UNIT_CASES = {\n        'em': function (m) { return m; },\n        'ex': function (m) { return m * .43; },\n        'pt': function (m) { return m / 10; },\n        'pc': function (m) { return m * 1.2; },\n        'px': function (m) { return m * emPerInch / pxPerInch; },\n        'in': function (m) { return m * emPerInch; },\n        'cm': function (m) { return m * emPerInch / 2.54; },\n        'mm': function (m) { return m * emPerInch / 25.4; },\n        'mu': function (m) { return m / 18; },\n    };\n    var num = '([-+]?([.,]\\\\d+|\\\\d+([.,]\\\\d*)?))';\n    var unit = '(pt|em|ex|mu|px|mm|cm|in|pc)';\n    var dimenEnd = RegExp('^\\\\s*' + num + '\\\\s*' + unit + '\\\\s*$');\n    var dimenRest = RegExp('^\\\\s*' + num + '\\\\s*' + unit + ' ?');\n    function matchDimen(dim, rest) {\n        if (rest === void 0) { rest = false; }\n        var match = dim.match(rest ? dimenRest : dimenEnd);\n        return match ?\n            muReplace([match[1].replace(/,/, '.'), match[4], match[0].length]) :\n            [null, null, 0];\n    }\n    ParseUtil.matchDimen = matchDimen;\n    function muReplace(_a) {\n        var _b = __read(_a, 3), value = _b[0], unit = _b[1], length = _b[2];\n        if (unit !== 'mu') {\n            return [value, unit, length];\n        }\n        var em = Em(UNIT_CASES[unit](parseFloat(value || '1')));\n        return [em.slice(0, -2), 'em', length];\n    }\n    function dimen2em(dim) {\n        var _a = __read(matchDimen(dim), 2), value = _a[0], unit = _a[1];\n        var m = parseFloat(value || '1');\n        var func = UNIT_CASES[unit];\n        return func ? func(m) : 0;\n    }\n    ParseUtil.dimen2em = dimen2em;\n    function Em(m) {\n        if (Math.abs(m) < .0006) {\n            return '0em';\n        }\n        return m.toFixed(3).replace(/\\.?0+$/, '') + 'em';\n    }\n    ParseUtil.Em = Em;\n    function cols() {\n        var W = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            W[_i] = arguments[_i];\n        }\n        return W.map(function (n) { return Em(n); }).join(' ');\n    }\n    ParseUtil.cols = cols;\n    function fenced(configuration, open, mml, close, big, color) {\n        if (big === void 0) { big = ''; }\n        if (color === void 0) { color = ''; }\n        var nf = configuration.nodeFactory;\n        var mrow = nf.create('node', 'mrow', [], { open: open, close: close, texClass: MmlNode_js_1.TEXCLASS.INNER });\n        var mo;\n        if (big) {\n            mo = new TexParser_js_1.default('\\\\' + big + 'l' + open, configuration.parser.stack.env, configuration).mml();\n        }\n        else {\n            var openNode = nf.create('text', open);\n            mo = nf.create('node', 'mo', [], { fence: true, stretchy: true, symmetric: true, texClass: MmlNode_js_1.TEXCLASS.OPEN }, openNode);\n        }\n        NodeUtil_js_1.default.appendChildren(mrow, [mo, mml]);\n        if (big) {\n            mo = new TexParser_js_1.default('\\\\' + big + 'r' + close, configuration.parser.stack.env, configuration).mml();\n        }\n        else {\n            var closeNode = nf.create('text', close);\n            mo = nf.create('node', 'mo', [], { fence: true, stretchy: true, symmetric: true, texClass: MmlNode_js_1.TEXCLASS.CLOSE }, closeNode);\n        }\n        color && mo.attributes.set('mathcolor', color);\n        NodeUtil_js_1.default.appendChildren(mrow, [mo]);\n        return mrow;\n    }\n    ParseUtil.fenced = fenced;\n    function fixedFence(configuration, open, mml, close) {\n        var mrow = configuration.nodeFactory.create('node', 'mrow', [], { open: open, close: close, texClass: MmlNode_js_1.TEXCLASS.ORD });\n        if (open) {\n            NodeUtil_js_1.default.appendChildren(mrow, [mathPalette(configuration, open, 'l')]);\n        }\n        if (NodeUtil_js_1.default.isType(mml, 'mrow')) {\n            NodeUtil_js_1.default.appendChildren(mrow, NodeUtil_js_1.default.getChildren(mml));\n        }\n        else {\n            NodeUtil_js_1.default.appendChildren(mrow, [mml]);\n        }\n        if (close) {\n            NodeUtil_js_1.default.appendChildren(mrow, [mathPalette(configuration, close, 'r')]);\n        }\n        return mrow;\n    }\n    ParseUtil.fixedFence = fixedFence;\n    function mathPalette(configuration, fence, side) {\n        if (fence === '{' || fence === '}') {\n            fence = '\\\\' + fence;\n        }\n        var D = '{\\\\bigg' + side + ' ' + fence + '}';\n        var T = '{\\\\big' + side + ' ' + fence + '}';\n        return new TexParser_js_1.default('\\\\mathchoice' + D + T + T + T, {}, configuration).mml();\n    }\n    ParseUtil.mathPalette = mathPalette;\n    function fixInitialMO(configuration, nodes) {\n        for (var i = 0, m = nodes.length; i < m; i++) {\n            var child = nodes[i];\n            if (child && (!NodeUtil_js_1.default.isType(child, 'mspace') &&\n                (!NodeUtil_js_1.default.isType(child, 'TeXAtom') ||\n                    (NodeUtil_js_1.default.getChildren(child)[0] &&\n                        NodeUtil_js_1.default.getChildren(NodeUtil_js_1.default.getChildren(child)[0]).length)))) {\n                if (NodeUtil_js_1.default.isEmbellished(child) ||\n                    (NodeUtil_js_1.default.isType(child, 'TeXAtom') && NodeUtil_js_1.default.getTexClass(child) === MmlNode_js_1.TEXCLASS.REL)) {\n                    var mi = configuration.nodeFactory.create('node', 'mi');\n                    nodes.unshift(mi);\n                }\n                break;\n            }\n        }\n    }\n    ParseUtil.fixInitialMO = fixInitialMO;\n    function internalMath(parser, text, level, font) {\n        if (parser.configuration.options.internalMath) {\n            return parser.configuration.options.internalMath(parser, text, level, font);\n        }\n        var mathvariant = font || parser.stack.env.font;\n        var def = (mathvariant ? { mathvariant: mathvariant } : {});\n        var mml = [], i = 0, k = 0, c, node, match = '', braces = 0;\n        if (text.match(/\\\\?[${}\\\\]|\\\\\\(|\\\\(eq)?ref\\s*\\{/)) {\n            while (i < text.length) {\n                c = text.charAt(i++);\n                if (c === '$') {\n                    if (match === '$' && braces === 0) {\n                        node = parser.create('node', 'TeXAtom', [(new TexParser_js_1.default(text.slice(k, i - 1), {}, parser.configuration)).mml()]);\n                        mml.push(node);\n                        match = '';\n                        k = i;\n                    }\n                    else if (match === '') {\n                        if (k < i - 1) {\n                            mml.push(internalText(parser, text.slice(k, i - 1), def));\n                        }\n                        match = '$';\n                        k = i;\n                    }\n                }\n                else if (c === '{' && match !== '') {\n                    braces++;\n                }\n                else if (c === '}') {\n                    if (match === '}' && braces === 0) {\n                        var atom = (new TexParser_js_1.default(text.slice(k, i), {}, parser.configuration)).mml();\n                        node = parser.create('node', 'TeXAtom', [atom], def);\n                        mml.push(node);\n                        match = '';\n                        k = i;\n                    }\n                    else if (match !== '') {\n                        if (braces) {\n                            braces--;\n                        }\n                    }\n                }\n                else if (c === '\\\\') {\n                    if (match === '' && text.substr(i).match(/^(eq)?ref\\s*\\{/)) {\n                        var len = RegExp['$&'].length;\n                        if (k < i - 1) {\n                            mml.push(internalText(parser, text.slice(k, i - 1), def));\n                        }\n                        match = '}';\n                        k = i - 1;\n                        i += len;\n                    }\n                    else {\n                        c = text.charAt(i++);\n                        if (c === '(' && match === '') {\n                            if (k < i - 2) {\n                                mml.push(internalText(parser, text.slice(k, i - 2), def));\n                            }\n                            match = ')';\n                            k = i;\n                        }\n                        else if (c === ')' && match === ')' && braces === 0) {\n                            node = parser.create('node', 'TeXAtom', [(new TexParser_js_1.default(text.slice(k, i - 2), {}, parser.configuration)).mml()]);\n                            mml.push(node);\n                            match = '';\n                            k = i;\n                        }\n                        else if (c.match(/[${}\\\\]/) && match === '') {\n                            i--;\n                            text = text.substr(0, i - 1) + text.substr(i);\n                        }\n                    }\n                }\n            }\n            if (match !== '') {\n                throw new TexError_js_1.default('MathNotTerminated', 'Math not terminated in text box');\n            }\n        }\n        if (k < text.length) {\n            mml.push(internalText(parser, text.slice(k), def));\n        }\n        if (level != null) {\n            mml = [parser.create('node', 'mstyle', mml, { displaystyle: false, scriptlevel: level })];\n        }\n        else if (mml.length > 1) {\n            mml = [parser.create('node', 'mrow', mml)];\n        }\n        return mml;\n    }\n    ParseUtil.internalMath = internalMath;\n    function internalText(parser, text, def) {\n        text = text.replace(/^\\s+/, Entities_js_1.entities.nbsp).replace(/\\s+$/, Entities_js_1.entities.nbsp);\n        var textNode = parser.create('text', text);\n        return parser.create('node', 'mtext', [], def, textNode);\n    }\n    ParseUtil.internalText = internalText;\n    function underOver(parser, base, script, pos, stack) {\n        ParseUtil.checkMovableLimits(base);\n        if (NodeUtil_js_1.default.isType(base, 'munderover') && NodeUtil_js_1.default.isEmbellished(base)) {\n            NodeUtil_js_1.default.setProperties(NodeUtil_js_1.default.getCoreMO(base), { lspace: 0, rspace: 0 });\n            var mo = parser.create('node', 'mo', [], { rspace: 0 });\n            base = parser.create('node', 'mrow', [mo, base]);\n        }\n        var mml = parser.create('node', 'munderover', [base]);\n        NodeUtil_js_1.default.setChild(mml, pos === 'over' ? mml.over : mml.under, script);\n        var node = mml;\n        if (stack) {\n            node = parser.create('node', 'TeXAtom', [mml], { texClass: MmlNode_js_1.TEXCLASS.OP, movesupsub: true });\n        }\n        NodeUtil_js_1.default.setProperty(node, 'subsupOK', true);\n        return node;\n    }\n    ParseUtil.underOver = underOver;\n    function checkMovableLimits(base) {\n        var symbol = (NodeUtil_js_1.default.isType(base, 'mo') ? NodeUtil_js_1.default.getForm(base) : null);\n        if (NodeUtil_js_1.default.getProperty(base, 'movablelimits') || (symbol && symbol[3] && symbol[3].movablelimits)) {\n            NodeUtil_js_1.default.setProperties(base, { movablelimits: false });\n        }\n    }\n    ParseUtil.checkMovableLimits = checkMovableLimits;\n    function trimSpaces(text) {\n        if (typeof (text) !== 'string') {\n            return text;\n        }\n        var TEXT = text.trim();\n        if (TEXT.match(/\\\\$/) && text.match(/ $/)) {\n            TEXT += ' ';\n        }\n        return TEXT;\n    }\n    ParseUtil.trimSpaces = trimSpaces;\n    function setArrayAlign(array, align) {\n        align = ParseUtil.trimSpaces(align || '');\n        if (align === 't') {\n            array.arraydef.align = 'baseline 1';\n        }\n        else if (align === 'b') {\n            array.arraydef.align = 'baseline -1';\n        }\n        else if (align === 'c') {\n            array.arraydef.align = 'axis';\n        }\n        else if (align) {\n            array.arraydef.align = align;\n        }\n        return array;\n    }\n    ParseUtil.setArrayAlign = setArrayAlign;\n    function substituteArgs(parser, args, str) {\n        var text = '';\n        var newstring = '';\n        var i = 0;\n        while (i < str.length) {\n            var c = str.charAt(i++);\n            if (c === '\\\\') {\n                text += c + str.charAt(i++);\n            }\n            else if (c === '#') {\n                c = str.charAt(i++);\n                if (c === '#') {\n                    text += c;\n                }\n                else {\n                    if (!c.match(/[1-9]/) || parseInt(c, 10) > args.length) {\n                        throw new TexError_js_1.default('IllegalMacroParam', 'Illegal macro parameter reference');\n                    }\n                    newstring = addArgs(parser, addArgs(parser, newstring, text), args[parseInt(c, 10) - 1]);\n                    text = '';\n                }\n            }\n            else {\n                text += c;\n            }\n        }\n        return addArgs(parser, newstring, text);\n    }\n    ParseUtil.substituteArgs = substituteArgs;\n    function addArgs(parser, s1, s2) {\n        if (s2.match(/^[a-z]/i) && s1.match(/(^|[^\\\\])(\\\\\\\\)*\\\\[a-z]+$/i)) {\n            s1 += ' ';\n        }\n        if (s1.length + s2.length > parser.configuration.options['maxBuffer']) {\n            throw new TexError_js_1.default('MaxBufferSize', 'MathJax internal buffer size exceeded; is there a' +\n                ' recursive macro call?');\n        }\n        return s1 + s2;\n    }\n    ParseUtil.addArgs = addArgs;\n    function checkMaxMacros(parser, isMacro) {\n        if (isMacro === void 0) { isMacro = true; }\n        if (++parser.macroCount <= parser.configuration.options['maxMacros']) {\n            return;\n        }\n        if (isMacro) {\n            throw new TexError_js_1.default('MaxMacroSub1', 'MathJax maximum macro substitution count exceeded; ' +\n                'is here a recursive macro call?');\n        }\n        else {\n            throw new TexError_js_1.default('MaxMacroSub2', 'MathJax maximum substitution count exceeded; ' +\n                'is there a recursive latex environment?');\n        }\n    }\n    ParseUtil.checkMaxMacros = checkMaxMacros;\n    function checkEqnEnv(parser) {\n        if (parser.stack.global.eqnenv) {\n            throw new TexError_js_1.default('ErroneousNestingEq', 'Erroneous nesting of equation structures');\n        }\n        parser.stack.global.eqnenv = true;\n    }\n    ParseUtil.checkEqnEnv = checkEqnEnv;\n    function copyNode(node, parser) {\n        var tree = node.copy();\n        var options = parser.configuration;\n        tree.walkTree(function (n) {\n            var e_1, _a;\n            options.addNode(n.kind, n);\n            var lists = (n.getProperty('in-lists') || '').split(/,/);\n            try {\n                for (var lists_1 = __values(lists), lists_1_1 = lists_1.next(); !lists_1_1.done; lists_1_1 = lists_1.next()) {\n                    var list = lists_1_1.value;\n                    list && options.addNode(list, n);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (lists_1_1 && !lists_1_1.done && (_a = lists_1.return)) _a.call(lists_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        });\n        return tree;\n    }\n    ParseUtil.copyNode = copyNode;\n    function MmlFilterAttribute(_parser, _name, value) {\n        return value;\n    }\n    ParseUtil.MmlFilterAttribute = MmlFilterAttribute;\n    function getFontDef(parser) {\n        var font = parser.stack.env['font'];\n        return (font ? { mathvariant: font } : {});\n    }\n    ParseUtil.getFontDef = getFontDef;\n    function keyvalOptions(attrib, allowed, error) {\n        var e_2, _a;\n        if (allowed === void 0) { allowed = null; }\n        if (error === void 0) { error = false; }\n        var def = readKeyval(attrib);\n        if (allowed) {\n            try {\n                for (var _b = __values(Object.keys(def)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var key = _c.value;\n                    if (!allowed.hasOwnProperty(key)) {\n                        if (error) {\n                            throw new TexError_js_1.default('InvalidOption', 'Invalid option: %1', key);\n                        }\n                        delete def[key];\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n        return def;\n    }\n    ParseUtil.keyvalOptions = keyvalOptions;\n    function readKeyval(text) {\n        var _a, _b;\n        var options = {};\n        var rest = text;\n        var end, key, val;\n        while (rest) {\n            _a = __read(readValue(rest, ['=', ',']), 3), key = _a[0], end = _a[1], rest = _a[2];\n            if (end === '=') {\n                _b = __read(readValue(rest, [',']), 3), val = _b[0], end = _b[1], rest = _b[2];\n                val = (val === 'false' || val === 'true') ?\n                    JSON.parse(val) : val;\n                options[key] = val;\n            }\n            else if (key) {\n                options[key] = true;\n            }\n        }\n        return options;\n    }\n    function removeBraces(text, count) {\n        while (count > 0) {\n            text = text.trim().slice(1, -1);\n            count--;\n        }\n        return text.trim();\n    }\n    function readValue(text, end) {\n        var length = text.length;\n        var braces = 0;\n        var value = '';\n        var index = 0;\n        var start = 0;\n        var startCount = true;\n        var stopCount = false;\n        while (index < length) {\n            var c = text[index++];\n            switch (c) {\n                case ' ':\n                    break;\n                case '{':\n                    if (startCount) {\n                        start++;\n                    }\n                    else {\n                        stopCount = false;\n                        if (start > braces) {\n                            start = braces;\n                        }\n                    }\n                    braces++;\n                    break;\n                case '}':\n                    if (braces) {\n                        braces--;\n                    }\n                    if (startCount || stopCount) {\n                        start--;\n                        stopCount = true;\n                    }\n                    startCount = false;\n                    break;\n                default:\n                    if (!braces && end.indexOf(c) !== -1) {\n                        return [stopCount ? 'true' :\n                                removeBraces(value, start), c, text.slice(index)];\n                    }\n                    startCount = false;\n                    stopCount = false;\n            }\n            value += c;\n        }\n        if (braces) {\n            throw new TexError_js_1.default('ExtraOpenMissingClose', 'Extra open brace or missing close brace');\n        }\n        return [stopCount ? 'true' : removeBraces(value, start), '', text.slice(index)];\n    }\n})(ParseUtil || (ParseUtil = {}));\nexports[\"default\"] = ParseUtil;\n//# sourceMappingURL=ParseUtil.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/ParseUtil.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/Stack.js":
/*!*********************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/Stack.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ./NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar Stack = (function () {\n    function Stack(_factory, _env, inner) {\n        this._factory = _factory;\n        this._env = _env;\n        this.global = {};\n        this.stack = [];\n        this.global = { isInner: inner };\n        this.stack = [this._factory.create('start', this.global)];\n        if (_env) {\n            this.stack[0].env = _env;\n        }\n        this.env = this.stack[0].env;\n    }\n    Object.defineProperty(Stack.prototype, \"env\", {\n        get: function () {\n            return this._env;\n        },\n        set: function (env) {\n            this._env = env;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Stack.prototype.Push = function () {\n        var e_1, _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        try {\n            for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {\n                var node = args_1_1.value;\n                if (!node) {\n                    continue;\n                }\n                var item = NodeUtil_js_1.default.isNode(node) ?\n                    this._factory.create('mml', node) : node;\n                item.global = this.global;\n                var _b = __read(this.stack.length ? this.Top().checkItem(item) : [null, true], 2), top_1 = _b[0], success = _b[1];\n                if (!success) {\n                    continue;\n                }\n                if (top_1) {\n                    this.Pop();\n                    this.Push.apply(this, __spreadArray([], __read(top_1), false));\n                    continue;\n                }\n                this.stack.push(item);\n                if (item.env) {\n                    if (item.copyEnv) {\n                        Object.assign(item.env, this.env);\n                    }\n                    this.env = item.env;\n                }\n                else {\n                    item.env = this.env;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    Stack.prototype.Pop = function () {\n        var item = this.stack.pop();\n        if (!item.isOpen) {\n            delete item.env;\n        }\n        this.env = (this.stack.length ? this.Top().env : {});\n        return item;\n    };\n    Stack.prototype.Top = function (n) {\n        if (n === void 0) { n = 1; }\n        return this.stack.length < n ? null : this.stack[this.stack.length - n];\n    };\n    Stack.prototype.Prev = function (noPop) {\n        var top = this.Top();\n        return noPop ? top.First : top.Pop();\n    };\n    Stack.prototype.toString = function () {\n        return 'stack[\\n  ' + this.stack.join('\\n  ') + '\\n]';\n    };\n    return Stack;\n}());\nexports[\"default\"] = Stack;\n//# sourceMappingURL=Stack.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9TdGFjay5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE1BQU07QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RUFBNkUsT0FBTztBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9DQUFvQyxtQkFBTyxDQUFDLDJFQUFlO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix1QkFBdUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFLGdCQUFnQjtBQUN4RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJEO0FBQzNEO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxrQkFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvaW5wdXQvdGV4L1N0YWNrLmpzPzEwZjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX192YWx1ZXMgPSAodGhpcyAmJiB0aGlzLl9fdmFsdWVzKSB8fCBmdW5jdGlvbihvKSB7XG4gICAgdmFyIHMgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgU3ltYm9sLml0ZXJhdG9yLCBtID0gcyAmJiBvW3NdLCBpID0gMDtcbiAgICBpZiAobSkgcmV0dXJuIG0uY2FsbChvKTtcbiAgICBpZiAobyAmJiB0eXBlb2Ygby5sZW5ndGggPT09IFwibnVtYmVyXCIpIHJldHVybiB7XG4gICAgICAgIG5leHQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChvICYmIGkgPj0gby5sZW5ndGgpIG8gPSB2b2lkIDA7XG4gICAgICAgICAgICByZXR1cm4geyB2YWx1ZTogbyAmJiBvW2krK10sIGRvbmU6ICFvIH07XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IocyA/IFwiT2JqZWN0IGlzIG5vdCBpdGVyYWJsZS5cIiA6IFwiU3ltYm9sLml0ZXJhdG9yIGlzIG5vdCBkZWZpbmVkLlwiKTtcbn07XG52YXIgX19yZWFkID0gKHRoaXMgJiYgdGhpcy5fX3JlYWQpIHx8IGZ1bmN0aW9uIChvLCBuKSB7XG4gICAgdmFyIG0gPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb1tTeW1ib2wuaXRlcmF0b3JdO1xuICAgIGlmICghbSkgcmV0dXJuIG87XG4gICAgdmFyIGkgPSBtLmNhbGwobyksIHIsIGFyID0gW10sIGU7XG4gICAgdHJ5IHtcbiAgICAgICAgd2hpbGUgKChuID09PSB2b2lkIDAgfHwgbi0tID4gMCkgJiYgIShyID0gaS5uZXh0KCkpLmRvbmUpIGFyLnB1c2goci52YWx1ZSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikgeyBlID0geyBlcnJvcjogZXJyb3IgfTsgfVxuICAgIGZpbmFsbHkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKHIgJiYgIXIuZG9uZSAmJiAobSA9IGlbXCJyZXR1cm5cIl0pKSBtLmNhbGwoaSk7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7IGlmIChlKSB0aHJvdyBlLmVycm9yOyB9XG4gICAgfVxuICAgIHJldHVybiBhcjtcbn07XG52YXIgX19zcHJlYWRBcnJheSA9ICh0aGlzICYmIHRoaXMuX19zcHJlYWRBcnJheSkgfHwgZnVuY3Rpb24gKHRvLCBmcm9tLCBwYWNrKSB7XG4gICAgaWYgKHBhY2sgfHwgYXJndW1lbnRzLmxlbmd0aCA9PT0gMikgZm9yICh2YXIgaSA9IDAsIGwgPSBmcm9tLmxlbmd0aCwgYXI7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgaWYgKGFyIHx8ICEoaSBpbiBmcm9tKSkge1xuICAgICAgICAgICAgaWYgKCFhcikgYXIgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tLCAwLCBpKTtcbiAgICAgICAgICAgIGFyW2ldID0gZnJvbVtpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdG8uY29uY2F0KGFyIHx8IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGZyb20pKTtcbn07XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgTm9kZVV0aWxfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9Ob2RlVXRpbC5qc1wiKSk7XG52YXIgU3RhY2sgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFN0YWNrKF9mYWN0b3J5LCBfZW52LCBpbm5lcikge1xuICAgICAgICB0aGlzLl9mYWN0b3J5ID0gX2ZhY3Rvcnk7XG4gICAgICAgIHRoaXMuX2VudiA9IF9lbnY7XG4gICAgICAgIHRoaXMuZ2xvYmFsID0ge307XG4gICAgICAgIHRoaXMuc3RhY2sgPSBbXTtcbiAgICAgICAgdGhpcy5nbG9iYWwgPSB7IGlzSW5uZXI6IGlubmVyIH07XG4gICAgICAgIHRoaXMuc3RhY2sgPSBbdGhpcy5fZmFjdG9yeS5jcmVhdGUoJ3N0YXJ0JywgdGhpcy5nbG9iYWwpXTtcbiAgICAgICAgaWYgKF9lbnYpIHtcbiAgICAgICAgICAgIHRoaXMuc3RhY2tbMF0uZW52ID0gX2VudjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmVudiA9IHRoaXMuc3RhY2tbMF0uZW52O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU3RhY2sucHJvdG90eXBlLCBcImVudlwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2VudjtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAoZW52KSB7XG4gICAgICAgICAgICB0aGlzLl9lbnYgPSBlbnY7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBTdGFjay5wcm90b3R5cGUuUHVzaCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGVfMSwgX2E7XG4gICAgICAgIHZhciBhcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGZvciAodmFyIGFyZ3NfMSA9IF9fdmFsdWVzKGFyZ3MpLCBhcmdzXzFfMSA9IGFyZ3NfMS5uZXh0KCk7ICFhcmdzXzFfMS5kb25lOyBhcmdzXzFfMSA9IGFyZ3NfMS5uZXh0KCkpIHtcbiAgICAgICAgICAgICAgICB2YXIgbm9kZSA9IGFyZ3NfMV8xLnZhbHVlO1xuICAgICAgICAgICAgICAgIGlmICghbm9kZSkge1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSBOb2RlVXRpbF9qc18xLmRlZmF1bHQuaXNOb2RlKG5vZGUpID9cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZmFjdG9yeS5jcmVhdGUoJ21tbCcsIG5vZGUpIDogbm9kZTtcbiAgICAgICAgICAgICAgICBpdGVtLmdsb2JhbCA9IHRoaXMuZ2xvYmFsO1xuICAgICAgICAgICAgICAgIHZhciBfYiA9IF9fcmVhZCh0aGlzLnN0YWNrLmxlbmd0aCA/IHRoaXMuVG9wKCkuY2hlY2tJdGVtKGl0ZW0pIDogW251bGwsIHRydWVdLCAyKSwgdG9wXzEgPSBfYlswXSwgc3VjY2VzcyA9IF9iWzFdO1xuICAgICAgICAgICAgICAgIGlmICghc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHRvcF8xKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUG9wKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuUHVzaC5hcHBseSh0aGlzLCBfX3NwcmVhZEFycmF5KFtdLCBfX3JlYWQodG9wXzEpLCBmYWxzZSkpO1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5zdGFjay5wdXNoKGl0ZW0pO1xuICAgICAgICAgICAgICAgIGlmIChpdGVtLmVudikge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXRlbS5jb3B5RW52KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKGl0ZW0uZW52LCB0aGlzLmVudik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbnYgPSBpdGVtLmVudjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGl0ZW0uZW52ID0gdGhpcy5lbnY7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlXzFfMSkgeyBlXzEgPSB7IGVycm9yOiBlXzFfMSB9OyB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiAoYXJnc18xXzEgJiYgIWFyZ3NfMV8xLmRvbmUgJiYgKF9hID0gYXJnc18xLnJldHVybikpIF9hLmNhbGwoYXJnc18xKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZpbmFsbHkgeyBpZiAoZV8xKSB0aHJvdyBlXzEuZXJyb3I7IH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgU3RhY2sucHJvdG90eXBlLlBvcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGl0ZW0gPSB0aGlzLnN0YWNrLnBvcCgpO1xuICAgICAgICBpZiAoIWl0ZW0uaXNPcGVuKSB7XG4gICAgICAgICAgICBkZWxldGUgaXRlbS5lbnY7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5lbnYgPSAodGhpcy5zdGFjay5sZW5ndGggPyB0aGlzLlRvcCgpLmVudiA6IHt9KTtcbiAgICAgICAgcmV0dXJuIGl0ZW07XG4gICAgfTtcbiAgICBTdGFjay5wcm90b3R5cGUuVG9wID0gZnVuY3Rpb24gKG4pIHtcbiAgICAgICAgaWYgKG4gPT09IHZvaWQgMCkgeyBuID0gMTsgfVxuICAgICAgICByZXR1cm4gdGhpcy5zdGFjay5sZW5ndGggPCBuID8gbnVsbCA6IHRoaXMuc3RhY2tbdGhpcy5zdGFjay5sZW5ndGggLSBuXTtcbiAgICB9O1xuICAgIFN0YWNrLnByb3RvdHlwZS5QcmV2ID0gZnVuY3Rpb24gKG5vUG9wKSB7XG4gICAgICAgIHZhciB0b3AgPSB0aGlzLlRvcCgpO1xuICAgICAgICByZXR1cm4gbm9Qb3AgPyB0b3AuRmlyc3QgOiB0b3AuUG9wKCk7XG4gICAgfTtcbiAgICBTdGFjay5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAnc3RhY2tbXFxuICAnICsgdGhpcy5zdGFjay5qb2luKCdcXG4gICcpICsgJ1xcbl0nO1xuICAgIH07XG4gICAgcmV0dXJuIFN0YWNrO1xufSgpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IFN0YWNrO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3RhY2suanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/Stack.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/StackItem.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/StackItem.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BaseItem = exports.MmlStack = void 0;\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ./TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar MmlStack = (function () {\n    function MmlStack(_nodes) {\n        this._nodes = _nodes;\n    }\n    Object.defineProperty(MmlStack.prototype, \"nodes\", {\n        get: function () {\n            return this._nodes;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MmlStack.prototype.Push = function () {\n        var _a;\n        var nodes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            nodes[_i] = arguments[_i];\n        }\n        (_a = this._nodes).push.apply(_a, __spreadArray([], __read(nodes), false));\n    };\n    MmlStack.prototype.Pop = function () {\n        return this._nodes.pop();\n    };\n    Object.defineProperty(MmlStack.prototype, \"First\", {\n        get: function () {\n            return this._nodes[this.Size() - 1];\n        },\n        set: function (node) {\n            this._nodes[this.Size() - 1] = node;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlStack.prototype, \"Last\", {\n        get: function () {\n            return this._nodes[0];\n        },\n        set: function (node) {\n            this._nodes[0] = node;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MmlStack.prototype.Peek = function (n) {\n        if (n == null) {\n            n = 1;\n        }\n        return this._nodes.slice(this.Size() - n);\n    };\n    MmlStack.prototype.Size = function () {\n        return this._nodes.length;\n    };\n    MmlStack.prototype.Clear = function () {\n        this._nodes = [];\n    };\n    MmlStack.prototype.toMml = function (inferred, forceRow) {\n        if (inferred === void 0) { inferred = true; }\n        if (this._nodes.length === 1 && !forceRow) {\n            return this.First;\n        }\n        return this.create('node', inferred ? 'inferredMrow' : 'mrow', this._nodes, {});\n    };\n    MmlStack.prototype.create = function (kind) {\n        var _a;\n        var rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            rest[_i - 1] = arguments[_i];\n        }\n        return (_a = this.factory.configuration.nodeFactory).create.apply(_a, __spreadArray([kind], __read(rest), false));\n    };\n    return MmlStack;\n}());\nexports.MmlStack = MmlStack;\nvar BaseItem = (function (_super) {\n    __extends(BaseItem, _super);\n    function BaseItem(factory) {\n        var nodes = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            nodes[_i - 1] = arguments[_i];\n        }\n        var _this = _super.call(this, nodes) || this;\n        _this.factory = factory;\n        _this.global = {};\n        _this._properties = {};\n        if (_this.isOpen) {\n            _this._env = {};\n        }\n        return _this;\n    }\n    Object.defineProperty(BaseItem.prototype, \"kind\", {\n        get: function () {\n            return 'base';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseItem.prototype, \"env\", {\n        get: function () {\n            return this._env;\n        },\n        set: function (value) {\n            this._env = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseItem.prototype, \"copyEnv\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BaseItem.prototype.getProperty = function (key) {\n        return this._properties[key];\n    };\n    BaseItem.prototype.setProperty = function (key, value) {\n        this._properties[key] = value;\n        return this;\n    };\n    Object.defineProperty(BaseItem.prototype, \"isOpen\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseItem.prototype, \"isClose\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseItem.prototype, \"isFinal\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BaseItem.prototype.isKind = function (kind) {\n        return kind === this.kind;\n    };\n    BaseItem.prototype.checkItem = function (item) {\n        if (item.isKind('over') && this.isOpen) {\n            item.setProperty('num', this.toMml(false));\n            this.Clear();\n        }\n        if (item.isKind('cell') && this.isOpen) {\n            if (item.getProperty('linebreak')) {\n                return BaseItem.fail;\n            }\n            throw new TexError_js_1.default('Misplaced', 'Misplaced %1', item.getName());\n        }\n        if (item.isClose && this.getErrors(item.kind)) {\n            var _a = __read(this.getErrors(item.kind), 2), id = _a[0], message = _a[1];\n            throw new TexError_js_1.default(id, message, item.getName());\n        }\n        if (!item.isFinal) {\n            return BaseItem.success;\n        }\n        this.Push(item.First);\n        return BaseItem.fail;\n    };\n    BaseItem.prototype.clearEnv = function () {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Object.keys(this.env)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var id = _c.value;\n                delete this.env[id];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    BaseItem.prototype.setProperties = function (def) {\n        Object.assign(this._properties, def);\n        return this;\n    };\n    BaseItem.prototype.getName = function () {\n        return this.getProperty('name');\n    };\n    BaseItem.prototype.toString = function () {\n        return this.kind + '[' + this.nodes.join('; ') + ']';\n    };\n    BaseItem.prototype.getErrors = function (kind) {\n        var CLASS = this.constructor;\n        return (CLASS.errors || {})[kind] || BaseItem.errors[kind];\n    };\n    BaseItem.fail = [null, false];\n    BaseItem.success = [null, true];\n    BaseItem.errors = {\n        end: ['MissingBeginExtraEnd', 'Missing \\\\begin{%1} or extra \\\\end{%1}'],\n        close: ['ExtraCloseMissingOpen', 'Extra close brace or missing open brace'],\n        right: ['MissingLeftExtraRight', 'Missing \\\\left or extra \\\\right'],\n        middle: ['ExtraMiddle', 'Extra \\\\middle']\n    };\n    return BaseItem;\n}(MmlStack));\nexports.BaseItem = BaseItem;\n//# sourceMappingURL=StackItem.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/StackItem.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/StackItemFactory.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/StackItemFactory.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar StackItem_js_1 = __webpack_require__(/*! ./StackItem.js */ \"./node_modules/mathjax-full/js/input/tex/StackItem.js\");\nvar Factory_js_1 = __webpack_require__(/*! ../../core/Tree/Factory.js */ \"./node_modules/mathjax-full/js/core/Tree/Factory.js\");\nvar DummyItem = (function (_super) {\n    __extends(DummyItem, _super);\n    function DummyItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return DummyItem;\n}(StackItem_js_1.BaseItem));\nvar StackItemFactory = (function (_super) {\n    __extends(StackItemFactory, _super);\n    function StackItemFactory() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.defaultKind = 'dummy';\n        _this.configuration = null;\n        return _this;\n    }\n    StackItemFactory.DefaultStackItems = (_a = {},\n        _a[DummyItem.prototype.kind] = DummyItem,\n        _a);\n    return StackItemFactory;\n}(Factory_js_1.AbstractFactory));\nexports[\"default\"] = StackItemFactory;\n//# sourceMappingURL=StackItemFactory.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9TdGFja0l0ZW1GYWN0b3J5LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnQkFBZ0Isc0NBQXNDLGtCQUFrQjtBQUN2Riw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLG1CQUFPLENBQUMsNkVBQWdCO0FBQzdDLG1CQUFtQixtQkFBTyxDQUFDLHVGQUE0QjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9TdGFja0l0ZW1GYWN0b3J5LmpzP2I1OWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9hO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIFN0YWNrSXRlbV9qc18xID0gcmVxdWlyZShcIi4vU3RhY2tJdGVtLmpzXCIpO1xudmFyIEZhY3RvcnlfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi9jb3JlL1RyZWUvRmFjdG9yeS5qc1wiKTtcbnZhciBEdW1teUl0ZW0gPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhEdW1teUl0ZW0sIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gRHVtbXlJdGVtKCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIHJldHVybiBEdW1teUl0ZW07XG59KFN0YWNrSXRlbV9qc18xLkJhc2VJdGVtKSk7XG52YXIgU3RhY2tJdGVtRmFjdG9yeSA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFN0YWNrSXRlbUZhY3RvcnksIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gU3RhY2tJdGVtRmFjdG9yeSgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLmRlZmF1bHRLaW5kID0gJ2R1bW15JztcbiAgICAgICAgX3RoaXMuY29uZmlndXJhdGlvbiA9IG51bGw7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgU3RhY2tJdGVtRmFjdG9yeS5EZWZhdWx0U3RhY2tJdGVtcyA9IChfYSA9IHt9LFxuICAgICAgICBfYVtEdW1teUl0ZW0ucHJvdG90eXBlLmtpbmRdID0gRHVtbXlJdGVtLFxuICAgICAgICBfYSk7XG4gICAgcmV0dXJuIFN0YWNrSXRlbUZhY3Rvcnk7XG59KEZhY3RvcnlfanNfMS5BYnN0cmFjdEZhY3RvcnkpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IFN0YWNrSXRlbUZhY3Rvcnk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdGFja0l0ZW1GYWN0b3J5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/StackItemFactory.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/Symbol.js":
/*!**********************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/Symbol.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Macro = exports.Symbol = void 0;\nvar Symbol = (function () {\n    function Symbol(_symbol, _char, _attributes) {\n        this._symbol = _symbol;\n        this._char = _char;\n        this._attributes = _attributes;\n    }\n    Object.defineProperty(Symbol.prototype, \"symbol\", {\n        get: function () {\n            return this._symbol;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Symbol.prototype, \"char\", {\n        get: function () {\n            return this._char;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Symbol.prototype, \"attributes\", {\n        get: function () {\n            return this._attributes;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Symbol;\n}());\nexports.Symbol = Symbol;\nvar Macro = (function () {\n    function Macro(_symbol, _func, _args) {\n        if (_args === void 0) { _args = []; }\n        this._symbol = _symbol;\n        this._func = _func;\n        this._args = _args;\n    }\n    Object.defineProperty(Macro.prototype, \"symbol\", {\n        get: function () {\n            return this._symbol;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Macro.prototype, \"func\", {\n        get: function () {\n            return this._func;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Macro.prototype, \"args\", {\n        get: function () {\n            return this._args;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Macro;\n}());\nexports.Macro = Macro;\n//# sourceMappingURL=Symbol.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9TeW1ib2wuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxHQUFHLGNBQWM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDO0FBQ0QsY0FBYztBQUNkO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7QUFDRCxhQUFhO0FBQ2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvU3ltYm9sLmpzP2NhYjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1hY3JvID0gZXhwb3J0cy5TeW1ib2wgPSB2b2lkIDA7XG52YXIgU3ltYm9sID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTeW1ib2woX3N5bWJvbCwgX2NoYXIsIF9hdHRyaWJ1dGVzKSB7XG4gICAgICAgIHRoaXMuX3N5bWJvbCA9IF9zeW1ib2w7XG4gICAgICAgIHRoaXMuX2NoYXIgPSBfY2hhcjtcbiAgICAgICAgdGhpcy5fYXR0cmlidXRlcyA9IF9hdHRyaWJ1dGVzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU3ltYm9sLnByb3RvdHlwZSwgXCJzeW1ib2xcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9zeW1ib2w7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU3ltYm9sLnByb3RvdHlwZSwgXCJjaGFyXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fY2hhcjtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTeW1ib2wucHJvdG90eXBlLCBcImF0dHJpYnV0ZXNcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9hdHRyaWJ1dGVzO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIFN5bWJvbDtcbn0oKSk7XG5leHBvcnRzLlN5bWJvbCA9IFN5bWJvbDtcbnZhciBNYWNybyA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTWFjcm8oX3N5bWJvbCwgX2Z1bmMsIF9hcmdzKSB7XG4gICAgICAgIGlmIChfYXJncyA9PT0gdm9pZCAwKSB7IF9hcmdzID0gW107IH1cbiAgICAgICAgdGhpcy5fc3ltYm9sID0gX3N5bWJvbDtcbiAgICAgICAgdGhpcy5fZnVuYyA9IF9mdW5jO1xuICAgICAgICB0aGlzLl9hcmdzID0gX2FyZ3M7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShNYWNyby5wcm90b3R5cGUsIFwic3ltYm9sXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fc3ltYm9sO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE1hY3JvLnByb3RvdHlwZSwgXCJmdW5jXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fZnVuYztcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShNYWNyby5wcm90b3R5cGUsIFwiYXJnc1wiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2FyZ3M7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gTWFjcm87XG59KCkpO1xuZXhwb3J0cy5NYWNybyA9IE1hY3JvO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3ltYm9sLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/Symbol.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/SymbolMap.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/SymbolMap.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EnvironmentMap = exports.CommandMap = exports.MacroMap = exports.DelimiterMap = exports.CharacterMap = exports.AbstractParseMap = exports.RegExpMap = exports.AbstractSymbolMap = exports.parseResult = void 0;\nvar Symbol_js_1 = __webpack_require__(/*! ./Symbol.js */ \"./node_modules/mathjax-full/js/input/tex/Symbol.js\");\nvar MapHandler_js_1 = __webpack_require__(/*! ./MapHandler.js */ \"./node_modules/mathjax-full/js/input/tex/MapHandler.js\");\nfunction parseResult(result) {\n    return result === void 0 ? true : result;\n}\nexports.parseResult = parseResult;\nvar AbstractSymbolMap = (function () {\n    function AbstractSymbolMap(_name, _parser) {\n        this._name = _name;\n        this._parser = _parser;\n        MapHandler_js_1.MapHandler.register(this);\n    }\n    Object.defineProperty(AbstractSymbolMap.prototype, \"name\", {\n        get: function () {\n            return this._name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractSymbolMap.prototype.parserFor = function (symbol) {\n        return this.contains(symbol) ? this.parser : null;\n    };\n    AbstractSymbolMap.prototype.parse = function (_a) {\n        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];\n        var parser = this.parserFor(symbol);\n        var mapped = this.lookup(symbol);\n        return (parser && mapped) ? parseResult(parser(env, mapped)) : null;\n    };\n    Object.defineProperty(AbstractSymbolMap.prototype, \"parser\", {\n        get: function () {\n            return this._parser;\n        },\n        set: function (parser) {\n            this._parser = parser;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return AbstractSymbolMap;\n}());\nexports.AbstractSymbolMap = AbstractSymbolMap;\nvar RegExpMap = (function (_super) {\n    __extends(RegExpMap, _super);\n    function RegExpMap(name, parser, _regExp) {\n        var _this = _super.call(this, name, parser) || this;\n        _this._regExp = _regExp;\n        return _this;\n    }\n    RegExpMap.prototype.contains = function (symbol) {\n        return this._regExp.test(symbol);\n    };\n    RegExpMap.prototype.lookup = function (symbol) {\n        return this.contains(symbol) ? symbol : null;\n    };\n    return RegExpMap;\n}(AbstractSymbolMap));\nexports.RegExpMap = RegExpMap;\nvar AbstractParseMap = (function (_super) {\n    __extends(AbstractParseMap, _super);\n    function AbstractParseMap() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.map = new Map();\n        return _this;\n    }\n    AbstractParseMap.prototype.lookup = function (symbol) {\n        return this.map.get(symbol);\n    };\n    AbstractParseMap.prototype.contains = function (symbol) {\n        return this.map.has(symbol);\n    };\n    AbstractParseMap.prototype.add = function (symbol, object) {\n        this.map.set(symbol, object);\n    };\n    AbstractParseMap.prototype.remove = function (symbol) {\n        this.map.delete(symbol);\n    };\n    return AbstractParseMap;\n}(AbstractSymbolMap));\nexports.AbstractParseMap = AbstractParseMap;\nvar CharacterMap = (function (_super) {\n    __extends(CharacterMap, _super);\n    function CharacterMap(name, parser, json) {\n        var e_1, _a;\n        var _this = _super.call(this, name, parser) || this;\n        try {\n            for (var _b = __values(Object.keys(json)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                var value = json[key];\n                var _d = __read((typeof (value) === 'string') ? [value, null] : value, 2), char = _d[0], attrs = _d[1];\n                var character = new Symbol_js_1.Symbol(key, char, attrs);\n                _this.add(key, character);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return _this;\n    }\n    return CharacterMap;\n}(AbstractParseMap));\nexports.CharacterMap = CharacterMap;\nvar DelimiterMap = (function (_super) {\n    __extends(DelimiterMap, _super);\n    function DelimiterMap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DelimiterMap.prototype.parse = function (_a) {\n        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];\n        return _super.prototype.parse.call(this, [env, '\\\\' + symbol]);\n    };\n    return DelimiterMap;\n}(CharacterMap));\nexports.DelimiterMap = DelimiterMap;\nvar MacroMap = (function (_super) {\n    __extends(MacroMap, _super);\n    function MacroMap(name, json, functionMap) {\n        var e_2, _a;\n        var _this = _super.call(this, name, null) || this;\n        try {\n            for (var _b = __values(Object.keys(json)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                var value = json[key];\n                var _d = __read((typeof (value) === 'string') ? [value] : value), func = _d[0], attrs = _d.slice(1);\n                var character = new Symbol_js_1.Macro(key, functionMap[func], attrs);\n                _this.add(key, character);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return _this;\n    }\n    MacroMap.prototype.parserFor = function (symbol) {\n        var macro = this.lookup(symbol);\n        return macro ? macro.func : null;\n    };\n    MacroMap.prototype.parse = function (_a) {\n        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];\n        var macro = this.lookup(symbol);\n        var parser = this.parserFor(symbol);\n        if (!macro || !parser) {\n            return null;\n        }\n        return parseResult(parser.apply(void 0, __spreadArray([env, macro.symbol], __read(macro.args), false)));\n    };\n    return MacroMap;\n}(AbstractParseMap));\nexports.MacroMap = MacroMap;\nvar CommandMap = (function (_super) {\n    __extends(CommandMap, _super);\n    function CommandMap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CommandMap.prototype.parse = function (_a) {\n        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];\n        var macro = this.lookup(symbol);\n        var parser = this.parserFor(symbol);\n        if (!macro || !parser) {\n            return null;\n        }\n        var saveCommand = env.currentCS;\n        env.currentCS = '\\\\' + symbol;\n        var result = parser.apply(void 0, __spreadArray([env, '\\\\' + macro.symbol], __read(macro.args), false));\n        env.currentCS = saveCommand;\n        return parseResult(result);\n    };\n    return CommandMap;\n}(MacroMap));\nexports.CommandMap = CommandMap;\nvar EnvironmentMap = (function (_super) {\n    __extends(EnvironmentMap, _super);\n    function EnvironmentMap(name, parser, json, functionMap) {\n        var _this = _super.call(this, name, json, functionMap) || this;\n        _this.parser = parser;\n        return _this;\n    }\n    EnvironmentMap.prototype.parse = function (_a) {\n        var _b = __read(_a, 2), env = _b[0], symbol = _b[1];\n        var macro = this.lookup(symbol);\n        var envParser = this.parserFor(symbol);\n        if (!macro || !envParser) {\n            return null;\n        }\n        return parseResult(this.parser(env, macro.symbol, envParser, macro.args));\n    };\n    return EnvironmentMap;\n}(MacroMap));\nexports.EnvironmentMap = EnvironmentMap;\n//# sourceMappingURL=SymbolMap.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/SymbolMap.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/Tags.js":
/*!********************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/Tags.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TagsFactory = exports.AllTags = exports.NoTags = exports.AbstractTags = exports.TagInfo = exports.Label = void 0;\nvar TexParser_js_1 = __importDefault(__webpack_require__(/*! ./TexParser.js */ \"./node_modules/mathjax-full/js/input/tex/TexParser.js\"));\nvar Label = (function () {\n    function Label(tag, id) {\n        if (tag === void 0) { tag = '???'; }\n        if (id === void 0) { id = ''; }\n        this.tag = tag;\n        this.id = id;\n    }\n    return Label;\n}());\nexports.Label = Label;\nvar TagInfo = (function () {\n    function TagInfo(env, taggable, defaultTags, tag, tagId, tagFormat, noTag, labelId) {\n        if (env === void 0) { env = ''; }\n        if (taggable === void 0) { taggable = false; }\n        if (defaultTags === void 0) { defaultTags = false; }\n        if (tag === void 0) { tag = null; }\n        if (tagId === void 0) { tagId = ''; }\n        if (tagFormat === void 0) { tagFormat = ''; }\n        if (noTag === void 0) { noTag = false; }\n        if (labelId === void 0) { labelId = ''; }\n        this.env = env;\n        this.taggable = taggable;\n        this.defaultTags = defaultTags;\n        this.tag = tag;\n        this.tagId = tagId;\n        this.tagFormat = tagFormat;\n        this.noTag = noTag;\n        this.labelId = labelId;\n    }\n    return TagInfo;\n}());\nexports.TagInfo = TagInfo;\nvar AbstractTags = (function () {\n    function AbstractTags() {\n        this.counter = 0;\n        this.allCounter = 0;\n        this.configuration = null;\n        this.ids = {};\n        this.allIds = {};\n        this.labels = {};\n        this.allLabels = {};\n        this.redo = false;\n        this.refUpdate = false;\n        this.currentTag = new TagInfo();\n        this.history = [];\n        this.stack = [];\n        this.enTag = function (node, tag) {\n            var nf = this.configuration.nodeFactory;\n            var cell = nf.create('node', 'mtd', [node]);\n            var row = nf.create('node', 'mlabeledtr', [tag, cell]);\n            var table = nf.create('node', 'mtable', [row], {\n                side: this.configuration.options['tagSide'],\n                minlabelspacing: this.configuration.options['tagIndent'],\n                displaystyle: true\n            });\n            return table;\n        };\n    }\n    AbstractTags.prototype.start = function (env, taggable, defaultTags) {\n        if (this.currentTag) {\n            this.stack.push(this.currentTag);\n        }\n        this.currentTag = new TagInfo(env, taggable, defaultTags);\n    };\n    Object.defineProperty(AbstractTags.prototype, \"env\", {\n        get: function () {\n            return this.currentTag.env;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractTags.prototype.end = function () {\n        this.history.push(this.currentTag);\n        this.currentTag = this.stack.pop();\n    };\n    AbstractTags.prototype.tag = function (tag, noFormat) {\n        this.currentTag.tag = tag;\n        this.currentTag.tagFormat = noFormat ? tag : this.formatTag(tag);\n        this.currentTag.noTag = false;\n    };\n    AbstractTags.prototype.notag = function () {\n        this.tag('', true);\n        this.currentTag.noTag = true;\n    };\n    Object.defineProperty(AbstractTags.prototype, \"noTag\", {\n        get: function () {\n            return this.currentTag.noTag;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTags.prototype, \"label\", {\n        get: function () {\n            return this.currentTag.labelId;\n        },\n        set: function (label) {\n            this.currentTag.labelId = label;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractTags.prototype.formatUrl = function (id, base) {\n        return base + '#' + encodeURIComponent(id);\n    };\n    AbstractTags.prototype.formatTag = function (tag) {\n        return '(' + tag + ')';\n    };\n    AbstractTags.prototype.formatId = function (id) {\n        return 'mjx-eqn:' + id.replace(/\\s/g, '_');\n    };\n    AbstractTags.prototype.formatNumber = function (n) {\n        return n.toString();\n    };\n    AbstractTags.prototype.autoTag = function () {\n        if (this.currentTag.tag == null) {\n            this.counter++;\n            this.tag(this.formatNumber(this.counter), false);\n        }\n    };\n    AbstractTags.prototype.clearTag = function () {\n        this.label = '';\n        this.tag(null, true);\n        this.currentTag.tagId = '';\n    };\n    AbstractTags.prototype.getTag = function (force) {\n        if (force === void 0) { force = false; }\n        if (force) {\n            this.autoTag();\n            return this.makeTag();\n        }\n        var ct = this.currentTag;\n        if (ct.taggable && !ct.noTag) {\n            if (ct.defaultTags) {\n                this.autoTag();\n            }\n            if (ct.tag) {\n                return this.makeTag();\n            }\n        }\n        return null;\n    };\n    AbstractTags.prototype.resetTag = function () {\n        this.history = [];\n        this.redo = false;\n        this.refUpdate = false;\n        this.clearTag();\n    };\n    AbstractTags.prototype.reset = function (offset) {\n        if (offset === void 0) { offset = 0; }\n        this.resetTag();\n        this.counter = this.allCounter = offset;\n        this.allLabels = {};\n        this.allIds = {};\n    };\n    AbstractTags.prototype.startEquation = function (math) {\n        this.history = [];\n        this.stack = [];\n        this.clearTag();\n        this.currentTag = new TagInfo('', undefined, undefined);\n        this.labels = {};\n        this.ids = {};\n        this.counter = this.allCounter;\n        this.redo = false;\n        var recompile = math.inputData.recompile;\n        if (recompile) {\n            this.refUpdate = true;\n            this.counter = recompile.counter;\n        }\n    };\n    AbstractTags.prototype.finishEquation = function (math) {\n        if (this.redo) {\n            math.inputData.recompile = {\n                state: math.state(),\n                counter: this.allCounter\n            };\n        }\n        if (!this.refUpdate) {\n            this.allCounter = this.counter;\n        }\n        Object.assign(this.allIds, this.ids);\n        Object.assign(this.allLabels, this.labels);\n    };\n    AbstractTags.prototype.finalize = function (node, env) {\n        if (!env.display || this.currentTag.env ||\n            this.currentTag.tag == null) {\n            return node;\n        }\n        var tag = this.makeTag();\n        var table = this.enTag(node, tag);\n        return table;\n    };\n    AbstractTags.prototype.makeId = function () {\n        this.currentTag.tagId = this.formatId(this.configuration.options['useLabelIds'] ?\n            (this.label || this.currentTag.tag) : this.currentTag.tag);\n    };\n    AbstractTags.prototype.makeTag = function () {\n        this.makeId();\n        if (this.label) {\n            this.labels[this.label] = new Label(this.currentTag.tag, this.currentTag.tagId);\n        }\n        var mml = new TexParser_js_1.default('\\\\text{' + this.currentTag.tagFormat + '}', {}, this.configuration).mml();\n        return this.configuration.nodeFactory.create('node', 'mtd', [mml], { id: this.currentTag.tagId });\n    };\n    return AbstractTags;\n}());\nexports.AbstractTags = AbstractTags;\nvar NoTags = (function (_super) {\n    __extends(NoTags, _super);\n    function NoTags() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoTags.prototype.autoTag = function () { };\n    NoTags.prototype.getTag = function () {\n        return !this.currentTag.tag ? null : _super.prototype.getTag.call(this);\n    };\n    return NoTags;\n}(AbstractTags));\nexports.NoTags = NoTags;\nvar AllTags = (function (_super) {\n    __extends(AllTags, _super);\n    function AllTags() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AllTags.prototype.finalize = function (node, env) {\n        if (!env.display || this.history.find(function (x) { return x.taggable; })) {\n            return node;\n        }\n        var tag = this.getTag(true);\n        return this.enTag(node, tag);\n    };\n    return AllTags;\n}(AbstractTags));\nexports.AllTags = AllTags;\nvar TagsFactory;\n(function (TagsFactory) {\n    var tagsMapping = new Map([\n        ['none', NoTags],\n        ['all', AllTags]\n    ]);\n    var defaultTags = 'none';\n    TagsFactory.OPTIONS = {\n        tags: defaultTags,\n        tagSide: 'right',\n        tagIndent: '0.8em',\n        useLabelIds: true,\n        ignoreDuplicateLabels: false\n    };\n    TagsFactory.add = function (name, constr) {\n        tagsMapping.set(name, constr);\n    };\n    TagsFactory.addTags = function (tags) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Object.keys(tags)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                TagsFactory.add(key, tags[key]);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    TagsFactory.create = function (name) {\n        var constr = tagsMapping.get(name) || tagsMapping.get(defaultTags);\n        if (!constr) {\n            throw Error('Unknown tags class');\n        }\n        return new constr();\n    };\n    TagsFactory.setDefault = function (name) {\n        defaultTags = name;\n    };\n    TagsFactory.getDefault = function () {\n        return TagsFactory.create(defaultTags);\n    };\n})(TagsFactory = exports.TagsFactory || (exports.TagsFactory = {}));\n//# sourceMappingURL=Tags.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/Tags.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/TexConstants.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/TexConstants.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TexConstant = void 0;\nvar TexConstant;\n(function (TexConstant) {\n    TexConstant.Variant = {\n        NORMAL: 'normal',\n        BOLD: 'bold',\n        ITALIC: 'italic',\n        BOLDITALIC: 'bold-italic',\n        DOUBLESTRUCK: 'double-struck',\n        FRAKTUR: 'fraktur',\n        BOLDFRAKTUR: 'bold-fraktur',\n        SCRIPT: 'script',\n        BOLDSCRIPT: 'bold-script',\n        SANSSERIF: 'sans-serif',\n        BOLDSANSSERIF: 'bold-sans-serif',\n        SANSSERIFITALIC: 'sans-serif-italic',\n        SANSSERIFBOLDITALIC: 'sans-serif-bold-italic',\n        MONOSPACE: 'monospace',\n        INITIAL: 'inital',\n        TAILED: 'tailed',\n        LOOPED: 'looped',\n        STRETCHED: 'stretched',\n        CALLIGRAPHIC: '-tex-calligraphic',\n        BOLDCALLIGRAPHIC: '-tex-bold-calligraphic',\n        OLDSTYLE: '-tex-oldstyle',\n        BOLDOLDSTYLE: '-tex-bold-oldstyle',\n        MATHITALIC: '-tex-mathit'\n    };\n    TexConstant.Form = {\n        PREFIX: 'prefix',\n        INFIX: 'infix',\n        POSTFIX: 'postfix'\n    };\n    TexConstant.LineBreak = {\n        AUTO: 'auto',\n        NEWLINE: 'newline',\n        NOBREAK: 'nobreak',\n        GOODBREAK: 'goodbreak',\n        BADBREAK: 'badbreak'\n    };\n    TexConstant.LineBreakStyle = {\n        BEFORE: 'before',\n        AFTER: 'after',\n        DUPLICATE: 'duplicate',\n        INFIXLINBREAKSTYLE: 'infixlinebreakstyle'\n    };\n    TexConstant.IndentAlign = {\n        LEFT: 'left',\n        CENTER: 'center',\n        RIGHT: 'right',\n        AUTO: 'auto',\n        ID: 'id',\n        INDENTALIGN: 'indentalign'\n    };\n    TexConstant.IndentShift = {\n        INDENTSHIFT: 'indentshift'\n    };\n    TexConstant.LineThickness = {\n        THIN: 'thin',\n        MEDIUM: 'medium',\n        THICK: 'thick'\n    };\n    TexConstant.Notation = {\n        LONGDIV: 'longdiv',\n        ACTUARIAL: 'actuarial',\n        PHASORANGLE: 'phasorangle',\n        RADICAL: 'radical',\n        BOX: 'box',\n        ROUNDEDBOX: 'roundedbox',\n        CIRCLE: 'circle',\n        LEFT: 'left',\n        RIGHT: 'right',\n        TOP: 'top',\n        BOTTOM: 'bottom',\n        UPDIAGONALSTRIKE: 'updiagonalstrike',\n        DOWNDIAGONALSTRIKE: 'downdiagonalstrike',\n        VERTICALSTRIKE: 'verticalstrike',\n        HORIZONTALSTRIKE: 'horizontalstrike',\n        NORTHEASTARROW: 'northeastarrow',\n        MADRUWB: 'madruwb',\n        UPDIAGONALARROW: 'updiagonalarrow'\n    };\n    TexConstant.Align = {\n        TOP: 'top',\n        BOTTOM: 'bottom',\n        CENTER: 'center',\n        BASELINE: 'baseline',\n        AXIS: 'axis',\n        LEFT: 'left',\n        RIGHT: 'right'\n    };\n    TexConstant.Lines = {\n        NONE: 'none',\n        SOLID: 'solid',\n        DASHED: 'dashed'\n    };\n    TexConstant.Side = {\n        LEFT: 'left',\n        RIGHT: 'right',\n        LEFTOVERLAP: 'leftoverlap',\n        RIGHTOVERLAP: 'rightoverlap'\n    };\n    TexConstant.Width = {\n        AUTO: 'auto',\n        FIT: 'fit'\n    };\n    TexConstant.Actiontype = {\n        TOGGLE: 'toggle',\n        STATUSLINE: 'statusline',\n        TOOLTIP: 'tooltip',\n        INPUT: 'input'\n    };\n    TexConstant.Overflow = {\n        LINBREAK: 'linebreak',\n        SCROLL: 'scroll',\n        ELIDE: 'elide',\n        TRUNCATE: 'truncate',\n        SCALE: 'scale'\n    };\n    TexConstant.Unit = {\n        EM: 'em',\n        EX: 'ex',\n        PX: 'px',\n        IN: 'in',\n        CM: 'cm',\n        MM: 'mm',\n        PT: 'pt',\n        PC: 'pc'\n    };\n})(TexConstant = exports.TexConstant || (exports.TexConstant = {}));\n//# sourceMappingURL=TexConstants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9UZXhDb25zdGFudHMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdDQUF3QyxtQkFBbUIsS0FBSztBQUNqRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9UZXhDb25zdGFudHMuanM/N2I1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVGV4Q29uc3RhbnQgPSB2b2lkIDA7XG52YXIgVGV4Q29uc3RhbnQ7XG4oZnVuY3Rpb24gKFRleENvbnN0YW50KSB7XG4gICAgVGV4Q29uc3RhbnQuVmFyaWFudCA9IHtcbiAgICAgICAgTk9STUFMOiAnbm9ybWFsJyxcbiAgICAgICAgQk9MRDogJ2JvbGQnLFxuICAgICAgICBJVEFMSUM6ICdpdGFsaWMnLFxuICAgICAgICBCT0xESVRBTElDOiAnYm9sZC1pdGFsaWMnLFxuICAgICAgICBET1VCTEVTVFJVQ0s6ICdkb3VibGUtc3RydWNrJyxcbiAgICAgICAgRlJBS1RVUjogJ2ZyYWt0dXInLFxuICAgICAgICBCT0xERlJBS1RVUjogJ2JvbGQtZnJha3R1cicsXG4gICAgICAgIFNDUklQVDogJ3NjcmlwdCcsXG4gICAgICAgIEJPTERTQ1JJUFQ6ICdib2xkLXNjcmlwdCcsXG4gICAgICAgIFNBTlNTRVJJRjogJ3NhbnMtc2VyaWYnLFxuICAgICAgICBCT0xEU0FOU1NFUklGOiAnYm9sZC1zYW5zLXNlcmlmJyxcbiAgICAgICAgU0FOU1NFUklGSVRBTElDOiAnc2Fucy1zZXJpZi1pdGFsaWMnLFxuICAgICAgICBTQU5TU0VSSUZCT0xESVRBTElDOiAnc2Fucy1zZXJpZi1ib2xkLWl0YWxpYycsXG4gICAgICAgIE1PTk9TUEFDRTogJ21vbm9zcGFjZScsXG4gICAgICAgIElOSVRJQUw6ICdpbml0YWwnLFxuICAgICAgICBUQUlMRUQ6ICd0YWlsZWQnLFxuICAgICAgICBMT09QRUQ6ICdsb29wZWQnLFxuICAgICAgICBTVFJFVENIRUQ6ICdzdHJldGNoZWQnLFxuICAgICAgICBDQUxMSUdSQVBISUM6ICctdGV4LWNhbGxpZ3JhcGhpYycsXG4gICAgICAgIEJPTERDQUxMSUdSQVBISUM6ICctdGV4LWJvbGQtY2FsbGlncmFwaGljJyxcbiAgICAgICAgT0xEU1RZTEU6ICctdGV4LW9sZHN0eWxlJyxcbiAgICAgICAgQk9MRE9MRFNUWUxFOiAnLXRleC1ib2xkLW9sZHN0eWxlJyxcbiAgICAgICAgTUFUSElUQUxJQzogJy10ZXgtbWF0aGl0J1xuICAgIH07XG4gICAgVGV4Q29uc3RhbnQuRm9ybSA9IHtcbiAgICAgICAgUFJFRklYOiAncHJlZml4JyxcbiAgICAgICAgSU5GSVg6ICdpbmZpeCcsXG4gICAgICAgIFBPU1RGSVg6ICdwb3N0Zml4J1xuICAgIH07XG4gICAgVGV4Q29uc3RhbnQuTGluZUJyZWFrID0ge1xuICAgICAgICBBVVRPOiAnYXV0bycsXG4gICAgICAgIE5FV0xJTkU6ICduZXdsaW5lJyxcbiAgICAgICAgTk9CUkVBSzogJ25vYnJlYWsnLFxuICAgICAgICBHT09EQlJFQUs6ICdnb29kYnJlYWsnLFxuICAgICAgICBCQURCUkVBSzogJ2JhZGJyZWFrJ1xuICAgIH07XG4gICAgVGV4Q29uc3RhbnQuTGluZUJyZWFrU3R5bGUgPSB7XG4gICAgICAgIEJFRk9SRTogJ2JlZm9yZScsXG4gICAgICAgIEFGVEVSOiAnYWZ0ZXInLFxuICAgICAgICBEVVBMSUNBVEU6ICdkdXBsaWNhdGUnLFxuICAgICAgICBJTkZJWExJTkJSRUFLU1RZTEU6ICdpbmZpeGxpbmVicmVha3N0eWxlJ1xuICAgIH07XG4gICAgVGV4Q29uc3RhbnQuSW5kZW50QWxpZ24gPSB7XG4gICAgICAgIExFRlQ6ICdsZWZ0JyxcbiAgICAgICAgQ0VOVEVSOiAnY2VudGVyJyxcbiAgICAgICAgUklHSFQ6ICdyaWdodCcsXG4gICAgICAgIEFVVE86ICdhdXRvJyxcbiAgICAgICAgSUQ6ICdpZCcsXG4gICAgICAgIElOREVOVEFMSUdOOiAnaW5kZW50YWxpZ24nXG4gICAgfTtcbiAgICBUZXhDb25zdGFudC5JbmRlbnRTaGlmdCA9IHtcbiAgICAgICAgSU5ERU5UU0hJRlQ6ICdpbmRlbnRzaGlmdCdcbiAgICB9O1xuICAgIFRleENvbnN0YW50LkxpbmVUaGlja25lc3MgPSB7XG4gICAgICAgIFRISU46ICd0aGluJyxcbiAgICAgICAgTUVESVVNOiAnbWVkaXVtJyxcbiAgICAgICAgVEhJQ0s6ICd0aGljaydcbiAgICB9O1xuICAgIFRleENvbnN0YW50Lk5vdGF0aW9uID0ge1xuICAgICAgICBMT05HRElWOiAnbG9uZ2RpdicsXG4gICAgICAgIEFDVFVBUklBTDogJ2FjdHVhcmlhbCcsXG4gICAgICAgIFBIQVNPUkFOR0xFOiAncGhhc29yYW5nbGUnLFxuICAgICAgICBSQURJQ0FMOiAncmFkaWNhbCcsXG4gICAgICAgIEJPWDogJ2JveCcsXG4gICAgICAgIFJPVU5ERURCT1g6ICdyb3VuZGVkYm94JyxcbiAgICAgICAgQ0lSQ0xFOiAnY2lyY2xlJyxcbiAgICAgICAgTEVGVDogJ2xlZnQnLFxuICAgICAgICBSSUdIVDogJ3JpZ2h0JyxcbiAgICAgICAgVE9QOiAndG9wJyxcbiAgICAgICAgQk9UVE9NOiAnYm90dG9tJyxcbiAgICAgICAgVVBESUFHT05BTFNUUklLRTogJ3VwZGlhZ29uYWxzdHJpa2UnLFxuICAgICAgICBET1dORElBR09OQUxTVFJJS0U6ICdkb3duZGlhZ29uYWxzdHJpa2UnLFxuICAgICAgICBWRVJUSUNBTFNUUklLRTogJ3ZlcnRpY2Fsc3RyaWtlJyxcbiAgICAgICAgSE9SSVpPTlRBTFNUUklLRTogJ2hvcml6b250YWxzdHJpa2UnLFxuICAgICAgICBOT1JUSEVBU1RBUlJPVzogJ25vcnRoZWFzdGFycm93JyxcbiAgICAgICAgTUFEUlVXQjogJ21hZHJ1d2InLFxuICAgICAgICBVUERJQUdPTkFMQVJST1c6ICd1cGRpYWdvbmFsYXJyb3cnXG4gICAgfTtcbiAgICBUZXhDb25zdGFudC5BbGlnbiA9IHtcbiAgICAgICAgVE9QOiAndG9wJyxcbiAgICAgICAgQk9UVE9NOiAnYm90dG9tJyxcbiAgICAgICAgQ0VOVEVSOiAnY2VudGVyJyxcbiAgICAgICAgQkFTRUxJTkU6ICdiYXNlbGluZScsXG4gICAgICAgIEFYSVM6ICdheGlzJyxcbiAgICAgICAgTEVGVDogJ2xlZnQnLFxuICAgICAgICBSSUdIVDogJ3JpZ2h0J1xuICAgIH07XG4gICAgVGV4Q29uc3RhbnQuTGluZXMgPSB7XG4gICAgICAgIE5PTkU6ICdub25lJyxcbiAgICAgICAgU09MSUQ6ICdzb2xpZCcsXG4gICAgICAgIERBU0hFRDogJ2Rhc2hlZCdcbiAgICB9O1xuICAgIFRleENvbnN0YW50LlNpZGUgPSB7XG4gICAgICAgIExFRlQ6ICdsZWZ0JyxcbiAgICAgICAgUklHSFQ6ICdyaWdodCcsXG4gICAgICAgIExFRlRPVkVSTEFQOiAnbGVmdG92ZXJsYXAnLFxuICAgICAgICBSSUdIVE9WRVJMQVA6ICdyaWdodG92ZXJsYXAnXG4gICAgfTtcbiAgICBUZXhDb25zdGFudC5XaWR0aCA9IHtcbiAgICAgICAgQVVUTzogJ2F1dG8nLFxuICAgICAgICBGSVQ6ICdmaXQnXG4gICAgfTtcbiAgICBUZXhDb25zdGFudC5BY3Rpb250eXBlID0ge1xuICAgICAgICBUT0dHTEU6ICd0b2dnbGUnLFxuICAgICAgICBTVEFUVVNMSU5FOiAnc3RhdHVzbGluZScsXG4gICAgICAgIFRPT0xUSVA6ICd0b29sdGlwJyxcbiAgICAgICAgSU5QVVQ6ICdpbnB1dCdcbiAgICB9O1xuICAgIFRleENvbnN0YW50Lk92ZXJmbG93ID0ge1xuICAgICAgICBMSU5CUkVBSzogJ2xpbmVicmVhaycsXG4gICAgICAgIFNDUk9MTDogJ3Njcm9sbCcsXG4gICAgICAgIEVMSURFOiAnZWxpZGUnLFxuICAgICAgICBUUlVOQ0FURTogJ3RydW5jYXRlJyxcbiAgICAgICAgU0NBTEU6ICdzY2FsZSdcbiAgICB9O1xuICAgIFRleENvbnN0YW50LlVuaXQgPSB7XG4gICAgICAgIEVNOiAnZW0nLFxuICAgICAgICBFWDogJ2V4JyxcbiAgICAgICAgUFg6ICdweCcsXG4gICAgICAgIElOOiAnaW4nLFxuICAgICAgICBDTTogJ2NtJyxcbiAgICAgICAgTU06ICdtbScsXG4gICAgICAgIFBUOiAncHQnLFxuICAgICAgICBQQzogJ3BjJ1xuICAgIH07XG59KShUZXhDb25zdGFudCA9IGV4cG9ydHMuVGV4Q29uc3RhbnQgfHwgKGV4cG9ydHMuVGV4Q29uc3RhbnQgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VGV4Q29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/TexConstants.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/TexError.js":
/*!************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/TexError.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar TexError = (function () {\n    function TexError(id, message) {\n        var rest = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            rest[_i - 2] = arguments[_i];\n        }\n        this.id = id;\n        this.message = TexError.processString(message, rest);\n    }\n    TexError.processString = function (str, args) {\n        var parts = str.split(TexError.pattern);\n        for (var i = 1, m = parts.length; i < m; i += 2) {\n            var c = parts[i].charAt(0);\n            if (c >= '0' && c <= '9') {\n                parts[i] = args[parseInt(parts[i], 10) - 1];\n                if (typeof parts[i] === 'number') {\n                    parts[i] = parts[i].toString();\n                }\n            }\n            else if (c === '{') {\n                c = parts[i].substr(1);\n                if (c >= '0' && c <= '9') {\n                    parts[i] = args[parseInt(parts[i].substr(1, parts[i].length - 2), 10) - 1];\n                    if (typeof parts[i] === 'number') {\n                        parts[i] = parts[i].toString();\n                    }\n                }\n                else {\n                    var match = parts[i].match(/^\\{([a-z]+):%(\\d+)\\|(.*)\\}$/);\n                    if (match) {\n                        parts[i] = '%' + parts[i];\n                    }\n                }\n            }\n            if (parts[i] == null) {\n                parts[i] = '???';\n            }\n        }\n        return parts.join('');\n    };\n    TexError.pattern = /%(\\d+|\\{\\d+\\}|\\{[a-z]+:\\%\\d+(?:\\|(?:%\\{\\d+\\}|%.|[^\\}])*)+\\}|.)/g;\n    return TexError;\n}());\nexports[\"default\"] = TexError;\n//# sourceMappingURL=TexError.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9UZXhFcnJvci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsdUJBQXVCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLE9BQU87QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCx1QkFBdUI7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxLQUFLLEdBQUcsdUJBQXVCLEtBQUssUUFBUSxPQUFPO0FBQ25GO0FBQ0EsQ0FBQztBQUNELGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvVGV4RXJyb3IuanM/ZTgwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBUZXhFcnJvciA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVGV4RXJyb3IoaWQsIG1lc3NhZ2UpIHtcbiAgICAgICAgdmFyIHJlc3QgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAyOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIHJlc3RbX2kgLSAyXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBUZXhFcnJvci5wcm9jZXNzU3RyaW5nKG1lc3NhZ2UsIHJlc3QpO1xuICAgIH1cbiAgICBUZXhFcnJvci5wcm9jZXNzU3RyaW5nID0gZnVuY3Rpb24gKHN0ciwgYXJncykge1xuICAgICAgICB2YXIgcGFydHMgPSBzdHIuc3BsaXQoVGV4RXJyb3IucGF0dGVybik7XG4gICAgICAgIGZvciAodmFyIGkgPSAxLCBtID0gcGFydHMubGVuZ3RoOyBpIDwgbTsgaSArPSAyKSB7XG4gICAgICAgICAgICB2YXIgYyA9IHBhcnRzW2ldLmNoYXJBdCgwKTtcbiAgICAgICAgICAgIGlmIChjID49ICcwJyAmJiBjIDw9ICc5Jykge1xuICAgICAgICAgICAgICAgIHBhcnRzW2ldID0gYXJnc1twYXJzZUludChwYXJ0c1tpXSwgMTApIC0gMV07XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBwYXJ0c1tpXSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgICAgICAgICAgcGFydHNbaV0gPSBwYXJ0c1tpXS50b1N0cmluZygpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGMgPT09ICd7Jykge1xuICAgICAgICAgICAgICAgIGMgPSBwYXJ0c1tpXS5zdWJzdHIoMSk7XG4gICAgICAgICAgICAgICAgaWYgKGMgPj0gJzAnICYmIGMgPD0gJzknKSB7XG4gICAgICAgICAgICAgICAgICAgIHBhcnRzW2ldID0gYXJnc1twYXJzZUludChwYXJ0c1tpXS5zdWJzdHIoMSwgcGFydHNbaV0ubGVuZ3RoIC0gMiksIDEwKSAtIDFdO1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHBhcnRzW2ldID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFydHNbaV0gPSBwYXJ0c1tpXS50b1N0cmluZygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB2YXIgbWF0Y2ggPSBwYXJ0c1tpXS5tYXRjaCgvXlxceyhbYS16XSspOiUoXFxkKylcXHwoLiopXFx9JC8pO1xuICAgICAgICAgICAgICAgICAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcnRzW2ldID0gJyUnICsgcGFydHNbaV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocGFydHNbaV0gPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHBhcnRzW2ldID0gJz8/Pyc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBhcnRzLmpvaW4oJycpO1xuICAgIH07XG4gICAgVGV4RXJyb3IucGF0dGVybiA9IC8lKFxcZCt8XFx7XFxkK1xcfXxcXHtbYS16XSs6XFwlXFxkKyg/OlxcfCg/OiVcXHtcXGQrXFx9fCUufFteXFx9XSkqKStcXH18LikvZztcbiAgICByZXR1cm4gVGV4RXJyb3I7XG59KCkpO1xuZXhwb3J0cy5kZWZhdWx0ID0gVGV4RXJyb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UZXhFcnJvci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/TexError.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/TexParser.js":
/*!*************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/TexParser.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ./ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar Stack_js_1 = __importDefault(__webpack_require__(/*! ./Stack.js */ \"./node_modules/mathjax-full/js/input/tex/Stack.js\"));\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ./TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar MmlNode_js_1 = __webpack_require__(/*! ../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar TexParser = (function () {\n    function TexParser(_string, env, configuration) {\n        var e_1, _a;\n        this._string = _string;\n        this.configuration = configuration;\n        this.macroCount = 0;\n        this.i = 0;\n        this.currentCS = '';\n        var inner = env.hasOwnProperty('isInner');\n        var isInner = env['isInner'];\n        delete env['isInner'];\n        var ENV;\n        if (env) {\n            ENV = {};\n            try {\n                for (var _b = __values(Object.keys(env)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var id = _c.value;\n                    ENV[id] = env[id];\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        this.configuration.pushParser(this);\n        this.stack = new Stack_js_1.default(this.itemFactory, ENV, inner ? isInner : true);\n        this.Parse();\n        this.Push(this.itemFactory.create('stop'));\n    }\n    Object.defineProperty(TexParser.prototype, \"options\", {\n        get: function () {\n            return this.configuration.options;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TexParser.prototype, \"itemFactory\", {\n        get: function () {\n            return this.configuration.itemFactory;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TexParser.prototype, \"tags\", {\n        get: function () {\n            return this.configuration.tags;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TexParser.prototype, \"string\", {\n        get: function () {\n            return this._string;\n        },\n        set: function (str) {\n            this._string = str;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TexParser.prototype.parse = function (kind, input) {\n        return this.configuration.handlers.get(kind).parse(input);\n    };\n    TexParser.prototype.lookup = function (kind, symbol) {\n        return this.configuration.handlers.get(kind).lookup(symbol);\n    };\n    TexParser.prototype.contains = function (kind, symbol) {\n        return this.configuration.handlers.get(kind).contains(symbol);\n    };\n    TexParser.prototype.toString = function () {\n        var e_2, _a;\n        var str = '';\n        try {\n            for (var _b = __values(Array.from(this.configuration.handlers.keys())), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var config = _c.value;\n                str += config + ': ' +\n                    this.configuration.handlers.get(config) + '\\n';\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return str;\n    };\n    TexParser.prototype.Parse = function () {\n        var c;\n        while (this.i < this.string.length) {\n            c = this.getCodePoint();\n            this.i += c.length;\n            this.parse('character', [this, c]);\n        }\n    };\n    TexParser.prototype.Push = function (arg) {\n        if (arg instanceof MmlNode_js_1.AbstractMmlNode && arg.isInferred) {\n            this.PushAll(arg.childNodes);\n        }\n        else {\n            this.stack.Push(arg);\n        }\n    };\n    TexParser.prototype.PushAll = function (args) {\n        var e_3, _a;\n        try {\n            for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {\n                var arg = args_1_1.value;\n                this.stack.Push(arg);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    TexParser.prototype.mml = function () {\n        if (!this.stack.Top().isKind('mml')) {\n            return null;\n        }\n        var node = this.stack.Top().First;\n        this.configuration.popParser();\n        return node;\n    };\n    TexParser.prototype.convertDelimiter = function (c) {\n        var symbol = this.lookup('delimiter', c);\n        return symbol ? symbol.char : null;\n    };\n    TexParser.prototype.getCodePoint = function () {\n        var code = this.string.codePointAt(this.i);\n        return code === undefined ? '' : String.fromCodePoint(code);\n    };\n    TexParser.prototype.nextIsSpace = function () {\n        return !!this.string.charAt(this.i).match(/\\s/);\n    };\n    TexParser.prototype.GetNext = function () {\n        while (this.nextIsSpace()) {\n            this.i++;\n        }\n        return this.getCodePoint();\n    };\n    TexParser.prototype.GetCS = function () {\n        var CS = this.string.slice(this.i).match(/^(([a-z]+) ?|[\\uD800-\\uDBFF].|.)/i);\n        if (CS) {\n            this.i += CS[0].length;\n            return CS[2] || CS[1];\n        }\n        else {\n            this.i++;\n            return ' ';\n        }\n    };\n    TexParser.prototype.GetArgument = function (_name, noneOK) {\n        switch (this.GetNext()) {\n            case '':\n                if (!noneOK) {\n                    throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', this.currentCS);\n                }\n                return null;\n            case '}':\n                if (!noneOK) {\n                    throw new TexError_js_1.default('ExtraCloseMissingOpen', 'Extra close brace or missing open brace');\n                }\n                return null;\n            case '\\\\':\n                this.i++;\n                return '\\\\' + this.GetCS();\n            case '{':\n                var j = ++this.i, parens = 1;\n                while (this.i < this.string.length) {\n                    switch (this.string.charAt(this.i++)) {\n                        case '\\\\':\n                            this.i++;\n                            break;\n                        case '{':\n                            parens++;\n                            break;\n                        case '}':\n                            if (--parens === 0) {\n                                return this.string.slice(j, this.i - 1);\n                            }\n                            break;\n                    }\n                }\n                throw new TexError_js_1.default('MissingCloseBrace', 'Missing close brace');\n        }\n        var c = this.getCodePoint();\n        this.i += c.length;\n        return c;\n    };\n    TexParser.prototype.GetBrackets = function (_name, def) {\n        if (this.GetNext() !== '[') {\n            return def;\n        }\n        var j = ++this.i, parens = 0;\n        while (this.i < this.string.length) {\n            switch (this.string.charAt(this.i++)) {\n                case '{':\n                    parens++;\n                    break;\n                case '\\\\':\n                    this.i++;\n                    break;\n                case '}':\n                    if (parens-- <= 0) {\n                        throw new TexError_js_1.default('ExtraCloseLooking', 'Extra close brace while looking for %1', '\\']\\'');\n                    }\n                    break;\n                case ']':\n                    if (parens === 0) {\n                        return this.string.slice(j, this.i - 1);\n                    }\n                    break;\n            }\n        }\n        throw new TexError_js_1.default('MissingCloseBracket', 'Could not find closing \\']\\' for argument to %1', this.currentCS);\n    };\n    TexParser.prototype.GetDelimiter = function (name, braceOK) {\n        var c = this.GetNext();\n        this.i += c.length;\n        if (this.i <= this.string.length) {\n            if (c === '\\\\') {\n                c += this.GetCS();\n            }\n            else if (c === '{' && braceOK) {\n                this.i--;\n                c = this.GetArgument(name).trim();\n            }\n            if (this.contains('delimiter', c)) {\n                return this.convertDelimiter(c);\n            }\n        }\n        throw new TexError_js_1.default('MissingOrUnrecognizedDelim', 'Missing or unrecognized delimiter for %1', this.currentCS);\n    };\n    TexParser.prototype.GetDimen = function (name) {\n        if (this.GetNext() === '{') {\n            var dimen = this.GetArgument(name);\n            var _a = __read(ParseUtil_js_1.default.matchDimen(dimen), 2), value = _a[0], unit = _a[1];\n            if (value) {\n                return value + unit;\n            }\n        }\n        else {\n            var dimen = this.string.slice(this.i);\n            var _b = __read(ParseUtil_js_1.default.matchDimen(dimen, true), 3), value = _b[0], unit = _b[1], length_1 = _b[2];\n            if (value) {\n                this.i += length_1;\n                return value + unit;\n            }\n        }\n        throw new TexError_js_1.default('MissingDimOrUnits', 'Missing dimension or its units for %1', this.currentCS);\n    };\n    TexParser.prototype.GetUpTo = function (_name, token) {\n        while (this.nextIsSpace()) {\n            this.i++;\n        }\n        var j = this.i;\n        var parens = 0;\n        while (this.i < this.string.length) {\n            var k = this.i;\n            var c = this.GetNext();\n            this.i += c.length;\n            switch (c) {\n                case '\\\\':\n                    c += this.GetCS();\n                    break;\n                case '{':\n                    parens++;\n                    break;\n                case '}':\n                    if (parens === 0) {\n                        throw new TexError_js_1.default('ExtraCloseLooking', 'Extra close brace while looking for %1', token);\n                    }\n                    parens--;\n                    break;\n            }\n            if (parens === 0 && c === token) {\n                return this.string.slice(j, k);\n            }\n        }\n        throw new TexError_js_1.default('TokenNotFoundForCommand', 'Could not find %1 for %2', token, this.currentCS);\n    };\n    TexParser.prototype.ParseArg = function (name) {\n        return new TexParser(this.GetArgument(name), this.stack.env, this.configuration).mml();\n    };\n    TexParser.prototype.ParseUpTo = function (name, token) {\n        return new TexParser(this.GetUpTo(name, token), this.stack.env, this.configuration).mml();\n    };\n    TexParser.prototype.GetDelimiterArg = function (name) {\n        var c = ParseUtil_js_1.default.trimSpaces(this.GetArgument(name));\n        if (c === '') {\n            return null;\n        }\n        if (this.contains('delimiter', c)) {\n            return c;\n        }\n        throw new TexError_js_1.default('MissingOrUnrecognizedDelim', 'Missing or unrecognized delimiter for %1', this.currentCS);\n    };\n    TexParser.prototype.GetStar = function () {\n        var star = (this.GetNext() === '*');\n        if (star) {\n            this.i++;\n        }\n        return star;\n    };\n    TexParser.prototype.create = function (kind) {\n        var _a;\n        var rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            rest[_i - 1] = arguments[_i];\n        }\n        return (_a = this.configuration.nodeFactory).create.apply(_a, __spreadArray([kind], __read(rest), false));\n    };\n    return TexParser;\n}());\nexports[\"default\"] = TexParser;\n//# sourceMappingURL=TexParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/TexParser.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/action/ActionConfiguration.js":
/*!******************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/action/ActionConfiguration.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ActionConfiguration = exports.ActionMethods = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar TexParser_js_1 = __importDefault(__webpack_require__(/*! ../TexParser.js */ \"./node_modules/mathjax-full/js/input/tex/TexParser.js\"));\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar BaseMethods_js_1 = __importDefault(__webpack_require__(/*! ../base/BaseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseMethods.js\"));\nexports.ActionMethods = {};\nexports.ActionMethods.Macro = BaseMethods_js_1.default.Macro;\nexports.ActionMethods.Toggle = function (parser, name) {\n    var children = [];\n    var arg;\n    while ((arg = parser.GetArgument(name)) !== '\\\\endtoggle') {\n        children.push(new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml());\n    }\n    parser.Push(parser.create('node', 'maction', children, { actiontype: 'toggle' }));\n};\nexports.ActionMethods.Mathtip = function (parser, name) {\n    var arg = parser.ParseArg(name);\n    var tip = parser.ParseArg(name);\n    parser.Push(parser.create('node', 'maction', [arg, tip], { actiontype: 'tooltip' }));\n};\nnew SymbolMap_js_1.CommandMap('action-macros', {\n    toggle: 'Toggle',\n    mathtip: 'Mathtip',\n    texttip: ['Macro', '\\\\mathtip{#1}{\\\\text{#2}}', 2]\n}, exports.ActionMethods);\nexports.ActionConfiguration = Configuration_js_1.Configuration.create('action', { handler: { macro: ['action-macros'] } });\n//# sourceMappingURL=ActionConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9hY3Rpb24vQWN0aW9uQ29uZmlndXJhdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQixHQUFHLHFCQUFxQjtBQUNuRCx5QkFBeUIsbUJBQU8sQ0FBQyxzRkFBcUI7QUFDdEQscUNBQXFDLG1CQUFPLENBQUMsOEVBQWlCO0FBQzlELHFCQUFxQixtQkFBTyxDQUFDLDhFQUFpQjtBQUM5Qyx1Q0FBdUMsbUJBQU8sQ0FBQyw0RkFBd0I7QUFDdkUscUJBQXFCO0FBQ3JCLDJCQUEyQjtBQUMzQiw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCxzQkFBc0I7QUFDbkY7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBLCtEQUErRCx1QkFBdUI7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsSUFBSSxPQUFPLElBQUk7QUFDakQsQ0FBQztBQUNELDJCQUEyQix1REFBdUQsV0FBVyw0QkFBNEI7QUFDekgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvYWN0aW9uL0FjdGlvbkNvbmZpZ3VyYXRpb24uanM/ZWYxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWN0aW9uQ29uZmlndXJhdGlvbiA9IGV4cG9ydHMuQWN0aW9uTWV0aG9kcyA9IHZvaWQgMDtcbnZhciBDb25maWd1cmF0aW9uX2pzXzEgPSByZXF1aXJlKFwiLi4vQ29uZmlndXJhdGlvbi5qc1wiKTtcbnZhciBUZXhQYXJzZXJfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vVGV4UGFyc2VyLmpzXCIpKTtcbnZhciBTeW1ib2xNYXBfanNfMSA9IHJlcXVpcmUoXCIuLi9TeW1ib2xNYXAuanNcIik7XG52YXIgQmFzZU1ldGhvZHNfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vYmFzZS9CYXNlTWV0aG9kcy5qc1wiKSk7XG5leHBvcnRzLkFjdGlvbk1ldGhvZHMgPSB7fTtcbmV4cG9ydHMuQWN0aW9uTWV0aG9kcy5NYWNybyA9IEJhc2VNZXRob2RzX2pzXzEuZGVmYXVsdC5NYWNybztcbmV4cG9ydHMuQWN0aW9uTWV0aG9kcy5Ub2dnbGUgPSBmdW5jdGlvbiAocGFyc2VyLCBuYW1lKSB7XG4gICAgdmFyIGNoaWxkcmVuID0gW107XG4gICAgdmFyIGFyZztcbiAgICB3aGlsZSAoKGFyZyA9IHBhcnNlci5HZXRBcmd1bWVudChuYW1lKSkgIT09ICdcXFxcZW5kdG9nZ2xlJykge1xuICAgICAgICBjaGlsZHJlbi5wdXNoKG5ldyBUZXhQYXJzZXJfanNfMS5kZWZhdWx0KGFyZywgcGFyc2VyLnN0YWNrLmVudiwgcGFyc2VyLmNvbmZpZ3VyYXRpb24pLm1tbCgpKTtcbiAgICB9XG4gICAgcGFyc2VyLlB1c2gocGFyc2VyLmNyZWF0ZSgnbm9kZScsICdtYWN0aW9uJywgY2hpbGRyZW4sIHsgYWN0aW9udHlwZTogJ3RvZ2dsZScgfSkpO1xufTtcbmV4cG9ydHMuQWN0aW9uTWV0aG9kcy5NYXRodGlwID0gZnVuY3Rpb24gKHBhcnNlciwgbmFtZSkge1xuICAgIHZhciBhcmcgPSBwYXJzZXIuUGFyc2VBcmcobmFtZSk7XG4gICAgdmFyIHRpcCA9IHBhcnNlci5QYXJzZUFyZyhuYW1lKTtcbiAgICBwYXJzZXIuUHVzaChwYXJzZXIuY3JlYXRlKCdub2RlJywgJ21hY3Rpb24nLCBbYXJnLCB0aXBdLCB7IGFjdGlvbnR5cGU6ICd0b29sdGlwJyB9KSk7XG59O1xubmV3IFN5bWJvbE1hcF9qc18xLkNvbW1hbmRNYXAoJ2FjdGlvbi1tYWNyb3MnLCB7XG4gICAgdG9nZ2xlOiAnVG9nZ2xlJyxcbiAgICBtYXRodGlwOiAnTWF0aHRpcCcsXG4gICAgdGV4dHRpcDogWydNYWNybycsICdcXFxcbWF0aHRpcHsjMX17XFxcXHRleHR7IzJ9fScsIDJdXG59LCBleHBvcnRzLkFjdGlvbk1ldGhvZHMpO1xuZXhwb3J0cy5BY3Rpb25Db25maWd1cmF0aW9uID0gQ29uZmlndXJhdGlvbl9qc18xLkNvbmZpZ3VyYXRpb24uY3JlYXRlKCdhY3Rpb24nLCB7IGhhbmRsZXI6IHsgbWFjcm86IFsnYWN0aW9uLW1hY3JvcyddIH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BY3Rpb25Db25maWd1cmF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/action/ActionConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/ams/AmsConfiguration.js":
/*!************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/ams/AmsConfiguration.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AmsConfiguration = exports.AmsTags = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar AmsItems_js_1 = __webpack_require__(/*! ./AmsItems.js */ \"./node_modules/mathjax-full/js/input/tex/ams/AmsItems.js\");\nvar Tags_js_1 = __webpack_require__(/*! ../Tags.js */ \"./node_modules/mathjax-full/js/input/tex/Tags.js\");\nvar AmsMethods_js_1 = __webpack_require__(/*! ./AmsMethods.js */ \"./node_modules/mathjax-full/js/input/tex/ams/AmsMethods.js\");\n__webpack_require__(/*! ./AmsMappings.js */ \"./node_modules/mathjax-full/js/input/tex/ams/AmsMappings.js\");\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar AmsTags = (function (_super) {\n    __extends(AmsTags, _super);\n    function AmsTags() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return AmsTags;\n}(Tags_js_1.AbstractTags));\nexports.AmsTags = AmsTags;\nvar init = function (config) {\n    new SymbolMap_js_1.CommandMap(AmsMethods_js_1.NEW_OPS, {}, {});\n    config.append(Configuration_js_1.Configuration.local({ handler: { macro: [AmsMethods_js_1.NEW_OPS] },\n        priority: -1 }));\n};\nexports.AmsConfiguration = Configuration_js_1.Configuration.create('ams', {\n    handler: {\n        character: ['AMSmath-operatorLetter'],\n        delimiter: ['AMSsymbols-delimiter', 'AMSmath-delimiter'],\n        macro: ['AMSsymbols-mathchar0mi', 'AMSsymbols-mathchar0mo',\n            'AMSsymbols-delimiter', 'AMSsymbols-macros',\n            'AMSmath-mathchar0mo', 'AMSmath-macros', 'AMSmath-delimiter'],\n        environment: ['AMSmath-environment']\n    },\n    items: (_a = {},\n        _a[AmsItems_js_1.MultlineItem.prototype.kind] = AmsItems_js_1.MultlineItem,\n        _a[AmsItems_js_1.FlalignItem.prototype.kind] = AmsItems_js_1.FlalignItem,\n        _a),\n    tags: { 'ams': AmsTags },\n    init: init,\n    config: function (_config, jax) {\n        if (jax.parseOptions.options.multlineWidth) {\n            jax.parseOptions.options.ams.multlineWidth = jax.parseOptions.options.multlineWidth;\n        }\n        delete jax.parseOptions.options.multlineWidth;\n    },\n    options: {\n        multlineWidth: '',\n        ams: {\n            multlineWidth: '100%',\n            multlineIndent: '1em',\n        }\n    }\n});\n//# sourceMappingURL=AmsConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9hbXMvQW1zQ29uZmlndXJhdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCLHNDQUFzQyxrQkFBa0I7QUFDdkYsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QixHQUFHLGVBQWU7QUFDMUMseUJBQXlCLG1CQUFPLENBQUMsc0ZBQXFCO0FBQ3RELG9CQUFvQixtQkFBTyxDQUFDLCtFQUFlO0FBQzNDLGdCQUFnQixtQkFBTyxDQUFDLG9FQUFZO0FBQ3BDLHNCQUFzQixtQkFBTyxDQUFDLG1GQUFpQjtBQUMvQyxtQkFBTyxDQUFDLHFGQUFrQjtBQUMxQixxQkFBcUIsbUJBQU8sQ0FBQyw4RUFBaUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGVBQWU7QUFDZjtBQUNBLDZEQUE2RCxJQUFJO0FBQ2pFLDJEQUEyRCxXQUFXLGtDQUFrQztBQUN4RyxzQkFBc0I7QUFDdEI7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLFlBQVksZ0JBQWdCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9hbXMvQW1zQ29uZmlndXJhdGlvbi5qcz81NmIxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbnZhciBfYTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQW1zQ29uZmlndXJhdGlvbiA9IGV4cG9ydHMuQW1zVGFncyA9IHZvaWQgMDtcbnZhciBDb25maWd1cmF0aW9uX2pzXzEgPSByZXF1aXJlKFwiLi4vQ29uZmlndXJhdGlvbi5qc1wiKTtcbnZhciBBbXNJdGVtc19qc18xID0gcmVxdWlyZShcIi4vQW1zSXRlbXMuanNcIik7XG52YXIgVGFnc19qc18xID0gcmVxdWlyZShcIi4uL1RhZ3MuanNcIik7XG52YXIgQW1zTWV0aG9kc19qc18xID0gcmVxdWlyZShcIi4vQW1zTWV0aG9kcy5qc1wiKTtcbnJlcXVpcmUoXCIuL0Ftc01hcHBpbmdzLmpzXCIpO1xudmFyIFN5bWJvbE1hcF9qc18xID0gcmVxdWlyZShcIi4uL1N5bWJvbE1hcC5qc1wiKTtcbnZhciBBbXNUYWdzID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoQW1zVGFncywgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBBbXNUYWdzKCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIHJldHVybiBBbXNUYWdzO1xufShUYWdzX2pzXzEuQWJzdHJhY3RUYWdzKSk7XG5leHBvcnRzLkFtc1RhZ3MgPSBBbXNUYWdzO1xudmFyIGluaXQgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gICAgbmV3IFN5bWJvbE1hcF9qc18xLkNvbW1hbmRNYXAoQW1zTWV0aG9kc19qc18xLk5FV19PUFMsIHt9LCB7fSk7XG4gICAgY29uZmlnLmFwcGVuZChDb25maWd1cmF0aW9uX2pzXzEuQ29uZmlndXJhdGlvbi5sb2NhbCh7IGhhbmRsZXI6IHsgbWFjcm86IFtBbXNNZXRob2RzX2pzXzEuTkVXX09QU10gfSxcbiAgICAgICAgcHJpb3JpdHk6IC0xIH0pKTtcbn07XG5leHBvcnRzLkFtc0NvbmZpZ3VyYXRpb24gPSBDb25maWd1cmF0aW9uX2pzXzEuQ29uZmlndXJhdGlvbi5jcmVhdGUoJ2FtcycsIHtcbiAgICBoYW5kbGVyOiB7XG4gICAgICAgIGNoYXJhY3RlcjogWydBTVNtYXRoLW9wZXJhdG9yTGV0dGVyJ10sXG4gICAgICAgIGRlbGltaXRlcjogWydBTVNzeW1ib2xzLWRlbGltaXRlcicsICdBTVNtYXRoLWRlbGltaXRlciddLFxuICAgICAgICBtYWNybzogWydBTVNzeW1ib2xzLW1hdGhjaGFyMG1pJywgJ0FNU3N5bWJvbHMtbWF0aGNoYXIwbW8nLFxuICAgICAgICAgICAgJ0FNU3N5bWJvbHMtZGVsaW1pdGVyJywgJ0FNU3N5bWJvbHMtbWFjcm9zJyxcbiAgICAgICAgICAgICdBTVNtYXRoLW1hdGhjaGFyMG1vJywgJ0FNU21hdGgtbWFjcm9zJywgJ0FNU21hdGgtZGVsaW1pdGVyJ10sXG4gICAgICAgIGVudmlyb25tZW50OiBbJ0FNU21hdGgtZW52aXJvbm1lbnQnXVxuICAgIH0sXG4gICAgaXRlbXM6IChfYSA9IHt9LFxuICAgICAgICBfYVtBbXNJdGVtc19qc18xLk11bHRsaW5lSXRlbS5wcm90b3R5cGUua2luZF0gPSBBbXNJdGVtc19qc18xLk11bHRsaW5lSXRlbSxcbiAgICAgICAgX2FbQW1zSXRlbXNfanNfMS5GbGFsaWduSXRlbS5wcm90b3R5cGUua2luZF0gPSBBbXNJdGVtc19qc18xLkZsYWxpZ25JdGVtLFxuICAgICAgICBfYSksXG4gICAgdGFnczogeyAnYW1zJzogQW1zVGFncyB9LFxuICAgIGluaXQ6IGluaXQsXG4gICAgY29uZmlnOiBmdW5jdGlvbiAoX2NvbmZpZywgamF4KSB7XG4gICAgICAgIGlmIChqYXgucGFyc2VPcHRpb25zLm9wdGlvbnMubXVsdGxpbmVXaWR0aCkge1xuICAgICAgICAgICAgamF4LnBhcnNlT3B0aW9ucy5vcHRpb25zLmFtcy5tdWx0bGluZVdpZHRoID0gamF4LnBhcnNlT3B0aW9ucy5vcHRpb25zLm11bHRsaW5lV2lkdGg7XG4gICAgICAgIH1cbiAgICAgICAgZGVsZXRlIGpheC5wYXJzZU9wdGlvbnMub3B0aW9ucy5tdWx0bGluZVdpZHRoO1xuICAgIH0sXG4gICAgb3B0aW9uczoge1xuICAgICAgICBtdWx0bGluZVdpZHRoOiAnJyxcbiAgICAgICAgYW1zOiB7XG4gICAgICAgICAgICBtdWx0bGluZVdpZHRoOiAnMTAwJScsXG4gICAgICAgICAgICBtdWx0bGluZUluZGVudDogJzFlbScsXG4gICAgICAgIH1cbiAgICB9XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFtc0NvbmZpZ3VyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/ams/AmsConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/ams/AmsItems.js":
/*!****************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/ams/AmsItems.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FlalignItem = exports.MultlineItem = void 0;\nvar BaseItems_js_1 = __webpack_require__(/*! ../base/BaseItems.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseItems.js\");\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar TexConstants_js_1 = __webpack_require__(/*! ../TexConstants.js */ \"./node_modules/mathjax-full/js/input/tex/TexConstants.js\");\nvar MultlineItem = (function (_super) {\n    __extends(MultlineItem, _super);\n    function MultlineItem(factory) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _this = _super.call(this, factory) || this;\n        _this.factory.configuration.tags.start('multline', true, args[0]);\n        return _this;\n    }\n    Object.defineProperty(MultlineItem.prototype, \"kind\", {\n        get: function () {\n            return 'multline';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MultlineItem.prototype.EndEntry = function () {\n        if (this.table.length) {\n            ParseUtil_js_1.default.fixInitialMO(this.factory.configuration, this.nodes);\n        }\n        var shove = this.getProperty('shove');\n        var mtd = this.create('node', 'mtd', this.nodes, shove ? { columnalign: shove } : {});\n        this.setProperty('shove', null);\n        this.row.push(mtd);\n        this.Clear();\n    };\n    MultlineItem.prototype.EndRow = function () {\n        if (this.row.length !== 1) {\n            throw new TexError_js_1.default('MultlineRowsOneCol', 'The rows within the %1 environment must have exactly one column', 'multline');\n        }\n        var row = this.create('node', 'mtr', this.row);\n        this.table.push(row);\n        this.row = [];\n    };\n    MultlineItem.prototype.EndTable = function () {\n        _super.prototype.EndTable.call(this);\n        if (this.table.length) {\n            var m = this.table.length - 1, label = -1;\n            if (!NodeUtil_js_1.default.getAttribute(NodeUtil_js_1.default.getChildren(this.table[0])[0], 'columnalign')) {\n                NodeUtil_js_1.default.setAttribute(NodeUtil_js_1.default.getChildren(this.table[0])[0], 'columnalign', TexConstants_js_1.TexConstant.Align.LEFT);\n            }\n            if (!NodeUtil_js_1.default.getAttribute(NodeUtil_js_1.default.getChildren(this.table[m])[0], 'columnalign')) {\n                NodeUtil_js_1.default.setAttribute(NodeUtil_js_1.default.getChildren(this.table[m])[0], 'columnalign', TexConstants_js_1.TexConstant.Align.RIGHT);\n            }\n            var tag = this.factory.configuration.tags.getTag();\n            if (tag) {\n                label = (this.arraydef.side === TexConstants_js_1.TexConstant.Align.LEFT ? 0 : this.table.length - 1);\n                var mtr = this.table[label];\n                var mlabel = this.create('node', 'mlabeledtr', [tag].concat(NodeUtil_js_1.default.getChildren(mtr)));\n                NodeUtil_js_1.default.copyAttributes(mtr, mlabel);\n                this.table[label] = mlabel;\n            }\n        }\n        this.factory.configuration.tags.end();\n    };\n    return MultlineItem;\n}(BaseItems_js_1.ArrayItem));\nexports.MultlineItem = MultlineItem;\nvar FlalignItem = (function (_super) {\n    __extends(FlalignItem, _super);\n    function FlalignItem(factory, name, numbered, padded, center) {\n        var _this = _super.call(this, factory) || this;\n        _this.name = name;\n        _this.numbered = numbered;\n        _this.padded = padded;\n        _this.center = center;\n        _this.factory.configuration.tags.start(name, numbered, numbered);\n        return _this;\n    }\n    Object.defineProperty(FlalignItem.prototype, \"kind\", {\n        get: function () {\n            return 'flalign';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    FlalignItem.prototype.EndEntry = function () {\n        _super.prototype.EndEntry.call(this);\n        var n = this.getProperty('xalignat');\n        if (!n)\n            return;\n        if (this.row.length > n) {\n            throw new TexError_js_1.default('XalignOverflow', 'Extra %1 in row of %2', '&', this.name);\n        }\n    };\n    FlalignItem.prototype.EndRow = function () {\n        var cell;\n        var row = this.row;\n        var n = this.getProperty('xalignat');\n        while (row.length < n) {\n            row.push(this.create('node', 'mtd'));\n        }\n        this.row = [];\n        if (this.padded) {\n            this.row.push(this.create('node', 'mtd'));\n        }\n        while ((cell = row.shift())) {\n            this.row.push(cell);\n            cell = row.shift();\n            if (cell)\n                this.row.push(cell);\n            if (row.length || this.padded) {\n                this.row.push(this.create('node', 'mtd'));\n            }\n        }\n        if (this.row.length > this.maxrow) {\n            this.maxrow = this.row.length;\n        }\n        _super.prototype.EndRow.call(this);\n        var mtr = this.table[this.table.length - 1];\n        if (this.getProperty('zeroWidthLabel') && mtr.isKind('mlabeledtr')) {\n            var mtd = NodeUtil_js_1.default.getChildren(mtr)[0];\n            var side = this.factory.configuration.options['tagSide'];\n            var def = __assign({ width: 0 }, (side === 'right' ? { lspace: '-1width' } : {}));\n            var mpadded = this.create('node', 'mpadded', NodeUtil_js_1.default.getChildren(mtd), def);\n            mtd.setChildren([mpadded]);\n        }\n    };\n    FlalignItem.prototype.EndTable = function () {\n        _super.prototype.EndTable.call(this);\n        if (this.center) {\n            if (this.maxrow <= 2) {\n                var def = this.arraydef;\n                delete def.width;\n                delete this.global.indentalign;\n            }\n        }\n    };\n    return FlalignItem;\n}(BaseItems_js_1.EqnArrayItem));\nexports.FlalignItem = FlalignItem;\n//# sourceMappingURL=AmsItems.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9hbXMvQW1zSXRlbXMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ3ZGLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsaURBQWlELE9BQU87QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQixHQUFHLG9CQUFvQjtBQUMxQyxxQkFBcUIsbUJBQU8sQ0FBQyx3RkFBc0I7QUFDbkQscUNBQXFDLG1CQUFPLENBQUMsOEVBQWlCO0FBQzlELG9DQUFvQyxtQkFBTyxDQUFDLDRFQUFnQjtBQUM1RCxvQ0FBb0MsbUJBQU8sQ0FBQyw0RUFBZ0I7QUFDNUQsd0JBQXdCLG1CQUFPLENBQUMsb0ZBQW9CO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHVCQUF1QjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLHFCQUFxQixJQUFJO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsVUFBVSx3QkFBd0Isb0JBQW9CLElBQUk7QUFDM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9hbXMvQW1zSXRlbXMuanM/ZWRlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChiLCBwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYiAhPT0gXCJmdW5jdGlvblwiICYmIGIgIT09IG51bGwpXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIiArIFN0cmluZyhiKSArIFwiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG52YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7XG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0O1xuICAgIH07XG4gICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GbGFsaWduSXRlbSA9IGV4cG9ydHMuTXVsdGxpbmVJdGVtID0gdm9pZCAwO1xudmFyIEJhc2VJdGVtc19qc18xID0gcmVxdWlyZShcIi4uL2Jhc2UvQmFzZUl0ZW1zLmpzXCIpO1xudmFyIFBhcnNlVXRpbF9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi9QYXJzZVV0aWwuanNcIikpO1xudmFyIE5vZGVVdGlsX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL05vZGVVdGlsLmpzXCIpKTtcbnZhciBUZXhFcnJvcl9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi9UZXhFcnJvci5qc1wiKSk7XG52YXIgVGV4Q29uc3RhbnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vVGV4Q29uc3RhbnRzLmpzXCIpO1xudmFyIE11bHRsaW5lSXRlbSA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKE11bHRsaW5lSXRlbSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBNdWx0bGluZUl0ZW0oZmFjdG9yeSkge1xuICAgICAgICB2YXIgYXJncyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBfaSA9IDE7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgYXJnc1tfaSAtIDFdID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBmYWN0b3J5KSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5mYWN0b3J5LmNvbmZpZ3VyYXRpb24udGFncy5zdGFydCgnbXVsdGxpbmUnLCB0cnVlLCBhcmdzWzBdKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTXVsdGxpbmVJdGVtLnByb3RvdHlwZSwgXCJraW5kXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gJ211bHRsaW5lJztcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE11bHRsaW5lSXRlbS5wcm90b3R5cGUuRW5kRW50cnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzLnRhYmxlLmxlbmd0aCkge1xuICAgICAgICAgICAgUGFyc2VVdGlsX2pzXzEuZGVmYXVsdC5maXhJbml0aWFsTU8odGhpcy5mYWN0b3J5LmNvbmZpZ3VyYXRpb24sIHRoaXMubm9kZXMpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBzaG92ZSA9IHRoaXMuZ2V0UHJvcGVydHkoJ3Nob3ZlJyk7XG4gICAgICAgIHZhciBtdGQgPSB0aGlzLmNyZWF0ZSgnbm9kZScsICdtdGQnLCB0aGlzLm5vZGVzLCBzaG92ZSA/IHsgY29sdW1uYWxpZ246IHNob3ZlIH0gOiB7fSk7XG4gICAgICAgIHRoaXMuc2V0UHJvcGVydHkoJ3Nob3ZlJywgbnVsbCk7XG4gICAgICAgIHRoaXMucm93LnB1c2gobXRkKTtcbiAgICAgICAgdGhpcy5DbGVhcigpO1xuICAgIH07XG4gICAgTXVsdGxpbmVJdGVtLnByb3RvdHlwZS5FbmRSb3cgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzLnJvdy5sZW5ndGggIT09IDEpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUZXhFcnJvcl9qc18xLmRlZmF1bHQoJ011bHRsaW5lUm93c09uZUNvbCcsICdUaGUgcm93cyB3aXRoaW4gdGhlICUxIGVudmlyb25tZW50IG11c3QgaGF2ZSBleGFjdGx5IG9uZSBjb2x1bW4nLCAnbXVsdGxpbmUnKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcm93ID0gdGhpcy5jcmVhdGUoJ25vZGUnLCAnbXRyJywgdGhpcy5yb3cpO1xuICAgICAgICB0aGlzLnRhYmxlLnB1c2gocm93KTtcbiAgICAgICAgdGhpcy5yb3cgPSBbXTtcbiAgICB9O1xuICAgIE11bHRsaW5lSXRlbS5wcm90b3R5cGUuRW5kVGFibGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUuRW5kVGFibGUuY2FsbCh0aGlzKTtcbiAgICAgICAgaWYgKHRoaXMudGFibGUubGVuZ3RoKSB7XG4gICAgICAgICAgICB2YXIgbSA9IHRoaXMudGFibGUubGVuZ3RoIC0gMSwgbGFiZWwgPSAtMTtcbiAgICAgICAgICAgIGlmICghTm9kZVV0aWxfanNfMS5kZWZhdWx0LmdldEF0dHJpYnV0ZShOb2RlVXRpbF9qc18xLmRlZmF1bHQuZ2V0Q2hpbGRyZW4odGhpcy50YWJsZVswXSlbMF0sICdjb2x1bW5hbGlnbicpKSB7XG4gICAgICAgICAgICAgICAgTm9kZVV0aWxfanNfMS5kZWZhdWx0LnNldEF0dHJpYnV0ZShOb2RlVXRpbF9qc18xLmRlZmF1bHQuZ2V0Q2hpbGRyZW4odGhpcy50YWJsZVswXSlbMF0sICdjb2x1bW5hbGlnbicsIFRleENvbnN0YW50c19qc18xLlRleENvbnN0YW50LkFsaWduLkxFRlQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFOb2RlVXRpbF9qc18xLmRlZmF1bHQuZ2V0QXR0cmlidXRlKE5vZGVVdGlsX2pzXzEuZGVmYXVsdC5nZXRDaGlsZHJlbih0aGlzLnRhYmxlW21dKVswXSwgJ2NvbHVtbmFsaWduJykpIHtcbiAgICAgICAgICAgICAgICBOb2RlVXRpbF9qc18xLmRlZmF1bHQuc2V0QXR0cmlidXRlKE5vZGVVdGlsX2pzXzEuZGVmYXVsdC5nZXRDaGlsZHJlbih0aGlzLnRhYmxlW21dKVswXSwgJ2NvbHVtbmFsaWduJywgVGV4Q29uc3RhbnRzX2pzXzEuVGV4Q29uc3RhbnQuQWxpZ24uUklHSFQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHRhZyA9IHRoaXMuZmFjdG9yeS5jb25maWd1cmF0aW9uLnRhZ3MuZ2V0VGFnKCk7XG4gICAgICAgICAgICBpZiAodGFnKSB7XG4gICAgICAgICAgICAgICAgbGFiZWwgPSAodGhpcy5hcnJheWRlZi5zaWRlID09PSBUZXhDb25zdGFudHNfanNfMS5UZXhDb25zdGFudC5BbGlnbi5MRUZUID8gMCA6IHRoaXMudGFibGUubGVuZ3RoIC0gMSk7XG4gICAgICAgICAgICAgICAgdmFyIG10ciA9IHRoaXMudGFibGVbbGFiZWxdO1xuICAgICAgICAgICAgICAgIHZhciBtbGFiZWwgPSB0aGlzLmNyZWF0ZSgnbm9kZScsICdtbGFiZWxlZHRyJywgW3RhZ10uY29uY2F0KE5vZGVVdGlsX2pzXzEuZGVmYXVsdC5nZXRDaGlsZHJlbihtdHIpKSk7XG4gICAgICAgICAgICAgICAgTm9kZVV0aWxfanNfMS5kZWZhdWx0LmNvcHlBdHRyaWJ1dGVzKG10ciwgbWxhYmVsKTtcbiAgICAgICAgICAgICAgICB0aGlzLnRhYmxlW2xhYmVsXSA9IG1sYWJlbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLmZhY3RvcnkuY29uZmlndXJhdGlvbi50YWdzLmVuZCgpO1xuICAgIH07XG4gICAgcmV0dXJuIE11bHRsaW5lSXRlbTtcbn0oQmFzZUl0ZW1zX2pzXzEuQXJyYXlJdGVtKSk7XG5leHBvcnRzLk11bHRsaW5lSXRlbSA9IE11bHRsaW5lSXRlbTtcbnZhciBGbGFsaWduSXRlbSA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEZsYWxpZ25JdGVtLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEZsYWxpZ25JdGVtKGZhY3RvcnksIG5hbWUsIG51bWJlcmVkLCBwYWRkZWQsIGNlbnRlcikge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBmYWN0b3J5KSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgX3RoaXMubnVtYmVyZWQgPSBudW1iZXJlZDtcbiAgICAgICAgX3RoaXMucGFkZGVkID0gcGFkZGVkO1xuICAgICAgICBfdGhpcy5jZW50ZXIgPSBjZW50ZXI7XG4gICAgICAgIF90aGlzLmZhY3RvcnkuY29uZmlndXJhdGlvbi50YWdzLnN0YXJ0KG5hbWUsIG51bWJlcmVkLCBudW1iZXJlZCk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEZsYWxpZ25JdGVtLnByb3RvdHlwZSwgXCJraW5kXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gJ2ZsYWxpZ24nO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgRmxhbGlnbkl0ZW0ucHJvdG90eXBlLkVuZEVudHJ5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBfc3VwZXIucHJvdG90eXBlLkVuZEVudHJ5LmNhbGwodGhpcyk7XG4gICAgICAgIHZhciBuID0gdGhpcy5nZXRQcm9wZXJ0eSgneGFsaWduYXQnKTtcbiAgICAgICAgaWYgKCFuKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBpZiAodGhpcy5yb3cubGVuZ3RoID4gbikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFRleEVycm9yX2pzXzEuZGVmYXVsdCgnWGFsaWduT3ZlcmZsb3cnLCAnRXh0cmEgJTEgaW4gcm93IG9mICUyJywgJyYnLCB0aGlzLm5hbWUpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBGbGFsaWduSXRlbS5wcm90b3R5cGUuRW5kUm93ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgY2VsbDtcbiAgICAgICAgdmFyIHJvdyA9IHRoaXMucm93O1xuICAgICAgICB2YXIgbiA9IHRoaXMuZ2V0UHJvcGVydHkoJ3hhbGlnbmF0Jyk7XG4gICAgICAgIHdoaWxlIChyb3cubGVuZ3RoIDwgbikge1xuICAgICAgICAgICAgcm93LnB1c2godGhpcy5jcmVhdGUoJ25vZGUnLCAnbXRkJykpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucm93ID0gW107XG4gICAgICAgIGlmICh0aGlzLnBhZGRlZCkge1xuICAgICAgICAgICAgdGhpcy5yb3cucHVzaCh0aGlzLmNyZWF0ZSgnbm9kZScsICdtdGQnKSk7XG4gICAgICAgIH1cbiAgICAgICAgd2hpbGUgKChjZWxsID0gcm93LnNoaWZ0KCkpKSB7XG4gICAgICAgICAgICB0aGlzLnJvdy5wdXNoKGNlbGwpO1xuICAgICAgICAgICAgY2VsbCA9IHJvdy5zaGlmdCgpO1xuICAgICAgICAgICAgaWYgKGNlbGwpXG4gICAgICAgICAgICAgICAgdGhpcy5yb3cucHVzaChjZWxsKTtcbiAgICAgICAgICAgIGlmIChyb3cubGVuZ3RoIHx8IHRoaXMucGFkZGVkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yb3cucHVzaCh0aGlzLmNyZWF0ZSgnbm9kZScsICdtdGQnKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMucm93Lmxlbmd0aCA+IHRoaXMubWF4cm93KSB7XG4gICAgICAgICAgICB0aGlzLm1heHJvdyA9IHRoaXMucm93Lmxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgICBfc3VwZXIucHJvdG90eXBlLkVuZFJvdy5jYWxsKHRoaXMpO1xuICAgICAgICB2YXIgbXRyID0gdGhpcy50YWJsZVt0aGlzLnRhYmxlLmxlbmd0aCAtIDFdO1xuICAgICAgICBpZiAodGhpcy5nZXRQcm9wZXJ0eSgnemVyb1dpZHRoTGFiZWwnKSAmJiBtdHIuaXNLaW5kKCdtbGFiZWxlZHRyJykpIHtcbiAgICAgICAgICAgIHZhciBtdGQgPSBOb2RlVXRpbF9qc18xLmRlZmF1bHQuZ2V0Q2hpbGRyZW4obXRyKVswXTtcbiAgICAgICAgICAgIHZhciBzaWRlID0gdGhpcy5mYWN0b3J5LmNvbmZpZ3VyYXRpb24ub3B0aW9uc1sndGFnU2lkZSddO1xuICAgICAgICAgICAgdmFyIGRlZiA9IF9fYXNzaWduKHsgd2lkdGg6IDAgfSwgKHNpZGUgPT09ICdyaWdodCcgPyB7IGxzcGFjZTogJy0xd2lkdGgnIH0gOiB7fSkpO1xuICAgICAgICAgICAgdmFyIG1wYWRkZWQgPSB0aGlzLmNyZWF0ZSgnbm9kZScsICdtcGFkZGVkJywgTm9kZVV0aWxfanNfMS5kZWZhdWx0LmdldENoaWxkcmVuKG10ZCksIGRlZik7XG4gICAgICAgICAgICBtdGQuc2V0Q2hpbGRyZW4oW21wYWRkZWRdKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgRmxhbGlnbkl0ZW0ucHJvdG90eXBlLkVuZFRhYmxlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBfc3VwZXIucHJvdG90eXBlLkVuZFRhYmxlLmNhbGwodGhpcyk7XG4gICAgICAgIGlmICh0aGlzLmNlbnRlcikge1xuICAgICAgICAgICAgaWYgKHRoaXMubWF4cm93IDw9IDIpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGVmID0gdGhpcy5hcnJheWRlZjtcbiAgICAgICAgICAgICAgICBkZWxldGUgZGVmLndpZHRoO1xuICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzLmdsb2JhbC5pbmRlbnRhbGlnbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIEZsYWxpZ25JdGVtO1xufShCYXNlSXRlbXNfanNfMS5FcW5BcnJheUl0ZW0pKTtcbmV4cG9ydHMuRmxhbGlnbkl0ZW0gPSBGbGFsaWduSXRlbTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFtc0l0ZW1zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/ams/AmsItems.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/ams/AmsMappings.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/ams/AmsMappings.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar AmsMethods_js_1 = __webpack_require__(/*! ./AmsMethods.js */ \"./node_modules/mathjax-full/js/input/tex/ams/AmsMethods.js\");\nvar sm = __importStar(__webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\"));\nvar TexConstants_js_1 = __webpack_require__(/*! ../TexConstants.js */ \"./node_modules/mathjax-full/js/input/tex/TexConstants.js\");\nvar ParseMethods_js_1 = __importDefault(__webpack_require__(/*! ../ParseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/ParseMethods.js\"));\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar MmlNode_js_1 = __webpack_require__(/*! ../../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar lengths_js_1 = __webpack_require__(/*! ../../../util/lengths.js */ \"./node_modules/mathjax-full/js/util/lengths.js\");\nnew sm.CharacterMap('AMSmath-mathchar0mo', ParseMethods_js_1.default.mathchar0mo, {\n    iiiint: ['\\u2A0C', { texClass: MmlNode_js_1.TEXCLASS.OP }]\n});\nnew sm.RegExpMap('AMSmath-operatorLetter', AmsMethods_js_1.AmsMethods.operatorLetter, /[-*]/i);\nnew sm.CommandMap('AMSmath-macros', {\n    mathring: ['Accent', '02DA'],\n    nobreakspace: 'Tilde',\n    negmedspace: ['Spacer', lengths_js_1.MATHSPACE.negativemediummathspace],\n    negthickspace: ['Spacer', lengths_js_1.MATHSPACE.negativethickmathspace],\n    idotsint: ['MultiIntegral', '\\\\int\\\\cdots\\\\int'],\n    dddot: ['Accent', '20DB'],\n    ddddot: ['Accent', '20DC'],\n    sideset: 'SideSet',\n    boxed: ['Macro', '\\\\fbox{$\\\\displaystyle{#1}$}', 1],\n    tag: 'HandleTag',\n    notag: 'HandleNoTag',\n    eqref: ['HandleRef', true],\n    substack: ['Macro', '\\\\begin{subarray}{c}#1\\\\end{subarray}', 1],\n    injlim: ['NamedOp', 'inj&thinsp;lim'],\n    projlim: ['NamedOp', 'proj&thinsp;lim'],\n    varliminf: ['Macro', '\\\\mathop{\\\\underline{\\\\mmlToken{mi}{lim}}}'],\n    varlimsup: ['Macro', '\\\\mathop{\\\\overline{\\\\mmlToken{mi}{lim}}}'],\n    varinjlim: ['Macro', '\\\\mathop{\\\\underrightarrow{\\\\mmlToken{mi}{lim}}}'],\n    varprojlim: ['Macro', '\\\\mathop{\\\\underleftarrow{\\\\mmlToken{mi}{lim}}}'],\n    DeclareMathOperator: 'HandleDeclareOp',\n    operatorname: 'HandleOperatorName',\n    genfrac: 'Genfrac',\n    frac: ['Genfrac', '', '', '', ''],\n    tfrac: ['Genfrac', '', '', '', '1'],\n    dfrac: ['Genfrac', '', '', '', '0'],\n    binom: ['Genfrac', '(', ')', '0', ''],\n    tbinom: ['Genfrac', '(', ')', '0', '1'],\n    dbinom: ['Genfrac', '(', ')', '0', '0'],\n    cfrac: 'CFrac',\n    shoveleft: ['HandleShove', TexConstants_js_1.TexConstant.Align.LEFT],\n    shoveright: ['HandleShove', TexConstants_js_1.TexConstant.Align.RIGHT],\n    xrightarrow: ['xArrow', 0x2192, 5, 10],\n    xleftarrow: ['xArrow', 0x2190, 10, 5]\n}, AmsMethods_js_1.AmsMethods);\nnew sm.EnvironmentMap('AMSmath-environment', ParseMethods_js_1.default.environment, {\n    'equation*': ['Equation', null, false],\n    'eqnarray*': ['EqnArray', null, false, true, 'rcl',\n        ParseUtil_js_1.default.cols(0, lengths_js_1.MATHSPACE.thickmathspace), '.5em'],\n    align: ['EqnArray', null, true, true, 'rl', ParseUtil_js_1.default.cols(0, 2)],\n    'align*': ['EqnArray', null, false, true, 'rl', ParseUtil_js_1.default.cols(0, 2)],\n    multline: ['Multline', null, true],\n    'multline*': ['Multline', null, false],\n    split: ['EqnArray', null, false, false, 'rl', ParseUtil_js_1.default.cols(0)],\n    gather: ['EqnArray', null, true, true, 'c'],\n    'gather*': ['EqnArray', null, false, true, 'c'],\n    alignat: ['AlignAt', null, true, true],\n    'alignat*': ['AlignAt', null, false, true],\n    alignedat: ['AlignAt', null, false, false],\n    aligned: ['AmsEqnArray', null, null, null, 'rl', ParseUtil_js_1.default.cols(0, 2), '.5em', 'D'],\n    gathered: ['AmsEqnArray', null, null, null, 'c', null, '.5em', 'D'],\n    xalignat: ['XalignAt', null, true, true],\n    'xalignat*': ['XalignAt', null, false, true],\n    xxalignat: ['XalignAt', null, false, false],\n    flalign: ['FlalignArray', null, true, false, true, 'rlc', 'auto auto fit'],\n    'flalign*': ['FlalignArray', null, false, false, true, 'rlc', 'auto auto fit'],\n    subarray: ['Array', null, null, null, null, ParseUtil_js_1.default.cols(0), '0.1em', 'S', 1],\n    smallmatrix: ['Array', null, null, null, 'c', ParseUtil_js_1.default.cols(1 / 3),\n        '.2em', 'S', 1],\n    matrix: ['Array', null, null, null, 'c'],\n    pmatrix: ['Array', null, '(', ')', 'c'],\n    bmatrix: ['Array', null, '[', ']', 'c'],\n    Bmatrix: ['Array', null, '\\\\{', '\\\\}', 'c'],\n    vmatrix: ['Array', null, '\\\\vert', '\\\\vert', 'c'],\n    Vmatrix: ['Array', null, '\\\\Vert', '\\\\Vert', 'c'],\n    cases: ['Array', null, '\\\\{', '.', 'll', null, '.2em', 'T']\n}, AmsMethods_js_1.AmsMethods);\nnew sm.DelimiterMap('AMSmath-delimiter', ParseMethods_js_1.default.delimiter, {\n    '\\\\lvert': ['\\u007C', { texClass: MmlNode_js_1.TEXCLASS.OPEN }],\n    '\\\\rvert': ['\\u007C', { texClass: MmlNode_js_1.TEXCLASS.CLOSE }],\n    '\\\\lVert': ['\\u2016', { texClass: MmlNode_js_1.TEXCLASS.OPEN }],\n    '\\\\rVert': ['\\u2016', { texClass: MmlNode_js_1.TEXCLASS.CLOSE }]\n});\nnew sm.CharacterMap('AMSsymbols-mathchar0mi', ParseMethods_js_1.default.mathchar0mi, {\n    digamma: '\\u03DD',\n    varkappa: '\\u03F0',\n    varGamma: ['\\u0393', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],\n    varDelta: ['\\u0394', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],\n    varTheta: ['\\u0398', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],\n    varLambda: ['\\u039B', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],\n    varXi: ['\\u039E', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],\n    varPi: ['\\u03A0', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],\n    varSigma: ['\\u03A3', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],\n    varUpsilon: ['\\u03A5', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],\n    varPhi: ['\\u03A6', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],\n    varPsi: ['\\u03A8', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],\n    varOmega: ['\\u03A9', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],\n    beth: '\\u2136',\n    gimel: '\\u2137',\n    daleth: '\\u2138',\n    backprime: ['\\u2035', { variantForm: true }],\n    hslash: '\\u210F',\n    varnothing: ['\\u2205', { variantForm: true }],\n    blacktriangle: '\\u25B4',\n    triangledown: ['\\u25BD', { variantForm: true }],\n    blacktriangledown: '\\u25BE',\n    square: '\\u25FB',\n    Box: '\\u25FB',\n    blacksquare: '\\u25FC',\n    lozenge: '\\u25CA',\n    Diamond: '\\u25CA',\n    blacklozenge: '\\u29EB',\n    circledS: ['\\u24C8', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    bigstar: '\\u2605',\n    sphericalangle: '\\u2222',\n    measuredangle: '\\u2221',\n    nexists: '\\u2204',\n    complement: '\\u2201',\n    mho: '\\u2127',\n    eth: ['\\u00F0', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    Finv: '\\u2132',\n    diagup: '\\u2571',\n    Game: '\\u2141',\n    diagdown: '\\u2572',\n    Bbbk: ['\\u006B',\n        { mathvariant: TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK }],\n    yen: '\\u00A5',\n    circledR: '\\u00AE',\n    checkmark: '\\u2713',\n    maltese: '\\u2720'\n});\nnew sm.CharacterMap('AMSsymbols-mathchar0mo', ParseMethods_js_1.default.mathchar0mo, {\n    dotplus: '\\u2214',\n    ltimes: '\\u22C9',\n    smallsetminus: ['\\u2216', { variantForm: true }],\n    rtimes: '\\u22CA',\n    Cap: '\\u22D2',\n    doublecap: '\\u22D2',\n    leftthreetimes: '\\u22CB',\n    Cup: '\\u22D3',\n    doublecup: '\\u22D3',\n    rightthreetimes: '\\u22CC',\n    barwedge: '\\u22BC',\n    curlywedge: '\\u22CF',\n    veebar: '\\u22BB',\n    curlyvee: '\\u22CE',\n    doublebarwedge: '\\u2A5E',\n    boxminus: '\\u229F',\n    circleddash: '\\u229D',\n    boxtimes: '\\u22A0',\n    circledast: '\\u229B',\n    boxdot: '\\u22A1',\n    circledcirc: '\\u229A',\n    boxplus: '\\u229E',\n    centerdot: ['\\u22C5', { variantForm: true }],\n    divideontimes: '\\u22C7',\n    intercal: '\\u22BA',\n    leqq: '\\u2266',\n    geqq: '\\u2267',\n    leqslant: '\\u2A7D',\n    geqslant: '\\u2A7E',\n    eqslantless: '\\u2A95',\n    eqslantgtr: '\\u2A96',\n    lesssim: '\\u2272',\n    gtrsim: '\\u2273',\n    lessapprox: '\\u2A85',\n    gtrapprox: '\\u2A86',\n    approxeq: '\\u224A',\n    lessdot: '\\u22D6',\n    gtrdot: '\\u22D7',\n    lll: '\\u22D8',\n    llless: '\\u22D8',\n    ggg: '\\u22D9',\n    gggtr: '\\u22D9',\n    lessgtr: '\\u2276',\n    gtrless: '\\u2277',\n    lesseqgtr: '\\u22DA',\n    gtreqless: '\\u22DB',\n    lesseqqgtr: '\\u2A8B',\n    gtreqqless: '\\u2A8C',\n    doteqdot: '\\u2251',\n    Doteq: '\\u2251',\n    eqcirc: '\\u2256',\n    risingdotseq: '\\u2253',\n    circeq: '\\u2257',\n    fallingdotseq: '\\u2252',\n    triangleq: '\\u225C',\n    backsim: '\\u223D',\n    thicksim: ['\\u223C', { variantForm: true }],\n    backsimeq: '\\u22CD',\n    thickapprox: ['\\u2248', { variantForm: true }],\n    subseteqq: '\\u2AC5',\n    supseteqq: '\\u2AC6',\n    Subset: '\\u22D0',\n    Supset: '\\u22D1',\n    sqsubset: '\\u228F',\n    sqsupset: '\\u2290',\n    preccurlyeq: '\\u227C',\n    succcurlyeq: '\\u227D',\n    curlyeqprec: '\\u22DE',\n    curlyeqsucc: '\\u22DF',\n    precsim: '\\u227E',\n    succsim: '\\u227F',\n    precapprox: '\\u2AB7',\n    succapprox: '\\u2AB8',\n    vartriangleleft: '\\u22B2',\n    lhd: '\\u22B2',\n    vartriangleright: '\\u22B3',\n    rhd: '\\u22B3',\n    trianglelefteq: '\\u22B4',\n    unlhd: '\\u22B4',\n    trianglerighteq: '\\u22B5',\n    unrhd: '\\u22B5',\n    vDash: ['\\u22A8', { variantForm: true }],\n    Vdash: '\\u22A9',\n    Vvdash: '\\u22AA',\n    smallsmile: ['\\u2323', { variantForm: true }],\n    shortmid: ['\\u2223', { variantForm: true }],\n    smallfrown: ['\\u2322', { variantForm: true }],\n    shortparallel: ['\\u2225', { variantForm: true }],\n    bumpeq: '\\u224F',\n    between: '\\u226C',\n    Bumpeq: '\\u224E',\n    pitchfork: '\\u22D4',\n    varpropto: ['\\u221D', { variantForm: true }],\n    backepsilon: '\\u220D',\n    blacktriangleleft: '\\u25C2',\n    blacktriangleright: '\\u25B8',\n    therefore: '\\u2234',\n    because: '\\u2235',\n    eqsim: '\\u2242',\n    vartriangle: ['\\u25B3', { variantForm: true }],\n    Join: '\\u22C8',\n    nless: '\\u226E',\n    ngtr: '\\u226F',\n    nleq: '\\u2270',\n    ngeq: '\\u2271',\n    nleqslant: ['\\u2A87', { variantForm: true }],\n    ngeqslant: ['\\u2A88', { variantForm: true }],\n    nleqq: ['\\u2270', { variantForm: true }],\n    ngeqq: ['\\u2271', { variantForm: true }],\n    lneq: '\\u2A87',\n    gneq: '\\u2A88',\n    lneqq: '\\u2268',\n    gneqq: '\\u2269',\n    lvertneqq: ['\\u2268', { variantForm: true }],\n    gvertneqq: ['\\u2269', { variantForm: true }],\n    lnsim: '\\u22E6',\n    gnsim: '\\u22E7',\n    lnapprox: '\\u2A89',\n    gnapprox: '\\u2A8A',\n    nprec: '\\u2280',\n    nsucc: '\\u2281',\n    npreceq: ['\\u22E0', { variantForm: true }],\n    nsucceq: ['\\u22E1', { variantForm: true }],\n    precneqq: '\\u2AB5',\n    succneqq: '\\u2AB6',\n    precnsim: '\\u22E8',\n    succnsim: '\\u22E9',\n    precnapprox: '\\u2AB9',\n    succnapprox: '\\u2ABA',\n    nsim: '\\u2241',\n    ncong: '\\u2247',\n    nshortmid: ['\\u2224', { variantForm: true }],\n    nshortparallel: ['\\u2226', { variantForm: true }],\n    nmid: '\\u2224',\n    nparallel: '\\u2226',\n    nvdash: '\\u22AC',\n    nvDash: '\\u22AD',\n    nVdash: '\\u22AE',\n    nVDash: '\\u22AF',\n    ntriangleleft: '\\u22EA',\n    ntriangleright: '\\u22EB',\n    ntrianglelefteq: '\\u22EC',\n    ntrianglerighteq: '\\u22ED',\n    nsubseteq: '\\u2288',\n    nsupseteq: '\\u2289',\n    nsubseteqq: ['\\u2288', { variantForm: true }],\n    nsupseteqq: ['\\u2289', { variantForm: true }],\n    subsetneq: '\\u228A',\n    supsetneq: '\\u228B',\n    varsubsetneq: ['\\u228A', { variantForm: true }],\n    varsupsetneq: ['\\u228B', { variantForm: true }],\n    subsetneqq: '\\u2ACB',\n    supsetneqq: '\\u2ACC',\n    varsubsetneqq: ['\\u2ACB', { variantForm: true }],\n    varsupsetneqq: ['\\u2ACC', { variantForm: true }],\n    leftleftarrows: '\\u21C7',\n    rightrightarrows: '\\u21C9',\n    leftrightarrows: '\\u21C6',\n    rightleftarrows: '\\u21C4',\n    Lleftarrow: '\\u21DA',\n    Rrightarrow: '\\u21DB',\n    twoheadleftarrow: '\\u219E',\n    twoheadrightarrow: '\\u21A0',\n    leftarrowtail: '\\u21A2',\n    rightarrowtail: '\\u21A3',\n    looparrowleft: '\\u21AB',\n    looparrowright: '\\u21AC',\n    leftrightharpoons: '\\u21CB',\n    rightleftharpoons: ['\\u21CC', { variantForm: true }],\n    curvearrowleft: '\\u21B6',\n    curvearrowright: '\\u21B7',\n    circlearrowleft: '\\u21BA',\n    circlearrowright: '\\u21BB',\n    Lsh: '\\u21B0',\n    Rsh: '\\u21B1',\n    upuparrows: '\\u21C8',\n    downdownarrows: '\\u21CA',\n    upharpoonleft: '\\u21BF',\n    upharpoonright: '\\u21BE',\n    downharpoonleft: '\\u21C3',\n    restriction: '\\u21BE',\n    multimap: '\\u22B8',\n    downharpoonright: '\\u21C2',\n    leftrightsquigarrow: '\\u21AD',\n    rightsquigarrow: '\\u21DD',\n    leadsto: '\\u21DD',\n    dashrightarrow: '\\u21E2',\n    dashleftarrow: '\\u21E0',\n    nleftarrow: '\\u219A',\n    nrightarrow: '\\u219B',\n    nLeftarrow: '\\u21CD',\n    nRightarrow: '\\u21CF',\n    nleftrightarrow: '\\u21AE',\n    nLeftrightarrow: '\\u21CE'\n});\nnew sm.DelimiterMap('AMSsymbols-delimiter', ParseMethods_js_1.default.delimiter, {\n    '\\\\ulcorner': '\\u231C',\n    '\\\\urcorner': '\\u231D',\n    '\\\\llcorner': '\\u231E',\n    '\\\\lrcorner': '\\u231F'\n});\nnew sm.CommandMap('AMSsymbols-macros', {\n    implies: ['Macro', '\\\\;\\\\Longrightarrow\\\\;'],\n    impliedby: ['Macro', '\\\\;\\\\Longleftarrow\\\\;']\n}, AmsMethods_js_1.AmsMethods);\n//# sourceMappingURL=AmsMappings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/ams/AmsMappings.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/ams/AmsMethods.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/ams/AmsMethods.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NEW_OPS = exports.AmsMethods = void 0;\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar ParseMethods_js_1 = __importDefault(__webpack_require__(/*! ../ParseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/ParseMethods.js\"));\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar TexConstants_js_1 = __webpack_require__(/*! ../TexConstants.js */ \"./node_modules/mathjax-full/js/input/tex/TexConstants.js\");\nvar TexParser_js_1 = __importDefault(__webpack_require__(/*! ../TexParser.js */ \"./node_modules/mathjax-full/js/input/tex/TexParser.js\"));\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar Symbol_js_1 = __webpack_require__(/*! ../Symbol.js */ \"./node_modules/mathjax-full/js/input/tex/Symbol.js\");\nvar BaseMethods_js_1 = __importDefault(__webpack_require__(/*! ../base/BaseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseMethods.js\"));\nvar MmlNode_js_1 = __webpack_require__(/*! ../../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nexports.AmsMethods = {};\nexports.AmsMethods.AmsEqnArray = function (parser, begin, numbered, taggable, align, spacing, style) {\n    var args = parser.GetBrackets('\\\\begin{' + begin.getName() + '}');\n    var array = BaseMethods_js_1.default.EqnArray(parser, begin, numbered, taggable, align, spacing, style);\n    return ParseUtil_js_1.default.setArrayAlign(array, args);\n};\nexports.AmsMethods.AlignAt = function (parser, begin, numbered, taggable) {\n    var name = begin.getName();\n    var n, valign, align = '', spacing = [];\n    if (!taggable) {\n        valign = parser.GetBrackets('\\\\begin{' + name + '}');\n    }\n    n = parser.GetArgument('\\\\begin{' + name + '}');\n    if (n.match(/[^0-9]/)) {\n        throw new TexError_js_1.default('PositiveIntegerArg', 'Argument to %1 must me a positive integer', '\\\\begin{' + name + '}');\n    }\n    var count = parseInt(n, 10);\n    while (count > 0) {\n        align += 'rl';\n        spacing.push('0em 0em');\n        count--;\n    }\n    var spaceStr = spacing.join(' ');\n    if (taggable) {\n        return exports.AmsMethods.EqnArray(parser, begin, numbered, taggable, align, spaceStr);\n    }\n    var array = exports.AmsMethods.EqnArray(parser, begin, numbered, taggable, align, spaceStr);\n    return ParseUtil_js_1.default.setArrayAlign(array, valign);\n};\nexports.AmsMethods.Multline = function (parser, begin, numbered) {\n    parser.Push(begin);\n    ParseUtil_js_1.default.checkEqnEnv(parser);\n    var item = parser.itemFactory.create('multline', numbered, parser.stack);\n    item.arraydef = {\n        displaystyle: true,\n        rowspacing: '.5em',\n        columnspacing: '100%',\n        width: parser.options.ams['multlineWidth'],\n        side: parser.options['tagSide'],\n        minlabelspacing: parser.options['tagIndent'],\n        framespacing: parser.options.ams['multlineIndent'] + ' 0',\n        frame: '',\n        'data-width-includes-label': true\n    };\n    return item;\n};\nexports.AmsMethods.XalignAt = function (parser, begin, numbered, padded) {\n    var n = parser.GetArgument('\\\\begin{' + begin.getName() + '}');\n    if (n.match(/[^0-9]/)) {\n        throw new TexError_js_1.default('PositiveIntegerArg', 'Argument to %1 must me a positive integer', '\\\\begin{' + begin.getName() + '}');\n    }\n    var align = (padded ? 'crl' : 'rlc');\n    var width = (padded ? 'fit auto auto' : 'auto auto fit');\n    var item = exports.AmsMethods.FlalignArray(parser, begin, numbered, padded, false, align, width, true);\n    item.setProperty('xalignat', 2 * parseInt(n));\n    return item;\n};\nexports.AmsMethods.FlalignArray = function (parser, begin, numbered, padded, center, align, width, zeroWidthLabel) {\n    if (zeroWidthLabel === void 0) { zeroWidthLabel = false; }\n    parser.Push(begin);\n    ParseUtil_js_1.default.checkEqnEnv(parser);\n    align = align\n        .split('')\n        .join(' ')\n        .replace(/r/g, 'right')\n        .replace(/l/g, 'left')\n        .replace(/c/g, 'center');\n    var item = parser.itemFactory.create('flalign', begin.getName(), numbered, padded, center, parser.stack);\n    item.arraydef = {\n        width: '100%',\n        displaystyle: true,\n        columnalign: align,\n        columnspacing: '0em',\n        columnwidth: width,\n        rowspacing: '3pt',\n        side: parser.options['tagSide'],\n        minlabelspacing: (zeroWidthLabel ? '0' : parser.options['tagIndent']),\n        'data-width-includes-label': true,\n    };\n    item.setProperty('zeroWidthLabel', zeroWidthLabel);\n    return item;\n};\nexports.NEW_OPS = 'ams-declare-ops';\nexports.AmsMethods.HandleDeclareOp = function (parser, name) {\n    var star = (parser.GetStar() ? '*' : '');\n    var cs = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));\n    if (cs.charAt(0) === '\\\\') {\n        cs = cs.substr(1);\n    }\n    var op = parser.GetArgument(name);\n    parser.configuration.handlers.retrieve(exports.NEW_OPS).\n        add(cs, new Symbol_js_1.Macro(cs, exports.AmsMethods.Macro, [\"\\\\operatorname\".concat(star, \"{\").concat(op, \"}\")]));\n};\nexports.AmsMethods.HandleOperatorName = function (parser, name) {\n    var star = parser.GetStar();\n    var op = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));\n    var mml = new TexParser_js_1.default(op, __assign(__assign({}, parser.stack.env), { font: TexConstants_js_1.TexConstant.Variant.NORMAL, multiLetterIdentifiers: /^[-*a-z]+/i, operatorLetters: true }), parser.configuration).mml();\n    if (!mml.isKind('mi')) {\n        mml = parser.create('node', 'TeXAtom', [mml]);\n    }\n    NodeUtil_js_1.default.setProperties(mml, { movesupsub: star, movablelimits: true, texClass: MmlNode_js_1.TEXCLASS.OP });\n    if (!star) {\n        var c = parser.GetNext(), i = parser.i;\n        if (c === '\\\\' && ++parser.i && parser.GetCS() !== 'limits') {\n            parser.i = i;\n        }\n    }\n    parser.Push(mml);\n};\nexports.AmsMethods.SideSet = function (parser, name) {\n    var _a = __read(splitSideSet(parser.ParseArg(name)), 2), preScripts = _a[0], preRest = _a[1];\n    var _b = __read(splitSideSet(parser.ParseArg(name)), 2), postScripts = _b[0], postRest = _b[1];\n    var base = parser.ParseArg(name);\n    var mml = base;\n    if (preScripts) {\n        if (preRest) {\n            preScripts.replaceChild(parser.create('node', 'mphantom', [\n                parser.create('node', 'mpadded', [ParseUtil_js_1.default.copyNode(base, parser)], { width: 0 })\n            ]), NodeUtil_js_1.default.getChildAt(preScripts, 0));\n        }\n        else {\n            mml = parser.create('node', 'mmultiscripts', [base]);\n            if (postScripts) {\n                NodeUtil_js_1.default.appendChildren(mml, [\n                    NodeUtil_js_1.default.getChildAt(postScripts, 1) || parser.create('node', 'none'),\n                    NodeUtil_js_1.default.getChildAt(postScripts, 2) || parser.create('node', 'none')\n                ]);\n            }\n            NodeUtil_js_1.default.setProperty(mml, 'scriptalign', 'left');\n            NodeUtil_js_1.default.appendChildren(mml, [\n                parser.create('node', 'mprescripts'),\n                NodeUtil_js_1.default.getChildAt(preScripts, 1) || parser.create('node', 'none'),\n                NodeUtil_js_1.default.getChildAt(preScripts, 2) || parser.create('node', 'none')\n            ]);\n        }\n    }\n    if (postScripts && mml === base) {\n        postScripts.replaceChild(base, NodeUtil_js_1.default.getChildAt(postScripts, 0));\n        mml = postScripts;\n    }\n    var mrow = parser.create('node', 'TeXAtom', [], { texClass: MmlNode_js_1.TEXCLASS.OP, movesupsub: true, movablelimits: true });\n    if (preRest) {\n        preScripts && mrow.appendChild(preScripts);\n        mrow.appendChild(preRest);\n    }\n    mrow.appendChild(mml);\n    postRest && mrow.appendChild(postRest);\n    parser.Push(mrow);\n};\nfunction splitSideSet(mml) {\n    if (!mml || (mml.isInferred && mml.childNodes.length === 0))\n        return [null, null];\n    if (mml.isKind('msubsup') && checkSideSetBase(mml))\n        return [mml, null];\n    var child = NodeUtil_js_1.default.getChildAt(mml, 0);\n    if (!(mml.isInferred && child && checkSideSetBase(child)))\n        return [null, mml];\n    mml.childNodes.splice(0, 1);\n    return [child, mml];\n}\nfunction checkSideSetBase(mml) {\n    var base = mml.childNodes[0];\n    return base && base.isKind('mi') && base.getText() === '';\n}\nexports.AmsMethods.operatorLetter = function (parser, c) {\n    return parser.stack.env.operatorLetters ? ParseMethods_js_1.default.variable(parser, c) : false;\n};\nexports.AmsMethods.MultiIntegral = function (parser, name, integral) {\n    var next = parser.GetNext();\n    if (next === '\\\\') {\n        var i = parser.i;\n        next = parser.GetArgument(name);\n        parser.i = i;\n        if (next === '\\\\limits') {\n            if (name === '\\\\idotsint') {\n                integral = '\\\\!\\\\!\\\\mathop{\\\\,\\\\,' + integral + '}';\n            }\n            else {\n                integral = '\\\\!\\\\!\\\\!\\\\mathop{\\\\,\\\\,\\\\,' + integral + '}';\n            }\n        }\n    }\n    parser.string = integral + ' ' + parser.string.slice(parser.i);\n    parser.i = 0;\n};\nexports.AmsMethods.xArrow = function (parser, name, chr, l, r) {\n    var def = { width: '+' + ParseUtil_js_1.default.Em((l + r) / 18), lspace: ParseUtil_js_1.default.Em(l / 18) };\n    var bot = parser.GetBrackets(name);\n    var first = parser.ParseArg(name);\n    var dstrut = parser.create('node', 'mspace', [], { depth: '.25em' });\n    var arrow = parser.create('token', 'mo', { stretchy: true, texClass: MmlNode_js_1.TEXCLASS.REL }, String.fromCodePoint(chr));\n    arrow = parser.create('node', 'mstyle', [arrow], { scriptlevel: 0 });\n    var mml = parser.create('node', 'munderover', [arrow]);\n    var mpadded = parser.create('node', 'mpadded', [first, dstrut], def);\n    NodeUtil_js_1.default.setAttribute(mpadded, 'voffset', '-.2em');\n    NodeUtil_js_1.default.setAttribute(mpadded, 'height', '-.2em');\n    NodeUtil_js_1.default.setChild(mml, mml.over, mpadded);\n    if (bot) {\n        var bottom = new TexParser_js_1.default(bot, parser.stack.env, parser.configuration).mml();\n        var bstrut = parser.create('node', 'mspace', [], { height: '.75em' });\n        mpadded = parser.create('node', 'mpadded', [bottom, bstrut], def);\n        NodeUtil_js_1.default.setAttribute(mpadded, 'voffset', '.15em');\n        NodeUtil_js_1.default.setAttribute(mpadded, 'depth', '-.15em');\n        NodeUtil_js_1.default.setChild(mml, mml.under, mpadded);\n    }\n    NodeUtil_js_1.default.setProperty(mml, 'subsupOK', true);\n    parser.Push(mml);\n};\nexports.AmsMethods.HandleShove = function (parser, _name, shove) {\n    var top = parser.stack.Top();\n    if (top.kind !== 'multline') {\n        throw new TexError_js_1.default('CommandOnlyAllowedInEnv', '%1 only allowed in %2 environment', parser.currentCS, 'multline');\n    }\n    if (top.Size()) {\n        throw new TexError_js_1.default('CommandAtTheBeginingOfLine', '%1 must come at the beginning of the line', parser.currentCS);\n    }\n    top.setProperty('shove', shove);\n};\nexports.AmsMethods.CFrac = function (parser, name) {\n    var lr = ParseUtil_js_1.default.trimSpaces(parser.GetBrackets(name, ''));\n    var num = parser.GetArgument(name);\n    var den = parser.GetArgument(name);\n    var lrMap = {\n        l: TexConstants_js_1.TexConstant.Align.LEFT, r: TexConstants_js_1.TexConstant.Align.RIGHT, '': ''\n    };\n    var numNode = new TexParser_js_1.default('\\\\strut\\\\textstyle{' + num + '}', parser.stack.env, parser.configuration).mml();\n    var denNode = new TexParser_js_1.default('\\\\strut\\\\textstyle{' + den + '}', parser.stack.env, parser.configuration).mml();\n    var frac = parser.create('node', 'mfrac', [numNode, denNode]);\n    lr = lrMap[lr];\n    if (lr == null) {\n        throw new TexError_js_1.default('IllegalAlign', 'Illegal alignment specified in %1', parser.currentCS);\n    }\n    if (lr) {\n        NodeUtil_js_1.default.setProperties(frac, { numalign: lr, denomalign: lr });\n    }\n    parser.Push(frac);\n};\nexports.AmsMethods.Genfrac = function (parser, name, left, right, thick, style) {\n    if (left == null) {\n        left = parser.GetDelimiterArg(name);\n    }\n    if (right == null) {\n        right = parser.GetDelimiterArg(name);\n    }\n    if (thick == null) {\n        thick = parser.GetArgument(name);\n    }\n    if (style == null) {\n        style = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));\n    }\n    var num = parser.ParseArg(name);\n    var den = parser.ParseArg(name);\n    var frac = parser.create('node', 'mfrac', [num, den]);\n    if (thick !== '') {\n        NodeUtil_js_1.default.setAttribute(frac, 'linethickness', thick);\n    }\n    if (left || right) {\n        NodeUtil_js_1.default.setProperty(frac, 'withDelims', true);\n        frac = ParseUtil_js_1.default.fixedFence(parser.configuration, left, frac, right);\n    }\n    if (style !== '') {\n        var styleDigit = parseInt(style, 10);\n        var styleAlpha = ['D', 'T', 'S', 'SS'][styleDigit];\n        if (styleAlpha == null) {\n            throw new TexError_js_1.default('BadMathStyleFor', 'Bad math style for %1', parser.currentCS);\n        }\n        frac = parser.create('node', 'mstyle', [frac]);\n        if (styleAlpha === 'D') {\n            NodeUtil_js_1.default.setProperties(frac, { displaystyle: true, scriptlevel: 0 });\n        }\n        else {\n            NodeUtil_js_1.default.setProperties(frac, { displaystyle: false,\n                scriptlevel: styleDigit - 1 });\n        }\n    }\n    parser.Push(frac);\n};\nexports.AmsMethods.HandleTag = function (parser, name) {\n    if (!parser.tags.currentTag.taggable && parser.tags.env) {\n        throw new TexError_js_1.default('CommandNotAllowedInEnv', '%1 not allowed in %2 environment', parser.currentCS, parser.tags.env);\n    }\n    if (parser.tags.currentTag.tag) {\n        throw new TexError_js_1.default('MultipleCommand', 'Multiple %1', parser.currentCS);\n    }\n    var star = parser.GetStar();\n    var tagId = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));\n    parser.tags.tag(tagId, star);\n};\nexports.AmsMethods.HandleNoTag = BaseMethods_js_1.default.HandleNoTag;\nexports.AmsMethods.HandleRef = BaseMethods_js_1.default.HandleRef;\nexports.AmsMethods.Macro = BaseMethods_js_1.default.Macro;\nexports.AmsMethods.Accent = BaseMethods_js_1.default.Accent;\nexports.AmsMethods.Tilde = BaseMethods_js_1.default.Tilde;\nexports.AmsMethods.Array = BaseMethods_js_1.default.Array;\nexports.AmsMethods.Spacer = BaseMethods_js_1.default.Spacer;\nexports.AmsMethods.NamedOp = BaseMethods_js_1.default.NamedOp;\nexports.AmsMethods.EqnArray = BaseMethods_js_1.default.EqnArray;\nexports.AmsMethods.Equation = BaseMethods_js_1.default.Equation;\n//# sourceMappingURL=AmsMethods.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/ams/AmsMethods.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/amscd/AmsCdConfiguration.js":
/*!****************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/amscd/AmsCdConfiguration.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AmsCdConfiguration = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\n__webpack_require__(/*! ./AmsCdMappings.js */ \"./node_modules/mathjax-full/js/input/tex/amscd/AmsCdMappings.js\");\nexports.AmsCdConfiguration = Configuration_js_1.Configuration.create('amscd', {\n    handler: {\n        character: ['amscd_special'],\n        macro: ['amscd_macros'],\n        environment: ['amscd_environment']\n    },\n    options: {\n        amscd: {\n            colspace: '5pt',\n            rowspace: '5pt',\n            harrowsize: '2.75em',\n            varrowsize: '1.75em',\n            hideHorizontalLabels: false\n        }\n    }\n});\n//# sourceMappingURL=AmsCdConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9hbXNjZC9BbXNDZENvbmZpZ3VyYXRpb24uanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCLHlCQUF5QixtQkFBTyxDQUFDLHNGQUFxQjtBQUN0RCxtQkFBTyxDQUFDLDJGQUFvQjtBQUM1QiwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvaW5wdXQvdGV4L2Ftc2NkL0Ftc0NkQ29uZmlndXJhdGlvbi5qcz85ZDEzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BbXNDZENvbmZpZ3VyYXRpb24gPSB2b2lkIDA7XG52YXIgQ29uZmlndXJhdGlvbl9qc18xID0gcmVxdWlyZShcIi4uL0NvbmZpZ3VyYXRpb24uanNcIik7XG5yZXF1aXJlKFwiLi9BbXNDZE1hcHBpbmdzLmpzXCIpO1xuZXhwb3J0cy5BbXNDZENvbmZpZ3VyYXRpb24gPSBDb25maWd1cmF0aW9uX2pzXzEuQ29uZmlndXJhdGlvbi5jcmVhdGUoJ2Ftc2NkJywge1xuICAgIGhhbmRsZXI6IHtcbiAgICAgICAgY2hhcmFjdGVyOiBbJ2Ftc2NkX3NwZWNpYWwnXSxcbiAgICAgICAgbWFjcm86IFsnYW1zY2RfbWFjcm9zJ10sXG4gICAgICAgIGVudmlyb25tZW50OiBbJ2Ftc2NkX2Vudmlyb25tZW50J11cbiAgICB9LFxuICAgIG9wdGlvbnM6IHtcbiAgICAgICAgYW1zY2Q6IHtcbiAgICAgICAgICAgIGNvbHNwYWNlOiAnNXB0JyxcbiAgICAgICAgICAgIHJvd3NwYWNlOiAnNXB0JyxcbiAgICAgICAgICAgIGhhcnJvd3NpemU6ICcyLjc1ZW0nLFxuICAgICAgICAgICAgdmFycm93c2l6ZTogJzEuNzVlbScsXG4gICAgICAgICAgICBoaWRlSG9yaXpvbnRhbExhYmVsczogZmFsc2VcbiAgICAgICAgfVxuICAgIH1cbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QW1zQ2RDb25maWd1cmF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/amscd/AmsCdConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/amscd/AmsCdMappings.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/amscd/AmsCdMappings.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar sm = __importStar(__webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\"));\nvar ParseMethods_js_1 = __importDefault(__webpack_require__(/*! ../ParseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/ParseMethods.js\"));\nvar AmsCdMethods_js_1 = __importDefault(__webpack_require__(/*! ./AmsCdMethods.js */ \"./node_modules/mathjax-full/js/input/tex/amscd/AmsCdMethods.js\"));\nnew sm.EnvironmentMap('amscd_environment', ParseMethods_js_1.default.environment, { CD: 'CD' }, AmsCdMethods_js_1.default);\nnew sm.CommandMap('amscd_macros', {\n    minCDarrowwidth: 'minCDarrowwidth',\n    minCDarrowheight: 'minCDarrowheight',\n}, AmsCdMethods_js_1.default);\nnew sm.MacroMap('amscd_special', { '@': 'arrow' }, AmsCdMethods_js_1.default);\n//# sourceMappingURL=AmsCdMappings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9hbXNjZC9BbXNDZE1hcHBpbmdzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQixtQkFBTyxDQUFDLDhFQUFpQjtBQUMvQyx3Q0FBd0MsbUJBQU8sQ0FBQyxvRkFBb0I7QUFDcEUsd0NBQXdDLG1CQUFPLENBQUMseUZBQW1CO0FBQ25FLG9GQUFvRixVQUFVO0FBQzlGO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxtQ0FBbUMsY0FBYztBQUNqRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9hbXNjZC9BbXNDZE1hcHBpbmdzLmpzPzRjN2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBzbSA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi4vU3ltYm9sTWFwLmpzXCIpKTtcbnZhciBQYXJzZU1ldGhvZHNfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vUGFyc2VNZXRob2RzLmpzXCIpKTtcbnZhciBBbXNDZE1ldGhvZHNfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9BbXNDZE1ldGhvZHMuanNcIikpO1xubmV3IHNtLkVudmlyb25tZW50TWFwKCdhbXNjZF9lbnZpcm9ubWVudCcsIFBhcnNlTWV0aG9kc19qc18xLmRlZmF1bHQuZW52aXJvbm1lbnQsIHsgQ0Q6ICdDRCcgfSwgQW1zQ2RNZXRob2RzX2pzXzEuZGVmYXVsdCk7XG5uZXcgc20uQ29tbWFuZE1hcCgnYW1zY2RfbWFjcm9zJywge1xuICAgIG1pbkNEYXJyb3d3aWR0aDogJ21pbkNEYXJyb3d3aWR0aCcsXG4gICAgbWluQ0RhcnJvd2hlaWdodDogJ21pbkNEYXJyb3doZWlnaHQnLFxufSwgQW1zQ2RNZXRob2RzX2pzXzEuZGVmYXVsdCk7XG5uZXcgc20uTWFjcm9NYXAoJ2Ftc2NkX3NwZWNpYWwnLCB7ICdAJzogJ2Fycm93JyB9LCBBbXNDZE1ldGhvZHNfanNfMS5kZWZhdWx0KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFtc0NkTWFwcGluZ3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/amscd/AmsCdMappings.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/amscd/AmsCdMethods.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/amscd/AmsCdMethods.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar TexParser_js_1 = __importDefault(__webpack_require__(/*! ../TexParser.js */ \"./node_modules/mathjax-full/js/input/tex/TexParser.js\"));\nvar BaseConfiguration_js_1 = __webpack_require__(/*! ../base/BaseConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseConfiguration.js\");\nvar MmlNode_js_1 = __webpack_require__(/*! ../../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar AmsCdMethods = {};\nAmsCdMethods.CD = function (parser, begin) {\n    parser.Push(begin);\n    var item = parser.itemFactory.create('array');\n    var options = parser.configuration.options.amscd;\n    item.setProperties({\n        minw: parser.stack.env.CD_minw || options.harrowsize,\n        minh: parser.stack.env.CD_minh || options.varrowsize\n    });\n    item.arraydef = {\n        columnalign: 'center',\n        columnspacing: options.colspace,\n        rowspacing: options.rowspace,\n        displaystyle: true\n    };\n    return item;\n};\nAmsCdMethods.arrow = function (parser, name) {\n    var c = parser.string.charAt(parser.i);\n    if (!c.match(/[><VA.|=]/)) {\n        return (0, BaseConfiguration_js_1.Other)(parser, name);\n    }\n    else {\n        parser.i++;\n    }\n    var first = parser.stack.Top();\n    if (!first.isKind('array') || first.Size()) {\n        AmsCdMethods.cell(parser, name);\n        first = parser.stack.Top();\n    }\n    var top = first;\n    var arrowRow = ((top.table.length % 2) === 1);\n    var n = (top.row.length + (arrowRow ? 0 : 1)) % 2;\n    while (n) {\n        AmsCdMethods.cell(parser, name);\n        n--;\n    }\n    var mml;\n    var hdef = { minsize: top.getProperty('minw'), stretchy: true }, vdef = { minsize: top.getProperty('minh'),\n        stretchy: true, symmetric: true, lspace: 0, rspace: 0 };\n    if (c === '.') {\n    }\n    else if (c === '|') {\n        mml = parser.create('token', 'mo', vdef, '\\u2225');\n    }\n    else if (c === '=') {\n        mml = parser.create('token', 'mo', hdef, '=');\n    }\n    else {\n        var arrow = {\n            '>': '\\u2192', '<': '\\u2190', 'V': '\\u2193', 'A': '\\u2191'\n        }[c];\n        var a = parser.GetUpTo(name + c, c);\n        var b = parser.GetUpTo(name + c, c);\n        if (c === '>' || c === '<') {\n            mml = parser.create('token', 'mo', hdef, arrow);\n            if (!a) {\n                a = '\\\\kern ' + top.getProperty('minw');\n            }\n            if (a || b) {\n                var pad = { width: '+.67em', lspace: '.33em' };\n                mml = parser.create('node', 'munderover', [mml]);\n                if (a) {\n                    var nodeA = new TexParser_js_1.default(a, parser.stack.env, parser.configuration).mml();\n                    var mpadded = parser.create('node', 'mpadded', [nodeA], pad);\n                    NodeUtil_js_1.default.setAttribute(mpadded, 'voffset', '.1em');\n                    NodeUtil_js_1.default.setChild(mml, mml.over, mpadded);\n                }\n                if (b) {\n                    var nodeB = new TexParser_js_1.default(b, parser.stack.env, parser.configuration).mml();\n                    NodeUtil_js_1.default.setChild(mml, mml.under, parser.create('node', 'mpadded', [nodeB], pad));\n                }\n                if (parser.configuration.options.amscd.hideHorizontalLabels) {\n                    mml = parser.create('node', 'mpadded', mml, { depth: 0, height: '.67em' });\n                }\n            }\n        }\n        else {\n            var arrowNode = parser.create('token', 'mo', vdef, arrow);\n            mml = arrowNode;\n            if (a || b) {\n                mml = parser.create('node', 'mrow');\n                if (a) {\n                    NodeUtil_js_1.default.appendChildren(mml, [new TexParser_js_1.default('\\\\scriptstyle\\\\llap{' + a + '}', parser.stack.env, parser.configuration).mml()]);\n                }\n                arrowNode.texClass = MmlNode_js_1.TEXCLASS.ORD;\n                NodeUtil_js_1.default.appendChildren(mml, [arrowNode]);\n                if (b) {\n                    NodeUtil_js_1.default.appendChildren(mml, [new TexParser_js_1.default('\\\\scriptstyle\\\\rlap{' + b + '}', parser.stack.env, parser.configuration).mml()]);\n                }\n            }\n        }\n    }\n    if (mml) {\n        parser.Push(mml);\n    }\n    AmsCdMethods.cell(parser, name);\n};\nAmsCdMethods.cell = function (parser, name) {\n    var top = parser.stack.Top();\n    if ((top.table || []).length % 2 === 0 && (top.row || []).length === 0) {\n        parser.Push(parser.create('node', 'mpadded', [], { height: '8.5pt', depth: '2pt' }));\n    }\n    parser.Push(parser.itemFactory.create('cell').setProperties({ isEntry: true, name: name }));\n};\nAmsCdMethods.minCDarrowwidth = function (parser, name) {\n    parser.stack.env.CD_minw = parser.GetDimen(name);\n};\nAmsCdMethods.minCDarrowheight = function (parser, name) {\n    parser.stack.env.CD_minh = parser.GetDimen(name);\n};\nexports[\"default\"] = AmsCdMethods;\n//# sourceMappingURL=AmsCdMethods.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/amscd/AmsCdMethods.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/base/BaseConfiguration.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/base/BaseConfiguration.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BaseConfiguration = exports.BaseTags = exports.Other = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar MapHandler_js_1 = __webpack_require__(/*! ../MapHandler.js */ \"./node_modules/mathjax-full/js/input/tex/MapHandler.js\");\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar bitem = __importStar(__webpack_require__(/*! ./BaseItems.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseItems.js\"));\nvar Tags_js_1 = __webpack_require__(/*! ../Tags.js */ \"./node_modules/mathjax-full/js/input/tex/Tags.js\");\n__webpack_require__(/*! ./BaseMappings.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseMappings.js\");\nvar OperatorDictionary_js_1 = __webpack_require__(/*! ../../../core/MmlTree/OperatorDictionary.js */ \"./node_modules/mathjax-full/js/core/MmlTree/OperatorDictionary.js\");\nnew SymbolMap_js_1.CharacterMap('remap', null, {\n    '-': '\\u2212',\n    '*': '\\u2217',\n    '`': '\\u2018'\n});\nfunction Other(parser, char) {\n    var font = parser.stack.env['font'];\n    var def = font ?\n        { mathvariant: parser.stack.env['font'] } : {};\n    var remap = MapHandler_js_1.MapHandler.getMap('remap').lookup(char);\n    var range = (0, OperatorDictionary_js_1.getRange)(char);\n    var type = (range ? range[3] : 'mo');\n    var mo = parser.create('token', type, def, (remap ? remap.char : char));\n    range[4] && mo.attributes.set('mathvariant', range[4]);\n    if (type === 'mo') {\n        NodeUtil_js_1.default.setProperty(mo, 'fixStretchy', true);\n        parser.configuration.addNode('fixStretchy', mo);\n    }\n    parser.Push(mo);\n}\nexports.Other = Other;\nfunction csUndefined(_parser, name) {\n    throw new TexError_js_1.default('UndefinedControlSequence', 'Undefined control sequence %1', '\\\\' + name);\n}\nfunction envUndefined(_parser, env) {\n    throw new TexError_js_1.default('UnknownEnv', 'Unknown environment \\'%1\\'', env);\n}\nfunction filterNonscript(_a) {\n    var e_1, _b;\n    var data = _a.data;\n    try {\n        for (var _c = __values(data.getList('nonscript')), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var mml = _d.value;\n            if (mml.attributes.get('scriptlevel') > 0) {\n                var parent_1 = mml.parent;\n                parent_1.childNodes.splice(parent_1.childIndex(mml), 1);\n                data.removeFromList(mml.kind, [mml]);\n                if (mml.isKind('mrow')) {\n                    var mstyle = mml.childNodes[0];\n                    data.removeFromList('mstyle', [mstyle]);\n                    data.removeFromList('mspace', mstyle.childNodes[0].childNodes);\n                }\n            }\n            else if (mml.isKind('mrow')) {\n                mml.parent.replaceChild(mml.childNodes[0], mml);\n                data.removeFromList('mrow', [mml]);\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\nvar BaseTags = (function (_super) {\n    __extends(BaseTags, _super);\n    function BaseTags() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return BaseTags;\n}(Tags_js_1.AbstractTags));\nexports.BaseTags = BaseTags;\nexports.BaseConfiguration = Configuration_js_1.Configuration.create('base', {\n    handler: {\n        character: ['command', 'special', 'letter', 'digit'],\n        delimiter: ['delimiter'],\n        macro: ['delimiter', 'macros', 'mathchar0mi', 'mathchar0mo', 'mathchar7'],\n        environment: ['environment']\n    },\n    fallback: {\n        character: Other,\n        macro: csUndefined,\n        environment: envUndefined\n    },\n    items: (_a = {},\n        _a[bitem.StartItem.prototype.kind] = bitem.StartItem,\n        _a[bitem.StopItem.prototype.kind] = bitem.StopItem,\n        _a[bitem.OpenItem.prototype.kind] = bitem.OpenItem,\n        _a[bitem.CloseItem.prototype.kind] = bitem.CloseItem,\n        _a[bitem.PrimeItem.prototype.kind] = bitem.PrimeItem,\n        _a[bitem.SubsupItem.prototype.kind] = bitem.SubsupItem,\n        _a[bitem.OverItem.prototype.kind] = bitem.OverItem,\n        _a[bitem.LeftItem.prototype.kind] = bitem.LeftItem,\n        _a[bitem.Middle.prototype.kind] = bitem.Middle,\n        _a[bitem.RightItem.prototype.kind] = bitem.RightItem,\n        _a[bitem.BeginItem.prototype.kind] = bitem.BeginItem,\n        _a[bitem.EndItem.prototype.kind] = bitem.EndItem,\n        _a[bitem.StyleItem.prototype.kind] = bitem.StyleItem,\n        _a[bitem.PositionItem.prototype.kind] = bitem.PositionItem,\n        _a[bitem.CellItem.prototype.kind] = bitem.CellItem,\n        _a[bitem.MmlItem.prototype.kind] = bitem.MmlItem,\n        _a[bitem.FnItem.prototype.kind] = bitem.FnItem,\n        _a[bitem.NotItem.prototype.kind] = bitem.NotItem,\n        _a[bitem.NonscriptItem.prototype.kind] = bitem.NonscriptItem,\n        _a[bitem.DotsItem.prototype.kind] = bitem.DotsItem,\n        _a[bitem.ArrayItem.prototype.kind] = bitem.ArrayItem,\n        _a[bitem.EqnArrayItem.prototype.kind] = bitem.EqnArrayItem,\n        _a[bitem.EquationItem.prototype.kind] = bitem.EquationItem,\n        _a),\n    options: {\n        maxMacros: 1000,\n        baseURL: (typeof (document) === 'undefined' ||\n            document.getElementsByTagName('base').length === 0) ?\n            '' : String(document.location).replace(/#.*$/, '')\n    },\n    tags: {\n        base: BaseTags\n    },\n    postprocessors: [[filterNonscript, -4]]\n});\n//# sourceMappingURL=BaseConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/base/BaseConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/base/BaseItems.js":
/*!******************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/base/BaseItems.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EquationItem = exports.EqnArrayItem = exports.ArrayItem = exports.DotsItem = exports.NonscriptItem = exports.NotItem = exports.FnItem = exports.MmlItem = exports.CellItem = exports.PositionItem = exports.StyleItem = exports.EndItem = exports.BeginItem = exports.RightItem = exports.Middle = exports.LeftItem = exports.OverItem = exports.SubsupItem = exports.PrimeItem = exports.CloseItem = exports.OpenItem = exports.StopItem = exports.StartItem = void 0;\nvar MapHandler_js_1 = __webpack_require__(/*! ../MapHandler.js */ \"./node_modules/mathjax-full/js/input/tex/MapHandler.js\");\nvar Entities_js_1 = __webpack_require__(/*! ../../../util/Entities.js */ \"./node_modules/mathjax-full/js/util/Entities.js\");\nvar MmlNode_js_1 = __webpack_require__(/*! ../../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar StackItem_js_1 = __webpack_require__(/*! ../StackItem.js */ \"./node_modules/mathjax-full/js/input/tex/StackItem.js\");\nvar StartItem = (function (_super) {\n    __extends(StartItem, _super);\n    function StartItem(factory, global) {\n        var _this = _super.call(this, factory) || this;\n        _this.global = global;\n        return _this;\n    }\n    Object.defineProperty(StartItem.prototype, \"kind\", {\n        get: function () {\n            return 'start';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StartItem.prototype, \"isOpen\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StartItem.prototype.checkItem = function (item) {\n        if (item.isKind('stop')) {\n            var node = this.toMml();\n            if (!this.global.isInner) {\n                node = this.factory.configuration.tags.finalize(node, this.env);\n            }\n            return [[this.factory.create('mml', node)], true];\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    return StartItem;\n}(StackItem_js_1.BaseItem));\nexports.StartItem = StartItem;\nvar StopItem = (function (_super) {\n    __extends(StopItem, _super);\n    function StopItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(StopItem.prototype, \"kind\", {\n        get: function () {\n            return 'stop';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StopItem.prototype, \"isClose\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return StopItem;\n}(StackItem_js_1.BaseItem));\nexports.StopItem = StopItem;\nvar OpenItem = (function (_super) {\n    __extends(OpenItem, _super);\n    function OpenItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(OpenItem.prototype, \"kind\", {\n        get: function () {\n            return 'open';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(OpenItem.prototype, \"isOpen\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    OpenItem.prototype.checkItem = function (item) {\n        if (item.isKind('close')) {\n            var mml = this.toMml();\n            var node = this.create('node', 'TeXAtom', [mml]);\n            return [[this.factory.create('mml', node)], true];\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    OpenItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {\n        'stop': ['ExtraOpenMissingClose',\n            'Extra open brace or missing close brace']\n    });\n    return OpenItem;\n}(StackItem_js_1.BaseItem));\nexports.OpenItem = OpenItem;\nvar CloseItem = (function (_super) {\n    __extends(CloseItem, _super);\n    function CloseItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(CloseItem.prototype, \"kind\", {\n        get: function () {\n            return 'close';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CloseItem.prototype, \"isClose\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return CloseItem;\n}(StackItem_js_1.BaseItem));\nexports.CloseItem = CloseItem;\nvar PrimeItem = (function (_super) {\n    __extends(PrimeItem, _super);\n    function PrimeItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PrimeItem.prototype, \"kind\", {\n        get: function () {\n            return 'prime';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PrimeItem.prototype.checkItem = function (item) {\n        var _a = __read(this.Peek(2), 2), top0 = _a[0], top1 = _a[1];\n        if (!NodeUtil_js_1.default.isType(top0, 'msubsup') || NodeUtil_js_1.default.isType(top0, 'msup')) {\n            var node = this.create('node', 'msup', [top0, top1]);\n            return [[node, item], true];\n        }\n        NodeUtil_js_1.default.setChild(top0, top0.sup, top1);\n        return [[top0, item], true];\n    };\n    return PrimeItem;\n}(StackItem_js_1.BaseItem));\nexports.PrimeItem = PrimeItem;\nvar SubsupItem = (function (_super) {\n    __extends(SubsupItem, _super);\n    function SubsupItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SubsupItem.prototype, \"kind\", {\n        get: function () {\n            return 'subsup';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SubsupItem.prototype.checkItem = function (item) {\n        if (item.isKind('open') || item.isKind('left')) {\n            return StackItem_js_1.BaseItem.success;\n        }\n        var top = this.First;\n        var position = this.getProperty('position');\n        if (item.isKind('mml')) {\n            if (this.getProperty('primes')) {\n                if (position !== 2) {\n                    NodeUtil_js_1.default.setChild(top, 2, this.getProperty('primes'));\n                }\n                else {\n                    NodeUtil_js_1.default.setProperty(this.getProperty('primes'), 'variantForm', true);\n                    var node = this.create('node', 'mrow', [this.getProperty('primes'), item.First]);\n                    item.First = node;\n                }\n            }\n            NodeUtil_js_1.default.setChild(top, position, item.First);\n            if (this.getProperty('movesupsub') != null) {\n                NodeUtil_js_1.default.setProperty(top, 'movesupsub', this.getProperty('movesupsub'));\n            }\n            var result = this.factory.create('mml', top);\n            return [[result], true];\n        }\n        if (_super.prototype.checkItem.call(this, item)[1]) {\n            var error = this.getErrors(['', 'sub', 'sup'][position]);\n            throw new (TexError_js_1.default.bind.apply(TexError_js_1.default, __spreadArray([void 0, error[0], error[1]], __read(error.splice(2)), false)))();\n        }\n        return null;\n    };\n    SubsupItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {\n        'stop': ['MissingScript',\n            'Missing superscript or subscript argument'],\n        'sup': ['MissingOpenForSup',\n            'Missing open brace for superscript'],\n        'sub': ['MissingOpenForSub',\n            'Missing open brace for subscript']\n    });\n    return SubsupItem;\n}(StackItem_js_1.BaseItem));\nexports.SubsupItem = SubsupItem;\nvar OverItem = (function (_super) {\n    __extends(OverItem, _super);\n    function OverItem(factory) {\n        var _this = _super.call(this, factory) || this;\n        _this.setProperty('name', '\\\\over');\n        return _this;\n    }\n    Object.defineProperty(OverItem.prototype, \"kind\", {\n        get: function () {\n            return 'over';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(OverItem.prototype, \"isClose\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    OverItem.prototype.checkItem = function (item) {\n        if (item.isKind('over')) {\n            throw new TexError_js_1.default('AmbiguousUseOf', 'Ambiguous use of %1', item.getName());\n        }\n        if (item.isClose) {\n            var mml = this.create('node', 'mfrac', [this.getProperty('num'), this.toMml(false)]);\n            if (this.getProperty('thickness') != null) {\n                NodeUtil_js_1.default.setAttribute(mml, 'linethickness', this.getProperty('thickness'));\n            }\n            if (this.getProperty('open') || this.getProperty('close')) {\n                NodeUtil_js_1.default.setProperty(mml, 'withDelims', true);\n                mml = ParseUtil_js_1.default.fixedFence(this.factory.configuration, this.getProperty('open'), mml, this.getProperty('close'));\n            }\n            return [[this.factory.create('mml', mml), item], true];\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    OverItem.prototype.toString = function () {\n        return 'over[' + this.getProperty('num') +\n            ' / ' + this.nodes.join('; ') + ']';\n    };\n    return OverItem;\n}(StackItem_js_1.BaseItem));\nexports.OverItem = OverItem;\nvar LeftItem = (function (_super) {\n    __extends(LeftItem, _super);\n    function LeftItem(factory, delim) {\n        var _this = _super.call(this, factory) || this;\n        _this.setProperty('delim', delim);\n        return _this;\n    }\n    Object.defineProperty(LeftItem.prototype, \"kind\", {\n        get: function () {\n            return 'left';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LeftItem.prototype, \"isOpen\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LeftItem.prototype.checkItem = function (item) {\n        if (item.isKind('right')) {\n            return [[this.factory.create('mml', ParseUtil_js_1.default.fenced(this.factory.configuration, this.getProperty('delim'), this.toMml(), item.getProperty('delim'), '', item.getProperty('color')))], true];\n        }\n        if (item.isKind('middle')) {\n            var def = { stretchy: true };\n            if (item.getProperty('color')) {\n                def.mathcolor = item.getProperty('color');\n            }\n            this.Push(this.create('node', 'TeXAtom', [], { texClass: MmlNode_js_1.TEXCLASS.CLOSE }), this.create('token', 'mo', def, item.getProperty('delim')), this.create('node', 'TeXAtom', [], { texClass: MmlNode_js_1.TEXCLASS.OPEN }));\n            this.env = {};\n            return [[this], true];\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    LeftItem.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {\n        'stop': ['ExtraLeftMissingRight',\n            'Extra \\\\left or missing \\\\right']\n    });\n    return LeftItem;\n}(StackItem_js_1.BaseItem));\nexports.LeftItem = LeftItem;\nvar Middle = (function (_super) {\n    __extends(Middle, _super);\n    function Middle(factory, delim, color) {\n        var _this = _super.call(this, factory) || this;\n        _this.setProperty('delim', delim);\n        color && _this.setProperty('color', color);\n        return _this;\n    }\n    Object.defineProperty(Middle.prototype, \"kind\", {\n        get: function () {\n            return 'middle';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Middle.prototype, \"isClose\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Middle;\n}(StackItem_js_1.BaseItem));\nexports.Middle = Middle;\nvar RightItem = (function (_super) {\n    __extends(RightItem, _super);\n    function RightItem(factory, delim, color) {\n        var _this = _super.call(this, factory) || this;\n        _this.setProperty('delim', delim);\n        color && _this.setProperty('color', color);\n        return _this;\n    }\n    Object.defineProperty(RightItem.prototype, \"kind\", {\n        get: function () {\n            return 'right';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RightItem.prototype, \"isClose\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return RightItem;\n}(StackItem_js_1.BaseItem));\nexports.RightItem = RightItem;\nvar BeginItem = (function (_super) {\n    __extends(BeginItem, _super);\n    function BeginItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(BeginItem.prototype, \"kind\", {\n        get: function () {\n            return 'begin';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BeginItem.prototype, \"isOpen\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BeginItem.prototype.checkItem = function (item) {\n        if (item.isKind('end')) {\n            if (item.getName() !== this.getName()) {\n                throw new TexError_js_1.default('EnvBadEnd', '\\\\begin{%1} ended with \\\\end{%2}', this.getName(), item.getName());\n            }\n            if (!this.getProperty('end')) {\n                return [[this.factory.create('mml', this.toMml())], true];\n            }\n            return StackItem_js_1.BaseItem.fail;\n        }\n        if (item.isKind('stop')) {\n            throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    return BeginItem;\n}(StackItem_js_1.BaseItem));\nexports.BeginItem = BeginItem;\nvar EndItem = (function (_super) {\n    __extends(EndItem, _super);\n    function EndItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(EndItem.prototype, \"kind\", {\n        get: function () {\n            return 'end';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EndItem.prototype, \"isClose\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return EndItem;\n}(StackItem_js_1.BaseItem));\nexports.EndItem = EndItem;\nvar StyleItem = (function (_super) {\n    __extends(StyleItem, _super);\n    function StyleItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(StyleItem.prototype, \"kind\", {\n        get: function () {\n            return 'style';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StyleItem.prototype.checkItem = function (item) {\n        if (!item.isClose) {\n            return _super.prototype.checkItem.call(this, item);\n        }\n        var mml = this.create('node', 'mstyle', this.nodes, this.getProperty('styles'));\n        return [[this.factory.create('mml', mml), item], true];\n    };\n    return StyleItem;\n}(StackItem_js_1.BaseItem));\nexports.StyleItem = StyleItem;\nvar PositionItem = (function (_super) {\n    __extends(PositionItem, _super);\n    function PositionItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(PositionItem.prototype, \"kind\", {\n        get: function () {\n            return 'position';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PositionItem.prototype.checkItem = function (item) {\n        if (item.isClose) {\n            throw new TexError_js_1.default('MissingBoxFor', 'Missing box for %1', this.getName());\n        }\n        if (item.isFinal) {\n            var mml = item.toMml();\n            switch (this.getProperty('move')) {\n                case 'vertical':\n                    mml = this.create('node', 'mpadded', [mml], { height: this.getProperty('dh'),\n                        depth: this.getProperty('dd'),\n                        voffset: this.getProperty('dh') });\n                    return [[this.factory.create('mml', mml)], true];\n                case 'horizontal':\n                    return [[this.factory.create('mml', this.getProperty('left')), item,\n                            this.factory.create('mml', this.getProperty('right'))], true];\n            }\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    return PositionItem;\n}(StackItem_js_1.BaseItem));\nexports.PositionItem = PositionItem;\nvar CellItem = (function (_super) {\n    __extends(CellItem, _super);\n    function CellItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(CellItem.prototype, \"kind\", {\n        get: function () {\n            return 'cell';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CellItem.prototype, \"isClose\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return CellItem;\n}(StackItem_js_1.BaseItem));\nexports.CellItem = CellItem;\nvar MmlItem = (function (_super) {\n    __extends(MmlItem, _super);\n    function MmlItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MmlItem.prototype, \"isFinal\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlItem.prototype, \"kind\", {\n        get: function () {\n            return 'mml';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return MmlItem;\n}(StackItem_js_1.BaseItem));\nexports.MmlItem = MmlItem;\nvar FnItem = (function (_super) {\n    __extends(FnItem, _super);\n    function FnItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(FnItem.prototype, \"kind\", {\n        get: function () {\n            return 'fn';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    FnItem.prototype.checkItem = function (item) {\n        var top = this.First;\n        if (top) {\n            if (item.isOpen) {\n                return StackItem_js_1.BaseItem.success;\n            }\n            if (!item.isKind('fn')) {\n                var mml = item.First;\n                if (!item.isKind('mml') || !mml) {\n                    return [[top, item], true];\n                }\n                if ((NodeUtil_js_1.default.isType(mml, 'mstyle') && mml.childNodes.length &&\n                    NodeUtil_js_1.default.isType(mml.childNodes[0].childNodes[0], 'mspace')) ||\n                    NodeUtil_js_1.default.isType(mml, 'mspace')) {\n                    return [[top, item], true];\n                }\n                if (NodeUtil_js_1.default.isEmbellished(mml)) {\n                    mml = NodeUtil_js_1.default.getCoreMO(mml);\n                }\n                var form = NodeUtil_js_1.default.getForm(mml);\n                if (form != null && [0, 0, 1, 1, 0, 1, 1, 0, 0, 0][form[2]]) {\n                    return [[top, item], true];\n                }\n            }\n            var node = this.create('token', 'mo', { texClass: MmlNode_js_1.TEXCLASS.NONE }, Entities_js_1.entities.ApplyFunction);\n            return [[top, node, item], true];\n        }\n        return _super.prototype.checkItem.apply(this, arguments);\n    };\n    return FnItem;\n}(StackItem_js_1.BaseItem));\nexports.FnItem = FnItem;\nvar NotItem = (function (_super) {\n    __extends(NotItem, _super);\n    function NotItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.remap = MapHandler_js_1.MapHandler.getMap('not_remap');\n        return _this;\n    }\n    Object.defineProperty(NotItem.prototype, \"kind\", {\n        get: function () {\n            return 'not';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    NotItem.prototype.checkItem = function (item) {\n        var mml;\n        var c;\n        var textNode;\n        if (item.isKind('open') || item.isKind('left')) {\n            return StackItem_js_1.BaseItem.success;\n        }\n        if (item.isKind('mml') &&\n            (NodeUtil_js_1.default.isType(item.First, 'mo') || NodeUtil_js_1.default.isType(item.First, 'mi') ||\n                NodeUtil_js_1.default.isType(item.First, 'mtext'))) {\n            mml = item.First;\n            c = NodeUtil_js_1.default.getText(mml);\n            if (c.length === 1 && !NodeUtil_js_1.default.getProperty(mml, 'movesupsub') &&\n                NodeUtil_js_1.default.getChildren(mml).length === 1) {\n                if (this.remap.contains(c)) {\n                    textNode = this.create('text', this.remap.lookup(c).char);\n                    NodeUtil_js_1.default.setChild(mml, 0, textNode);\n                }\n                else {\n                    textNode = this.create('text', '\\u0338');\n                    NodeUtil_js_1.default.appendChildren(mml, [textNode]);\n                }\n                return [[item], true];\n            }\n        }\n        textNode = this.create('text', '\\u29F8');\n        var mtextNode = this.create('node', 'mtext', [], {}, textNode);\n        var paddedNode = this.create('node', 'mpadded', [mtextNode], { width: 0 });\n        mml = this.create('node', 'TeXAtom', [paddedNode], { texClass: MmlNode_js_1.TEXCLASS.REL });\n        return [[mml, item], true];\n    };\n    return NotItem;\n}(StackItem_js_1.BaseItem));\nexports.NotItem = NotItem;\nvar NonscriptItem = (function (_super) {\n    __extends(NonscriptItem, _super);\n    function NonscriptItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(NonscriptItem.prototype, \"kind\", {\n        get: function () {\n            return 'nonscript';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    NonscriptItem.prototype.checkItem = function (item) {\n        if (item.isKind('mml') && item.Size() === 1) {\n            var mml = item.First;\n            if (mml.isKind('mstyle') && mml.notParent) {\n                mml = NodeUtil_js_1.default.getChildren(NodeUtil_js_1.default.getChildren(mml)[0])[0];\n            }\n            if (mml.isKind('mspace')) {\n                if (mml !== item.First) {\n                    var mrow = this.create('node', 'mrow', [item.Pop()]);\n                    item.Push(mrow);\n                }\n                this.factory.configuration.addNode('nonscript', item.First);\n            }\n        }\n        return [[item], true];\n    };\n    return NonscriptItem;\n}(StackItem_js_1.BaseItem));\nexports.NonscriptItem = NonscriptItem;\nvar DotsItem = (function (_super) {\n    __extends(DotsItem, _super);\n    function DotsItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(DotsItem.prototype, \"kind\", {\n        get: function () {\n            return 'dots';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DotsItem.prototype.checkItem = function (item) {\n        if (item.isKind('open') || item.isKind('left')) {\n            return StackItem_js_1.BaseItem.success;\n        }\n        var dots = this.getProperty('ldots');\n        var top = item.First;\n        if (item.isKind('mml') && NodeUtil_js_1.default.isEmbellished(top)) {\n            var tclass = NodeUtil_js_1.default.getTexClass(NodeUtil_js_1.default.getCoreMO(top));\n            if (tclass === MmlNode_js_1.TEXCLASS.BIN || tclass === MmlNode_js_1.TEXCLASS.REL) {\n                dots = this.getProperty('cdots');\n            }\n        }\n        return [[dots, item], true];\n    };\n    return DotsItem;\n}(StackItem_js_1.BaseItem));\nexports.DotsItem = DotsItem;\nvar ArrayItem = (function (_super) {\n    __extends(ArrayItem, _super);\n    function ArrayItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.table = [];\n        _this.row = [];\n        _this.frame = [];\n        _this.hfill = [];\n        _this.arraydef = {};\n        _this.dashed = false;\n        return _this;\n    }\n    Object.defineProperty(ArrayItem.prototype, \"kind\", {\n        get: function () {\n            return 'array';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ArrayItem.prototype, \"isOpen\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ArrayItem.prototype, \"copyEnv\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ArrayItem.prototype.checkItem = function (item) {\n        if (item.isClose && !item.isKind('over')) {\n            if (item.getProperty('isEntry')) {\n                this.EndEntry();\n                this.clearEnv();\n                return StackItem_js_1.BaseItem.fail;\n            }\n            if (item.getProperty('isCR')) {\n                this.EndEntry();\n                this.EndRow();\n                this.clearEnv();\n                return StackItem_js_1.BaseItem.fail;\n            }\n            this.EndTable();\n            this.clearEnv();\n            var newItem = this.factory.create('mml', this.createMml());\n            if (this.getProperty('requireClose')) {\n                if (item.isKind('close')) {\n                    return [[newItem], true];\n                }\n                throw new TexError_js_1.default('MissingCloseBrace', 'Missing close brace');\n            }\n            return [[newItem, item], true];\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    ArrayItem.prototype.createMml = function () {\n        var scriptlevel = this.arraydef['scriptlevel'];\n        delete this.arraydef['scriptlevel'];\n        var mml = this.create('node', 'mtable', this.table, this.arraydef);\n        if (scriptlevel) {\n            mml.setProperty('scriptlevel', scriptlevel);\n        }\n        if (this.frame.length === 4) {\n            NodeUtil_js_1.default.setAttribute(mml, 'frame', this.dashed ? 'dashed' : 'solid');\n        }\n        else if (this.frame.length) {\n            if (this.arraydef['rowlines']) {\n                this.arraydef['rowlines'] =\n                    this.arraydef['rowlines'].replace(/none( none)+$/, 'none');\n            }\n            NodeUtil_js_1.default.setAttribute(mml, 'frame', '');\n            mml = this.create('node', 'menclose', [mml], { notation: this.frame.join(' ') });\n            if ((this.arraydef['columnlines'] || 'none') !== 'none' ||\n                (this.arraydef['rowlines'] || 'none') !== 'none') {\n                NodeUtil_js_1.default.setAttribute(mml, 'data-padding', 0);\n            }\n        }\n        if (this.getProperty('open') || this.getProperty('close')) {\n            mml = ParseUtil_js_1.default.fenced(this.factory.configuration, this.getProperty('open'), mml, this.getProperty('close'));\n        }\n        return mml;\n    };\n    ArrayItem.prototype.EndEntry = function () {\n        var mtd = this.create('node', 'mtd', this.nodes);\n        if (this.hfill.length) {\n            if (this.hfill[0] === 0) {\n                NodeUtil_js_1.default.setAttribute(mtd, 'columnalign', 'right');\n            }\n            if (this.hfill[this.hfill.length - 1] === this.Size()) {\n                NodeUtil_js_1.default.setAttribute(mtd, 'columnalign', NodeUtil_js_1.default.getAttribute(mtd, 'columnalign') ? 'center' : 'left');\n            }\n        }\n        this.row.push(mtd);\n        this.Clear();\n        this.hfill = [];\n    };\n    ArrayItem.prototype.EndRow = function () {\n        var node;\n        if (this.getProperty('isNumbered') && this.row.length === 3) {\n            this.row.unshift(this.row.pop());\n            node = this.create('node', 'mlabeledtr', this.row);\n        }\n        else {\n            node = this.create('node', 'mtr', this.row);\n        }\n        this.table.push(node);\n        this.row = [];\n    };\n    ArrayItem.prototype.EndTable = function () {\n        if (this.Size() || this.row.length) {\n            this.EndEntry();\n            this.EndRow();\n        }\n        this.checkLines();\n    };\n    ArrayItem.prototype.checkLines = function () {\n        if (this.arraydef['rowlines']) {\n            var lines = this.arraydef['rowlines'].split(/ /);\n            if (lines.length === this.table.length) {\n                this.frame.push('bottom');\n                lines.pop();\n                this.arraydef['rowlines'] = lines.join(' ');\n            }\n            else if (lines.length < this.table.length - 1) {\n                this.arraydef['rowlines'] += ' none';\n            }\n        }\n        if (this.getProperty('rowspacing')) {\n            var rows = this.arraydef['rowspacing'].split(/ /);\n            while (rows.length < this.table.length) {\n                rows.push(this.getProperty('rowspacing') + 'em');\n            }\n            this.arraydef['rowspacing'] = rows.join(' ');\n        }\n    };\n    ArrayItem.prototype.addRowSpacing = function (spacing) {\n        if (this.arraydef['rowspacing']) {\n            var rows = this.arraydef['rowspacing'].split(/ /);\n            if (!this.getProperty('rowspacing')) {\n                var dimem = ParseUtil_js_1.default.dimen2em(rows[0]);\n                this.setProperty('rowspacing', dimem);\n            }\n            var rowspacing = this.getProperty('rowspacing');\n            while (rows.length < this.table.length) {\n                rows.push(ParseUtil_js_1.default.Em(rowspacing));\n            }\n            rows[this.table.length - 1] = ParseUtil_js_1.default.Em(Math.max(0, rowspacing + ParseUtil_js_1.default.dimen2em(spacing)));\n            this.arraydef['rowspacing'] = rows.join(' ');\n        }\n    };\n    return ArrayItem;\n}(StackItem_js_1.BaseItem));\nexports.ArrayItem = ArrayItem;\nvar EqnArrayItem = (function (_super) {\n    __extends(EqnArrayItem, _super);\n    function EqnArrayItem(factory) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _this = _super.call(this, factory) || this;\n        _this.maxrow = 0;\n        _this.factory.configuration.tags.start(args[0], args[2], args[1]);\n        return _this;\n    }\n    Object.defineProperty(EqnArrayItem.prototype, \"kind\", {\n        get: function () {\n            return 'eqnarray';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    EqnArrayItem.prototype.EndEntry = function () {\n        if (this.row.length) {\n            ParseUtil_js_1.default.fixInitialMO(this.factory.configuration, this.nodes);\n        }\n        var node = this.create('node', 'mtd', this.nodes);\n        this.row.push(node);\n        this.Clear();\n    };\n    EqnArrayItem.prototype.EndRow = function () {\n        if (this.row.length > this.maxrow) {\n            this.maxrow = this.row.length;\n        }\n        var mtr = 'mtr';\n        var tag = this.factory.configuration.tags.getTag();\n        if (tag) {\n            this.row = [tag].concat(this.row);\n            mtr = 'mlabeledtr';\n        }\n        this.factory.configuration.tags.clearTag();\n        var node = this.create('node', mtr, this.row);\n        this.table.push(node);\n        this.row = [];\n    };\n    EqnArrayItem.prototype.EndTable = function () {\n        _super.prototype.EndTable.call(this);\n        this.factory.configuration.tags.end();\n        this.extendArray('columnalign', this.maxrow);\n        this.extendArray('columnwidth', this.maxrow);\n        this.extendArray('columnspacing', this.maxrow - 1);\n    };\n    EqnArrayItem.prototype.extendArray = function (name, max) {\n        if (!this.arraydef[name])\n            return;\n        var repeat = this.arraydef[name].split(/ /);\n        var columns = __spreadArray([], __read(repeat), false);\n        if (columns.length > 1) {\n            while (columns.length < max) {\n                columns.push.apply(columns, __spreadArray([], __read(repeat), false));\n            }\n            this.arraydef[name] = columns.slice(0, max).join(' ');\n        }\n    };\n    return EqnArrayItem;\n}(ArrayItem));\nexports.EqnArrayItem = EqnArrayItem;\nvar EquationItem = (function (_super) {\n    __extends(EquationItem, _super);\n    function EquationItem(factory) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var _this = _super.call(this, factory) || this;\n        _this.factory.configuration.tags.start('equation', true, args[0]);\n        return _this;\n    }\n    Object.defineProperty(EquationItem.prototype, \"kind\", {\n        get: function () {\n            return 'equation';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EquationItem.prototype, \"isOpen\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    EquationItem.prototype.checkItem = function (item) {\n        if (item.isKind('end')) {\n            var mml = this.toMml();\n            var tag = this.factory.configuration.tags.getTag();\n            this.factory.configuration.tags.end();\n            return [[tag ? this.factory.configuration.tags.enTag(mml, tag) : mml, item], true];\n        }\n        if (item.isKind('stop')) {\n            throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    return EquationItem;\n}(StackItem_js_1.BaseItem));\nexports.EquationItem = EquationItem;\n//# sourceMappingURL=BaseItems.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/base/BaseItems.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/base/BaseMappings.js":
/*!*********************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/base/BaseMappings.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar sm = __importStar(__webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\"));\nvar TexConstants_js_1 = __webpack_require__(/*! ../TexConstants.js */ \"./node_modules/mathjax-full/js/input/tex/TexConstants.js\");\nvar BaseMethods_js_1 = __importDefault(__webpack_require__(/*! ./BaseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseMethods.js\"));\nvar ParseMethods_js_1 = __importDefault(__webpack_require__(/*! ../ParseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/ParseMethods.js\"));\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar MmlNode_js_1 = __webpack_require__(/*! ../../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar lengths_js_1 = __webpack_require__(/*! ../../../util/lengths.js */ \"./node_modules/mathjax-full/js/util/lengths.js\");\nnew sm.RegExpMap('letter', ParseMethods_js_1.default.variable, /[a-z]/i);\nnew sm.RegExpMap('digit', ParseMethods_js_1.default.digit, /[0-9.,]/);\nnew sm.RegExpMap('command', ParseMethods_js_1.default.controlSequence, /^\\\\/);\nnew sm.MacroMap('special', {\n    '{': 'Open',\n    '}': 'Close',\n    '~': 'Tilde',\n    '^': 'Superscript',\n    '_': 'Subscript',\n    ' ': 'Space',\n    '\\t': 'Space',\n    '\\r': 'Space',\n    '\\n': 'Space',\n    '\\'': 'Prime',\n    '%': 'Comment',\n    '&': 'Entry',\n    '#': 'Hash',\n    '\\u00A0': 'Space',\n    '\\u2019': 'Prime'\n}, BaseMethods_js_1.default);\nnew sm.CharacterMap('mathchar0mi', ParseMethods_js_1.default.mathchar0mi, {\n    alpha: '\\u03B1',\n    beta: '\\u03B2',\n    gamma: '\\u03B3',\n    delta: '\\u03B4',\n    epsilon: '\\u03F5',\n    zeta: '\\u03B6',\n    eta: '\\u03B7',\n    theta: '\\u03B8',\n    iota: '\\u03B9',\n    kappa: '\\u03BA',\n    lambda: '\\u03BB',\n    mu: '\\u03BC',\n    nu: '\\u03BD',\n    xi: '\\u03BE',\n    omicron: '\\u03BF',\n    pi: '\\u03C0',\n    rho: '\\u03C1',\n    sigma: '\\u03C3',\n    tau: '\\u03C4',\n    upsilon: '\\u03C5',\n    phi: '\\u03D5',\n    chi: '\\u03C7',\n    psi: '\\u03C8',\n    omega: '\\u03C9',\n    varepsilon: '\\u03B5',\n    vartheta: '\\u03D1',\n    varpi: '\\u03D6',\n    varrho: '\\u03F1',\n    varsigma: '\\u03C2',\n    varphi: '\\u03C6',\n    S: ['\\u00A7', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    aleph: ['\\u2135', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    hbar: ['\\u210F', { variantForm: true }],\n    imath: '\\u0131',\n    jmath: '\\u0237',\n    ell: '\\u2113',\n    wp: ['\\u2118', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    Re: ['\\u211C', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    Im: ['\\u2111', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    partial: ['\\u2202', { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC }],\n    infty: ['\\u221E', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    prime: ['\\u2032', { variantForm: true }],\n    emptyset: ['\\u2205', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    nabla: ['\\u2207', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    top: ['\\u22A4', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    bot: ['\\u22A5', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    angle: ['\\u2220', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    triangle: ['\\u25B3', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    backslash: ['\\u2216', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    forall: ['\\u2200', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    exists: ['\\u2203', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    neg: ['\\u00AC', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    lnot: ['\\u00AC', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    flat: ['\\u266D', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    natural: ['\\u266E', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    sharp: ['\\u266F', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    clubsuit: ['\\u2663', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    diamondsuit: ['\\u2662', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    heartsuit: ['\\u2661', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    spadesuit: ['\\u2660', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }]\n});\nnew sm.CharacterMap('mathchar0mo', ParseMethods_js_1.default.mathchar0mo, {\n    surd: '\\u221A',\n    coprod: ['\\u2210', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    bigvee: ['\\u22C1', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    bigwedge: ['\\u22C0', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    biguplus: ['\\u2A04', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    bigcap: ['\\u22C2', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    bigcup: ['\\u22C3', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    'int': ['\\u222B', { texClass: MmlNode_js_1.TEXCLASS.OP }],\n    intop: ['\\u222B', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true, movablelimits: true }],\n    iint: ['\\u222C', { texClass: MmlNode_js_1.TEXCLASS.OP }],\n    iiint: ['\\u222D', { texClass: MmlNode_js_1.TEXCLASS.OP }],\n    prod: ['\\u220F', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    sum: ['\\u2211', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    bigotimes: ['\\u2A02', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    bigoplus: ['\\u2A01', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    bigodot: ['\\u2A00', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    oint: ['\\u222E', { texClass: MmlNode_js_1.TEXCLASS.OP }],\n    bigsqcup: ['\\u2A06', { texClass: MmlNode_js_1.TEXCLASS.OP,\n            movesupsub: true }],\n    smallint: ['\\u222B', { largeop: false }],\n    triangleleft: '\\u25C3',\n    triangleright: '\\u25B9',\n    bigtriangleup: '\\u25B3',\n    bigtriangledown: '\\u25BD',\n    wedge: '\\u2227',\n    land: '\\u2227',\n    vee: '\\u2228',\n    lor: '\\u2228',\n    cap: '\\u2229',\n    cup: '\\u222A',\n    ddagger: '\\u2021',\n    dagger: '\\u2020',\n    sqcap: '\\u2293',\n    sqcup: '\\u2294',\n    uplus: '\\u228E',\n    amalg: '\\u2A3F',\n    diamond: '\\u22C4',\n    bullet: '\\u2219',\n    wr: '\\u2240',\n    div: '\\u00F7',\n    divsymbol: '\\u00F7',\n    odot: ['\\u2299', { largeop: false }],\n    oslash: ['\\u2298', { largeop: false }],\n    otimes: ['\\u2297', { largeop: false }],\n    ominus: ['\\u2296', { largeop: false }],\n    oplus: ['\\u2295', { largeop: false }],\n    mp: '\\u2213',\n    pm: '\\u00B1',\n    circ: '\\u2218',\n    bigcirc: '\\u25EF',\n    setminus: '\\u2216',\n    cdot: '\\u22C5',\n    ast: '\\u2217',\n    times: '\\u00D7',\n    star: '\\u22C6',\n    propto: '\\u221D',\n    sqsubseteq: '\\u2291',\n    sqsupseteq: '\\u2292',\n    parallel: '\\u2225',\n    mid: '\\u2223',\n    dashv: '\\u22A3',\n    vdash: '\\u22A2',\n    leq: '\\u2264',\n    le: '\\u2264',\n    geq: '\\u2265',\n    ge: '\\u2265',\n    lt: '\\u003C',\n    gt: '\\u003E',\n    succ: '\\u227B',\n    prec: '\\u227A',\n    approx: '\\u2248',\n    succeq: '\\u2AB0',\n    preceq: '\\u2AAF',\n    supset: '\\u2283',\n    subset: '\\u2282',\n    supseteq: '\\u2287',\n    subseteq: '\\u2286',\n    'in': '\\u2208',\n    ni: '\\u220B',\n    notin: '\\u2209',\n    owns: '\\u220B',\n    gg: '\\u226B',\n    ll: '\\u226A',\n    sim: '\\u223C',\n    simeq: '\\u2243',\n    perp: '\\u22A5',\n    equiv: '\\u2261',\n    asymp: '\\u224D',\n    smile: '\\u2323',\n    frown: '\\u2322',\n    ne: '\\u2260',\n    neq: '\\u2260',\n    cong: '\\u2245',\n    doteq: '\\u2250',\n    bowtie: '\\u22C8',\n    models: '\\u22A8',\n    notChar: '\\u29F8',\n    Leftrightarrow: '\\u21D4',\n    Leftarrow: '\\u21D0',\n    Rightarrow: '\\u21D2',\n    leftrightarrow: '\\u2194',\n    leftarrow: '\\u2190',\n    gets: '\\u2190',\n    rightarrow: '\\u2192',\n    to: ['\\u2192', { accent: false }],\n    mapsto: '\\u21A6',\n    leftharpoonup: '\\u21BC',\n    leftharpoondown: '\\u21BD',\n    rightharpoonup: '\\u21C0',\n    rightharpoondown: '\\u21C1',\n    nearrow: '\\u2197',\n    searrow: '\\u2198',\n    nwarrow: '\\u2196',\n    swarrow: '\\u2199',\n    rightleftharpoons: '\\u21CC',\n    hookrightarrow: '\\u21AA',\n    hookleftarrow: '\\u21A9',\n    longleftarrow: '\\u27F5',\n    Longleftarrow: '\\u27F8',\n    longrightarrow: '\\u27F6',\n    Longrightarrow: '\\u27F9',\n    Longleftrightarrow: '\\u27FA',\n    longleftrightarrow: '\\u27F7',\n    longmapsto: '\\u27FC',\n    ldots: '\\u2026',\n    cdots: '\\u22EF',\n    vdots: '\\u22EE',\n    ddots: '\\u22F1',\n    dotsc: '\\u2026',\n    dotsb: '\\u22EF',\n    dotsm: '\\u22EF',\n    dotsi: '\\u22EF',\n    dotso: '\\u2026',\n    ldotp: ['\\u002E', { texClass: MmlNode_js_1.TEXCLASS.PUNCT }],\n    cdotp: ['\\u22C5', { texClass: MmlNode_js_1.TEXCLASS.PUNCT }],\n    colon: ['\\u003A', { texClass: MmlNode_js_1.TEXCLASS.PUNCT }]\n});\nnew sm.CharacterMap('mathchar7', ParseMethods_js_1.default.mathchar7, {\n    Gamma: '\\u0393',\n    Delta: '\\u0394',\n    Theta: '\\u0398',\n    Lambda: '\\u039B',\n    Xi: '\\u039E',\n    Pi: '\\u03A0',\n    Sigma: '\\u03A3',\n    Upsilon: '\\u03A5',\n    Phi: '\\u03A6',\n    Psi: '\\u03A8',\n    Omega: '\\u03A9',\n    '_': '\\u005F',\n    '#': '\\u0023',\n    '$': '\\u0024',\n    '%': '\\u0025',\n    '&': '\\u0026',\n    And: '\\u0026'\n});\nnew sm.DelimiterMap('delimiter', ParseMethods_js_1.default.delimiter, {\n    '(': '(',\n    ')': ')',\n    '[': '[',\n    ']': ']',\n    '<': '\\u27E8',\n    '>': '\\u27E9',\n    '\\\\lt': '\\u27E8',\n    '\\\\gt': '\\u27E9',\n    '/': '/',\n    '|': ['|', { texClass: MmlNode_js_1.TEXCLASS.ORD }],\n    '.': '',\n    '\\\\\\\\': '\\\\',\n    '\\\\lmoustache': '\\u23B0',\n    '\\\\rmoustache': '\\u23B1',\n    '\\\\lgroup': '\\u27EE',\n    '\\\\rgroup': '\\u27EF',\n    '\\\\arrowvert': '\\u23D0',\n    '\\\\Arrowvert': '\\u2016',\n    '\\\\bracevert': '\\u23AA',\n    '\\\\Vert': ['\\u2016', { texClass: MmlNode_js_1.TEXCLASS.ORD }],\n    '\\\\|': ['\\u2016', { texClass: MmlNode_js_1.TEXCLASS.ORD }],\n    '\\\\vert': ['|', { texClass: MmlNode_js_1.TEXCLASS.ORD }],\n    '\\\\uparrow': '\\u2191',\n    '\\\\downarrow': '\\u2193',\n    '\\\\updownarrow': '\\u2195',\n    '\\\\Uparrow': '\\u21D1',\n    '\\\\Downarrow': '\\u21D3',\n    '\\\\Updownarrow': '\\u21D5',\n    '\\\\backslash': '\\\\',\n    '\\\\rangle': '\\u27E9',\n    '\\\\langle': '\\u27E8',\n    '\\\\rbrace': '}',\n    '\\\\lbrace': '{',\n    '\\\\}': '}',\n    '\\\\{': '{',\n    '\\\\rceil': '\\u2309',\n    '\\\\lceil': '\\u2308',\n    '\\\\rfloor': '\\u230B',\n    '\\\\lfloor': '\\u230A',\n    '\\\\lbrack': '[',\n    '\\\\rbrack': ']'\n});\nnew sm.CommandMap('macros', {\n    displaystyle: ['SetStyle', 'D', true, 0],\n    textstyle: ['SetStyle', 'T', false, 0],\n    scriptstyle: ['SetStyle', 'S', false, 1],\n    scriptscriptstyle: ['SetStyle', 'SS', false, 2],\n    rm: ['SetFont', TexConstants_js_1.TexConstant.Variant.NORMAL],\n    mit: ['SetFont', TexConstants_js_1.TexConstant.Variant.ITALIC],\n    oldstyle: ['SetFont', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],\n    cal: ['SetFont', TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],\n    it: ['SetFont', TexConstants_js_1.TexConstant.Variant.MATHITALIC],\n    bf: ['SetFont', TexConstants_js_1.TexConstant.Variant.BOLD],\n    bbFont: ['SetFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],\n    scr: ['SetFont', TexConstants_js_1.TexConstant.Variant.SCRIPT],\n    frak: ['SetFont', TexConstants_js_1.TexConstant.Variant.FRAKTUR],\n    sf: ['SetFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],\n    tt: ['SetFont', TexConstants_js_1.TexConstant.Variant.MONOSPACE],\n    mathrm: ['MathFont', TexConstants_js_1.TexConstant.Variant.NORMAL],\n    mathup: ['MathFont', TexConstants_js_1.TexConstant.Variant.NORMAL],\n    mathnormal: ['MathFont', ''],\n    mathbf: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLD],\n    mathbfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLD],\n    mathit: ['MathFont', TexConstants_js_1.TexConstant.Variant.MATHITALIC],\n    mathbfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDITALIC],\n    mathbb: ['MathFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],\n    Bbb: ['MathFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],\n    mathfrak: ['MathFont', TexConstants_js_1.TexConstant.Variant.FRAKTUR],\n    mathbffrak: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDFRAKTUR],\n    mathscr: ['MathFont', TexConstants_js_1.TexConstant.Variant.SCRIPT],\n    mathbfscr: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSCRIPT],\n    mathsf: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],\n    mathsfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],\n    mathbfsf: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF],\n    mathbfsfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF],\n    mathsfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIFITALIC],\n    mathbfsfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIFBOLDITALIC],\n    mathtt: ['MathFont', TexConstants_js_1.TexConstant.Variant.MONOSPACE],\n    mathcal: ['MathFont', TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],\n    mathbfcal: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDCALLIGRAPHIC],\n    symrm: ['MathFont', TexConstants_js_1.TexConstant.Variant.NORMAL],\n    symup: ['MathFont', TexConstants_js_1.TexConstant.Variant.NORMAL],\n    symnormal: ['MathFont', ''],\n    symbf: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLD],\n    symbfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLD],\n    symit: ['MathFont', TexConstants_js_1.TexConstant.Variant.ITALIC],\n    symbfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDITALIC],\n    symbb: ['MathFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],\n    symfrak: ['MathFont', TexConstants_js_1.TexConstant.Variant.FRAKTUR],\n    symbffrak: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDFRAKTUR],\n    symscr: ['MathFont', TexConstants_js_1.TexConstant.Variant.SCRIPT],\n    symbfscr: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSCRIPT],\n    symsf: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],\n    symsfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],\n    symbfsf: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF],\n    symbfsfup: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF],\n    symsfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIFITALIC],\n    symbfsfit: ['MathFont', TexConstants_js_1.TexConstant.Variant.SANSSERIFBOLDITALIC],\n    symtt: ['MathFont', TexConstants_js_1.TexConstant.Variant.MONOSPACE],\n    symcal: ['MathFont', TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],\n    symbfcal: ['MathFont', TexConstants_js_1.TexConstant.Variant.BOLDCALLIGRAPHIC],\n    textrm: ['HBox', null, TexConstants_js_1.TexConstant.Variant.NORMAL],\n    textup: ['HBox', null, TexConstants_js_1.TexConstant.Variant.NORMAL],\n    textnormal: ['HBox'],\n    textit: ['HBox', null, TexConstants_js_1.TexConstant.Variant.ITALIC],\n    textbf: ['HBox', null, TexConstants_js_1.TexConstant.Variant.BOLD],\n    textsf: ['HBox', null, TexConstants_js_1.TexConstant.Variant.SANSSERIF],\n    texttt: ['HBox', null, TexConstants_js_1.TexConstant.Variant.MONOSPACE],\n    tiny: ['SetSize', 0.5],\n    Tiny: ['SetSize', 0.6],\n    scriptsize: ['SetSize', 0.7],\n    small: ['SetSize', 0.85],\n    normalsize: ['SetSize', 1.0],\n    large: ['SetSize', 1.2],\n    Large: ['SetSize', 1.44],\n    LARGE: ['SetSize', 1.73],\n    huge: ['SetSize', 2.07],\n    Huge: ['SetSize', 2.49],\n    arcsin: 'NamedFn',\n    arccos: 'NamedFn',\n    arctan: 'NamedFn',\n    arg: 'NamedFn',\n    cos: 'NamedFn',\n    cosh: 'NamedFn',\n    cot: 'NamedFn',\n    coth: 'NamedFn',\n    csc: 'NamedFn',\n    deg: 'NamedFn',\n    det: 'NamedOp',\n    dim: 'NamedFn',\n    exp: 'NamedFn',\n    gcd: 'NamedOp',\n    hom: 'NamedFn',\n    inf: 'NamedOp',\n    ker: 'NamedFn',\n    lg: 'NamedFn',\n    lim: 'NamedOp',\n    liminf: ['NamedOp', 'lim&thinsp;inf'],\n    limsup: ['NamedOp', 'lim&thinsp;sup'],\n    ln: 'NamedFn',\n    log: 'NamedFn',\n    max: 'NamedOp',\n    min: 'NamedOp',\n    Pr: 'NamedOp',\n    sec: 'NamedFn',\n    sin: 'NamedFn',\n    sinh: 'NamedFn',\n    sup: 'NamedOp',\n    tan: 'NamedFn',\n    tanh: 'NamedFn',\n    limits: ['Limits', 1],\n    nolimits: ['Limits', 0],\n    overline: ['UnderOver', '2015'],\n    underline: ['UnderOver', '2015'],\n    overbrace: ['UnderOver', '23DE', 1],\n    underbrace: ['UnderOver', '23DF', 1],\n    overparen: ['UnderOver', '23DC'],\n    underparen: ['UnderOver', '23DD'],\n    overrightarrow: ['UnderOver', '2192'],\n    underrightarrow: ['UnderOver', '2192'],\n    overleftarrow: ['UnderOver', '2190'],\n    underleftarrow: ['UnderOver', '2190'],\n    overleftrightarrow: ['UnderOver', '2194'],\n    underleftrightarrow: ['UnderOver', '2194'],\n    overset: 'Overset',\n    underset: 'Underset',\n    overunderset: 'Overunderset',\n    stackrel: ['Macro', '\\\\mathrel{\\\\mathop{#2}\\\\limits^{#1}}', 2],\n    stackbin: ['Macro', '\\\\mathbin{\\\\mathop{#2}\\\\limits^{#1}}', 2],\n    over: 'Over',\n    overwithdelims: 'Over',\n    atop: 'Over',\n    atopwithdelims: 'Over',\n    above: 'Over',\n    abovewithdelims: 'Over',\n    brace: ['Over', '{', '}'],\n    brack: ['Over', '[', ']'],\n    choose: ['Over', '(', ')'],\n    frac: 'Frac',\n    sqrt: 'Sqrt',\n    root: 'Root',\n    uproot: ['MoveRoot', 'upRoot'],\n    leftroot: ['MoveRoot', 'leftRoot'],\n    left: 'LeftRight',\n    right: 'LeftRight',\n    middle: 'LeftRight',\n    llap: 'Lap',\n    rlap: 'Lap',\n    raise: 'RaiseLower',\n    lower: 'RaiseLower',\n    moveleft: 'MoveLeftRight',\n    moveright: 'MoveLeftRight',\n    ',': ['Spacer', lengths_js_1.MATHSPACE.thinmathspace],\n    ':': ['Spacer', lengths_js_1.MATHSPACE.mediummathspace],\n    '>': ['Spacer', lengths_js_1.MATHSPACE.mediummathspace],\n    ';': ['Spacer', lengths_js_1.MATHSPACE.thickmathspace],\n    '!': ['Spacer', lengths_js_1.MATHSPACE.negativethinmathspace],\n    enspace: ['Spacer', .5],\n    quad: ['Spacer', 1],\n    qquad: ['Spacer', 2],\n    thinspace: ['Spacer', lengths_js_1.MATHSPACE.thinmathspace],\n    negthinspace: ['Spacer', lengths_js_1.MATHSPACE.negativethinmathspace],\n    hskip: 'Hskip',\n    hspace: 'Hskip',\n    kern: 'Hskip',\n    mskip: 'Hskip',\n    mspace: 'Hskip',\n    mkern: 'Hskip',\n    rule: 'rule',\n    Rule: ['Rule'],\n    Space: ['Rule', 'blank'],\n    nonscript: 'Nonscript',\n    big: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 0.85],\n    Big: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 1.15],\n    bigg: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 1.45],\n    Bigg: ['MakeBig', MmlNode_js_1.TEXCLASS.ORD, 1.75],\n    bigl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 0.85],\n    Bigl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 1.15],\n    biggl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 1.45],\n    Biggl: ['MakeBig', MmlNode_js_1.TEXCLASS.OPEN, 1.75],\n    bigr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 0.85],\n    Bigr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 1.15],\n    biggr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 1.45],\n    Biggr: ['MakeBig', MmlNode_js_1.TEXCLASS.CLOSE, 1.75],\n    bigm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 0.85],\n    Bigm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 1.15],\n    biggm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 1.45],\n    Biggm: ['MakeBig', MmlNode_js_1.TEXCLASS.REL, 1.75],\n    mathord: ['TeXAtom', MmlNode_js_1.TEXCLASS.ORD],\n    mathop: ['TeXAtom', MmlNode_js_1.TEXCLASS.OP],\n    mathopen: ['TeXAtom', MmlNode_js_1.TEXCLASS.OPEN],\n    mathclose: ['TeXAtom', MmlNode_js_1.TEXCLASS.CLOSE],\n    mathbin: ['TeXAtom', MmlNode_js_1.TEXCLASS.BIN],\n    mathrel: ['TeXAtom', MmlNode_js_1.TEXCLASS.REL],\n    mathpunct: ['TeXAtom', MmlNode_js_1.TEXCLASS.PUNCT],\n    mathinner: ['TeXAtom', MmlNode_js_1.TEXCLASS.INNER],\n    vcenter: ['TeXAtom', MmlNode_js_1.TEXCLASS.VCENTER],\n    buildrel: 'BuildRel',\n    hbox: ['HBox', 0],\n    text: 'HBox',\n    mbox: ['HBox', 0],\n    fbox: 'FBox',\n    boxed: ['Macro', '\\\\fbox{$\\\\displaystyle{#1}$}', 1],\n    framebox: 'FrameBox',\n    strut: 'Strut',\n    mathstrut: ['Macro', '\\\\vphantom{(}'],\n    phantom: 'Phantom',\n    vphantom: ['Phantom', 1, 0],\n    hphantom: ['Phantom', 0, 1],\n    smash: 'Smash',\n    acute: ['Accent', '00B4'],\n    grave: ['Accent', '0060'],\n    ddot: ['Accent', '00A8'],\n    tilde: ['Accent', '007E'],\n    bar: ['Accent', '00AF'],\n    breve: ['Accent', '02D8'],\n    check: ['Accent', '02C7'],\n    hat: ['Accent', '005E'],\n    vec: ['Accent', '2192'],\n    dot: ['Accent', '02D9'],\n    widetilde: ['Accent', '007E', 1],\n    widehat: ['Accent', '005E', 1],\n    matrix: 'Matrix',\n    array: 'Matrix',\n    pmatrix: ['Matrix', '(', ')'],\n    cases: ['Matrix', '{', '', 'left left', null, '.1em', null,\n        true],\n    eqalign: ['Matrix', null, null, 'right left',\n        (0, lengths_js_1.em)(lengths_js_1.MATHSPACE.thickmathspace), '.5em', 'D'],\n    displaylines: ['Matrix', null, null, 'center', null, '.5em', 'D'],\n    cr: 'Cr',\n    '\\\\': 'CrLaTeX',\n    newline: ['CrLaTeX', true],\n    hline: ['HLine', 'solid'],\n    hdashline: ['HLine', 'dashed'],\n    eqalignno: ['Matrix', null, null, 'right left',\n        (0, lengths_js_1.em)(lengths_js_1.MATHSPACE.thickmathspace), '.5em', 'D', null,\n        'right'],\n    leqalignno: ['Matrix', null, null, 'right left',\n        (0, lengths_js_1.em)(lengths_js_1.MATHSPACE.thickmathspace), '.5em', 'D', null,\n        'left'],\n    hfill: 'HFill',\n    hfil: 'HFill',\n    hfilll: 'HFill',\n    bmod: ['Macro', '\\\\mmlToken{mo}[lspace=\"thickmathspace\"' +\n            ' rspace=\"thickmathspace\"]{mod}'],\n    pmod: ['Macro', '\\\\pod{\\\\mmlToken{mi}{mod}\\\\kern 6mu #1}', 1],\n    mod: ['Macro', '\\\\mathchoice{\\\\kern18mu}{\\\\kern12mu}' +\n            '{\\\\kern12mu}{\\\\kern12mu}\\\\mmlToken{mi}{mod}\\\\,\\\\,#1',\n        1],\n    pod: ['Macro', '\\\\mathchoice{\\\\kern18mu}{\\\\kern8mu}' +\n            '{\\\\kern8mu}{\\\\kern8mu}(#1)', 1],\n    iff: ['Macro', '\\\\;\\\\Longleftrightarrow\\\\;'],\n    skew: ['Macro', '{{#2{#3\\\\mkern#1mu}\\\\mkern-#1mu}{}}', 3],\n    pmb: ['Macro', '\\\\rlap{#1}\\\\kern1px{#1}', 1],\n    TeX: ['Macro', 'T\\\\kern-.14em\\\\lower.5ex{E}\\\\kern-.115em X'],\n    LaTeX: ['Macro', 'L\\\\kern-.325em\\\\raise.21em' +\n            '{\\\\scriptstyle{A}}\\\\kern-.17em\\\\TeX'],\n    ' ': ['Macro', '\\\\text{ }'],\n    not: 'Not',\n    dots: 'Dots',\n    space: 'Tilde',\n    '\\u00A0': 'Tilde',\n    begin: 'BeginEnd',\n    end: 'BeginEnd',\n    label: 'HandleLabel',\n    ref: 'HandleRef',\n    nonumber: 'HandleNoTag',\n    mathchoice: 'MathChoice',\n    mmlToken: 'MmlToken'\n}, BaseMethods_js_1.default);\nnew sm.EnvironmentMap('environment', ParseMethods_js_1.default.environment, {\n    array: ['AlignedArray'],\n    equation: ['Equation', null, true],\n    eqnarray: ['EqnArray', null, true, true, 'rcl',\n        ParseUtil_js_1.default.cols(0, lengths_js_1.MATHSPACE.thickmathspace), '.5em']\n}, BaseMethods_js_1.default);\nnew sm.CharacterMap('not_remap', null, {\n    '\\u2190': '\\u219A',\n    '\\u2192': '\\u219B',\n    '\\u2194': '\\u21AE',\n    '\\u21D0': '\\u21CD',\n    '\\u21D2': '\\u21CF',\n    '\\u21D4': '\\u21CE',\n    '\\u2208': '\\u2209',\n    '\\u220B': '\\u220C',\n    '\\u2223': '\\u2224',\n    '\\u2225': '\\u2226',\n    '\\u223C': '\\u2241',\n    '\\u007E': '\\u2241',\n    '\\u2243': '\\u2244',\n    '\\u2245': '\\u2247',\n    '\\u2248': '\\u2249',\n    '\\u224D': '\\u226D',\n    '\\u003D': '\\u2260',\n    '\\u2261': '\\u2262',\n    '\\u003C': '\\u226E',\n    '\\u003E': '\\u226F',\n    '\\u2264': '\\u2270',\n    '\\u2265': '\\u2271',\n    '\\u2272': '\\u2274',\n    '\\u2273': '\\u2275',\n    '\\u2276': '\\u2278',\n    '\\u2277': '\\u2279',\n    '\\u227A': '\\u2280',\n    '\\u227B': '\\u2281',\n    '\\u2282': '\\u2284',\n    '\\u2283': '\\u2285',\n    '\\u2286': '\\u2288',\n    '\\u2287': '\\u2289',\n    '\\u22A2': '\\u22AC',\n    '\\u22A8': '\\u22AD',\n    '\\u22A9': '\\u22AE',\n    '\\u22AB': '\\u22AF',\n    '\\u227C': '\\u22E0',\n    '\\u227D': '\\u22E1',\n    '\\u2291': '\\u22E2',\n    '\\u2292': '\\u22E3',\n    '\\u22B2': '\\u22EA',\n    '\\u22B3': '\\u22EB',\n    '\\u22B4': '\\u22EC',\n    '\\u22B5': '\\u22ED',\n    '\\u2203': '\\u2204'\n});\n//# sourceMappingURL=BaseMappings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/base/BaseMappings.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/base/BaseMethods.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/base/BaseMethods.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar sitem = __importStar(__webpack_require__(/*! ./BaseItems.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseItems.js\"));\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar TexParser_js_1 = __importDefault(__webpack_require__(/*! ../TexParser.js */ \"./node_modules/mathjax-full/js/input/tex/TexParser.js\"));\nvar TexConstants_js_1 = __webpack_require__(/*! ../TexConstants.js */ \"./node_modules/mathjax-full/js/input/tex/TexConstants.js\");\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar MmlNode_js_1 = __webpack_require__(/*! ../../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar Tags_js_1 = __webpack_require__(/*! ../Tags.js */ \"./node_modules/mathjax-full/js/input/tex/Tags.js\");\nvar lengths_js_1 = __webpack_require__(/*! ../../../util/lengths.js */ \"./node_modules/mathjax-full/js/util/lengths.js\");\nvar Entities_js_1 = __webpack_require__(/*! ../../../util/Entities.js */ \"./node_modules/mathjax-full/js/util/Entities.js\");\nvar Options_js_1 = __webpack_require__(/*! ../../../util/Options.js */ \"./node_modules/mathjax-full/js/util/Options.js\");\nvar BaseMethods = {};\nvar P_HEIGHT = 1.2 / .85;\nvar MmlTokenAllow = {\n    fontfamily: 1, fontsize: 1, fontweight: 1, fontstyle: 1,\n    color: 1, background: 1,\n    id: 1, 'class': 1, href: 1, style: 1\n};\nBaseMethods.Open = function (parser, _c) {\n    parser.Push(parser.itemFactory.create('open'));\n};\nBaseMethods.Close = function (parser, _c) {\n    parser.Push(parser.itemFactory.create('close'));\n};\nBaseMethods.Tilde = function (parser, _c) {\n    parser.Push(parser.create('token', 'mtext', {}, Entities_js_1.entities.nbsp));\n};\nBaseMethods.Space = function (_parser, _c) { };\nBaseMethods.Superscript = function (parser, _c) {\n    var _a;\n    if (parser.GetNext().match(/\\d/)) {\n        parser.string = parser.string.substr(0, parser.i + 1) +\n            ' ' + parser.string.substr(parser.i + 1);\n    }\n    var primes;\n    var base;\n    var top = parser.stack.Top();\n    if (top.isKind('prime')) {\n        _a = __read(top.Peek(2), 2), base = _a[0], primes = _a[1];\n        parser.stack.Pop();\n    }\n    else {\n        base = parser.stack.Prev();\n        if (!base) {\n            base = parser.create('token', 'mi', {}, '');\n        }\n    }\n    var movesupsub = NodeUtil_js_1.default.getProperty(base, 'movesupsub');\n    var position = NodeUtil_js_1.default.isType(base, 'msubsup') ? base.sup :\n        base.over;\n    if ((NodeUtil_js_1.default.isType(base, 'msubsup') && !NodeUtil_js_1.default.isType(base, 'msup') &&\n        NodeUtil_js_1.default.getChildAt(base, base.sup)) ||\n        (NodeUtil_js_1.default.isType(base, 'munderover') && !NodeUtil_js_1.default.isType(base, 'mover') &&\n            NodeUtil_js_1.default.getChildAt(base, base.over) &&\n            !NodeUtil_js_1.default.getProperty(base, 'subsupOK'))) {\n        throw new TexError_js_1.default('DoubleExponent', 'Double exponent: use braces to clarify');\n    }\n    if (!NodeUtil_js_1.default.isType(base, 'msubsup') || NodeUtil_js_1.default.isType(base, 'msup')) {\n        if (movesupsub) {\n            if (!NodeUtil_js_1.default.isType(base, 'munderover') || NodeUtil_js_1.default.isType(base, 'mover') ||\n                NodeUtil_js_1.default.getChildAt(base, base.over)) {\n                base = parser.create('node', 'munderover', [base], { movesupsub: true });\n            }\n            position = base.over;\n        }\n        else {\n            base = parser.create('node', 'msubsup', [base]);\n            position = base.sup;\n        }\n    }\n    parser.Push(parser.itemFactory.create('subsup', base).setProperties({\n        position: position, primes: primes, movesupsub: movesupsub\n    }));\n};\nBaseMethods.Subscript = function (parser, _c) {\n    var _a;\n    if (parser.GetNext().match(/\\d/)) {\n        parser.string =\n            parser.string.substr(0, parser.i + 1) + ' ' +\n                parser.string.substr(parser.i + 1);\n    }\n    var primes, base;\n    var top = parser.stack.Top();\n    if (top.isKind('prime')) {\n        _a = __read(top.Peek(2), 2), base = _a[0], primes = _a[1];\n        parser.stack.Pop();\n    }\n    else {\n        base = parser.stack.Prev();\n        if (!base) {\n            base = parser.create('token', 'mi', {}, '');\n        }\n    }\n    var movesupsub = NodeUtil_js_1.default.getProperty(base, 'movesupsub');\n    var position = NodeUtil_js_1.default.isType(base, 'msubsup') ?\n        base.sub : base.under;\n    if ((NodeUtil_js_1.default.isType(base, 'msubsup') && !NodeUtil_js_1.default.isType(base, 'msup') &&\n        NodeUtil_js_1.default.getChildAt(base, base.sub)) ||\n        (NodeUtil_js_1.default.isType(base, 'munderover') && !NodeUtil_js_1.default.isType(base, 'mover') &&\n            NodeUtil_js_1.default.getChildAt(base, base.under) &&\n            !NodeUtil_js_1.default.getProperty(base, 'subsupOK'))) {\n        throw new TexError_js_1.default('DoubleSubscripts', 'Double subscripts: use braces to clarify');\n    }\n    if (!NodeUtil_js_1.default.isType(base, 'msubsup') || NodeUtil_js_1.default.isType(base, 'msup')) {\n        if (movesupsub) {\n            if (!NodeUtil_js_1.default.isType(base, 'munderover') || NodeUtil_js_1.default.isType(base, 'mover') ||\n                NodeUtil_js_1.default.getChildAt(base, base.under)) {\n                base = parser.create('node', 'munderover', [base], { movesupsub: true });\n            }\n            position = base.under;\n        }\n        else {\n            base = parser.create('node', 'msubsup', [base]);\n            position = base.sub;\n        }\n    }\n    parser.Push(parser.itemFactory.create('subsup', base).setProperties({\n        position: position, primes: primes, movesupsub: movesupsub\n    }));\n};\nBaseMethods.Prime = function (parser, c) {\n    var base = parser.stack.Prev();\n    if (!base) {\n        base = parser.create('node', 'mi');\n    }\n    if (NodeUtil_js_1.default.isType(base, 'msubsup') && !NodeUtil_js_1.default.isType(base, 'msup') &&\n        NodeUtil_js_1.default.getChildAt(base, base.sup)) {\n        throw new TexError_js_1.default('DoubleExponentPrime', 'Prime causes double exponent: use braces to clarify');\n    }\n    var sup = '';\n    parser.i--;\n    do {\n        sup += Entities_js_1.entities.prime;\n        parser.i++, c = parser.GetNext();\n    } while (c === '\\'' || c === Entities_js_1.entities.rsquo);\n    sup = ['', '\\u2032', '\\u2033', '\\u2034', '\\u2057'][sup.length] || sup;\n    var node = parser.create('token', 'mo', { variantForm: true }, sup);\n    parser.Push(parser.itemFactory.create('prime', base, node));\n};\nBaseMethods.Comment = function (parser, _c) {\n    while (parser.i < parser.string.length && parser.string.charAt(parser.i) !== '\\n') {\n        parser.i++;\n    }\n};\nBaseMethods.Hash = function (_parser, _c) {\n    throw new TexError_js_1.default('CantUseHash1', 'You can\\'t use \\'macro parameter character #\\' in math mode');\n};\nBaseMethods.MathFont = function (parser, name, variant) {\n    var text = parser.GetArgument(name);\n    var mml = new TexParser_js_1.default(text, __assign(__assign({}, parser.stack.env), { font: variant, multiLetterIdentifiers: /^[a-zA-Z]+/, noAutoOP: true }), parser.configuration).mml();\n    parser.Push(parser.create('node', 'TeXAtom', [mml]));\n};\nBaseMethods.SetFont = function (parser, _name, font) {\n    parser.stack.env['font'] = font;\n};\nBaseMethods.SetStyle = function (parser, _name, texStyle, style, level) {\n    parser.stack.env['style'] = texStyle;\n    parser.stack.env['level'] = level;\n    parser.Push(parser.itemFactory.create('style').setProperty('styles', { displaystyle: style, scriptlevel: level }));\n};\nBaseMethods.SetSize = function (parser, _name, size) {\n    parser.stack.env['size'] = size;\n    parser.Push(parser.itemFactory.create('style').setProperty('styles', { mathsize: (0, lengths_js_1.em)(size) }));\n};\nBaseMethods.Spacer = function (parser, _name, space) {\n    var node = parser.create('node', 'mspace', [], { width: (0, lengths_js_1.em)(space) });\n    var style = parser.create('node', 'mstyle', [node], { scriptlevel: 0 });\n    parser.Push(style);\n};\nBaseMethods.LeftRight = function (parser, name) {\n    var first = name.substr(1);\n    parser.Push(parser.itemFactory.create(first, parser.GetDelimiter(name), parser.stack.env.color));\n};\nBaseMethods.NamedFn = function (parser, name, id) {\n    if (!id) {\n        id = name.substr(1);\n    }\n    var mml = parser.create('token', 'mi', { texClass: MmlNode_js_1.TEXCLASS.OP }, id);\n    parser.Push(parser.itemFactory.create('fn', mml));\n};\nBaseMethods.NamedOp = function (parser, name, id) {\n    if (!id) {\n        id = name.substr(1);\n    }\n    id = id.replace(/&thinsp;/, '\\u2006');\n    var mml = parser.create('token', 'mo', {\n        movablelimits: true,\n        movesupsub: true,\n        form: TexConstants_js_1.TexConstant.Form.PREFIX,\n        texClass: MmlNode_js_1.TEXCLASS.OP\n    }, id);\n    parser.Push(mml);\n};\nBaseMethods.Limits = function (parser, _name, limits) {\n    var op = parser.stack.Prev(true);\n    if (!op || (NodeUtil_js_1.default.getTexClass(NodeUtil_js_1.default.getCoreMO(op)) !== MmlNode_js_1.TEXCLASS.OP &&\n        NodeUtil_js_1.default.getProperty(op, 'movesupsub') == null)) {\n        throw new TexError_js_1.default('MisplacedLimits', '%1 is allowed only on operators', parser.currentCS);\n    }\n    var top = parser.stack.Top();\n    var node;\n    if (NodeUtil_js_1.default.isType(op, 'munderover') && !limits) {\n        node = parser.create('node', 'msubsup');\n        NodeUtil_js_1.default.copyChildren(op, node);\n        op = top.Last = node;\n    }\n    else if (NodeUtil_js_1.default.isType(op, 'msubsup') && limits) {\n        node = parser.create('node', 'munderover');\n        NodeUtil_js_1.default.copyChildren(op, node);\n        op = top.Last = node;\n    }\n    NodeUtil_js_1.default.setProperty(op, 'movesupsub', limits ? true : false);\n    NodeUtil_js_1.default.setProperties(NodeUtil_js_1.default.getCoreMO(op), { 'movablelimits': false });\n    if (NodeUtil_js_1.default.getAttribute(op, 'movablelimits') ||\n        NodeUtil_js_1.default.getProperty(op, 'movablelimits')) {\n        NodeUtil_js_1.default.setProperties(op, { 'movablelimits': false });\n    }\n};\nBaseMethods.Over = function (parser, name, open, close) {\n    var mml = parser.itemFactory.create('over').setProperty('name', parser.currentCS);\n    if (open || close) {\n        mml.setProperty('open', open);\n        mml.setProperty('close', close);\n    }\n    else if (name.match(/withdelims$/)) {\n        mml.setProperty('open', parser.GetDelimiter(name));\n        mml.setProperty('close', parser.GetDelimiter(name));\n    }\n    if (name.match(/^\\\\above/)) {\n        mml.setProperty('thickness', parser.GetDimen(name));\n    }\n    else if (name.match(/^\\\\atop/) || open || close) {\n        mml.setProperty('thickness', 0);\n    }\n    parser.Push(mml);\n};\nBaseMethods.Frac = function (parser, name) {\n    var num = parser.ParseArg(name);\n    var den = parser.ParseArg(name);\n    var node = parser.create('node', 'mfrac', [num, den]);\n    parser.Push(node);\n};\nBaseMethods.Sqrt = function (parser, name) {\n    var n = parser.GetBrackets(name);\n    var arg = parser.GetArgument(name);\n    if (arg === '\\\\frac') {\n        arg += '{' + parser.GetArgument(arg) + '}{' + parser.GetArgument(arg) + '}';\n    }\n    var mml = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();\n    if (!n) {\n        mml = parser.create('node', 'msqrt', [mml]);\n    }\n    else {\n        mml = parser.create('node', 'mroot', [mml, parseRoot(parser, n)]);\n    }\n    parser.Push(mml);\n};\nfunction parseRoot(parser, n) {\n    var env = parser.stack.env;\n    var inRoot = env['inRoot'];\n    env['inRoot'] = true;\n    var newParser = new TexParser_js_1.default(n, env, parser.configuration);\n    var node = newParser.mml();\n    var global = newParser.stack.global;\n    if (global['leftRoot'] || global['upRoot']) {\n        var def = {};\n        if (global['leftRoot']) {\n            def['width'] = global['leftRoot'];\n        }\n        if (global['upRoot']) {\n            def['voffset'] = global['upRoot'];\n            def['height'] = global['upRoot'];\n        }\n        node = parser.create('node', 'mpadded', [node], def);\n    }\n    env['inRoot'] = inRoot;\n    return node;\n}\nBaseMethods.Root = function (parser, name) {\n    var n = parser.GetUpTo(name, '\\\\of');\n    var arg = parser.ParseArg(name);\n    var node = parser.create('node', 'mroot', [arg, parseRoot(parser, n)]);\n    parser.Push(node);\n};\nBaseMethods.MoveRoot = function (parser, name, id) {\n    if (!parser.stack.env['inRoot']) {\n        throw new TexError_js_1.default('MisplacedMoveRoot', '%1 can appear only within a root', parser.currentCS);\n    }\n    if (parser.stack.global[id]) {\n        throw new TexError_js_1.default('MultipleMoveRoot', 'Multiple use of %1', parser.currentCS);\n    }\n    var n = parser.GetArgument(name);\n    if (!n.match(/-?[0-9]+/)) {\n        throw new TexError_js_1.default('IntegerArg', 'The argument to %1 must be an integer', parser.currentCS);\n    }\n    n = (parseInt(n, 10) / 15) + 'em';\n    if (n.substr(0, 1) !== '-') {\n        n = '+' + n;\n    }\n    parser.stack.global[id] = n;\n};\nBaseMethods.Accent = function (parser, name, accent, stretchy) {\n    var c = parser.ParseArg(name);\n    var def = __assign(__assign({}, ParseUtil_js_1.default.getFontDef(parser)), { accent: true, mathaccent: true });\n    var entity = NodeUtil_js_1.default.createEntity(accent);\n    var moNode = parser.create('token', 'mo', def, entity);\n    var mml = moNode;\n    NodeUtil_js_1.default.setAttribute(mml, 'stretchy', stretchy ? true : false);\n    var mo = (NodeUtil_js_1.default.isEmbellished(c) ? NodeUtil_js_1.default.getCoreMO(c) : c);\n    if (NodeUtil_js_1.default.isType(mo, 'mo') || NodeUtil_js_1.default.getProperty(mo, 'movablelimits')) {\n        NodeUtil_js_1.default.setProperties(mo, { 'movablelimits': false });\n    }\n    var muoNode = parser.create('node', 'munderover');\n    NodeUtil_js_1.default.setChild(muoNode, 0, c);\n    NodeUtil_js_1.default.setChild(muoNode, 1, null);\n    NodeUtil_js_1.default.setChild(muoNode, 2, mml);\n    var texAtom = parser.create('node', 'TeXAtom', [muoNode]);\n    parser.Push(texAtom);\n};\nBaseMethods.UnderOver = function (parser, name, c, stack) {\n    var entity = NodeUtil_js_1.default.createEntity(c);\n    var mo = parser.create('token', 'mo', { stretchy: true, accent: true }, entity);\n    var pos = (name.charAt(1) === 'o' ? 'over' : 'under');\n    var base = parser.ParseArg(name);\n    parser.Push(ParseUtil_js_1.default.underOver(parser, base, mo, pos, stack));\n};\nBaseMethods.Overset = function (parser, name) {\n    var top = parser.ParseArg(name);\n    var base = parser.ParseArg(name);\n    ParseUtil_js_1.default.checkMovableLimits(base);\n    if (top.isKind('mo')) {\n        NodeUtil_js_1.default.setAttribute(top, 'accent', false);\n    }\n    var node = parser.create('node', 'mover', [base, top]);\n    parser.Push(node);\n};\nBaseMethods.Underset = function (parser, name) {\n    var bot = parser.ParseArg(name);\n    var base = parser.ParseArg(name);\n    ParseUtil_js_1.default.checkMovableLimits(base);\n    if (bot.isKind('mo')) {\n        NodeUtil_js_1.default.setAttribute(bot, 'accent', false);\n    }\n    var node = parser.create('node', 'munder', [base, bot], { accentunder: false });\n    parser.Push(node);\n};\nBaseMethods.Overunderset = function (parser, name) {\n    var top = parser.ParseArg(name);\n    var bot = parser.ParseArg(name);\n    var base = parser.ParseArg(name);\n    ParseUtil_js_1.default.checkMovableLimits(base);\n    if (top.isKind('mo')) {\n        NodeUtil_js_1.default.setAttribute(top, 'accent', false);\n    }\n    if (bot.isKind('mo')) {\n        NodeUtil_js_1.default.setAttribute(bot, 'accent', false);\n    }\n    var node = parser.create('node', 'munderover', [base, bot, top], { accent: false, accentunder: false });\n    parser.Push(node);\n};\nBaseMethods.TeXAtom = function (parser, name, mclass) {\n    var def = { texClass: mclass };\n    var mml;\n    var node;\n    var parsed;\n    if (mclass === MmlNode_js_1.TEXCLASS.OP) {\n        def['movesupsub'] = def['movablelimits'] = true;\n        var arg = parser.GetArgument(name);\n        var match = arg.match(/^\\s*\\\\rm\\s+([a-zA-Z0-9 ]+)$/);\n        if (match) {\n            def['mathvariant'] = TexConstants_js_1.TexConstant.Variant.NORMAL;\n            node = parser.create('token', 'mi', def, match[1]);\n        }\n        else {\n            parsed = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();\n            node = parser.create('node', 'TeXAtom', [parsed], def);\n        }\n        mml = parser.itemFactory.create('fn', node);\n    }\n    else {\n        parsed = parser.ParseArg(name);\n        mml = parser.create('node', 'TeXAtom', [parsed], def);\n    }\n    parser.Push(mml);\n};\nBaseMethods.MmlToken = function (parser, name) {\n    var kind = parser.GetArgument(name);\n    var attr = parser.GetBrackets(name, '').replace(/^\\s+/, '');\n    var text = parser.GetArgument(name);\n    var def = {};\n    var keep = [];\n    var node;\n    try {\n        node = parser.create('node', kind);\n    }\n    catch (e) {\n        node = null;\n    }\n    if (!node || !node.isToken) {\n        throw new TexError_js_1.default('NotMathMLToken', '%1 is not a token element', kind);\n    }\n    while (attr !== '') {\n        var match = attr.match(/^([a-z]+)\\s*=\\s*('[^']*'|\"[^\"]*\"|[^ ,]*)\\s*,?\\s*/i);\n        if (!match) {\n            throw new TexError_js_1.default('InvalidMathMLAttr', 'Invalid MathML attribute: %1', attr);\n        }\n        if (!node.attributes.hasDefault(match[1]) && !MmlTokenAllow[match[1]]) {\n            throw new TexError_js_1.default('UnknownAttrForElement', '%1 is not a recognized attribute for %2', match[1], kind);\n        }\n        var value = ParseUtil_js_1.default.MmlFilterAttribute(parser, match[1], match[2].replace(/^(['\"])(.*)\\1$/, '$2'));\n        if (value) {\n            if (value.toLowerCase() === 'true') {\n                value = true;\n            }\n            else if (value.toLowerCase() === 'false') {\n                value = false;\n            }\n            def[match[1]] = value;\n            keep.push(match[1]);\n        }\n        attr = attr.substr(match[0].length);\n    }\n    if (keep.length) {\n        def['mjx-keep-attrs'] = keep.join(' ');\n    }\n    var textNode = parser.create('text', text);\n    node.appendChild(textNode);\n    NodeUtil_js_1.default.setProperties(node, def);\n    parser.Push(node);\n};\nBaseMethods.Strut = function (parser, _name) {\n    var row = parser.create('node', 'mrow');\n    var padded = parser.create('node', 'mpadded', [row], { height: '8.6pt', depth: '3pt', width: 0 });\n    parser.Push(padded);\n};\nBaseMethods.Phantom = function (parser, name, v, h) {\n    var box = parser.create('node', 'mphantom', [parser.ParseArg(name)]);\n    if (v || h) {\n        box = parser.create('node', 'mpadded', [box]);\n        if (h) {\n            NodeUtil_js_1.default.setAttribute(box, 'height', 0);\n            NodeUtil_js_1.default.setAttribute(box, 'depth', 0);\n        }\n        if (v) {\n            NodeUtil_js_1.default.setAttribute(box, 'width', 0);\n        }\n    }\n    var atom = parser.create('node', 'TeXAtom', [box]);\n    parser.Push(atom);\n};\nBaseMethods.Smash = function (parser, name) {\n    var bt = ParseUtil_js_1.default.trimSpaces(parser.GetBrackets(name, ''));\n    var smash = parser.create('node', 'mpadded', [parser.ParseArg(name)]);\n    switch (bt) {\n        case 'b':\n            NodeUtil_js_1.default.setAttribute(smash, 'depth', 0);\n            break;\n        case 't':\n            NodeUtil_js_1.default.setAttribute(smash, 'height', 0);\n            break;\n        default:\n            NodeUtil_js_1.default.setAttribute(smash, 'height', 0);\n            NodeUtil_js_1.default.setAttribute(smash, 'depth', 0);\n    }\n    var atom = parser.create('node', 'TeXAtom', [smash]);\n    parser.Push(atom);\n};\nBaseMethods.Lap = function (parser, name) {\n    var mml = parser.create('node', 'mpadded', [parser.ParseArg(name)], { width: 0 });\n    if (name === '\\\\llap') {\n        NodeUtil_js_1.default.setAttribute(mml, 'lspace', '-1width');\n    }\n    var atom = parser.create('node', 'TeXAtom', [mml]);\n    parser.Push(atom);\n};\nBaseMethods.RaiseLower = function (parser, name) {\n    var h = parser.GetDimen(name);\n    var item = parser.itemFactory.create('position').setProperties({ name: parser.currentCS, move: 'vertical' });\n    if (h.charAt(0) === '-') {\n        h = h.slice(1);\n        name = name.substr(1) === 'raise' ? '\\\\lower' : '\\\\raise';\n    }\n    if (name === '\\\\lower') {\n        item.setProperty('dh', '-' + h);\n        item.setProperty('dd', '+' + h);\n    }\n    else {\n        item.setProperty('dh', '+' + h);\n        item.setProperty('dd', '-' + h);\n    }\n    parser.Push(item);\n};\nBaseMethods.MoveLeftRight = function (parser, name) {\n    var h = parser.GetDimen(name);\n    var nh = (h.charAt(0) === '-' ? h.slice(1) : '-' + h);\n    if (name === '\\\\moveleft') {\n        var tmp = h;\n        h = nh;\n        nh = tmp;\n    }\n    parser.Push(parser.itemFactory.create('position').setProperties({\n        name: parser.currentCS, move: 'horizontal',\n        left: parser.create('node', 'mspace', [], { width: h }),\n        right: parser.create('node', 'mspace', [], { width: nh })\n    }));\n};\nBaseMethods.Hskip = function (parser, name) {\n    var node = parser.create('node', 'mspace', [], { width: parser.GetDimen(name) });\n    parser.Push(node);\n};\nBaseMethods.Nonscript = function (parser, _name) {\n    parser.Push(parser.itemFactory.create('nonscript'));\n};\nBaseMethods.Rule = function (parser, name, style) {\n    var w = parser.GetDimen(name), h = parser.GetDimen(name), d = parser.GetDimen(name);\n    var def = { width: w, height: h, depth: d };\n    if (style !== 'blank') {\n        def['mathbackground'] = (parser.stack.env['color'] || 'black');\n    }\n    var node = parser.create('node', 'mspace', [], def);\n    parser.Push(node);\n};\nBaseMethods.rule = function (parser, name) {\n    var v = parser.GetBrackets(name), w = parser.GetDimen(name), h = parser.GetDimen(name);\n    var mml = parser.create('node', 'mspace', [], {\n        width: w, height: h,\n        mathbackground: (parser.stack.env['color'] || 'black')\n    });\n    if (v) {\n        mml = parser.create('node', 'mpadded', [mml], { voffset: v });\n        if (v.match(/^\\-/)) {\n            NodeUtil_js_1.default.setAttribute(mml, 'height', v);\n            NodeUtil_js_1.default.setAttribute(mml, 'depth', '+' + v.substr(1));\n        }\n        else {\n            NodeUtil_js_1.default.setAttribute(mml, 'height', '+' + v);\n        }\n    }\n    parser.Push(mml);\n};\nBaseMethods.MakeBig = function (parser, name, mclass, size) {\n    size *= P_HEIGHT;\n    var sizeStr = String(size).replace(/(\\.\\d\\d\\d).+/, '$1') + 'em';\n    var delim = parser.GetDelimiter(name, true);\n    var mo = parser.create('token', 'mo', {\n        minsize: sizeStr, maxsize: sizeStr,\n        fence: true, stretchy: true, symmetric: true\n    }, delim);\n    var node = parser.create('node', 'TeXAtom', [mo], { texClass: mclass });\n    parser.Push(node);\n};\nBaseMethods.BuildRel = function (parser, name) {\n    var top = parser.ParseUpTo(name, '\\\\over');\n    var bot = parser.ParseArg(name);\n    var node = parser.create('node', 'munderover');\n    NodeUtil_js_1.default.setChild(node, 0, bot);\n    NodeUtil_js_1.default.setChild(node, 1, null);\n    NodeUtil_js_1.default.setChild(node, 2, top);\n    var atom = parser.create('node', 'TeXAtom', [node], { texClass: MmlNode_js_1.TEXCLASS.REL });\n    parser.Push(atom);\n};\nBaseMethods.HBox = function (parser, name, style, font) {\n    parser.PushAll(ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name), style, font));\n};\nBaseMethods.FBox = function (parser, name) {\n    var internal = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name));\n    var node = parser.create('node', 'menclose', internal, { notation: 'box' });\n    parser.Push(node);\n};\nBaseMethods.FrameBox = function (parser, name) {\n    var width = parser.GetBrackets(name);\n    var pos = parser.GetBrackets(name) || 'c';\n    var mml = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name));\n    if (width) {\n        mml = [parser.create('node', 'mpadded', mml, {\n                width: width,\n                'data-align': (0, Options_js_1.lookup)(pos, { l: 'left', r: 'right' }, 'center')\n            })];\n    }\n    var node = parser.create('node', 'TeXAtom', [parser.create('node', 'menclose', mml, { notation: 'box' })], { texClass: MmlNode_js_1.TEXCLASS.ORD });\n    parser.Push(node);\n};\nBaseMethods.Not = function (parser, _name) {\n    parser.Push(parser.itemFactory.create('not'));\n};\nBaseMethods.Dots = function (parser, _name) {\n    var ldotsEntity = NodeUtil_js_1.default.createEntity('2026');\n    var cdotsEntity = NodeUtil_js_1.default.createEntity('22EF');\n    var ldots = parser.create('token', 'mo', { stretchy: false }, ldotsEntity);\n    var cdots = parser.create('token', 'mo', { stretchy: false }, cdotsEntity);\n    parser.Push(parser.itemFactory.create('dots').setProperties({\n        ldots: ldots,\n        cdots: cdots\n    }));\n};\nBaseMethods.Matrix = function (parser, _name, open, close, align, spacing, vspacing, style, cases, numbered) {\n    var c = parser.GetNext();\n    if (c === '') {\n        throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);\n    }\n    if (c === '{') {\n        parser.i++;\n    }\n    else {\n        parser.string = c + '}' + parser.string.slice(parser.i + 1);\n        parser.i = 0;\n    }\n    var array = parser.itemFactory.create('array').setProperty('requireClose', true);\n    array.arraydef = {\n        rowspacing: (vspacing || '4pt'),\n        columnspacing: (spacing || '1em')\n    };\n    if (cases) {\n        array.setProperty('isCases', true);\n    }\n    if (numbered) {\n        array.setProperty('isNumbered', true);\n        array.arraydef.side = numbered;\n    }\n    if (open || close) {\n        array.setProperty('open', open);\n        array.setProperty('close', close);\n    }\n    if (style === 'D') {\n        array.arraydef.displaystyle = true;\n    }\n    if (align != null) {\n        array.arraydef.columnalign = align;\n    }\n    parser.Push(array);\n};\nBaseMethods.Entry = function (parser, name) {\n    parser.Push(parser.itemFactory.create('cell').setProperties({ isEntry: true, name: name }));\n    var top = parser.stack.Top();\n    var env = top.getProperty('casesEnv');\n    var cases = top.getProperty('isCases');\n    if (!cases && !env)\n        return;\n    var str = parser.string;\n    var braces = 0, close = -1, i = parser.i, m = str.length;\n    var end = (env ? new RegExp(\"^\\\\\\\\end\\\\s*\\\\{\".concat(env.replace(/\\*/, '\\\\*'), \"\\\\}\")) : null);\n    while (i < m) {\n        var c = str.charAt(i);\n        if (c === '{') {\n            braces++;\n            i++;\n        }\n        else if (c === '}') {\n            if (braces === 0) {\n                m = 0;\n            }\n            else {\n                braces--;\n                if (braces === 0 && close < 0) {\n                    close = i - parser.i;\n                }\n                i++;\n            }\n        }\n        else if (c === '&' && braces === 0) {\n            throw new TexError_js_1.default('ExtraAlignTab', 'Extra alignment tab in \\\\cases text');\n        }\n        else if (c === '\\\\') {\n            var rest = str.substr(i);\n            if (rest.match(/^((\\\\cr)[^a-zA-Z]|\\\\\\\\)/) || (end && rest.match(end))) {\n                m = 0;\n            }\n            else {\n                i += 2;\n            }\n        }\n        else {\n            i++;\n        }\n    }\n    var text = str.substr(parser.i, i - parser.i);\n    if (!text.match(/^\\s*\\\\text[^a-zA-Z]/) || close !== text.replace(/\\s+$/, '').length - 1) {\n        var internal = ParseUtil_js_1.default.internalMath(parser, ParseUtil_js_1.default.trimSpaces(text), 0);\n        parser.PushAll(internal);\n        parser.i = i;\n    }\n};\nBaseMethods.Cr = function (parser, name) {\n    parser.Push(parser.itemFactory.create('cell').setProperties({ isCR: true, name: name }));\n};\nBaseMethods.CrLaTeX = function (parser, name, nobrackets) {\n    if (nobrackets === void 0) { nobrackets = false; }\n    var n;\n    if (!nobrackets) {\n        if (parser.string.charAt(parser.i) === '*') {\n            parser.i++;\n        }\n        if (parser.string.charAt(parser.i) === '[') {\n            var dim = parser.GetBrackets(name, '');\n            var _a = __read(ParseUtil_js_1.default.matchDimen(dim), 2), value = _a[0], unit = _a[1];\n            if (dim && !value) {\n                throw new TexError_js_1.default('BracketMustBeDimension', 'Bracket argument to %1 must be a dimension', parser.currentCS);\n            }\n            n = value + unit;\n        }\n    }\n    parser.Push(parser.itemFactory.create('cell').setProperties({ isCR: true, name: name, linebreak: true }));\n    var top = parser.stack.Top();\n    var node;\n    if (top instanceof sitem.ArrayItem) {\n        if (n) {\n            top.addRowSpacing(n);\n        }\n    }\n    else {\n        if (n) {\n            node = parser.create('node', 'mspace', [], { depth: n });\n            parser.Push(node);\n        }\n        node = parser.create('node', 'mspace', [], { linebreak: TexConstants_js_1.TexConstant.LineBreak.NEWLINE });\n        parser.Push(node);\n    }\n};\nBaseMethods.HLine = function (parser, _name, style) {\n    if (style == null) {\n        style = 'solid';\n    }\n    var top = parser.stack.Top();\n    if (!(top instanceof sitem.ArrayItem) || top.Size()) {\n        throw new TexError_js_1.default('Misplaced', 'Misplaced %1', parser.currentCS);\n    }\n    if (!top.table.length) {\n        top.frame.push('top');\n    }\n    else {\n        var lines = (top.arraydef['rowlines'] ? top.arraydef['rowlines'].split(/ /) : []);\n        while (lines.length < top.table.length) {\n            lines.push('none');\n        }\n        lines[top.table.length - 1] = style;\n        top.arraydef['rowlines'] = lines.join(' ');\n    }\n};\nBaseMethods.HFill = function (parser, _name) {\n    var top = parser.stack.Top();\n    if (top instanceof sitem.ArrayItem) {\n        top.hfill.push(top.Size());\n    }\n    else {\n        throw new TexError_js_1.default('UnsupportedHFill', 'Unsupported use of %1', parser.currentCS);\n    }\n};\nBaseMethods.BeginEnd = function (parser, name) {\n    var env = parser.GetArgument(name);\n    if (env.match(/\\\\/i)) {\n        throw new TexError_js_1.default('InvalidEnv', 'Invalid environment name \\'%1\\'', env);\n    }\n    var macro = parser.configuration.handlers.get('environment').lookup(env);\n    if (macro && name === '\\\\end') {\n        if (!macro.args[0]) {\n            var mml = parser.itemFactory.create('end').setProperty('name', env);\n            parser.Push(mml);\n            return;\n        }\n        parser.stack.env['closing'] = env;\n    }\n    ParseUtil_js_1.default.checkMaxMacros(parser, false);\n    parser.parse('environment', [parser, env]);\n};\nBaseMethods.Array = function (parser, begin, open, close, align, spacing, vspacing, style, raggedHeight) {\n    if (!align) {\n        align = parser.GetArgument('\\\\begin{' + begin.getName() + '}');\n    }\n    var lines = ('c' + align).replace(/[^clr|:]/g, '').replace(/[^|:]([|:])+/g, '$1');\n    align = align.replace(/[^clr]/g, '').split('').join(' ');\n    align = align.replace(/l/g, 'left').replace(/r/g, 'right').replace(/c/g, 'center');\n    var array = parser.itemFactory.create('array');\n    array.arraydef = {\n        columnalign: align,\n        columnspacing: (spacing || '1em'),\n        rowspacing: (vspacing || '4pt')\n    };\n    if (lines.match(/[|:]/)) {\n        if (lines.charAt(0).match(/[|:]/)) {\n            array.frame.push('left');\n            array.dashed = lines.charAt(0) === ':';\n        }\n        if (lines.charAt(lines.length - 1).match(/[|:]/)) {\n            array.frame.push('right');\n        }\n        lines = lines.substr(1, lines.length - 2);\n        array.arraydef.columnlines =\n            lines.split('').join(' ').replace(/[^|: ]/g, 'none').replace(/\\|/g, 'solid').replace(/:/g, 'dashed');\n    }\n    if (open) {\n        array.setProperty('open', parser.convertDelimiter(open));\n    }\n    if (close) {\n        array.setProperty('close', parser.convertDelimiter(close));\n    }\n    if ((style || '').charAt(1) === '\\'') {\n        array.arraydef['data-cramped'] = true;\n        style = style.charAt(0);\n    }\n    if (style === 'D') {\n        array.arraydef['displaystyle'] = true;\n    }\n    else if (style) {\n        array.arraydef['displaystyle'] = false;\n    }\n    if (style === 'S') {\n        array.arraydef['scriptlevel'] = 1;\n    }\n    if (raggedHeight) {\n        array.arraydef['useHeight'] = false;\n    }\n    parser.Push(begin);\n    return array;\n};\nBaseMethods.AlignedArray = function (parser, begin) {\n    var align = parser.GetBrackets('\\\\begin{' + begin.getName() + '}');\n    var item = BaseMethods.Array(parser, begin);\n    return ParseUtil_js_1.default.setArrayAlign(item, align);\n};\nBaseMethods.Equation = function (parser, begin, numbered) {\n    parser.Push(begin);\n    ParseUtil_js_1.default.checkEqnEnv(parser);\n    return parser.itemFactory.create('equation', numbered).\n        setProperty('name', begin.getName());\n};\nBaseMethods.EqnArray = function (parser, begin, numbered, taggable, align, spacing) {\n    parser.Push(begin);\n    if (taggable) {\n        ParseUtil_js_1.default.checkEqnEnv(parser);\n    }\n    align = align.replace(/[^clr]/g, '').split('').join(' ');\n    align = align.replace(/l/g, 'left').replace(/r/g, 'right').replace(/c/g, 'center');\n    var newItem = parser.itemFactory.create('eqnarray', begin.getName(), numbered, taggable, parser.stack.global);\n    newItem.arraydef = {\n        displaystyle: true,\n        columnalign: align,\n        columnspacing: (spacing || '1em'),\n        rowspacing: '3pt',\n        side: parser.options['tagSide'],\n        minlabelspacing: parser.options['tagIndent']\n    };\n    return newItem;\n};\nBaseMethods.HandleNoTag = function (parser, _name) {\n    parser.tags.notag();\n};\nBaseMethods.HandleLabel = function (parser, name) {\n    var label = parser.GetArgument(name);\n    if (label === '') {\n        return;\n    }\n    if (!parser.tags.refUpdate) {\n        if (parser.tags.label) {\n            throw new TexError_js_1.default('MultipleCommand', 'Multiple %1', parser.currentCS);\n        }\n        parser.tags.label = label;\n        if ((parser.tags.allLabels[label] || parser.tags.labels[label]) && !parser.options['ignoreDuplicateLabels']) {\n            throw new TexError_js_1.default('MultipleLabel', 'Label \\'%1\\' multiply defined', label);\n        }\n        parser.tags.labels[label] = new Tags_js_1.Label();\n    }\n};\nBaseMethods.HandleRef = function (parser, name, eqref) {\n    var label = parser.GetArgument(name);\n    var ref = parser.tags.allLabels[label] || parser.tags.labels[label];\n    if (!ref) {\n        if (!parser.tags.refUpdate) {\n            parser.tags.redo = true;\n        }\n        ref = new Tags_js_1.Label();\n    }\n    var tag = ref.tag;\n    if (eqref) {\n        tag = parser.tags.formatTag(tag);\n    }\n    var node = parser.create('node', 'mrow', ParseUtil_js_1.default.internalMath(parser, tag), {\n        href: parser.tags.formatUrl(ref.id, parser.options.baseURL), 'class': 'MathJax_ref'\n    });\n    parser.Push(node);\n};\nBaseMethods.Macro = function (parser, name, macro, argcount, def) {\n    if (argcount) {\n        var args = [];\n        if (def != null) {\n            var optional = parser.GetBrackets(name);\n            args.push(optional == null ? def : optional);\n        }\n        for (var i = args.length; i < argcount; i++) {\n            args.push(parser.GetArgument(name));\n        }\n        macro = ParseUtil_js_1.default.substituteArgs(parser, args, macro);\n    }\n    parser.string = ParseUtil_js_1.default.addArgs(parser, macro, parser.string.slice(parser.i));\n    parser.i = 0;\n    ParseUtil_js_1.default.checkMaxMacros(parser);\n};\nBaseMethods.MathChoice = function (parser, name) {\n    var D = parser.ParseArg(name);\n    var T = parser.ParseArg(name);\n    var S = parser.ParseArg(name);\n    var SS = parser.ParseArg(name);\n    parser.Push(parser.create('node', 'MathChoice', [D, T, S, SS]));\n};\nexports[\"default\"] = BaseMethods;\n//# sourceMappingURL=BaseMethods.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/base/BaseMethods.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/bbox/BboxConfiguration.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/bbox/BboxConfiguration.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BboxConfiguration = exports.BboxMethods = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nexports.BboxMethods = {};\nexports.BboxMethods.BBox = function (parser, name) {\n    var bbox = parser.GetBrackets(name, '');\n    var math = parser.ParseArg(name);\n    var parts = bbox.split(/,/);\n    var def, background, style;\n    for (var i = 0, m = parts.length; i < m; i++) {\n        var part = parts[i].trim();\n        var match = part.match(/^(\\.\\d+|\\d+(\\.\\d*)?)(pt|em|ex|mu|px|in|cm|mm)$/);\n        if (match) {\n            if (def) {\n                throw new TexError_js_1.default('MultipleBBoxProperty', '%1 specified twice in %2', 'Padding', name);\n            }\n            var pad = BBoxPadding(match[1] + match[3]);\n            if (pad) {\n                def = {\n                    height: '+' + pad,\n                    depth: '+' + pad,\n                    lspace: pad,\n                    width: '+' + (2 * parseInt(match[1], 10)) + match[3]\n                };\n            }\n        }\n        else if (part.match(/^([a-z0-9]+|\\#[0-9a-f]{6}|\\#[0-9a-f]{3})$/i)) {\n            if (background) {\n                throw new TexError_js_1.default('MultipleBBoxProperty', '%1 specified twice in %2', 'Background', name);\n            }\n            background = part;\n        }\n        else if (part.match(/^[-a-z]+:/i)) {\n            if (style) {\n                throw new TexError_js_1.default('MultipleBBoxProperty', '%1 specified twice in %2', 'Style', name);\n            }\n            style = BBoxStyle(part);\n        }\n        else if (part !== '') {\n            throw new TexError_js_1.default('InvalidBBoxProperty', '\"%1\" doesn\\'t look like a color, a padding dimension, or a style', part);\n        }\n    }\n    if (def) {\n        math = parser.create('node', 'mpadded', [math], def);\n    }\n    if (background || style) {\n        def = {};\n        if (background) {\n            Object.assign(def, { mathbackground: background });\n        }\n        if (style) {\n            Object.assign(def, { style: style });\n        }\n        math = parser.create('node', 'mstyle', [math], def);\n    }\n    parser.Push(math);\n};\nvar BBoxStyle = function (styles) {\n    return styles;\n};\nvar BBoxPadding = function (pad) {\n    return pad;\n};\nnew SymbolMap_js_1.CommandMap('bbox', { bbox: 'BBox' }, exports.BboxMethods);\nexports.BboxConfiguration = Configuration_js_1.Configuration.create('bbox', { handler: { macro: ['bbox'] } });\n//# sourceMappingURL=BboxConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9iYm94L0Jib3hDb25maWd1cmF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCLEdBQUcsbUJBQW1CO0FBQy9DLHlCQUF5QixtQkFBTyxDQUFDLHNGQUFxQjtBQUN0RCxxQkFBcUIsbUJBQU8sQ0FBQyw4RUFBaUI7QUFDOUMsb0NBQW9DLG1CQUFPLENBQUMsNEVBQWdCO0FBQzVELG1CQUFtQjtBQUNuQix3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsT0FBTztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxFQUFFLFlBQVksRUFBRTtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsNEJBQTRCO0FBQzdEO0FBQ0E7QUFDQSxpQ0FBaUMsY0FBYztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLGNBQWM7QUFDdEQseUJBQXlCLHFEQUFxRCxXQUFXLG1CQUFtQjtBQUM1RyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9iYm94L0Jib3hDb25maWd1cmF0aW9uLmpzP2NkNTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkJib3hDb25maWd1cmF0aW9uID0gZXhwb3J0cy5CYm94TWV0aG9kcyA9IHZvaWQgMDtcbnZhciBDb25maWd1cmF0aW9uX2pzXzEgPSByZXF1aXJlKFwiLi4vQ29uZmlndXJhdGlvbi5qc1wiKTtcbnZhciBTeW1ib2xNYXBfanNfMSA9IHJlcXVpcmUoXCIuLi9TeW1ib2xNYXAuanNcIik7XG52YXIgVGV4RXJyb3JfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vVGV4RXJyb3IuanNcIikpO1xuZXhwb3J0cy5CYm94TWV0aG9kcyA9IHt9O1xuZXhwb3J0cy5CYm94TWV0aG9kcy5CQm94ID0gZnVuY3Rpb24gKHBhcnNlciwgbmFtZSkge1xuICAgIHZhciBiYm94ID0gcGFyc2VyLkdldEJyYWNrZXRzKG5hbWUsICcnKTtcbiAgICB2YXIgbWF0aCA9IHBhcnNlci5QYXJzZUFyZyhuYW1lKTtcbiAgICB2YXIgcGFydHMgPSBiYm94LnNwbGl0KC8sLyk7XG4gICAgdmFyIGRlZiwgYmFja2dyb3VuZCwgc3R5bGU7XG4gICAgZm9yICh2YXIgaSA9IDAsIG0gPSBwYXJ0cy5sZW5ndGg7IGkgPCBtOyBpKyspIHtcbiAgICAgICAgdmFyIHBhcnQgPSBwYXJ0c1tpXS50cmltKCk7XG4gICAgICAgIHZhciBtYXRjaCA9IHBhcnQubWF0Y2goL14oXFwuXFxkK3xcXGQrKFxcLlxcZCopPykocHR8ZW18ZXh8bXV8cHh8aW58Y218bW0pJC8pO1xuICAgICAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgICAgIGlmIChkZWYpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVGV4RXJyb3JfanNfMS5kZWZhdWx0KCdNdWx0aXBsZUJCb3hQcm9wZXJ0eScsICclMSBzcGVjaWZpZWQgdHdpY2UgaW4gJTInLCAnUGFkZGluZycsIG5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHBhZCA9IEJCb3hQYWRkaW5nKG1hdGNoWzFdICsgbWF0Y2hbM10pO1xuICAgICAgICAgICAgaWYgKHBhZCkge1xuICAgICAgICAgICAgICAgIGRlZiA9IHtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAnKycgKyBwYWQsXG4gICAgICAgICAgICAgICAgICAgIGRlcHRoOiAnKycgKyBwYWQsXG4gICAgICAgICAgICAgICAgICAgIGxzcGFjZTogcGFkLFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogJysnICsgKDIgKiBwYXJzZUludChtYXRjaFsxXSwgMTApKSArIG1hdGNoWzNdXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChwYXJ0Lm1hdGNoKC9eKFthLXowLTldK3xcXCNbMC05YS1mXXs2fXxcXCNbMC05YS1mXXszfSkkL2kpKSB7XG4gICAgICAgICAgICBpZiAoYmFja2dyb3VuZCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBUZXhFcnJvcl9qc18xLmRlZmF1bHQoJ011bHRpcGxlQkJveFByb3BlcnR5JywgJyUxIHNwZWNpZmllZCB0d2ljZSBpbiAlMicsICdCYWNrZ3JvdW5kJywgbmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBiYWNrZ3JvdW5kID0gcGFydDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChwYXJ0Lm1hdGNoKC9eWy1hLXpdKzovaSkpIHtcbiAgICAgICAgICAgIGlmIChzdHlsZSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBUZXhFcnJvcl9qc18xLmRlZmF1bHQoJ011bHRpcGxlQkJveFByb3BlcnR5JywgJyUxIHNwZWNpZmllZCB0d2ljZSBpbiAlMicsICdTdHlsZScsIG5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc3R5bGUgPSBCQm94U3R5bGUocGFydCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocGFydCAhPT0gJycpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUZXhFcnJvcl9qc18xLmRlZmF1bHQoJ0ludmFsaWRCQm94UHJvcGVydHknLCAnXCIlMVwiIGRvZXNuXFwndCBsb29rIGxpa2UgYSBjb2xvciwgYSBwYWRkaW5nIGRpbWVuc2lvbiwgb3IgYSBzdHlsZScsIHBhcnQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChkZWYpIHtcbiAgICAgICAgbWF0aCA9IHBhcnNlci5jcmVhdGUoJ25vZGUnLCAnbXBhZGRlZCcsIFttYXRoXSwgZGVmKTtcbiAgICB9XG4gICAgaWYgKGJhY2tncm91bmQgfHwgc3R5bGUpIHtcbiAgICAgICAgZGVmID0ge307XG4gICAgICAgIGlmIChiYWNrZ3JvdW5kKSB7XG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKGRlZiwgeyBtYXRoYmFja2dyb3VuZDogYmFja2dyb3VuZCB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc3R5bGUpIHtcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oZGVmLCB7IHN0eWxlOiBzdHlsZSB9KTtcbiAgICAgICAgfVxuICAgICAgICBtYXRoID0gcGFyc2VyLmNyZWF0ZSgnbm9kZScsICdtc3R5bGUnLCBbbWF0aF0sIGRlZik7XG4gICAgfVxuICAgIHBhcnNlci5QdXNoKG1hdGgpO1xufTtcbnZhciBCQm94U3R5bGUgPSBmdW5jdGlvbiAoc3R5bGVzKSB7XG4gICAgcmV0dXJuIHN0eWxlcztcbn07XG52YXIgQkJveFBhZGRpbmcgPSBmdW5jdGlvbiAocGFkKSB7XG4gICAgcmV0dXJuIHBhZDtcbn07XG5uZXcgU3ltYm9sTWFwX2pzXzEuQ29tbWFuZE1hcCgnYmJveCcsIHsgYmJveDogJ0JCb3gnIH0sIGV4cG9ydHMuQmJveE1ldGhvZHMpO1xuZXhwb3J0cy5CYm94Q29uZmlndXJhdGlvbiA9IENvbmZpZ3VyYXRpb25fanNfMS5Db25maWd1cmF0aW9uLmNyZWF0ZSgnYmJveCcsIHsgaGFuZGxlcjogeyBtYWNybzogWydiYm94J10gfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJib3hDb25maWd1cmF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/bbox/BboxConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/boldsymbol/BoldsymbolConfiguration.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/boldsymbol/BoldsymbolConfiguration.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BoldsymbolConfiguration = exports.rewriteBoldTokens = exports.createBoldToken = exports.BoldsymbolMethods = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar TexConstants_js_1 = __webpack_require__(/*! ../TexConstants.js */ \"./node_modules/mathjax-full/js/input/tex/TexConstants.js\");\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar NodeFactory_js_1 = __webpack_require__(/*! ../NodeFactory.js */ \"./node_modules/mathjax-full/js/input/tex/NodeFactory.js\");\nvar BOLDVARIANT = {};\nBOLDVARIANT[TexConstants_js_1.TexConstant.Variant.NORMAL] = TexConstants_js_1.TexConstant.Variant.BOLD;\nBOLDVARIANT[TexConstants_js_1.TexConstant.Variant.ITALIC] = TexConstants_js_1.TexConstant.Variant.BOLDITALIC;\nBOLDVARIANT[TexConstants_js_1.TexConstant.Variant.FRAKTUR] = TexConstants_js_1.TexConstant.Variant.BOLDFRAKTUR;\nBOLDVARIANT[TexConstants_js_1.TexConstant.Variant.SCRIPT] = TexConstants_js_1.TexConstant.Variant.BOLDSCRIPT;\nBOLDVARIANT[TexConstants_js_1.TexConstant.Variant.SANSSERIF] = TexConstants_js_1.TexConstant.Variant.BOLDSANSSERIF;\nBOLDVARIANT['-tex-calligraphic'] = '-tex-bold-calligraphic';\nBOLDVARIANT['-tex-oldstyle'] = '-tex-bold-oldstyle';\nBOLDVARIANT['-tex-mathit'] = TexConstants_js_1.TexConstant.Variant.BOLDITALIC;\nexports.BoldsymbolMethods = {};\nexports.BoldsymbolMethods.Boldsymbol = function (parser, name) {\n    var boldsymbol = parser.stack.env['boldsymbol'];\n    parser.stack.env['boldsymbol'] = true;\n    var mml = parser.ParseArg(name);\n    parser.stack.env['boldsymbol'] = boldsymbol;\n    parser.Push(mml);\n};\nnew SymbolMap_js_1.CommandMap('boldsymbol', { boldsymbol: 'Boldsymbol' }, exports.BoldsymbolMethods);\nfunction createBoldToken(factory, kind, def, text) {\n    var token = NodeFactory_js_1.NodeFactory.createToken(factory, kind, def, text);\n    if (kind !== 'mtext' &&\n        factory.configuration.parser.stack.env['boldsymbol']) {\n        NodeUtil_js_1.default.setProperty(token, 'fixBold', true);\n        factory.configuration.addNode('fixBold', token);\n    }\n    return token;\n}\nexports.createBoldToken = createBoldToken;\nfunction rewriteBoldTokens(arg) {\n    var e_1, _a;\n    try {\n        for (var _b = __values(arg.data.getList('fixBold')), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var node = _c.value;\n            if (NodeUtil_js_1.default.getProperty(node, 'fixBold')) {\n                var variant = NodeUtil_js_1.default.getAttribute(node, 'mathvariant');\n                if (variant == null) {\n                    NodeUtil_js_1.default.setAttribute(node, 'mathvariant', TexConstants_js_1.TexConstant.Variant.BOLD);\n                }\n                else {\n                    NodeUtil_js_1.default.setAttribute(node, 'mathvariant', BOLDVARIANT[variant] || variant);\n                }\n                NodeUtil_js_1.default.removeProperties(node, 'fixBold');\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\nexports.rewriteBoldTokens = rewriteBoldTokens;\nexports.BoldsymbolConfiguration = Configuration_js_1.Configuration.create('boldsymbol', {\n    handler: { macro: ['boldsymbol'] },\n    nodes: { 'token': createBoldToken },\n    postprocessors: [rewriteBoldTokens]\n});\n//# sourceMappingURL=BoldsymbolConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9ib2xkc3ltYm9sL0JvbGRzeW1ib2xDb25maWd1cmF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCLEdBQUcseUJBQXlCLEdBQUcsdUJBQXVCLEdBQUcseUJBQXlCO0FBQ2pILHlCQUF5QixtQkFBTyxDQUFDLHNGQUFxQjtBQUN0RCxvQ0FBb0MsbUJBQU8sQ0FBQyw0RUFBZ0I7QUFDNUQsd0JBQXdCLG1CQUFPLENBQUMsb0ZBQW9CO0FBQ3BELHFCQUFxQixtQkFBTyxDQUFDLDhFQUFpQjtBQUM5Qyx1QkFBdUIsbUJBQU8sQ0FBQyxrRkFBbUI7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCLG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsMEJBQTBCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQSw2RUFBNkUsVUFBVTtBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIsK0JBQStCO0FBQy9CLGVBQWUsdUJBQXVCO0FBQ3RDLGFBQWEsMEJBQTBCO0FBQ3ZDO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvaW5wdXQvdGV4L2JvbGRzeW1ib2wvQm9sZHN5bWJvbENvbmZpZ3VyYXRpb24uanM/ZDI5YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX3ZhbHVlcyA9ICh0aGlzICYmIHRoaXMuX192YWx1ZXMpIHx8IGZ1bmN0aW9uKG8pIHtcbiAgICB2YXIgcyA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBTeW1ib2wuaXRlcmF0b3IsIG0gPSBzICYmIG9bc10sIGkgPSAwO1xuICAgIGlmIChtKSByZXR1cm4gbS5jYWxsKG8pO1xuICAgIGlmIChvICYmIHR5cGVvZiBvLmxlbmd0aCA9PT0gXCJudW1iZXJcIikgcmV0dXJuIHtcbiAgICAgICAgbmV4dDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKG8gJiYgaSA+PSBvLmxlbmd0aCkgbyA9IHZvaWQgMDtcbiAgICAgICAgICAgIHJldHVybiB7IHZhbHVlOiBvICYmIG9baSsrXSwgZG9uZTogIW8gfTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihzID8gXCJPYmplY3QgaXMgbm90IGl0ZXJhYmxlLlwiIDogXCJTeW1ib2wuaXRlcmF0b3IgaXMgbm90IGRlZmluZWQuXCIpO1xufTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQm9sZHN5bWJvbENvbmZpZ3VyYXRpb24gPSBleHBvcnRzLnJld3JpdGVCb2xkVG9rZW5zID0gZXhwb3J0cy5jcmVhdGVCb2xkVG9rZW4gPSBleHBvcnRzLkJvbGRzeW1ib2xNZXRob2RzID0gdm9pZCAwO1xudmFyIENvbmZpZ3VyYXRpb25fanNfMSA9IHJlcXVpcmUoXCIuLi9Db25maWd1cmF0aW9uLmpzXCIpO1xudmFyIE5vZGVVdGlsX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL05vZGVVdGlsLmpzXCIpKTtcbnZhciBUZXhDb25zdGFudHNfanNfMSA9IHJlcXVpcmUoXCIuLi9UZXhDb25zdGFudHMuanNcIik7XG52YXIgU3ltYm9sTWFwX2pzXzEgPSByZXF1aXJlKFwiLi4vU3ltYm9sTWFwLmpzXCIpO1xudmFyIE5vZGVGYWN0b3J5X2pzXzEgPSByZXF1aXJlKFwiLi4vTm9kZUZhY3RvcnkuanNcIik7XG52YXIgQk9MRFZBUklBTlQgPSB7fTtcbkJPTERWQVJJQU5UW1RleENvbnN0YW50c19qc18xLlRleENvbnN0YW50LlZhcmlhbnQuTk9STUFMXSA9IFRleENvbnN0YW50c19qc18xLlRleENvbnN0YW50LlZhcmlhbnQuQk9MRDtcbkJPTERWQVJJQU5UW1RleENvbnN0YW50c19qc18xLlRleENvbnN0YW50LlZhcmlhbnQuSVRBTElDXSA9IFRleENvbnN0YW50c19qc18xLlRleENvbnN0YW50LlZhcmlhbnQuQk9MRElUQUxJQztcbkJPTERWQVJJQU5UW1RleENvbnN0YW50c19qc18xLlRleENvbnN0YW50LlZhcmlhbnQuRlJBS1RVUl0gPSBUZXhDb25zdGFudHNfanNfMS5UZXhDb25zdGFudC5WYXJpYW50LkJPTERGUkFLVFVSO1xuQk9MRFZBUklBTlRbVGV4Q29uc3RhbnRzX2pzXzEuVGV4Q29uc3RhbnQuVmFyaWFudC5TQ1JJUFRdID0gVGV4Q29uc3RhbnRzX2pzXzEuVGV4Q29uc3RhbnQuVmFyaWFudC5CT0xEU0NSSVBUO1xuQk9MRFZBUklBTlRbVGV4Q29uc3RhbnRzX2pzXzEuVGV4Q29uc3RhbnQuVmFyaWFudC5TQU5TU0VSSUZdID0gVGV4Q29uc3RhbnRzX2pzXzEuVGV4Q29uc3RhbnQuVmFyaWFudC5CT0xEU0FOU1NFUklGO1xuQk9MRFZBUklBTlRbJy10ZXgtY2FsbGlncmFwaGljJ10gPSAnLXRleC1ib2xkLWNhbGxpZ3JhcGhpYyc7XG5CT0xEVkFSSUFOVFsnLXRleC1vbGRzdHlsZSddID0gJy10ZXgtYm9sZC1vbGRzdHlsZSc7XG5CT0xEVkFSSUFOVFsnLXRleC1tYXRoaXQnXSA9IFRleENvbnN0YW50c19qc18xLlRleENvbnN0YW50LlZhcmlhbnQuQk9MRElUQUxJQztcbmV4cG9ydHMuQm9sZHN5bWJvbE1ldGhvZHMgPSB7fTtcbmV4cG9ydHMuQm9sZHN5bWJvbE1ldGhvZHMuQm9sZHN5bWJvbCA9IGZ1bmN0aW9uIChwYXJzZXIsIG5hbWUpIHtcbiAgICB2YXIgYm9sZHN5bWJvbCA9IHBhcnNlci5zdGFjay5lbnZbJ2JvbGRzeW1ib2wnXTtcbiAgICBwYXJzZXIuc3RhY2suZW52Wydib2xkc3ltYm9sJ10gPSB0cnVlO1xuICAgIHZhciBtbWwgPSBwYXJzZXIuUGFyc2VBcmcobmFtZSk7XG4gICAgcGFyc2VyLnN0YWNrLmVudlsnYm9sZHN5bWJvbCddID0gYm9sZHN5bWJvbDtcbiAgICBwYXJzZXIuUHVzaChtbWwpO1xufTtcbm5ldyBTeW1ib2xNYXBfanNfMS5Db21tYW5kTWFwKCdib2xkc3ltYm9sJywgeyBib2xkc3ltYm9sOiAnQm9sZHN5bWJvbCcgfSwgZXhwb3J0cy5Cb2xkc3ltYm9sTWV0aG9kcyk7XG5mdW5jdGlvbiBjcmVhdGVCb2xkVG9rZW4oZmFjdG9yeSwga2luZCwgZGVmLCB0ZXh0KSB7XG4gICAgdmFyIHRva2VuID0gTm9kZUZhY3RvcnlfanNfMS5Ob2RlRmFjdG9yeS5jcmVhdGVUb2tlbihmYWN0b3J5LCBraW5kLCBkZWYsIHRleHQpO1xuICAgIGlmIChraW5kICE9PSAnbXRleHQnICYmXG4gICAgICAgIGZhY3RvcnkuY29uZmlndXJhdGlvbi5wYXJzZXIuc3RhY2suZW52Wydib2xkc3ltYm9sJ10pIHtcbiAgICAgICAgTm9kZVV0aWxfanNfMS5kZWZhdWx0LnNldFByb3BlcnR5KHRva2VuLCAnZml4Qm9sZCcsIHRydWUpO1xuICAgICAgICBmYWN0b3J5LmNvbmZpZ3VyYXRpb24uYWRkTm9kZSgnZml4Qm9sZCcsIHRva2VuKTtcbiAgICB9XG4gICAgcmV0dXJuIHRva2VuO1xufVxuZXhwb3J0cy5jcmVhdGVCb2xkVG9rZW4gPSBjcmVhdGVCb2xkVG9rZW47XG5mdW5jdGlvbiByZXdyaXRlQm9sZFRva2VucyhhcmcpIHtcbiAgICB2YXIgZV8xLCBfYTtcbiAgICB0cnkge1xuICAgICAgICBmb3IgKHZhciBfYiA9IF9fdmFsdWVzKGFyZy5kYXRhLmdldExpc3QoJ2ZpeEJvbGQnKSksIF9jID0gX2IubmV4dCgpOyAhX2MuZG9uZTsgX2MgPSBfYi5uZXh0KCkpIHtcbiAgICAgICAgICAgIHZhciBub2RlID0gX2MudmFsdWU7XG4gICAgICAgICAgICBpZiAoTm9kZVV0aWxfanNfMS5kZWZhdWx0LmdldFByb3BlcnR5KG5vZGUsICdmaXhCb2xkJykpIHtcbiAgICAgICAgICAgICAgICB2YXIgdmFyaWFudCA9IE5vZGVVdGlsX2pzXzEuZGVmYXVsdC5nZXRBdHRyaWJ1dGUobm9kZSwgJ21hdGh2YXJpYW50Jyk7XG4gICAgICAgICAgICAgICAgaWYgKHZhcmlhbnQgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBOb2RlVXRpbF9qc18xLmRlZmF1bHQuc2V0QXR0cmlidXRlKG5vZGUsICdtYXRodmFyaWFudCcsIFRleENvbnN0YW50c19qc18xLlRleENvbnN0YW50LlZhcmlhbnQuQk9MRCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBOb2RlVXRpbF9qc18xLmRlZmF1bHQuc2V0QXR0cmlidXRlKG5vZGUsICdtYXRodmFyaWFudCcsIEJPTERWQVJJQU5UW3ZhcmlhbnRdIHx8IHZhcmlhbnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBOb2RlVXRpbF9qc18xLmRlZmF1bHQucmVtb3ZlUHJvcGVydGllcyhub2RlLCAnZml4Qm9sZCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNhdGNoIChlXzFfMSkgeyBlXzEgPSB7IGVycm9yOiBlXzFfMSB9OyB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoX2MgJiYgIV9jLmRvbmUgJiYgKF9hID0gX2IucmV0dXJuKSkgX2EuY2FsbChfYik7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7IGlmIChlXzEpIHRocm93IGVfMS5lcnJvcjsgfVxuICAgIH1cbn1cbmV4cG9ydHMucmV3cml0ZUJvbGRUb2tlbnMgPSByZXdyaXRlQm9sZFRva2VucztcbmV4cG9ydHMuQm9sZHN5bWJvbENvbmZpZ3VyYXRpb24gPSBDb25maWd1cmF0aW9uX2pzXzEuQ29uZmlndXJhdGlvbi5jcmVhdGUoJ2JvbGRzeW1ib2wnLCB7XG4gICAgaGFuZGxlcjogeyBtYWNybzogWydib2xkc3ltYm9sJ10gfSxcbiAgICBub2RlczogeyAndG9rZW4nOiBjcmVhdGVCb2xkVG9rZW4gfSxcbiAgICBwb3N0cHJvY2Vzc29yczogW3Jld3JpdGVCb2xkVG9rZW5zXVxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Cb2xkc3ltYm9sQ29uZmlndXJhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/boldsymbol/BoldsymbolConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/braket/BraketConfiguration.js":
/*!******************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/braket/BraketConfiguration.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BraketConfiguration = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar BraketItems_js_1 = __webpack_require__(/*! ./BraketItems.js */ \"./node_modules/mathjax-full/js/input/tex/braket/BraketItems.js\");\n__webpack_require__(/*! ./BraketMappings.js */ \"./node_modules/mathjax-full/js/input/tex/braket/BraketMappings.js\");\nexports.BraketConfiguration = Configuration_js_1.Configuration.create('braket', {\n    handler: {\n        character: ['Braket-characters'],\n        macro: ['Braket-macros']\n    },\n    items: (_a = {},\n        _a[BraketItems_js_1.BraketItem.prototype.kind] = BraketItems_js_1.BraketItem,\n        _a)\n});\n//# sourceMappingURL=BraketConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9icmFrZXQvQnJha2V0Q29uZmlndXJhdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQix5QkFBeUIsbUJBQU8sQ0FBQyxzRkFBcUI7QUFDdEQsdUJBQXVCLG1CQUFPLENBQUMsd0ZBQWtCO0FBQ2pELG1CQUFPLENBQUMsOEZBQXFCO0FBQzdCLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvYnJha2V0L0JyYWtldENvbmZpZ3VyYXRpb24uanM/YjFlMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfYTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQnJha2V0Q29uZmlndXJhdGlvbiA9IHZvaWQgMDtcbnZhciBDb25maWd1cmF0aW9uX2pzXzEgPSByZXF1aXJlKFwiLi4vQ29uZmlndXJhdGlvbi5qc1wiKTtcbnZhciBCcmFrZXRJdGVtc19qc18xID0gcmVxdWlyZShcIi4vQnJha2V0SXRlbXMuanNcIik7XG5yZXF1aXJlKFwiLi9CcmFrZXRNYXBwaW5ncy5qc1wiKTtcbmV4cG9ydHMuQnJha2V0Q29uZmlndXJhdGlvbiA9IENvbmZpZ3VyYXRpb25fanNfMS5Db25maWd1cmF0aW9uLmNyZWF0ZSgnYnJha2V0Jywge1xuICAgIGhhbmRsZXI6IHtcbiAgICAgICAgY2hhcmFjdGVyOiBbJ0JyYWtldC1jaGFyYWN0ZXJzJ10sXG4gICAgICAgIG1hY3JvOiBbJ0JyYWtldC1tYWNyb3MnXVxuICAgIH0sXG4gICAgaXRlbXM6IChfYSA9IHt9LFxuICAgICAgICBfYVtCcmFrZXRJdGVtc19qc18xLkJyYWtldEl0ZW0ucHJvdG90eXBlLmtpbmRdID0gQnJha2V0SXRlbXNfanNfMS5CcmFrZXRJdGVtLFxuICAgICAgICBfYSlcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QnJha2V0Q29uZmlndXJhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/braket/BraketConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/braket/BraketItems.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/braket/BraketItems.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BraketItem = void 0;\nvar StackItem_js_1 = __webpack_require__(/*! ../StackItem.js */ \"./node_modules/mathjax-full/js/input/tex/StackItem.js\");\nvar MmlNode_js_1 = __webpack_require__(/*! ../../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar BraketItem = (function (_super) {\n    __extends(BraketItem, _super);\n    function BraketItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(BraketItem.prototype, \"kind\", {\n        get: function () {\n            return 'braket';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BraketItem.prototype, \"isOpen\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BraketItem.prototype.checkItem = function (item) {\n        if (item.isKind('close')) {\n            return [[this.factory.create('mml', this.toMml())], true];\n        }\n        if (item.isKind('mml')) {\n            this.Push(item.toMml());\n            if (this.getProperty('single')) {\n                return [[this.toMml()], true];\n            }\n            return StackItem_js_1.BaseItem.fail;\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    BraketItem.prototype.toMml = function () {\n        var inner = _super.prototype.toMml.call(this);\n        var open = this.getProperty('open');\n        var close = this.getProperty('close');\n        if (this.getProperty('stretchy')) {\n            return ParseUtil_js_1.default.fenced(this.factory.configuration, open, inner, close);\n        }\n        var attrs = { fence: true, stretchy: false, symmetric: true, texClass: MmlNode_js_1.TEXCLASS.OPEN };\n        var openNode = this.create('token', 'mo', attrs, open);\n        attrs.texClass = MmlNode_js_1.TEXCLASS.CLOSE;\n        var closeNode = this.create('token', 'mo', attrs, close);\n        var mrow = this.create('node', 'mrow', [openNode, inner, closeNode], { open: open, close: close, texClass: MmlNode_js_1.TEXCLASS.INNER });\n        return mrow;\n    };\n    return BraketItem;\n}(StackItem_js_1.BaseItem));\nexports.BraketItem = BraketItem;\n//# sourceMappingURL=BraketItems.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9icmFrZXQvQnJha2V0SXRlbXMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ3ZGLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEIscUJBQXFCLG1CQUFPLENBQUMsOEVBQWlCO0FBQzlDLG1CQUFtQixtQkFBTyxDQUFDLGdHQUFrQztBQUM3RCxxQ0FBcUMsbUJBQU8sQ0FBQyw4RUFBaUI7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsK0VBQStFLGlFQUFpRTtBQUNoSjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvaW5wdXQvdGV4L2JyYWtldC9CcmFrZXRJdGVtcy5qcz8wZGJiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQnJha2V0SXRlbSA9IHZvaWQgMDtcbnZhciBTdGFja0l0ZW1fanNfMSA9IHJlcXVpcmUoXCIuLi9TdGFja0l0ZW0uanNcIik7XG52YXIgTW1sTm9kZV9qc18xID0gcmVxdWlyZShcIi4uLy4uLy4uL2NvcmUvTW1sVHJlZS9NbWxOb2RlLmpzXCIpO1xudmFyIFBhcnNlVXRpbF9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi9QYXJzZVV0aWwuanNcIikpO1xudmFyIEJyYWtldEl0ZW0gPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhCcmFrZXRJdGVtLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEJyYWtldEl0ZW0oKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEJyYWtldEl0ZW0ucHJvdG90eXBlLCBcImtpbmRcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiAnYnJha2V0JztcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShCcmFrZXRJdGVtLnByb3RvdHlwZSwgXCJpc09wZW5cIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgQnJha2V0SXRlbS5wcm90b3R5cGUuY2hlY2tJdGVtID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgaWYgKGl0ZW0uaXNLaW5kKCdjbG9zZScpKSB7XG4gICAgICAgICAgICByZXR1cm4gW1t0aGlzLmZhY3RvcnkuY3JlYXRlKCdtbWwnLCB0aGlzLnRvTW1sKCkpXSwgdHJ1ZV07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGl0ZW0uaXNLaW5kKCdtbWwnKSkge1xuICAgICAgICAgICAgdGhpcy5QdXNoKGl0ZW0udG9NbWwoKSk7XG4gICAgICAgICAgICBpZiAodGhpcy5nZXRQcm9wZXJ0eSgnc2luZ2xlJykpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gW1t0aGlzLnRvTW1sKCldLCB0cnVlXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBTdGFja0l0ZW1fanNfMS5CYXNlSXRlbS5mYWlsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfc3VwZXIucHJvdG90eXBlLmNoZWNrSXRlbS5jYWxsKHRoaXMsIGl0ZW0pO1xuICAgIH07XG4gICAgQnJha2V0SXRlbS5wcm90b3R5cGUudG9NbWwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBpbm5lciA9IF9zdXBlci5wcm90b3R5cGUudG9NbWwuY2FsbCh0aGlzKTtcbiAgICAgICAgdmFyIG9wZW4gPSB0aGlzLmdldFByb3BlcnR5KCdvcGVuJyk7XG4gICAgICAgIHZhciBjbG9zZSA9IHRoaXMuZ2V0UHJvcGVydHkoJ2Nsb3NlJyk7XG4gICAgICAgIGlmICh0aGlzLmdldFByb3BlcnR5KCdzdHJldGNoeScpKSB7XG4gICAgICAgICAgICByZXR1cm4gUGFyc2VVdGlsX2pzXzEuZGVmYXVsdC5mZW5jZWQodGhpcy5mYWN0b3J5LmNvbmZpZ3VyYXRpb24sIG9wZW4sIGlubmVyLCBjbG9zZSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGF0dHJzID0geyBmZW5jZTogdHJ1ZSwgc3RyZXRjaHk6IGZhbHNlLCBzeW1tZXRyaWM6IHRydWUsIHRleENsYXNzOiBNbWxOb2RlX2pzXzEuVEVYQ0xBU1MuT1BFTiB9O1xuICAgICAgICB2YXIgb3Blbk5vZGUgPSB0aGlzLmNyZWF0ZSgndG9rZW4nLCAnbW8nLCBhdHRycywgb3Blbik7XG4gICAgICAgIGF0dHJzLnRleENsYXNzID0gTW1sTm9kZV9qc18xLlRFWENMQVNTLkNMT1NFO1xuICAgICAgICB2YXIgY2xvc2VOb2RlID0gdGhpcy5jcmVhdGUoJ3Rva2VuJywgJ21vJywgYXR0cnMsIGNsb3NlKTtcbiAgICAgICAgdmFyIG1yb3cgPSB0aGlzLmNyZWF0ZSgnbm9kZScsICdtcm93JywgW29wZW5Ob2RlLCBpbm5lciwgY2xvc2VOb2RlXSwgeyBvcGVuOiBvcGVuLCBjbG9zZTogY2xvc2UsIHRleENsYXNzOiBNbWxOb2RlX2pzXzEuVEVYQ0xBU1MuSU5ORVIgfSk7XG4gICAgICAgIHJldHVybiBtcm93O1xuICAgIH07XG4gICAgcmV0dXJuIEJyYWtldEl0ZW07XG59KFN0YWNrSXRlbV9qc18xLkJhc2VJdGVtKSk7XG5leHBvcnRzLkJyYWtldEl0ZW0gPSBCcmFrZXRJdGVtO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QnJha2V0SXRlbXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/braket/BraketItems.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/braket/BraketMappings.js":
/*!*************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/braket/BraketMappings.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar BraketMethods_js_1 = __importDefault(__webpack_require__(/*! ./BraketMethods.js */ \"./node_modules/mathjax-full/js/input/tex/braket/BraketMethods.js\"));\nnew SymbolMap_js_1.CommandMap('Braket-macros', {\n    bra: ['Macro', '{\\\\langle {#1} \\\\vert}', 1],\n    ket: ['Macro', '{\\\\vert {#1} \\\\rangle}', 1],\n    braket: ['Braket', '\\u27E8', '\\u27E9', false, Infinity],\n    'set': ['Braket', '{', '}', false, 1],\n    Bra: ['Macro', '{\\\\left\\\\langle {#1} \\\\right\\\\vert}', 1],\n    Ket: ['Macro', '{\\\\left\\\\vert {#1} \\\\right\\\\rangle}', 1],\n    Braket: ['Braket', '\\u27E8', '\\u27E9', true, Infinity],\n    Set: ['Braket', '{', '}', true, 1],\n    ketbra: ['Macro', '{\\\\vert {#1} \\\\rangle\\\\langle {#2} \\\\vert}', 2],\n    Ketbra: ['Macro', '{\\\\left\\\\vert {#1} \\\\right\\\\rangle\\\\left\\\\langle {#2} \\\\right\\\\vert}', 2],\n    '|': 'Bar'\n}, BraketMethods_js_1.default);\nnew SymbolMap_js_1.MacroMap('Braket-characters', {\n    '|': 'Bar'\n}, BraketMethods_js_1.default);\n//# sourceMappingURL=BraketMappings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9icmFrZXQvQnJha2V0TWFwcGluZ3MuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsbUJBQU8sQ0FBQyw4RUFBaUI7QUFDOUMseUNBQXlDLG1CQUFPLENBQUMsNEZBQW9CO0FBQ3JFO0FBQ0EscUJBQXFCLFVBQVUsSUFBSSxPQUFPO0FBQzFDLHFCQUFxQixRQUFRLElBQUksU0FBUztBQUMxQztBQUNBLHdCQUF3QixLQUFLO0FBQzdCLHFCQUFxQixnQkFBZ0IsSUFBSSxjQUFjO0FBQ3ZELHFCQUFxQixjQUFjLElBQUksZ0JBQWdCO0FBQ3ZEO0FBQ0Esc0JBQXNCLEtBQUs7QUFDM0Isd0JBQXdCLFFBQVEsSUFBSSxrQkFBa0IsSUFBSSxPQUFPO0FBQ2pFLHdCQUF3QixjQUFjLElBQUksK0JBQStCLElBQUksY0FBYztBQUMzRjtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvaW5wdXQvdGV4L2JyYWtldC9CcmFrZXRNYXBwaW5ncy5qcz83NmVjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIFN5bWJvbE1hcF9qc18xID0gcmVxdWlyZShcIi4uL1N5bWJvbE1hcC5qc1wiKTtcbnZhciBCcmFrZXRNZXRob2RzX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vQnJha2V0TWV0aG9kcy5qc1wiKSk7XG5uZXcgU3ltYm9sTWFwX2pzXzEuQ29tbWFuZE1hcCgnQnJha2V0LW1hY3JvcycsIHtcbiAgICBicmE6IFsnTWFjcm8nLCAne1xcXFxsYW5nbGUgeyMxfSBcXFxcdmVydH0nLCAxXSxcbiAgICBrZXQ6IFsnTWFjcm8nLCAne1xcXFx2ZXJ0IHsjMX0gXFxcXHJhbmdsZX0nLCAxXSxcbiAgICBicmFrZXQ6IFsnQnJha2V0JywgJ1xcdTI3RTgnLCAnXFx1MjdFOScsIGZhbHNlLCBJbmZpbml0eV0sXG4gICAgJ3NldCc6IFsnQnJha2V0JywgJ3snLCAnfScsIGZhbHNlLCAxXSxcbiAgICBCcmE6IFsnTWFjcm8nLCAne1xcXFxsZWZ0XFxcXGxhbmdsZSB7IzF9IFxcXFxyaWdodFxcXFx2ZXJ0fScsIDFdLFxuICAgIEtldDogWydNYWNybycsICd7XFxcXGxlZnRcXFxcdmVydCB7IzF9IFxcXFxyaWdodFxcXFxyYW5nbGV9JywgMV0sXG4gICAgQnJha2V0OiBbJ0JyYWtldCcsICdcXHUyN0U4JywgJ1xcdTI3RTknLCB0cnVlLCBJbmZpbml0eV0sXG4gICAgU2V0OiBbJ0JyYWtldCcsICd7JywgJ30nLCB0cnVlLCAxXSxcbiAgICBrZXRicmE6IFsnTWFjcm8nLCAne1xcXFx2ZXJ0IHsjMX0gXFxcXHJhbmdsZVxcXFxsYW5nbGUgeyMyfSBcXFxcdmVydH0nLCAyXSxcbiAgICBLZXRicmE6IFsnTWFjcm8nLCAne1xcXFxsZWZ0XFxcXHZlcnQgeyMxfSBcXFxccmlnaHRcXFxccmFuZ2xlXFxcXGxlZnRcXFxcbGFuZ2xlIHsjMn0gXFxcXHJpZ2h0XFxcXHZlcnR9JywgMl0sXG4gICAgJ3wnOiAnQmFyJ1xufSwgQnJha2V0TWV0aG9kc19qc18xLmRlZmF1bHQpO1xubmV3IFN5bWJvbE1hcF9qc18xLk1hY3JvTWFwKCdCcmFrZXQtY2hhcmFjdGVycycsIHtcbiAgICAnfCc6ICdCYXInXG59LCBCcmFrZXRNZXRob2RzX2pzXzEuZGVmYXVsdCk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1CcmFrZXRNYXBwaW5ncy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/braket/BraketMappings.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/braket/BraketMethods.js":
/*!************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/braket/BraketMethods.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar BaseMethods_js_1 = __importDefault(__webpack_require__(/*! ../base/BaseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseMethods.js\"));\nvar MmlNode_js_1 = __webpack_require__(/*! ../../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar BraketMethods = {};\nBraketMethods.Macro = BaseMethods_js_1.default.Macro;\nBraketMethods.Braket = function (parser, _name, open, close, stretchy, barmax) {\n    var next = parser.GetNext();\n    if (next === '') {\n        throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);\n    }\n    var single = true;\n    if (next === '{') {\n        parser.i++;\n        single = false;\n    }\n    parser.Push(parser.itemFactory.create('braket')\n        .setProperties({ barmax: barmax, barcount: 0, open: open,\n        close: close, stretchy: stretchy, single: single }));\n};\nBraketMethods.Bar = function (parser, name) {\n    var c = name === '|' ? '|' : '\\u2225';\n    var top = parser.stack.Top();\n    if (top.kind !== 'braket' ||\n        top.getProperty('barcount') >= top.getProperty('barmax')) {\n        var mml = parser.create('token', 'mo', { texClass: MmlNode_js_1.TEXCLASS.ORD, stretchy: false }, c);\n        parser.Push(mml);\n        return;\n    }\n    if (c === '|' && parser.GetNext() === '|') {\n        parser.i++;\n        c = '\\u2225';\n    }\n    var stretchy = top.getProperty('stretchy');\n    if (!stretchy) {\n        var node_1 = parser.create('token', 'mo', { stretchy: false, braketbar: true }, c);\n        parser.Push(node_1);\n        return;\n    }\n    var node = parser.create('node', 'TeXAtom', [], { texClass: MmlNode_js_1.TEXCLASS.CLOSE });\n    parser.Push(node);\n    top.setProperty('barcount', top.getProperty('barcount') + 1);\n    node = parser.create('token', 'mo', { stretchy: true, braketbar: true }, c);\n    parser.Push(node);\n    node = parser.create('node', 'TeXAtom', [], { texClass: MmlNode_js_1.TEXCLASS.OPEN });\n    parser.Push(node);\n};\nexports[\"default\"] = BraketMethods;\n//# sourceMappingURL=BraketMethods.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9icmFrZXQvQnJha2V0TWV0aG9kcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVDQUF1QyxtQkFBTyxDQUFDLDRGQUF3QjtBQUN2RSxtQkFBbUIsbUJBQU8sQ0FBQyxnR0FBa0M7QUFDN0Qsb0NBQW9DLG1CQUFPLENBQUMsNEVBQWdCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIsMERBQTBEO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxzREFBc0Q7QUFDdkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELGtDQUFrQztBQUN0RjtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsdUNBQXVDO0FBQzdGO0FBQ0E7QUFDQSwwQ0FBMEMsaUNBQWlDO0FBQzNFO0FBQ0Esa0RBQWtELHNDQUFzQztBQUN4RjtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9icmFrZXQvQnJha2V0TWV0aG9kcy5qcz9lYzFmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIEJhc2VNZXRob2RzX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL2Jhc2UvQmFzZU1ldGhvZHMuanNcIikpO1xudmFyIE1tbE5vZGVfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jb3JlL01tbFRyZWUvTW1sTm9kZS5qc1wiKTtcbnZhciBUZXhFcnJvcl9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi9UZXhFcnJvci5qc1wiKSk7XG52YXIgQnJha2V0TWV0aG9kcyA9IHt9O1xuQnJha2V0TWV0aG9kcy5NYWNybyA9IEJhc2VNZXRob2RzX2pzXzEuZGVmYXVsdC5NYWNybztcbkJyYWtldE1ldGhvZHMuQnJha2V0ID0gZnVuY3Rpb24gKHBhcnNlciwgX25hbWUsIG9wZW4sIGNsb3NlLCBzdHJldGNoeSwgYmFybWF4KSB7XG4gICAgdmFyIG5leHQgPSBwYXJzZXIuR2V0TmV4dCgpO1xuICAgIGlmIChuZXh0ID09PSAnJykge1xuICAgICAgICB0aHJvdyBuZXcgVGV4RXJyb3JfanNfMS5kZWZhdWx0KCdNaXNzaW5nQXJnRm9yJywgJ01pc3NpbmcgYXJndW1lbnQgZm9yICUxJywgcGFyc2VyLmN1cnJlbnRDUyk7XG4gICAgfVxuICAgIHZhciBzaW5nbGUgPSB0cnVlO1xuICAgIGlmIChuZXh0ID09PSAneycpIHtcbiAgICAgICAgcGFyc2VyLmkrKztcbiAgICAgICAgc2luZ2xlID0gZmFsc2U7XG4gICAgfVxuICAgIHBhcnNlci5QdXNoKHBhcnNlci5pdGVtRmFjdG9yeS5jcmVhdGUoJ2JyYWtldCcpXG4gICAgICAgIC5zZXRQcm9wZXJ0aWVzKHsgYmFybWF4OiBiYXJtYXgsIGJhcmNvdW50OiAwLCBvcGVuOiBvcGVuLFxuICAgICAgICBjbG9zZTogY2xvc2UsIHN0cmV0Y2h5OiBzdHJldGNoeSwgc2luZ2xlOiBzaW5nbGUgfSkpO1xufTtcbkJyYWtldE1ldGhvZHMuQmFyID0gZnVuY3Rpb24gKHBhcnNlciwgbmFtZSkge1xuICAgIHZhciBjID0gbmFtZSA9PT0gJ3wnID8gJ3wnIDogJ1xcdTIyMjUnO1xuICAgIHZhciB0b3AgPSBwYXJzZXIuc3RhY2suVG9wKCk7XG4gICAgaWYgKHRvcC5raW5kICE9PSAnYnJha2V0JyB8fFxuICAgICAgICB0b3AuZ2V0UHJvcGVydHkoJ2JhcmNvdW50JykgPj0gdG9wLmdldFByb3BlcnR5KCdiYXJtYXgnKSkge1xuICAgICAgICB2YXIgbW1sID0gcGFyc2VyLmNyZWF0ZSgndG9rZW4nLCAnbW8nLCB7IHRleENsYXNzOiBNbWxOb2RlX2pzXzEuVEVYQ0xBU1MuT1JELCBzdHJldGNoeTogZmFsc2UgfSwgYyk7XG4gICAgICAgIHBhcnNlci5QdXNoKG1tbCk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGMgPT09ICd8JyAmJiBwYXJzZXIuR2V0TmV4dCgpID09PSAnfCcpIHtcbiAgICAgICAgcGFyc2VyLmkrKztcbiAgICAgICAgYyA9ICdcXHUyMjI1JztcbiAgICB9XG4gICAgdmFyIHN0cmV0Y2h5ID0gdG9wLmdldFByb3BlcnR5KCdzdHJldGNoeScpO1xuICAgIGlmICghc3RyZXRjaHkpIHtcbiAgICAgICAgdmFyIG5vZGVfMSA9IHBhcnNlci5jcmVhdGUoJ3Rva2VuJywgJ21vJywgeyBzdHJldGNoeTogZmFsc2UsIGJyYWtldGJhcjogdHJ1ZSB9LCBjKTtcbiAgICAgICAgcGFyc2VyLlB1c2gobm9kZV8xKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgbm9kZSA9IHBhcnNlci5jcmVhdGUoJ25vZGUnLCAnVGVYQXRvbScsIFtdLCB7IHRleENsYXNzOiBNbWxOb2RlX2pzXzEuVEVYQ0xBU1MuQ0xPU0UgfSk7XG4gICAgcGFyc2VyLlB1c2gobm9kZSk7XG4gICAgdG9wLnNldFByb3BlcnR5KCdiYXJjb3VudCcsIHRvcC5nZXRQcm9wZXJ0eSgnYmFyY291bnQnKSArIDEpO1xuICAgIG5vZGUgPSBwYXJzZXIuY3JlYXRlKCd0b2tlbicsICdtbycsIHsgc3RyZXRjaHk6IHRydWUsIGJyYWtldGJhcjogdHJ1ZSB9LCBjKTtcbiAgICBwYXJzZXIuUHVzaChub2RlKTtcbiAgICBub2RlID0gcGFyc2VyLmNyZWF0ZSgnbm9kZScsICdUZVhBdG9tJywgW10sIHsgdGV4Q2xhc3M6IE1tbE5vZGVfanNfMS5URVhDTEFTUy5PUEVOIH0pO1xuICAgIHBhcnNlci5QdXNoKG5vZGUpO1xufTtcbmV4cG9ydHMuZGVmYXVsdCA9IEJyYWtldE1ldGhvZHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1CcmFrZXRNZXRob2RzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/braket/BraketMethods.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsConfiguration.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsConfiguration.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BussproofsConfiguration = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar BussproofsItems_js_1 = __webpack_require__(/*! ./BussproofsItems.js */ \"./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsItems.js\");\nvar BussproofsUtil_js_1 = __webpack_require__(/*! ./BussproofsUtil.js */ \"./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsUtil.js\");\n__webpack_require__(/*! ./BussproofsMappings.js */ \"./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsMappings.js\");\nexports.BussproofsConfiguration = Configuration_js_1.Configuration.create('bussproofs', {\n    handler: {\n        macro: ['Bussproofs-macros'],\n        environment: ['Bussproofs-environments']\n    },\n    items: (_a = {},\n        _a[BussproofsItems_js_1.ProofTreeItem.prototype.kind] = BussproofsItems_js_1.ProofTreeItem,\n        _a),\n    preprocessors: [\n        [BussproofsUtil_js_1.saveDocument, 1]\n    ],\n    postprocessors: [\n        [BussproofsUtil_js_1.clearDocument, 3],\n        [BussproofsUtil_js_1.makeBsprAttributes, 2],\n        [BussproofsUtil_js_1.balanceRules, 1]\n    ]\n});\n//# sourceMappingURL=BussproofsConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9idXNzcHJvb2ZzL0J1c3Nwcm9vZnNDb25maWd1cmF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCO0FBQy9CLHlCQUF5QixtQkFBTyxDQUFDLHNGQUFxQjtBQUN0RCwyQkFBMkIsbUJBQU8sQ0FBQyxvR0FBc0I7QUFDekQsMEJBQTBCLG1CQUFPLENBQUMsa0dBQXFCO0FBQ3ZELG1CQUFPLENBQUMsMEdBQXlCO0FBQ2pDLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvaW5wdXQvdGV4L2J1c3Nwcm9vZnMvQnVzc3Byb29mc0NvbmZpZ3VyYXRpb24uanM/MDQyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfYTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQnVzc3Byb29mc0NvbmZpZ3VyYXRpb24gPSB2b2lkIDA7XG52YXIgQ29uZmlndXJhdGlvbl9qc18xID0gcmVxdWlyZShcIi4uL0NvbmZpZ3VyYXRpb24uanNcIik7XG52YXIgQnVzc3Byb29mc0l0ZW1zX2pzXzEgPSByZXF1aXJlKFwiLi9CdXNzcHJvb2ZzSXRlbXMuanNcIik7XG52YXIgQnVzc3Byb29mc1V0aWxfanNfMSA9IHJlcXVpcmUoXCIuL0J1c3Nwcm9vZnNVdGlsLmpzXCIpO1xucmVxdWlyZShcIi4vQnVzc3Byb29mc01hcHBpbmdzLmpzXCIpO1xuZXhwb3J0cy5CdXNzcHJvb2ZzQ29uZmlndXJhdGlvbiA9IENvbmZpZ3VyYXRpb25fanNfMS5Db25maWd1cmF0aW9uLmNyZWF0ZSgnYnVzc3Byb29mcycsIHtcbiAgICBoYW5kbGVyOiB7XG4gICAgICAgIG1hY3JvOiBbJ0J1c3Nwcm9vZnMtbWFjcm9zJ10sXG4gICAgICAgIGVudmlyb25tZW50OiBbJ0J1c3Nwcm9vZnMtZW52aXJvbm1lbnRzJ11cbiAgICB9LFxuICAgIGl0ZW1zOiAoX2EgPSB7fSxcbiAgICAgICAgX2FbQnVzc3Byb29mc0l0ZW1zX2pzXzEuUHJvb2ZUcmVlSXRlbS5wcm90b3R5cGUua2luZF0gPSBCdXNzcHJvb2ZzSXRlbXNfanNfMS5Qcm9vZlRyZWVJdGVtLFxuICAgICAgICBfYSksXG4gICAgcHJlcHJvY2Vzc29yczogW1xuICAgICAgICBbQnVzc3Byb29mc1V0aWxfanNfMS5zYXZlRG9jdW1lbnQsIDFdXG4gICAgXSxcbiAgICBwb3N0cHJvY2Vzc29yczogW1xuICAgICAgICBbQnVzc3Byb29mc1V0aWxfanNfMS5jbGVhckRvY3VtZW50LCAzXSxcbiAgICAgICAgW0J1c3Nwcm9vZnNVdGlsX2pzXzEubWFrZUJzcHJBdHRyaWJ1dGVzLCAyXSxcbiAgICAgICAgW0J1c3Nwcm9vZnNVdGlsX2pzXzEuYmFsYW5jZVJ1bGVzLCAxXVxuICAgIF1cbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QnVzc3Byb29mc0NvbmZpZ3VyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsItems.js":
/*!******************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsItems.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ProofTreeItem = void 0;\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar StackItem_js_1 = __webpack_require__(/*! ../StackItem.js */ \"./node_modules/mathjax-full/js/input/tex/StackItem.js\");\nvar Stack_js_1 = __importDefault(__webpack_require__(/*! ../Stack.js */ \"./node_modules/mathjax-full/js/input/tex/Stack.js\"));\nvar BussproofsUtil = __importStar(__webpack_require__(/*! ./BussproofsUtil.js */ \"./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsUtil.js\"));\nvar ProofTreeItem = (function (_super) {\n    __extends(ProofTreeItem, _super);\n    function ProofTreeItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.leftLabel = null;\n        _this.rigthLabel = null;\n        _this.innerStack = new Stack_js_1.default(_this.factory, {}, true);\n        return _this;\n    }\n    Object.defineProperty(ProofTreeItem.prototype, \"kind\", {\n        get: function () {\n            return 'proofTree';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ProofTreeItem.prototype.checkItem = function (item) {\n        if (item.isKind('end') && item.getName() === 'prooftree') {\n            var node = this.toMml();\n            BussproofsUtil.setProperty(node, 'proof', true);\n            return [[this.factory.create('mml', node), item], true];\n        }\n        if (item.isKind('stop')) {\n            throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n        }\n        this.innerStack.Push(item);\n        return StackItem_js_1.BaseItem.fail;\n    };\n    ProofTreeItem.prototype.toMml = function () {\n        var tree = _super.prototype.toMml.call(this);\n        var start = this.innerStack.Top();\n        if (start.isKind('start') && !start.Size()) {\n            return tree;\n        }\n        this.innerStack.Push(this.factory.create('stop'));\n        var prefix = this.innerStack.Top().toMml();\n        return this.create('node', 'mrow', [prefix, tree], {});\n    };\n    return ProofTreeItem;\n}(StackItem_js_1.BaseItem));\nexports.ProofTreeItem = ProofTreeItem;\n//# sourceMappingURL=BussproofsItems.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9idXNzcHJvb2ZzL0J1c3Nwcm9vZnNJdGVtcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCLHNDQUFzQyxrQkFBa0I7QUFDdkYsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsb0NBQW9DLG1CQUFPLENBQUMsNEVBQWdCO0FBQzVELHFCQUFxQixtQkFBTyxDQUFDLDhFQUFpQjtBQUM5QyxpQ0FBaUMsbUJBQU8sQ0FBQyxzRUFBYTtBQUN0RCxrQ0FBa0MsbUJBQU8sQ0FBQyxrR0FBcUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRFQUE0RSxHQUFHO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RDtBQUM3RDtBQUNBO0FBQ0EsQ0FBQztBQUNELHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9idXNzcHJvb2ZzL0J1c3Nwcm9vZnNJdGVtcy5qcz9mY2I5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qcm9vZlRyZWVJdGVtID0gdm9pZCAwO1xudmFyIFRleEVycm9yX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL1RleEVycm9yLmpzXCIpKTtcbnZhciBTdGFja0l0ZW1fanNfMSA9IHJlcXVpcmUoXCIuLi9TdGFja0l0ZW0uanNcIik7XG52YXIgU3RhY2tfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vU3RhY2suanNcIikpO1xudmFyIEJ1c3Nwcm9vZnNVdGlsID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL0J1c3Nwcm9vZnNVdGlsLmpzXCIpKTtcbnZhciBQcm9vZlRyZWVJdGVtID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoUHJvb2ZUcmVlSXRlbSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBQcm9vZlRyZWVJdGVtKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMubGVmdExhYmVsID0gbnVsbDtcbiAgICAgICAgX3RoaXMucmlndGhMYWJlbCA9IG51bGw7XG4gICAgICAgIF90aGlzLmlubmVyU3RhY2sgPSBuZXcgU3RhY2tfanNfMS5kZWZhdWx0KF90aGlzLmZhY3RvcnksIHt9LCB0cnVlKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUHJvb2ZUcmVlSXRlbS5wcm90b3R5cGUsIFwia2luZFwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuICdwcm9vZlRyZWUnO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG4gICAgUHJvb2ZUcmVlSXRlbS5wcm90b3R5cGUuY2hlY2tJdGVtID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgaWYgKGl0ZW0uaXNLaW5kKCdlbmQnKSAmJiBpdGVtLmdldE5hbWUoKSA9PT0gJ3Byb29mdHJlZScpIHtcbiAgICAgICAgICAgIHZhciBub2RlID0gdGhpcy50b01tbCgpO1xuICAgICAgICAgICAgQnVzc3Byb29mc1V0aWwuc2V0UHJvcGVydHkobm9kZSwgJ3Byb29mJywgdHJ1ZSk7XG4gICAgICAgICAgICByZXR1cm4gW1t0aGlzLmZhY3RvcnkuY3JlYXRlKCdtbWwnLCBub2RlKSwgaXRlbV0sIHRydWVdO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpdGVtLmlzS2luZCgnc3RvcCcpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVGV4RXJyb3JfanNfMS5kZWZhdWx0KCdFbnZNaXNzaW5nRW5kJywgJ01pc3NpbmcgXFxcXGVuZHslMX0nLCB0aGlzLmdldE5hbWUoKSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pbm5lclN0YWNrLlB1c2goaXRlbSk7XG4gICAgICAgIHJldHVybiBTdGFja0l0ZW1fanNfMS5CYXNlSXRlbS5mYWlsO1xuICAgIH07XG4gICAgUHJvb2ZUcmVlSXRlbS5wcm90b3R5cGUudG9NbWwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB0cmVlID0gX3N1cGVyLnByb3RvdHlwZS50b01tbC5jYWxsKHRoaXMpO1xuICAgICAgICB2YXIgc3RhcnQgPSB0aGlzLmlubmVyU3RhY2suVG9wKCk7XG4gICAgICAgIGlmIChzdGFydC5pc0tpbmQoJ3N0YXJ0JykgJiYgIXN0YXJ0LlNpemUoKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRyZWU7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pbm5lclN0YWNrLlB1c2godGhpcy5mYWN0b3J5LmNyZWF0ZSgnc3RvcCcpKTtcbiAgICAgICAgdmFyIHByZWZpeCA9IHRoaXMuaW5uZXJTdGFjay5Ub3AoKS50b01tbCgpO1xuICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGUoJ25vZGUnLCAnbXJvdycsIFtwcmVmaXgsIHRyZWVdLCB7fSk7XG4gICAgfTtcbiAgICByZXR1cm4gUHJvb2ZUcmVlSXRlbTtcbn0oU3RhY2tJdGVtX2pzXzEuQmFzZUl0ZW0pKTtcbmV4cG9ydHMuUHJvb2ZUcmVlSXRlbSA9IFByb29mVHJlZUl0ZW07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1CdXNzcHJvb2ZzSXRlbXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsItems.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsMappings.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsMappings.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar BussproofsMethods_js_1 = __importDefault(__webpack_require__(/*! ./BussproofsMethods.js */ \"./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsMethods.js\"));\nvar ParseMethods_js_1 = __importDefault(__webpack_require__(/*! ../ParseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/ParseMethods.js\"));\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nnew SymbolMap_js_1.CommandMap('Bussproofs-macros', {\n    AxiomC: 'Axiom',\n    UnaryInfC: ['Inference', 1],\n    BinaryInfC: ['Inference', 2],\n    TrinaryInfC: ['Inference', 3],\n    QuaternaryInfC: ['Inference', 4],\n    QuinaryInfC: ['Inference', 5],\n    RightLabel: ['Label', 'right'],\n    LeftLabel: ['Label', 'left'],\n    AXC: 'Axiom',\n    UIC: ['Inference', 1],\n    BIC: ['Inference', 2],\n    TIC: ['Inference', 3],\n    RL: ['Label', 'right'],\n    LL: ['Label', 'left'],\n    noLine: ['SetLine', 'none', false],\n    singleLine: ['SetLine', 'solid', false],\n    solidLine: ['SetLine', 'solid', false],\n    dashedLine: ['SetLine', 'dashed', false],\n    alwaysNoLine: ['SetLine', 'none', true],\n    alwaysSingleLine: ['SetLine', 'solid', true],\n    alwaysSolidLine: ['SetLine', 'solid', true],\n    alwaysDashedLine: ['SetLine', 'dashed', true],\n    rootAtTop: ['RootAtTop', true],\n    alwaysRootAtTop: ['RootAtTop', true],\n    rootAtBottom: ['RootAtTop', false],\n    alwaysRootAtBottom: ['RootAtTop', false],\n    fCenter: 'FCenter',\n    Axiom: 'AxiomF',\n    UnaryInf: ['InferenceF', 1],\n    BinaryInf: ['InferenceF', 2],\n    TrinaryInf: ['InferenceF', 3],\n    QuaternaryInf: ['InferenceF', 4],\n    QuinaryInf: ['InferenceF', 5]\n}, BussproofsMethods_js_1.default);\nnew SymbolMap_js_1.EnvironmentMap('Bussproofs-environments', ParseMethods_js_1.default.environment, {\n    prooftree: ['Prooftree', null, false]\n}, BussproofsMethods_js_1.default);\n//# sourceMappingURL=BussproofsMappings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9idXNzcHJvb2ZzL0J1c3Nwcm9vZnNNYXBwaW5ncy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZDQUE2QyxtQkFBTyxDQUFDLHdHQUF3QjtBQUM3RSx3Q0FBd0MsbUJBQU8sQ0FBQyxvRkFBb0I7QUFDcEUscUJBQXFCLG1CQUFPLENBQUMsOEVBQWlCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvYnVzc3Byb29mcy9CdXNzcHJvb2ZzTWFwcGluZ3MuanM/ZmZhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBCdXNzcHJvb2ZzTWV0aG9kc19qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL0J1c3Nwcm9vZnNNZXRob2RzLmpzXCIpKTtcbnZhciBQYXJzZU1ldGhvZHNfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vUGFyc2VNZXRob2RzLmpzXCIpKTtcbnZhciBTeW1ib2xNYXBfanNfMSA9IHJlcXVpcmUoXCIuLi9TeW1ib2xNYXAuanNcIik7XG5uZXcgU3ltYm9sTWFwX2pzXzEuQ29tbWFuZE1hcCgnQnVzc3Byb29mcy1tYWNyb3MnLCB7XG4gICAgQXhpb21DOiAnQXhpb20nLFxuICAgIFVuYXJ5SW5mQzogWydJbmZlcmVuY2UnLCAxXSxcbiAgICBCaW5hcnlJbmZDOiBbJ0luZmVyZW5jZScsIDJdLFxuICAgIFRyaW5hcnlJbmZDOiBbJ0luZmVyZW5jZScsIDNdLFxuICAgIFF1YXRlcm5hcnlJbmZDOiBbJ0luZmVyZW5jZScsIDRdLFxuICAgIFF1aW5hcnlJbmZDOiBbJ0luZmVyZW5jZScsIDVdLFxuICAgIFJpZ2h0TGFiZWw6IFsnTGFiZWwnLCAncmlnaHQnXSxcbiAgICBMZWZ0TGFiZWw6IFsnTGFiZWwnLCAnbGVmdCddLFxuICAgIEFYQzogJ0F4aW9tJyxcbiAgICBVSUM6IFsnSW5mZXJlbmNlJywgMV0sXG4gICAgQklDOiBbJ0luZmVyZW5jZScsIDJdLFxuICAgIFRJQzogWydJbmZlcmVuY2UnLCAzXSxcbiAgICBSTDogWydMYWJlbCcsICdyaWdodCddLFxuICAgIExMOiBbJ0xhYmVsJywgJ2xlZnQnXSxcbiAgICBub0xpbmU6IFsnU2V0TGluZScsICdub25lJywgZmFsc2VdLFxuICAgIHNpbmdsZUxpbmU6IFsnU2V0TGluZScsICdzb2xpZCcsIGZhbHNlXSxcbiAgICBzb2xpZExpbmU6IFsnU2V0TGluZScsICdzb2xpZCcsIGZhbHNlXSxcbiAgICBkYXNoZWRMaW5lOiBbJ1NldExpbmUnLCAnZGFzaGVkJywgZmFsc2VdLFxuICAgIGFsd2F5c05vTGluZTogWydTZXRMaW5lJywgJ25vbmUnLCB0cnVlXSxcbiAgICBhbHdheXNTaW5nbGVMaW5lOiBbJ1NldExpbmUnLCAnc29saWQnLCB0cnVlXSxcbiAgICBhbHdheXNTb2xpZExpbmU6IFsnU2V0TGluZScsICdzb2xpZCcsIHRydWVdLFxuICAgIGFsd2F5c0Rhc2hlZExpbmU6IFsnU2V0TGluZScsICdkYXNoZWQnLCB0cnVlXSxcbiAgICByb290QXRUb3A6IFsnUm9vdEF0VG9wJywgdHJ1ZV0sXG4gICAgYWx3YXlzUm9vdEF0VG9wOiBbJ1Jvb3RBdFRvcCcsIHRydWVdLFxuICAgIHJvb3RBdEJvdHRvbTogWydSb290QXRUb3AnLCBmYWxzZV0sXG4gICAgYWx3YXlzUm9vdEF0Qm90dG9tOiBbJ1Jvb3RBdFRvcCcsIGZhbHNlXSxcbiAgICBmQ2VudGVyOiAnRkNlbnRlcicsXG4gICAgQXhpb206ICdBeGlvbUYnLFxuICAgIFVuYXJ5SW5mOiBbJ0luZmVyZW5jZUYnLCAxXSxcbiAgICBCaW5hcnlJbmY6IFsnSW5mZXJlbmNlRicsIDJdLFxuICAgIFRyaW5hcnlJbmY6IFsnSW5mZXJlbmNlRicsIDNdLFxuICAgIFF1YXRlcm5hcnlJbmY6IFsnSW5mZXJlbmNlRicsIDRdLFxuICAgIFF1aW5hcnlJbmY6IFsnSW5mZXJlbmNlRicsIDVdXG59LCBCdXNzcHJvb2ZzTWV0aG9kc19qc18xLmRlZmF1bHQpO1xubmV3IFN5bWJvbE1hcF9qc18xLkVudmlyb25tZW50TWFwKCdCdXNzcHJvb2ZzLWVudmlyb25tZW50cycsIFBhcnNlTWV0aG9kc19qc18xLmRlZmF1bHQuZW52aXJvbm1lbnQsIHtcbiAgICBwcm9vZnRyZWU6IFsnUHJvb2Z0cmVlJywgbnVsbCwgZmFsc2VdXG59LCBCdXNzcHJvb2ZzTWV0aG9kc19qc18xLmRlZmF1bHQpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QnVzc3Byb29mc01hcHBpbmdzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsMappings.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsMethods.js":
/*!********************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsMethods.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar TexParser_js_1 = __importDefault(__webpack_require__(/*! ../TexParser.js */ \"./node_modules/mathjax-full/js/input/tex/TexParser.js\"));\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar BussproofsUtil = __importStar(__webpack_require__(/*! ./BussproofsUtil.js */ \"./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsUtil.js\"));\nvar BussproofsMethods = {};\nBussproofsMethods.Prooftree = function (parser, begin) {\n    parser.Push(begin);\n    var newItem = parser.itemFactory.create('proofTree').\n        setProperties({ name: begin.getName(),\n        line: 'solid', currentLine: 'solid', rootAtTop: false });\n    return newItem;\n};\nBussproofsMethods.Axiom = function (parser, name) {\n    var top = parser.stack.Top();\n    if (top.kind !== 'proofTree') {\n        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');\n    }\n    var content = paddedContent(parser, parser.GetArgument(name));\n    BussproofsUtil.setProperty(content, 'axiom', true);\n    top.Push(content);\n};\nvar paddedContent = function (parser, content) {\n    var nodes = ParseUtil_js_1.default.internalMath(parser, ParseUtil_js_1.default.trimSpaces(content), 0);\n    if (!nodes[0].childNodes[0].childNodes.length) {\n        return parser.create('node', 'mrow', []);\n    }\n    var lpad = parser.create('node', 'mspace', [], { width: '.5ex' });\n    var rpad = parser.create('node', 'mspace', [], { width: '.5ex' });\n    return parser.create('node', 'mrow', __spreadArray(__spreadArray([lpad], __read(nodes), false), [rpad], false));\n};\nBussproofsMethods.Inference = function (parser, name, n) {\n    var top = parser.stack.Top();\n    if (top.kind !== 'proofTree') {\n        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');\n    }\n    if (top.Size() < n) {\n        throw new TexError_js_1.default('BadProofTree', 'Proof tree badly specified.');\n    }\n    var rootAtTop = top.getProperty('rootAtTop');\n    var childCount = (n === 1 && !top.Peek()[0].childNodes.length) ? 0 : n;\n    var children = [];\n    do {\n        if (children.length) {\n            children.unshift(parser.create('node', 'mtd', [], {}));\n        }\n        children.unshift(parser.create('node', 'mtd', [top.Pop()], { 'rowalign': (rootAtTop ? 'top' : 'bottom') }));\n        n--;\n    } while (n > 0);\n    var row = parser.create('node', 'mtr', children, {});\n    var table = parser.create('node', 'mtable', [row], { framespacing: '0 0' });\n    var conclusion = paddedContent(parser, parser.GetArgument(name));\n    var style = top.getProperty('currentLine');\n    if (style !== top.getProperty('line')) {\n        top.setProperty('currentLine', top.getProperty('line'));\n    }\n    var rule = createRule(parser, table, [conclusion], top.getProperty('left'), top.getProperty('right'), style, rootAtTop);\n    top.setProperty('left', null);\n    top.setProperty('right', null);\n    BussproofsUtil.setProperty(rule, 'inference', childCount);\n    parser.configuration.addNode('inference', rule);\n    top.Push(rule);\n};\nfunction createRule(parser, premise, conclusions, left, right, style, rootAtTop) {\n    var upper = parser.create('node', 'mtr', [parser.create('node', 'mtd', [premise], {})], {});\n    var lower = parser.create('node', 'mtr', [parser.create('node', 'mtd', conclusions, {})], {});\n    var rule = parser.create('node', 'mtable', rootAtTop ? [lower, upper] : [upper, lower], { align: 'top 2', rowlines: style, framespacing: '0 0' });\n    BussproofsUtil.setProperty(rule, 'inferenceRule', rootAtTop ? 'up' : 'down');\n    var leftLabel, rightLabel;\n    if (left) {\n        leftLabel = parser.create('node', 'mpadded', [left], { height: '+.5em', width: '+.5em', voffset: '-.15em' });\n        BussproofsUtil.setProperty(leftLabel, 'prooflabel', 'left');\n    }\n    if (right) {\n        rightLabel = parser.create('node', 'mpadded', [right], { height: '+.5em', width: '+.5em', voffset: '-.15em' });\n        BussproofsUtil.setProperty(rightLabel, 'prooflabel', 'right');\n    }\n    var children, label;\n    if (left && right) {\n        children = [leftLabel, rule, rightLabel];\n        label = 'both';\n    }\n    else if (left) {\n        children = [leftLabel, rule];\n        label = 'left';\n    }\n    else if (right) {\n        children = [rule, rightLabel];\n        label = 'right';\n    }\n    else {\n        return rule;\n    }\n    rule = parser.create('node', 'mrow', children);\n    BussproofsUtil.setProperty(rule, 'labelledRule', label);\n    return rule;\n}\nBussproofsMethods.Label = function (parser, name, side) {\n    var top = parser.stack.Top();\n    if (top.kind !== 'proofTree') {\n        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');\n    }\n    var content = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name), 0);\n    var label = (content.length > 1) ?\n        parser.create('node', 'mrow', content, {}) : content[0];\n    top.setProperty(side, label);\n};\nBussproofsMethods.SetLine = function (parser, _name, style, always) {\n    var top = parser.stack.Top();\n    if (top.kind !== 'proofTree') {\n        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');\n    }\n    top.setProperty('currentLine', style);\n    if (always) {\n        top.setProperty('line', style);\n    }\n};\nBussproofsMethods.RootAtTop = function (parser, _name, where) {\n    var top = parser.stack.Top();\n    if (top.kind !== 'proofTree') {\n        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');\n    }\n    top.setProperty('rootAtTop', where);\n};\nBussproofsMethods.AxiomF = function (parser, name) {\n    var top = parser.stack.Top();\n    if (top.kind !== 'proofTree') {\n        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');\n    }\n    var line = parseFCenterLine(parser, name);\n    BussproofsUtil.setProperty(line, 'axiom', true);\n    top.Push(line);\n};\nfunction parseFCenterLine(parser, name) {\n    var dollar = parser.GetNext();\n    if (dollar !== '$') {\n        throw new TexError_js_1.default('IllegalUseOfCommand', 'Use of %1 does not match it\\'s definition.', name);\n    }\n    parser.i++;\n    var axiom = parser.GetUpTo(name, '$');\n    if (axiom.indexOf('\\\\fCenter') === -1) {\n        throw new TexError_js_1.default('IllegalUseOfCommand', 'Missing \\\\fCenter in %1.', name);\n    }\n    var _a = __read(axiom.split('\\\\fCenter'), 2), prem = _a[0], conc = _a[1];\n    var premise = (new TexParser_js_1.default(prem, parser.stack.env, parser.configuration)).mml();\n    var conclusion = (new TexParser_js_1.default(conc, parser.stack.env, parser.configuration)).mml();\n    var fcenter = (new TexParser_js_1.default('\\\\fCenter', parser.stack.env, parser.configuration)).mml();\n    var left = parser.create('node', 'mtd', [premise], {});\n    var middle = parser.create('node', 'mtd', [fcenter], {});\n    var right = parser.create('node', 'mtd', [conclusion], {});\n    var row = parser.create('node', 'mtr', [left, middle, right], {});\n    var table = parser.create('node', 'mtable', [row], { columnspacing: '.5ex', columnalign: 'center 2' });\n    BussproofsUtil.setProperty(table, 'sequent', true);\n    parser.configuration.addNode('sequent', row);\n    return table;\n}\nBussproofsMethods.FCenter = function (_parser, _name) { };\nBussproofsMethods.InferenceF = function (parser, name, n) {\n    var top = parser.stack.Top();\n    if (top.kind !== 'proofTree') {\n        throw new TexError_js_1.default('IllegalProofCommand', 'Proof commands only allowed in prooftree environment.');\n    }\n    if (top.Size() < n) {\n        throw new TexError_js_1.default('BadProofTree', 'Proof tree badly specified.');\n    }\n    var rootAtTop = top.getProperty('rootAtTop');\n    var childCount = (n === 1 && !top.Peek()[0].childNodes.length) ? 0 : n;\n    var children = [];\n    do {\n        if (children.length) {\n            children.unshift(parser.create('node', 'mtd', [], {}));\n        }\n        children.unshift(parser.create('node', 'mtd', [top.Pop()], { 'rowalign': (rootAtTop ? 'top' : 'bottom') }));\n        n--;\n    } while (n > 0);\n    var row = parser.create('node', 'mtr', children, {});\n    var table = parser.create('node', 'mtable', [row], { framespacing: '0 0' });\n    var conclusion = parseFCenterLine(parser, name);\n    var style = top.getProperty('currentLine');\n    if (style !== top.getProperty('line')) {\n        top.setProperty('currentLine', top.getProperty('line'));\n    }\n    var rule = createRule(parser, table, [conclusion], top.getProperty('left'), top.getProperty('right'), style, rootAtTop);\n    top.setProperty('left', null);\n    top.setProperty('right', null);\n    BussproofsUtil.setProperty(rule, 'inference', childCount);\n    parser.configuration.addNode('inference', rule);\n    top.Push(rule);\n};\nexports[\"default\"] = BussproofsMethods;\n//# sourceMappingURL=BussproofsMethods.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsMethods.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsUtil.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsUtil.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.clearDocument = exports.saveDocument = exports.makeBsprAttributes = exports.removeProperty = exports.getProperty = exports.setProperty = exports.balanceRules = void 0;\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar doc = null;\nvar item = null;\nvar getBBox = function (node) {\n    item.root = node;\n    var width = doc.outputJax.getBBox(item, doc).w;\n    return width;\n};\nvar getRule = function (node) {\n    var i = 0;\n    while (node && !NodeUtil_js_1.default.isType(node, 'mtable')) {\n        if (NodeUtil_js_1.default.isType(node, 'text')) {\n            return null;\n        }\n        if (NodeUtil_js_1.default.isType(node, 'mrow')) {\n            node = node.childNodes[0];\n            i = 0;\n            continue;\n        }\n        node = node.parent.childNodes[i];\n        i++;\n    }\n    return node;\n};\nvar getPremises = function (rule, direction) {\n    return rule.childNodes[direction === 'up' ? 1 : 0].childNodes[0].\n        childNodes[0].childNodes[0].childNodes[0];\n};\nvar getPremise = function (premises, n) {\n    return premises.childNodes[n].childNodes[0].childNodes[0];\n};\nvar firstPremise = function (premises) {\n    return getPremise(premises, 0);\n};\nvar lastPremise = function (premises) {\n    return getPremise(premises, premises.childNodes.length - 1);\n};\nvar getConclusion = function (rule, direction) {\n    return rule.childNodes[direction === 'up' ? 0 : 1].childNodes[0].childNodes[0].childNodes[0];\n};\nvar getColumn = function (inf) {\n    while (inf && !NodeUtil_js_1.default.isType(inf, 'mtd')) {\n        inf = inf.parent;\n    }\n    return inf;\n};\nvar nextSibling = function (inf) {\n    return inf.parent.childNodes[inf.parent.childNodes.indexOf(inf) + 1];\n};\nvar previousSibling = function (inf) {\n    return inf.parent.childNodes[inf.parent.childNodes.indexOf(inf) - 1];\n};\nvar getParentInf = function (inf) {\n    while (inf && (0, exports.getProperty)(inf, 'inference') == null) {\n        inf = inf.parent;\n    }\n    return inf;\n};\nvar getSpaces = function (inf, rule, right) {\n    if (right === void 0) { right = false; }\n    var result = 0;\n    if (inf === rule) {\n        return result;\n    }\n    if (inf !== rule.parent) {\n        var children_1 = inf.childNodes;\n        var index_1 = right ? children_1.length - 1 : 0;\n        if (NodeUtil_js_1.default.isType(children_1[index_1], 'mspace')) {\n            result += getBBox(children_1[index_1]);\n        }\n        inf = rule.parent;\n    }\n    if (inf === rule) {\n        return result;\n    }\n    var children = inf.childNodes;\n    var index = right ? children.length - 1 : 0;\n    if (children[index] !== rule) {\n        result += getBBox(children[index]);\n    }\n    return result;\n};\nvar adjustValue = function (inf, right) {\n    if (right === void 0) { right = false; }\n    var rule = getRule(inf);\n    var conc = getConclusion(rule, (0, exports.getProperty)(rule, 'inferenceRule'));\n    var w = getSpaces(inf, rule, right);\n    var x = getBBox(rule);\n    var y = getBBox(conc);\n    return w + ((x - y) / 2);\n};\nvar addSpace = function (config, inf, space, right) {\n    if (right === void 0) { right = false; }\n    if ((0, exports.getProperty)(inf, 'inferenceRule') ||\n        (0, exports.getProperty)(inf, 'labelledRule')) {\n        var mrow = config.nodeFactory.create('node', 'mrow');\n        inf.parent.replaceChild(mrow, inf);\n        mrow.setChildren([inf]);\n        moveProperties(inf, mrow);\n        inf = mrow;\n    }\n    var index = right ? inf.childNodes.length - 1 : 0;\n    var mspace = inf.childNodes[index];\n    if (NodeUtil_js_1.default.isType(mspace, 'mspace')) {\n        NodeUtil_js_1.default.setAttribute(mspace, 'width', ParseUtil_js_1.default.Em(ParseUtil_js_1.default.dimen2em(NodeUtil_js_1.default.getAttribute(mspace, 'width')) + space));\n        return;\n    }\n    mspace = config.nodeFactory.create('node', 'mspace', [], { width: ParseUtil_js_1.default.Em(space) });\n    if (right) {\n        inf.appendChild(mspace);\n        return;\n    }\n    mspace.parent = inf;\n    inf.childNodes.unshift(mspace);\n};\nvar moveProperties = function (src, dest) {\n    var props = ['inference', 'proof', 'maxAdjust', 'labelledRule'];\n    props.forEach(function (x) {\n        var value = (0, exports.getProperty)(src, x);\n        if (value != null) {\n            (0, exports.setProperty)(dest, x, value);\n            (0, exports.removeProperty)(src, x);\n        }\n    });\n};\nvar adjustSequents = function (config) {\n    var sequents = config.nodeLists['sequent'];\n    if (!sequents) {\n        return;\n    }\n    for (var i = sequents.length - 1, seq = void 0; seq = sequents[i]; i--) {\n        if ((0, exports.getProperty)(seq, 'sequentProcessed')) {\n            (0, exports.removeProperty)(seq, 'sequentProcessed');\n            continue;\n        }\n        var collect = [];\n        var inf = getParentInf(seq);\n        if ((0, exports.getProperty)(inf, 'inference') !== 1) {\n            continue;\n        }\n        collect.push(seq);\n        while ((0, exports.getProperty)(inf, 'inference') === 1) {\n            inf = getRule(inf);\n            var premise = firstPremise(getPremises(inf, (0, exports.getProperty)(inf, 'inferenceRule')));\n            var sequent = ((0, exports.getProperty)(premise, 'inferenceRule')) ?\n                getConclusion(premise, (0, exports.getProperty)(premise, 'inferenceRule')) :\n                premise;\n            if ((0, exports.getProperty)(sequent, 'sequent')) {\n                seq = sequent.childNodes[0];\n                collect.push(seq);\n                (0, exports.setProperty)(seq, 'sequentProcessed', true);\n            }\n            inf = premise;\n        }\n        adjustSequentPairwise(config, collect);\n    }\n};\nvar addSequentSpace = function (config, sequent, position, direction, width) {\n    var mspace = config.nodeFactory.create('node', 'mspace', [], { width: ParseUtil_js_1.default.Em(width) });\n    if (direction === 'left') {\n        var row = sequent.childNodes[position].childNodes[0];\n        mspace.parent = row;\n        row.childNodes.unshift(mspace);\n    }\n    else {\n        sequent.childNodes[position].appendChild(mspace);\n    }\n    (0, exports.setProperty)(sequent.parent, 'sequentAdjust_' + direction, width);\n};\nvar adjustSequentPairwise = function (config, sequents) {\n    var top = sequents.pop();\n    while (sequents.length) {\n        var bottom = sequents.pop();\n        var _a = __read(compareSequents(top, bottom), 2), left = _a[0], right = _a[1];\n        if ((0, exports.getProperty)(top.parent, 'axiom')) {\n            addSequentSpace(config, left < 0 ? top : bottom, 0, 'left', Math.abs(left));\n            addSequentSpace(config, right < 0 ? top : bottom, 2, 'right', Math.abs(right));\n        }\n        top = bottom;\n    }\n};\nvar compareSequents = function (top, bottom) {\n    var tr = getBBox(top.childNodes[2]);\n    var br = getBBox(bottom.childNodes[2]);\n    var tl = getBBox(top.childNodes[0]);\n    var bl = getBBox(bottom.childNodes[0]);\n    var dl = tl - bl;\n    var dr = tr - br;\n    return [dl, dr];\n};\nvar balanceRules = function (arg) {\n    var e_1, _a;\n    item = new arg.document.options.MathItem('', null, arg.math.display);\n    var config = arg.data;\n    adjustSequents(config);\n    var inferences = config.nodeLists['inference'] || [];\n    try {\n        for (var inferences_1 = __values(inferences), inferences_1_1 = inferences_1.next(); !inferences_1_1.done; inferences_1_1 = inferences_1.next()) {\n            var inf = inferences_1_1.value;\n            var isProof = (0, exports.getProperty)(inf, 'proof');\n            var rule = getRule(inf);\n            var premises = getPremises(rule, (0, exports.getProperty)(rule, 'inferenceRule'));\n            var premiseF = firstPremise(premises);\n            if ((0, exports.getProperty)(premiseF, 'inference')) {\n                var adjust_1 = adjustValue(premiseF);\n                if (adjust_1) {\n                    addSpace(config, premiseF, -adjust_1);\n                    var w_1 = getSpaces(inf, rule, false);\n                    addSpace(config, inf, adjust_1 - w_1);\n                }\n            }\n            var premiseL = lastPremise(premises);\n            if ((0, exports.getProperty)(premiseL, 'inference') == null) {\n                continue;\n            }\n            var adjust = adjustValue(premiseL, true);\n            addSpace(config, premiseL, -adjust, true);\n            var w = getSpaces(inf, rule, true);\n            var maxAdjust = (0, exports.getProperty)(inf, 'maxAdjust');\n            if (maxAdjust != null) {\n                adjust = Math.max(adjust, maxAdjust);\n            }\n            var column = void 0;\n            if (isProof || !(column = getColumn(inf))) {\n                addSpace(config, (0, exports.getProperty)(inf, 'proof') ? inf : inf.parent, adjust - w, true);\n                continue;\n            }\n            var sibling = nextSibling(column);\n            if (sibling) {\n                var pos = config.nodeFactory.create('node', 'mspace', [], { width: adjust - w + 'em' });\n                sibling.appendChild(pos);\n                inf.removeProperty('maxAdjust');\n                continue;\n            }\n            var parentRule = getParentInf(column);\n            if (!parentRule) {\n                continue;\n            }\n            adjust = (0, exports.getProperty)(parentRule, 'maxAdjust') ?\n                Math.max((0, exports.getProperty)(parentRule, 'maxAdjust'), adjust) : adjust;\n            (0, exports.setProperty)(parentRule, 'maxAdjust', adjust);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (inferences_1_1 && !inferences_1_1.done && (_a = inferences_1.return)) _a.call(inferences_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n};\nexports.balanceRules = balanceRules;\nvar property_prefix = 'bspr_';\nvar blacklistedProperties = (_a = {},\n    _a[property_prefix + 'maxAdjust'] = true,\n    _a);\nvar setProperty = function (node, property, value) {\n    NodeUtil_js_1.default.setProperty(node, property_prefix + property, value);\n};\nexports.setProperty = setProperty;\nvar getProperty = function (node, property) {\n    return NodeUtil_js_1.default.getProperty(node, property_prefix + property);\n};\nexports.getProperty = getProperty;\nvar removeProperty = function (node, property) {\n    node.removeProperty(property_prefix + property);\n};\nexports.removeProperty = removeProperty;\nvar makeBsprAttributes = function (arg) {\n    arg.data.root.walkTree(function (mml, _data) {\n        var attr = [];\n        mml.getPropertyNames().forEach(function (x) {\n            if (!blacklistedProperties[x] && x.match(RegExp('^' + property_prefix))) {\n                attr.push(x + ':' + mml.getProperty(x));\n            }\n        });\n        if (attr.length) {\n            NodeUtil_js_1.default.setAttribute(mml, 'semantics', attr.join(';'));\n        }\n    });\n};\nexports.makeBsprAttributes = makeBsprAttributes;\nvar saveDocument = function (arg) {\n    doc = arg.document;\n    if (!('getBBox' in doc.outputJax)) {\n        throw Error('The bussproofs extension requires an output jax with a getBBox() method');\n    }\n};\nexports.saveDocument = saveDocument;\nvar clearDocument = function (_arg) {\n    doc = null;\n};\nexports.clearDocument = clearDocument;\n//# sourceMappingURL=BussproofsUtil.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/bussproofs/BussproofsUtil.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/cancel/CancelConfiguration.js":
/*!******************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/cancel/CancelConfiguration.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CancelConfiguration = exports.CancelMethods = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar TexConstants_js_1 = __webpack_require__(/*! ../TexConstants.js */ \"./node_modules/mathjax-full/js/input/tex/TexConstants.js\");\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar EncloseConfiguration_js_1 = __webpack_require__(/*! ../enclose/EncloseConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/enclose/EncloseConfiguration.js\");\nexports.CancelMethods = {};\nexports.CancelMethods.Cancel = function (parser, name, notation) {\n    var attr = parser.GetBrackets(name, '');\n    var math = parser.ParseArg(name);\n    var def = ParseUtil_js_1.default.keyvalOptions(attr, EncloseConfiguration_js_1.ENCLOSE_OPTIONS);\n    def['notation'] = notation;\n    parser.Push(parser.create('node', 'menclose', [math], def));\n};\nexports.CancelMethods.CancelTo = function (parser, name) {\n    var attr = parser.GetBrackets(name, '');\n    var value = parser.ParseArg(name);\n    var math = parser.ParseArg(name);\n    var def = ParseUtil_js_1.default.keyvalOptions(attr, EncloseConfiguration_js_1.ENCLOSE_OPTIONS);\n    def['notation'] = [TexConstants_js_1.TexConstant.Notation.UPDIAGONALSTRIKE,\n        TexConstants_js_1.TexConstant.Notation.UPDIAGONALARROW,\n        TexConstants_js_1.TexConstant.Notation.NORTHEASTARROW].join(' ');\n    value = parser.create('node', 'mpadded', [value], { depth: '-.1em', height: '+.1em', voffset: '.1em' });\n    parser.Push(parser.create('node', 'msup', [parser.create('node', 'menclose', [math], def), value]));\n};\nnew SymbolMap_js_1.CommandMap('cancel', {\n    cancel: ['Cancel', TexConstants_js_1.TexConstant.Notation.UPDIAGONALSTRIKE],\n    bcancel: ['Cancel', TexConstants_js_1.TexConstant.Notation.DOWNDIAGONALSTRIKE],\n    xcancel: ['Cancel', TexConstants_js_1.TexConstant.Notation.UPDIAGONALSTRIKE + ' ' +\n            TexConstants_js_1.TexConstant.Notation.DOWNDIAGONALSTRIKE],\n    cancelto: 'CancelTo'\n}, exports.CancelMethods);\nexports.CancelConfiguration = Configuration_js_1.Configuration.create('cancel', { handler: { macro: ['cancel'] } });\n//# sourceMappingURL=CancelConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9jYW5jZWwvQ2FuY2VsQ29uZmlndXJhdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQixHQUFHLHFCQUFxQjtBQUNuRCx5QkFBeUIsbUJBQU8sQ0FBQyxzRkFBcUI7QUFDdEQsd0JBQXdCLG1CQUFPLENBQUMsb0ZBQW9CO0FBQ3BELHFCQUFxQixtQkFBTyxDQUFDLDhFQUFpQjtBQUM5QyxxQ0FBcUMsbUJBQU8sQ0FBQyw4RUFBaUI7QUFDOUQsZ0NBQWdDLG1CQUFPLENBQUMsb0hBQW9DO0FBQzVFLHFCQUFxQjtBQUNyQiw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELGtEQUFrRDtBQUMxRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELDJCQUEyQix1REFBdUQsV0FBVyxxQkFBcUI7QUFDbEgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvY2FuY2VsL0NhbmNlbENvbmZpZ3VyYXRpb24uanM/MjQwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ2FuY2VsQ29uZmlndXJhdGlvbiA9IGV4cG9ydHMuQ2FuY2VsTWV0aG9kcyA9IHZvaWQgMDtcbnZhciBDb25maWd1cmF0aW9uX2pzXzEgPSByZXF1aXJlKFwiLi4vQ29uZmlndXJhdGlvbi5qc1wiKTtcbnZhciBUZXhDb25zdGFudHNfanNfMSA9IHJlcXVpcmUoXCIuLi9UZXhDb25zdGFudHMuanNcIik7XG52YXIgU3ltYm9sTWFwX2pzXzEgPSByZXF1aXJlKFwiLi4vU3ltYm9sTWFwLmpzXCIpO1xudmFyIFBhcnNlVXRpbF9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi9QYXJzZVV0aWwuanNcIikpO1xudmFyIEVuY2xvc2VDb25maWd1cmF0aW9uX2pzXzEgPSByZXF1aXJlKFwiLi4vZW5jbG9zZS9FbmNsb3NlQ29uZmlndXJhdGlvbi5qc1wiKTtcbmV4cG9ydHMuQ2FuY2VsTWV0aG9kcyA9IHt9O1xuZXhwb3J0cy5DYW5jZWxNZXRob2RzLkNhbmNlbCA9IGZ1bmN0aW9uIChwYXJzZXIsIG5hbWUsIG5vdGF0aW9uKSB7XG4gICAgdmFyIGF0dHIgPSBwYXJzZXIuR2V0QnJhY2tldHMobmFtZSwgJycpO1xuICAgIHZhciBtYXRoID0gcGFyc2VyLlBhcnNlQXJnKG5hbWUpO1xuICAgIHZhciBkZWYgPSBQYXJzZVV0aWxfanNfMS5kZWZhdWx0LmtleXZhbE9wdGlvbnMoYXR0ciwgRW5jbG9zZUNvbmZpZ3VyYXRpb25fanNfMS5FTkNMT1NFX09QVElPTlMpO1xuICAgIGRlZlsnbm90YXRpb24nXSA9IG5vdGF0aW9uO1xuICAgIHBhcnNlci5QdXNoKHBhcnNlci5jcmVhdGUoJ25vZGUnLCAnbWVuY2xvc2UnLCBbbWF0aF0sIGRlZikpO1xufTtcbmV4cG9ydHMuQ2FuY2VsTWV0aG9kcy5DYW5jZWxUbyA9IGZ1bmN0aW9uIChwYXJzZXIsIG5hbWUpIHtcbiAgICB2YXIgYXR0ciA9IHBhcnNlci5HZXRCcmFja2V0cyhuYW1lLCAnJyk7XG4gICAgdmFyIHZhbHVlID0gcGFyc2VyLlBhcnNlQXJnKG5hbWUpO1xuICAgIHZhciBtYXRoID0gcGFyc2VyLlBhcnNlQXJnKG5hbWUpO1xuICAgIHZhciBkZWYgPSBQYXJzZVV0aWxfanNfMS5kZWZhdWx0LmtleXZhbE9wdGlvbnMoYXR0ciwgRW5jbG9zZUNvbmZpZ3VyYXRpb25fanNfMS5FTkNMT1NFX09QVElPTlMpO1xuICAgIGRlZlsnbm90YXRpb24nXSA9IFtUZXhDb25zdGFudHNfanNfMS5UZXhDb25zdGFudC5Ob3RhdGlvbi5VUERJQUdPTkFMU1RSSUtFLFxuICAgICAgICBUZXhDb25zdGFudHNfanNfMS5UZXhDb25zdGFudC5Ob3RhdGlvbi5VUERJQUdPTkFMQVJST1csXG4gICAgICAgIFRleENvbnN0YW50c19qc18xLlRleENvbnN0YW50Lk5vdGF0aW9uLk5PUlRIRUFTVEFSUk9XXS5qb2luKCcgJyk7XG4gICAgdmFsdWUgPSBwYXJzZXIuY3JlYXRlKCdub2RlJywgJ21wYWRkZWQnLCBbdmFsdWVdLCB7IGRlcHRoOiAnLS4xZW0nLCBoZWlnaHQ6ICcrLjFlbScsIHZvZmZzZXQ6ICcuMWVtJyB9KTtcbiAgICBwYXJzZXIuUHVzaChwYXJzZXIuY3JlYXRlKCdub2RlJywgJ21zdXAnLCBbcGFyc2VyLmNyZWF0ZSgnbm9kZScsICdtZW5jbG9zZScsIFttYXRoXSwgZGVmKSwgdmFsdWVdKSk7XG59O1xubmV3IFN5bWJvbE1hcF9qc18xLkNvbW1hbmRNYXAoJ2NhbmNlbCcsIHtcbiAgICBjYW5jZWw6IFsnQ2FuY2VsJywgVGV4Q29uc3RhbnRzX2pzXzEuVGV4Q29uc3RhbnQuTm90YXRpb24uVVBESUFHT05BTFNUUklLRV0sXG4gICAgYmNhbmNlbDogWydDYW5jZWwnLCBUZXhDb25zdGFudHNfanNfMS5UZXhDb25zdGFudC5Ob3RhdGlvbi5ET1dORElBR09OQUxTVFJJS0VdLFxuICAgIHhjYW5jZWw6IFsnQ2FuY2VsJywgVGV4Q29uc3RhbnRzX2pzXzEuVGV4Q29uc3RhbnQuTm90YXRpb24uVVBESUFHT05BTFNUUklLRSArICcgJyArXG4gICAgICAgICAgICBUZXhDb25zdGFudHNfanNfMS5UZXhDb25zdGFudC5Ob3RhdGlvbi5ET1dORElBR09OQUxTVFJJS0VdLFxuICAgIGNhbmNlbHRvOiAnQ2FuY2VsVG8nXG59LCBleHBvcnRzLkNhbmNlbE1ldGhvZHMpO1xuZXhwb3J0cy5DYW5jZWxDb25maWd1cmF0aW9uID0gQ29uZmlndXJhdGlvbl9qc18xLkNvbmZpZ3VyYXRpb24uY3JlYXRlKCdjYW5jZWwnLCB7IGhhbmRsZXI6IHsgbWFjcm86IFsnY2FuY2VsJ10gfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNhbmNlbENvbmZpZ3VyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/cancel/CancelConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/cases/CasesConfiguration.js":
/*!****************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/cases/CasesConfiguration.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CasesConfiguration = exports.CasesMethods = exports.CasesTags = exports.CasesBeginItem = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar BaseMethods_js_1 = __importDefault(__webpack_require__(/*! ../base/BaseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseMethods.js\"));\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar BaseItems_js_1 = __webpack_require__(/*! ../base/BaseItems.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseItems.js\");\nvar AmsConfiguration_js_1 = __webpack_require__(/*! ../ams/AmsConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/ams/AmsConfiguration.js\");\nvar EmpheqUtil_js_1 = __webpack_require__(/*! ../empheq/EmpheqUtil.js */ \"./node_modules/mathjax-full/js/input/tex/empheq/EmpheqUtil.js\");\nvar CasesBeginItem = (function (_super) {\n    __extends(CasesBeginItem, _super);\n    function CasesBeginItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(CasesBeginItem.prototype, \"kind\", {\n        get: function () {\n            return 'cases-begin';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CasesBeginItem.prototype.checkItem = function (item) {\n        if (item.isKind('end') && item.getName() === this.getName()) {\n            if (this.getProperty('end')) {\n                this.setProperty('end', false);\n                return [[], true];\n            }\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    return CasesBeginItem;\n}(BaseItems_js_1.BeginItem));\nexports.CasesBeginItem = CasesBeginItem;\nvar CasesTags = (function (_super) {\n    __extends(CasesTags, _super);\n    function CasesTags() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.subcounter = 0;\n        return _this;\n    }\n    CasesTags.prototype.start = function (env, taggable, defaultTags) {\n        this.subcounter = 0;\n        _super.prototype.start.call(this, env, taggable, defaultTags);\n    };\n    CasesTags.prototype.autoTag = function () {\n        if (this.currentTag.tag != null)\n            return;\n        if (this.currentTag.env === 'subnumcases') {\n            if (this.subcounter === 0)\n                this.counter++;\n            this.subcounter++;\n            this.tag(this.formatNumber(this.counter, this.subcounter), false);\n        }\n        else {\n            if (this.subcounter === 0 || this.currentTag.env !== 'numcases-left')\n                this.counter++;\n            this.tag(this.formatNumber(this.counter), false);\n        }\n    };\n    CasesTags.prototype.formatNumber = function (n, m) {\n        if (m === void 0) { m = null; }\n        return n.toString() + (m === null ? '' : String.fromCharCode(0x60 + m));\n    };\n    return CasesTags;\n}(AmsConfiguration_js_1.AmsTags));\nexports.CasesTags = CasesTags;\nexports.CasesMethods = {\n    NumCases: function (parser, begin) {\n        if (parser.stack.env.closing === begin.getName()) {\n            delete parser.stack.env.closing;\n            parser.Push(parser.itemFactory.create('end').setProperty('name', begin.getName()));\n            var cases = parser.stack.Top();\n            var table = cases.Last;\n            var original = ParseUtil_js_1.default.copyNode(table, parser);\n            var left = cases.getProperty('left');\n            EmpheqUtil_js_1.EmpheqUtil.left(table, original, left + '\\\\empheqlbrace\\\\,', parser, 'numcases-left');\n            parser.Push(parser.itemFactory.create('end').setProperty('name', begin.getName()));\n            return null;\n        }\n        else {\n            var left = parser.GetArgument('\\\\begin{' + begin.getName() + '}');\n            begin.setProperty('left', left);\n            var array = BaseMethods_js_1.default.EqnArray(parser, begin, true, true, 'll');\n            array.arraydef.displaystyle = false;\n            array.arraydef.rowspacing = '.2em';\n            array.setProperty('numCases', true);\n            parser.Push(begin);\n            return array;\n        }\n    },\n    Entry: function (parser, name) {\n        if (!parser.stack.Top().getProperty('numCases')) {\n            return BaseMethods_js_1.default.Entry(parser, name);\n        }\n        parser.Push(parser.itemFactory.create('cell').setProperties({ isEntry: true, name: name }));\n        var tex = parser.string;\n        var braces = 0, i = parser.i, m = tex.length;\n        while (i < m) {\n            var c = tex.charAt(i);\n            if (c === '{') {\n                braces++;\n                i++;\n            }\n            else if (c === '}') {\n                if (braces === 0) {\n                    break;\n                }\n                else {\n                    braces--;\n                    i++;\n                }\n            }\n            else if (c === '&' && braces === 0) {\n                throw new TexError_js_1.default('ExtraCasesAlignTab', 'Extra alignment tab in text for numcase environment');\n            }\n            else if (c === '\\\\' && braces === 0) {\n                var cs = (tex.slice(i + 1).match(/^[a-z]+|./i) || [])[0];\n                if (cs === '\\\\' || cs === 'cr' || cs === 'end' || cs === 'label') {\n                    break;\n                }\n                else {\n                    i += cs.length;\n                }\n            }\n            else {\n                i++;\n            }\n        }\n        var text = tex.substr(parser.i, i - parser.i).replace(/^\\s*/, '');\n        parser.PushAll(ParseUtil_js_1.default.internalMath(parser, text, 0));\n        parser.i = i;\n    }\n};\nnew SymbolMap_js_1.EnvironmentMap('cases-env', EmpheqUtil_js_1.EmpheqUtil.environment, {\n    numcases: ['NumCases', 'cases'],\n    subnumcases: ['NumCases', 'cases']\n}, exports.CasesMethods);\nnew SymbolMap_js_1.MacroMap('cases-macros', {\n    '&': 'Entry'\n}, exports.CasesMethods);\nexports.CasesConfiguration = Configuration_js_1.Configuration.create('cases', {\n    handler: {\n        environment: ['cases-env'],\n        character: ['cases-macros']\n    },\n    items: (_a = {},\n        _a[CasesBeginItem.prototype.kind] = CasesBeginItem,\n        _a),\n    tags: { 'cases': CasesTags }\n});\n//# sourceMappingURL=CasesConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/cases/CasesConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/centernot/CenternotConfiguration.js":
/*!************************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/centernot/CenternotConfiguration.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CenternotConfiguration = exports.filterCenterOver = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar TexParser_js_1 = __importDefault(__webpack_require__(/*! ../TexParser.js */ \"./node_modules/mathjax-full/js/input/tex/TexParser.js\"));\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar BaseMethods_js_1 = __importDefault(__webpack_require__(/*! ../base/BaseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseMethods.js\"));\nnew SymbolMap_js_1.CommandMap('centernot', {\n    centerOver: 'CenterOver',\n    centernot: ['Macro', '\\\\centerOver{#1}{{\\u29F8}}', 1]\n}, {\n    CenterOver: function (parser, name) {\n        var arg = '{' + parser.GetArgument(name) + '}';\n        var over = parser.ParseArg(name);\n        var base = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();\n        var mml = parser.create('node', 'TeXAtom', [\n            new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml(),\n            parser.create('node', 'mpadded', [\n                parser.create('node', 'mpadded', [over], { width: 0, lspace: '-.5width' }),\n                parser.create('node', 'mphantom', [base])\n            ], { width: 0, lspace: '-.5width' })\n        ]);\n        parser.configuration.addNode('centerOver', base);\n        parser.Push(mml);\n    },\n    Macro: BaseMethods_js_1.default.Macro\n});\nfunction filterCenterOver(_a) {\n    var e_1, _b;\n    var data = _a.data;\n    try {\n        for (var _c = __values(data.getList('centerOver')), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var base = _d.value;\n            var texClass = NodeUtil_js_1.default.getTexClass(base.childNodes[0].childNodes[0]);\n            if (texClass !== null) {\n                NodeUtil_js_1.default.setProperties(base.parent.parent.parent.parent.parent.parent, { texClass: texClass });\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\nexports.filterCenterOver = filterCenterOver;\nexports.CenternotConfiguration = Configuration_js_1.Configuration.create('centernot', {\n    handler: { macro: ['centernot'] },\n    postprocessors: [filterCenterOver]\n});\n//# sourceMappingURL=CenternotConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9jZW50ZXJub3QvQ2VudGVybm90Q29uZmlndXJhdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDhCQUE4QixHQUFHLHdCQUF3QjtBQUN6RCx5QkFBeUIsbUJBQU8sQ0FBQyxzRkFBcUI7QUFDdEQscUNBQXFDLG1CQUFPLENBQUMsOEVBQWlCO0FBQzlELG9DQUFvQyxtQkFBTyxDQUFDLDRFQUFnQjtBQUM1RCxxQkFBcUIsbUJBQU8sQ0FBQyw4RUFBaUI7QUFDOUMsdUNBQXVDLG1CQUFPLENBQUMsNEZBQXdCO0FBQ3ZFO0FBQ0E7QUFDQSx1Q0FBdUMsS0FBSyxRQUFRO0FBQ3BELENBQUM7QUFDRDtBQUNBLG9CQUFvQixpQ0FBaUM7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCw4QkFBOEI7QUFDekY7QUFDQSxpQkFBaUIsOEJBQThCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRFQUE0RSxVQUFVO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBLHNHQUFzRyxvQkFBb0I7QUFDMUg7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFFBQVE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBLHdCQUF3QjtBQUN4Qiw4QkFBOEI7QUFDOUIsZUFBZSxzQkFBc0I7QUFDckM7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvY2VudGVybm90L0NlbnRlcm5vdENvbmZpZ3VyYXRpb24uanM/NTU2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX3ZhbHVlcyA9ICh0aGlzICYmIHRoaXMuX192YWx1ZXMpIHx8IGZ1bmN0aW9uKG8pIHtcbiAgICB2YXIgcyA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBTeW1ib2wuaXRlcmF0b3IsIG0gPSBzICYmIG9bc10sIGkgPSAwO1xuICAgIGlmIChtKSByZXR1cm4gbS5jYWxsKG8pO1xuICAgIGlmIChvICYmIHR5cGVvZiBvLmxlbmd0aCA9PT0gXCJudW1iZXJcIikgcmV0dXJuIHtcbiAgICAgICAgbmV4dDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKG8gJiYgaSA+PSBvLmxlbmd0aCkgbyA9IHZvaWQgMDtcbiAgICAgICAgICAgIHJldHVybiB7IHZhbHVlOiBvICYmIG9baSsrXSwgZG9uZTogIW8gfTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihzID8gXCJPYmplY3QgaXMgbm90IGl0ZXJhYmxlLlwiIDogXCJTeW1ib2wuaXRlcmF0b3IgaXMgbm90IGRlZmluZWQuXCIpO1xufTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ2VudGVybm90Q29uZmlndXJhdGlvbiA9IGV4cG9ydHMuZmlsdGVyQ2VudGVyT3ZlciA9IHZvaWQgMDtcbnZhciBDb25maWd1cmF0aW9uX2pzXzEgPSByZXF1aXJlKFwiLi4vQ29uZmlndXJhdGlvbi5qc1wiKTtcbnZhciBUZXhQYXJzZXJfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vVGV4UGFyc2VyLmpzXCIpKTtcbnZhciBOb2RlVXRpbF9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi9Ob2RlVXRpbC5qc1wiKSk7XG52YXIgU3ltYm9sTWFwX2pzXzEgPSByZXF1aXJlKFwiLi4vU3ltYm9sTWFwLmpzXCIpO1xudmFyIEJhc2VNZXRob2RzX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL2Jhc2UvQmFzZU1ldGhvZHMuanNcIikpO1xubmV3IFN5bWJvbE1hcF9qc18xLkNvbW1hbmRNYXAoJ2NlbnRlcm5vdCcsIHtcbiAgICBjZW50ZXJPdmVyOiAnQ2VudGVyT3ZlcicsXG4gICAgY2VudGVybm90OiBbJ01hY3JvJywgJ1xcXFxjZW50ZXJPdmVyeyMxfXt7XFx1MjlGOH19JywgMV1cbn0sIHtcbiAgICBDZW50ZXJPdmVyOiBmdW5jdGlvbiAocGFyc2VyLCBuYW1lKSB7XG4gICAgICAgIHZhciBhcmcgPSAneycgKyBwYXJzZXIuR2V0QXJndW1lbnQobmFtZSkgKyAnfSc7XG4gICAgICAgIHZhciBvdmVyID0gcGFyc2VyLlBhcnNlQXJnKG5hbWUpO1xuICAgICAgICB2YXIgYmFzZSA9IG5ldyBUZXhQYXJzZXJfanNfMS5kZWZhdWx0KGFyZywgcGFyc2VyLnN0YWNrLmVudiwgcGFyc2VyLmNvbmZpZ3VyYXRpb24pLm1tbCgpO1xuICAgICAgICB2YXIgbW1sID0gcGFyc2VyLmNyZWF0ZSgnbm9kZScsICdUZVhBdG9tJywgW1xuICAgICAgICAgICAgbmV3IFRleFBhcnNlcl9qc18xLmRlZmF1bHQoYXJnLCBwYXJzZXIuc3RhY2suZW52LCBwYXJzZXIuY29uZmlndXJhdGlvbikubW1sKCksXG4gICAgICAgICAgICBwYXJzZXIuY3JlYXRlKCdub2RlJywgJ21wYWRkZWQnLCBbXG4gICAgICAgICAgICAgICAgcGFyc2VyLmNyZWF0ZSgnbm9kZScsICdtcGFkZGVkJywgW292ZXJdLCB7IHdpZHRoOiAwLCBsc3BhY2U6ICctLjV3aWR0aCcgfSksXG4gICAgICAgICAgICAgICAgcGFyc2VyLmNyZWF0ZSgnbm9kZScsICdtcGhhbnRvbScsIFtiYXNlXSlcbiAgICAgICAgICAgIF0sIHsgd2lkdGg6IDAsIGxzcGFjZTogJy0uNXdpZHRoJyB9KVxuICAgICAgICBdKTtcbiAgICAgICAgcGFyc2VyLmNvbmZpZ3VyYXRpb24uYWRkTm9kZSgnY2VudGVyT3ZlcicsIGJhc2UpO1xuICAgICAgICBwYXJzZXIuUHVzaChtbWwpO1xuICAgIH0sXG4gICAgTWFjcm86IEJhc2VNZXRob2RzX2pzXzEuZGVmYXVsdC5NYWNyb1xufSk7XG5mdW5jdGlvbiBmaWx0ZXJDZW50ZXJPdmVyKF9hKSB7XG4gICAgdmFyIGVfMSwgX2I7XG4gICAgdmFyIGRhdGEgPSBfYS5kYXRhO1xuICAgIHRyeSB7XG4gICAgICAgIGZvciAodmFyIF9jID0gX192YWx1ZXMoZGF0YS5nZXRMaXN0KCdjZW50ZXJPdmVyJykpLCBfZCA9IF9jLm5leHQoKTsgIV9kLmRvbmU7IF9kID0gX2MubmV4dCgpKSB7XG4gICAgICAgICAgICB2YXIgYmFzZSA9IF9kLnZhbHVlO1xuICAgICAgICAgICAgdmFyIHRleENsYXNzID0gTm9kZVV0aWxfanNfMS5kZWZhdWx0LmdldFRleENsYXNzKGJhc2UuY2hpbGROb2Rlc1swXS5jaGlsZE5vZGVzWzBdKTtcbiAgICAgICAgICAgIGlmICh0ZXhDbGFzcyAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIE5vZGVVdGlsX2pzXzEuZGVmYXVsdC5zZXRQcm9wZXJ0aWVzKGJhc2UucGFyZW50LnBhcmVudC5wYXJlbnQucGFyZW50LnBhcmVudC5wYXJlbnQsIHsgdGV4Q2xhc3M6IHRleENsYXNzIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNhdGNoIChlXzFfMSkgeyBlXzEgPSB7IGVycm9yOiBlXzFfMSB9OyB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoX2QgJiYgIV9kLmRvbmUgJiYgKF9iID0gX2MucmV0dXJuKSkgX2IuY2FsbChfYyk7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7IGlmIChlXzEpIHRocm93IGVfMS5lcnJvcjsgfVxuICAgIH1cbn1cbmV4cG9ydHMuZmlsdGVyQ2VudGVyT3ZlciA9IGZpbHRlckNlbnRlck92ZXI7XG5leHBvcnRzLkNlbnRlcm5vdENvbmZpZ3VyYXRpb24gPSBDb25maWd1cmF0aW9uX2pzXzEuQ29uZmlndXJhdGlvbi5jcmVhdGUoJ2NlbnRlcm5vdCcsIHtcbiAgICBoYW5kbGVyOiB7IG1hY3JvOiBbJ2NlbnRlcm5vdCddIH0sXG4gICAgcG9zdHByb2Nlc3NvcnM6IFtmaWx0ZXJDZW50ZXJPdmVyXVxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DZW50ZXJub3RDb25maWd1cmF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/centernot/CenternotConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/color/ColorConfiguration.js":
/*!****************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/color/ColorConfiguration.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ColorConfiguration = void 0;\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar ColorMethods_js_1 = __webpack_require__(/*! ./ColorMethods.js */ \"./node_modules/mathjax-full/js/input/tex/color/ColorMethods.js\");\nvar ColorUtil_js_1 = __webpack_require__(/*! ./ColorUtil.js */ \"./node_modules/mathjax-full/js/input/tex/color/ColorUtil.js\");\nnew SymbolMap_js_1.CommandMap('color', {\n    color: 'Color',\n    textcolor: 'TextColor',\n    definecolor: 'DefineColor',\n    colorbox: 'ColorBox',\n    fcolorbox: 'FColorBox'\n}, ColorMethods_js_1.ColorMethods);\nvar config = function (_config, jax) {\n    jax.parseOptions.packageData.set('color', { model: new ColorUtil_js_1.ColorModel() });\n};\nexports.ColorConfiguration = Configuration_js_1.Configuration.create('color', {\n    handler: {\n        macro: ['color'],\n    },\n    options: {\n        color: {\n            padding: '5px',\n            borderWidth: '2px'\n        }\n    },\n    config: config\n});\n//# sourceMappingURL=ColorConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9jb2xvci9Db2xvckNvbmZpZ3VyYXRpb24uanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCLHFCQUFxQixtQkFBTyxDQUFDLDhFQUFpQjtBQUM5Qyx5QkFBeUIsbUJBQU8sQ0FBQyxzRkFBcUI7QUFDdEQsd0JBQXdCLG1CQUFPLENBQUMseUZBQW1CO0FBQ25ELHFCQUFxQixtQkFBTyxDQUFDLG1GQUFnQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxnREFBZ0Qsd0NBQXdDO0FBQ3hGO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9jb2xvci9Db2xvckNvbmZpZ3VyYXRpb24uanM/ODVkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29sb3JDb25maWd1cmF0aW9uID0gdm9pZCAwO1xudmFyIFN5bWJvbE1hcF9qc18xID0gcmVxdWlyZShcIi4uL1N5bWJvbE1hcC5qc1wiKTtcbnZhciBDb25maWd1cmF0aW9uX2pzXzEgPSByZXF1aXJlKFwiLi4vQ29uZmlndXJhdGlvbi5qc1wiKTtcbnZhciBDb2xvck1ldGhvZHNfanNfMSA9IHJlcXVpcmUoXCIuL0NvbG9yTWV0aG9kcy5qc1wiKTtcbnZhciBDb2xvclV0aWxfanNfMSA9IHJlcXVpcmUoXCIuL0NvbG9yVXRpbC5qc1wiKTtcbm5ldyBTeW1ib2xNYXBfanNfMS5Db21tYW5kTWFwKCdjb2xvcicsIHtcbiAgICBjb2xvcjogJ0NvbG9yJyxcbiAgICB0ZXh0Y29sb3I6ICdUZXh0Q29sb3InLFxuICAgIGRlZmluZWNvbG9yOiAnRGVmaW5lQ29sb3InLFxuICAgIGNvbG9yYm94OiAnQ29sb3JCb3gnLFxuICAgIGZjb2xvcmJveDogJ0ZDb2xvckJveCdcbn0sIENvbG9yTWV0aG9kc19qc18xLkNvbG9yTWV0aG9kcyk7XG52YXIgY29uZmlnID0gZnVuY3Rpb24gKF9jb25maWcsIGpheCkge1xuICAgIGpheC5wYXJzZU9wdGlvbnMucGFja2FnZURhdGEuc2V0KCdjb2xvcicsIHsgbW9kZWw6IG5ldyBDb2xvclV0aWxfanNfMS5Db2xvck1vZGVsKCkgfSk7XG59O1xuZXhwb3J0cy5Db2xvckNvbmZpZ3VyYXRpb24gPSBDb25maWd1cmF0aW9uX2pzXzEuQ29uZmlndXJhdGlvbi5jcmVhdGUoJ2NvbG9yJywge1xuICAgIGhhbmRsZXI6IHtcbiAgICAgICAgbWFjcm86IFsnY29sb3InXSxcbiAgICB9LFxuICAgIG9wdGlvbnM6IHtcbiAgICAgICAgY29sb3I6IHtcbiAgICAgICAgICAgIHBhZGRpbmc6ICc1cHgnLFxuICAgICAgICAgICAgYm9yZGVyV2lkdGg6ICcycHgnXG4gICAgICAgIH1cbiAgICB9LFxuICAgIGNvbmZpZzogY29uZmlnXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbG9yQ29uZmlndXJhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/color/ColorConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/color/ColorConstants.js":
/*!************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/color/ColorConstants.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.COLORS = void 0;\nexports.COLORS = new Map([\n    ['Apricot', '#FBB982'],\n    ['Aquamarine', '#00B5BE'],\n    ['Bittersweet', '#C04F17'],\n    ['Black', '#221E1F'],\n    ['Blue', '#2D2F92'],\n    ['BlueGreen', '#00B3B8'],\n    ['BlueViolet', '#473992'],\n    ['BrickRed', '#B6321C'],\n    ['Brown', '#792500'],\n    ['BurntOrange', '#F7921D'],\n    ['CadetBlue', '#74729A'],\n    ['CarnationPink', '#F282B4'],\n    ['Cerulean', '#00A2E3'],\n    ['CornflowerBlue', '#41B0E4'],\n    ['Cyan', '#00AEEF'],\n    ['Dandelion', '#FDBC42'],\n    ['DarkOrchid', '#A4538A'],\n    ['Emerald', '#00A99D'],\n    ['ForestGreen', '#009B55'],\n    ['Fuchsia', '#8C368C'],\n    ['Goldenrod', '#FFDF42'],\n    ['Gray', '#949698'],\n    ['Green', '#00A64F'],\n    ['GreenYellow', '#DFE674'],\n    ['JungleGreen', '#00A99A'],\n    ['Lavender', '#F49EC4'],\n    ['LimeGreen', '#8DC73E'],\n    ['Magenta', '#EC008C'],\n    ['Mahogany', '#A9341F'],\n    ['Maroon', '#AF3235'],\n    ['Melon', '#F89E7B'],\n    ['MidnightBlue', '#006795'],\n    ['Mulberry', '#A93C93'],\n    ['NavyBlue', '#006EB8'],\n    ['OliveGreen', '#3C8031'],\n    ['Orange', '#F58137'],\n    ['OrangeRed', '#ED135A'],\n    ['Orchid', '#AF72B0'],\n    ['Peach', '#F7965A'],\n    ['Periwinkle', '#7977B8'],\n    ['PineGreen', '#008B72'],\n    ['Plum', '#92268F'],\n    ['ProcessBlue', '#00B0F0'],\n    ['Purple', '#99479B'],\n    ['RawSienna', '#974006'],\n    ['Red', '#ED1B23'],\n    ['RedOrange', '#F26035'],\n    ['RedViolet', '#A1246B'],\n    ['Rhodamine', '#EF559F'],\n    ['RoyalBlue', '#0071BC'],\n    ['RoyalPurple', '#613F99'],\n    ['RubineRed', '#ED017D'],\n    ['Salmon', '#F69289'],\n    ['SeaGreen', '#3FBC9D'],\n    ['Sepia', '#671800'],\n    ['SkyBlue', '#46C5DD'],\n    ['SpringGreen', '#C6DC67'],\n    ['Tan', '#DA9D76'],\n    ['TealBlue', '#00AEB3'],\n    ['Thistle', '#D883B7'],\n    ['Turquoise', '#00B4CE'],\n    ['Violet', '#58429B'],\n    ['VioletRed', '#EF58A0'],\n    ['White', '#FFFFFF'],\n    ['WildStrawberry', '#EE2967'],\n    ['Yellow', '#FFF200'],\n    ['YellowGreen', '#98CC70'],\n    ['YellowOrange', '#FAA21A'],\n]);\n//# sourceMappingURL=ColorConstants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9jb2xvci9Db2xvckNvbnN0YW50cy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2QsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvaW5wdXQvdGV4L2NvbG9yL0NvbG9yQ29uc3RhbnRzLmpzPzMzYTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNPTE9SUyA9IHZvaWQgMDtcbmV4cG9ydHMuQ09MT1JTID0gbmV3IE1hcChbXG4gICAgWydBcHJpY290JywgJyNGQkI5ODInXSxcbiAgICBbJ0FxdWFtYXJpbmUnLCAnIzAwQjVCRSddLFxuICAgIFsnQml0dGVyc3dlZXQnLCAnI0MwNEYxNyddLFxuICAgIFsnQmxhY2snLCAnIzIyMUUxRiddLFxuICAgIFsnQmx1ZScsICcjMkQyRjkyJ10sXG4gICAgWydCbHVlR3JlZW4nLCAnIzAwQjNCOCddLFxuICAgIFsnQmx1ZVZpb2xldCcsICcjNDczOTkyJ10sXG4gICAgWydCcmlja1JlZCcsICcjQjYzMjFDJ10sXG4gICAgWydCcm93bicsICcjNzkyNTAwJ10sXG4gICAgWydCdXJudE9yYW5nZScsICcjRjc5MjFEJ10sXG4gICAgWydDYWRldEJsdWUnLCAnIzc0NzI5QSddLFxuICAgIFsnQ2FybmF0aW9uUGluaycsICcjRjI4MkI0J10sXG4gICAgWydDZXJ1bGVhbicsICcjMDBBMkUzJ10sXG4gICAgWydDb3JuZmxvd2VyQmx1ZScsICcjNDFCMEU0J10sXG4gICAgWydDeWFuJywgJyMwMEFFRUYnXSxcbiAgICBbJ0RhbmRlbGlvbicsICcjRkRCQzQyJ10sXG4gICAgWydEYXJrT3JjaGlkJywgJyNBNDUzOEEnXSxcbiAgICBbJ0VtZXJhbGQnLCAnIzAwQTk5RCddLFxuICAgIFsnRm9yZXN0R3JlZW4nLCAnIzAwOUI1NSddLFxuICAgIFsnRnVjaHNpYScsICcjOEMzNjhDJ10sXG4gICAgWydHb2xkZW5yb2QnLCAnI0ZGREY0MiddLFxuICAgIFsnR3JheScsICcjOTQ5Njk4J10sXG4gICAgWydHcmVlbicsICcjMDBBNjRGJ10sXG4gICAgWydHcmVlblllbGxvdycsICcjREZFNjc0J10sXG4gICAgWydKdW5nbGVHcmVlbicsICcjMDBBOTlBJ10sXG4gICAgWydMYXZlbmRlcicsICcjRjQ5RUM0J10sXG4gICAgWydMaW1lR3JlZW4nLCAnIzhEQzczRSddLFxuICAgIFsnTWFnZW50YScsICcjRUMwMDhDJ10sXG4gICAgWydNYWhvZ2FueScsICcjQTkzNDFGJ10sXG4gICAgWydNYXJvb24nLCAnI0FGMzIzNSddLFxuICAgIFsnTWVsb24nLCAnI0Y4OUU3QiddLFxuICAgIFsnTWlkbmlnaHRCbHVlJywgJyMwMDY3OTUnXSxcbiAgICBbJ011bGJlcnJ5JywgJyNBOTNDOTMnXSxcbiAgICBbJ05hdnlCbHVlJywgJyMwMDZFQjgnXSxcbiAgICBbJ09saXZlR3JlZW4nLCAnIzNDODAzMSddLFxuICAgIFsnT3JhbmdlJywgJyNGNTgxMzcnXSxcbiAgICBbJ09yYW5nZVJlZCcsICcjRUQxMzVBJ10sXG4gICAgWydPcmNoaWQnLCAnI0FGNzJCMCddLFxuICAgIFsnUGVhY2gnLCAnI0Y3OTY1QSddLFxuICAgIFsnUGVyaXdpbmtsZScsICcjNzk3N0I4J10sXG4gICAgWydQaW5lR3JlZW4nLCAnIzAwOEI3MiddLFxuICAgIFsnUGx1bScsICcjOTIyNjhGJ10sXG4gICAgWydQcm9jZXNzQmx1ZScsICcjMDBCMEYwJ10sXG4gICAgWydQdXJwbGUnLCAnIzk5NDc5QiddLFxuICAgIFsnUmF3U2llbm5hJywgJyM5NzQwMDYnXSxcbiAgICBbJ1JlZCcsICcjRUQxQjIzJ10sXG4gICAgWydSZWRPcmFuZ2UnLCAnI0YyNjAzNSddLFxuICAgIFsnUmVkVmlvbGV0JywgJyNBMTI0NkInXSxcbiAgICBbJ1Job2RhbWluZScsICcjRUY1NTlGJ10sXG4gICAgWydSb3lhbEJsdWUnLCAnIzAwNzFCQyddLFxuICAgIFsnUm95YWxQdXJwbGUnLCAnIzYxM0Y5OSddLFxuICAgIFsnUnViaW5lUmVkJywgJyNFRDAxN0QnXSxcbiAgICBbJ1NhbG1vbicsICcjRjY5Mjg5J10sXG4gICAgWydTZWFHcmVlbicsICcjM0ZCQzlEJ10sXG4gICAgWydTZXBpYScsICcjNjcxODAwJ10sXG4gICAgWydTa3lCbHVlJywgJyM0NkM1REQnXSxcbiAgICBbJ1NwcmluZ0dyZWVuJywgJyNDNkRDNjcnXSxcbiAgICBbJ1RhbicsICcjREE5RDc2J10sXG4gICAgWydUZWFsQmx1ZScsICcjMDBBRUIzJ10sXG4gICAgWydUaGlzdGxlJywgJyNEODgzQjcnXSxcbiAgICBbJ1R1cnF1b2lzZScsICcjMDBCNENFJ10sXG4gICAgWydWaW9sZXQnLCAnIzU4NDI5QiddLFxuICAgIFsnVmlvbGV0UmVkJywgJyNFRjU4QTAnXSxcbiAgICBbJ1doaXRlJywgJyNGRkZGRkYnXSxcbiAgICBbJ1dpbGRTdHJhd2JlcnJ5JywgJyNFRTI5NjcnXSxcbiAgICBbJ1llbGxvdycsICcjRkZGMjAwJ10sXG4gICAgWydZZWxsb3dHcmVlbicsICcjOThDQzcwJ10sXG4gICAgWydZZWxsb3dPcmFuZ2UnLCAnI0ZBQTIxQSddLFxuXSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db2xvckNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/color/ColorConstants.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/color/ColorMethods.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/color/ColorMethods.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ColorMethods = void 0;\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nfunction padding(colorPadding) {\n    var pad = \"+\".concat(colorPadding);\n    var unit = colorPadding.replace(/^.*?([a-z]*)$/, '$1');\n    var pad2 = 2 * parseFloat(pad);\n    return {\n        width: \"+\".concat(pad2).concat(unit),\n        height: pad,\n        depth: pad,\n        lspace: colorPadding,\n    };\n}\nexports.ColorMethods = {};\nexports.ColorMethods.Color = function (parser, name) {\n    var model = parser.GetBrackets(name, '');\n    var colorDef = parser.GetArgument(name);\n    var colorModel = parser.configuration.packageData.get('color').model;\n    var color = colorModel.getColor(model, colorDef);\n    var style = parser.itemFactory.create('style')\n        .setProperties({ styles: { mathcolor: color } });\n    parser.stack.env['color'] = color;\n    parser.Push(style);\n};\nexports.ColorMethods.TextColor = function (parser, name) {\n    var model = parser.GetBrackets(name, '');\n    var colorDef = parser.GetArgument(name);\n    var colorModel = parser.configuration.packageData.get('color').model;\n    var color = colorModel.getColor(model, colorDef);\n    var old = parser.stack.env['color'];\n    parser.stack.env['color'] = color;\n    var math = parser.ParseArg(name);\n    if (old) {\n        parser.stack.env['color'] = old;\n    }\n    else {\n        delete parser.stack.env['color'];\n    }\n    var node = parser.create('node', 'mstyle', [math], { mathcolor: color });\n    parser.Push(node);\n};\nexports.ColorMethods.DefineColor = function (parser, name) {\n    var cname = parser.GetArgument(name);\n    var model = parser.GetArgument(name);\n    var def = parser.GetArgument(name);\n    var colorModel = parser.configuration.packageData.get('color').model;\n    colorModel.defineColor(model, cname, def);\n};\nexports.ColorMethods.ColorBox = function (parser, name) {\n    var cname = parser.GetArgument(name);\n    var math = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name));\n    var colorModel = parser.configuration.packageData.get('color').model;\n    var node = parser.create('node', 'mpadded', math, {\n        mathbackground: colorModel.getColor('named', cname)\n    });\n    NodeUtil_js_1.default.setProperties(node, padding(parser.options.color.padding));\n    parser.Push(node);\n};\nexports.ColorMethods.FColorBox = function (parser, name) {\n    var fname = parser.GetArgument(name);\n    var cname = parser.GetArgument(name);\n    var math = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name));\n    var options = parser.options.color;\n    var colorModel = parser.configuration.packageData.get('color').model;\n    var node = parser.create('node', 'mpadded', math, {\n        mathbackground: colorModel.getColor('named', cname),\n        style: \"border: \".concat(options.borderWidth, \" solid \").concat(colorModel.getColor('named', fname))\n    });\n    NodeUtil_js_1.default.setProperties(node, padding(options.padding));\n    parser.Push(node);\n};\n//# sourceMappingURL=ColorMethods.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9jb2xvci9Db2xvck1ldGhvZHMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0I7QUFDcEIsb0NBQW9DLG1CQUFPLENBQUMsNEVBQWdCO0FBQzVELHFDQUFxQyxtQkFBTyxDQUFDLDhFQUFpQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLFVBQVUsb0JBQW9CO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCxrQkFBa0I7QUFDM0U7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9jb2xvci9Db2xvck1ldGhvZHMuanM/MmQxNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29sb3JNZXRob2RzID0gdm9pZCAwO1xudmFyIE5vZGVVdGlsX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL05vZGVVdGlsLmpzXCIpKTtcbnZhciBQYXJzZVV0aWxfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vUGFyc2VVdGlsLmpzXCIpKTtcbmZ1bmN0aW9uIHBhZGRpbmcoY29sb3JQYWRkaW5nKSB7XG4gICAgdmFyIHBhZCA9IFwiK1wiLmNvbmNhdChjb2xvclBhZGRpbmcpO1xuICAgIHZhciB1bml0ID0gY29sb3JQYWRkaW5nLnJlcGxhY2UoL14uKj8oW2Etel0qKSQvLCAnJDEnKTtcbiAgICB2YXIgcGFkMiA9IDIgKiBwYXJzZUZsb2F0KHBhZCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6IFwiK1wiLmNvbmNhdChwYWQyKS5jb25jYXQodW5pdCksXG4gICAgICAgIGhlaWdodDogcGFkLFxuICAgICAgICBkZXB0aDogcGFkLFxuICAgICAgICBsc3BhY2U6IGNvbG9yUGFkZGluZyxcbiAgICB9O1xufVxuZXhwb3J0cy5Db2xvck1ldGhvZHMgPSB7fTtcbmV4cG9ydHMuQ29sb3JNZXRob2RzLkNvbG9yID0gZnVuY3Rpb24gKHBhcnNlciwgbmFtZSkge1xuICAgIHZhciBtb2RlbCA9IHBhcnNlci5HZXRCcmFja2V0cyhuYW1lLCAnJyk7XG4gICAgdmFyIGNvbG9yRGVmID0gcGFyc2VyLkdldEFyZ3VtZW50KG5hbWUpO1xuICAgIHZhciBjb2xvck1vZGVsID0gcGFyc2VyLmNvbmZpZ3VyYXRpb24ucGFja2FnZURhdGEuZ2V0KCdjb2xvcicpLm1vZGVsO1xuICAgIHZhciBjb2xvciA9IGNvbG9yTW9kZWwuZ2V0Q29sb3IobW9kZWwsIGNvbG9yRGVmKTtcbiAgICB2YXIgc3R5bGUgPSBwYXJzZXIuaXRlbUZhY3RvcnkuY3JlYXRlKCdzdHlsZScpXG4gICAgICAgIC5zZXRQcm9wZXJ0aWVzKHsgc3R5bGVzOiB7IG1hdGhjb2xvcjogY29sb3IgfSB9KTtcbiAgICBwYXJzZXIuc3RhY2suZW52Wydjb2xvciddID0gY29sb3I7XG4gICAgcGFyc2VyLlB1c2goc3R5bGUpO1xufTtcbmV4cG9ydHMuQ29sb3JNZXRob2RzLlRleHRDb2xvciA9IGZ1bmN0aW9uIChwYXJzZXIsIG5hbWUpIHtcbiAgICB2YXIgbW9kZWwgPSBwYXJzZXIuR2V0QnJhY2tldHMobmFtZSwgJycpO1xuICAgIHZhciBjb2xvckRlZiA9IHBhcnNlci5HZXRBcmd1bWVudChuYW1lKTtcbiAgICB2YXIgY29sb3JNb2RlbCA9IHBhcnNlci5jb25maWd1cmF0aW9uLnBhY2thZ2VEYXRhLmdldCgnY29sb3InKS5tb2RlbDtcbiAgICB2YXIgY29sb3IgPSBjb2xvck1vZGVsLmdldENvbG9yKG1vZGVsLCBjb2xvckRlZik7XG4gICAgdmFyIG9sZCA9IHBhcnNlci5zdGFjay5lbnZbJ2NvbG9yJ107XG4gICAgcGFyc2VyLnN0YWNrLmVudlsnY29sb3InXSA9IGNvbG9yO1xuICAgIHZhciBtYXRoID0gcGFyc2VyLlBhcnNlQXJnKG5hbWUpO1xuICAgIGlmIChvbGQpIHtcbiAgICAgICAgcGFyc2VyLnN0YWNrLmVudlsnY29sb3InXSA9IG9sZDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGRlbGV0ZSBwYXJzZXIuc3RhY2suZW52Wydjb2xvciddO1xuICAgIH1cbiAgICB2YXIgbm9kZSA9IHBhcnNlci5jcmVhdGUoJ25vZGUnLCAnbXN0eWxlJywgW21hdGhdLCB7IG1hdGhjb2xvcjogY29sb3IgfSk7XG4gICAgcGFyc2VyLlB1c2gobm9kZSk7XG59O1xuZXhwb3J0cy5Db2xvck1ldGhvZHMuRGVmaW5lQ29sb3IgPSBmdW5jdGlvbiAocGFyc2VyLCBuYW1lKSB7XG4gICAgdmFyIGNuYW1lID0gcGFyc2VyLkdldEFyZ3VtZW50KG5hbWUpO1xuICAgIHZhciBtb2RlbCA9IHBhcnNlci5HZXRBcmd1bWVudChuYW1lKTtcbiAgICB2YXIgZGVmID0gcGFyc2VyLkdldEFyZ3VtZW50KG5hbWUpO1xuICAgIHZhciBjb2xvck1vZGVsID0gcGFyc2VyLmNvbmZpZ3VyYXRpb24ucGFja2FnZURhdGEuZ2V0KCdjb2xvcicpLm1vZGVsO1xuICAgIGNvbG9yTW9kZWwuZGVmaW5lQ29sb3IobW9kZWwsIGNuYW1lLCBkZWYpO1xufTtcbmV4cG9ydHMuQ29sb3JNZXRob2RzLkNvbG9yQm94ID0gZnVuY3Rpb24gKHBhcnNlciwgbmFtZSkge1xuICAgIHZhciBjbmFtZSA9IHBhcnNlci5HZXRBcmd1bWVudChuYW1lKTtcbiAgICB2YXIgbWF0aCA9IFBhcnNlVXRpbF9qc18xLmRlZmF1bHQuaW50ZXJuYWxNYXRoKHBhcnNlciwgcGFyc2VyLkdldEFyZ3VtZW50KG5hbWUpKTtcbiAgICB2YXIgY29sb3JNb2RlbCA9IHBhcnNlci5jb25maWd1cmF0aW9uLnBhY2thZ2VEYXRhLmdldCgnY29sb3InKS5tb2RlbDtcbiAgICB2YXIgbm9kZSA9IHBhcnNlci5jcmVhdGUoJ25vZGUnLCAnbXBhZGRlZCcsIG1hdGgsIHtcbiAgICAgICAgbWF0aGJhY2tncm91bmQ6IGNvbG9yTW9kZWwuZ2V0Q29sb3IoJ25hbWVkJywgY25hbWUpXG4gICAgfSk7XG4gICAgTm9kZVV0aWxfanNfMS5kZWZhdWx0LnNldFByb3BlcnRpZXMobm9kZSwgcGFkZGluZyhwYXJzZXIub3B0aW9ucy5jb2xvci5wYWRkaW5nKSk7XG4gICAgcGFyc2VyLlB1c2gobm9kZSk7XG59O1xuZXhwb3J0cy5Db2xvck1ldGhvZHMuRkNvbG9yQm94ID0gZnVuY3Rpb24gKHBhcnNlciwgbmFtZSkge1xuICAgIHZhciBmbmFtZSA9IHBhcnNlci5HZXRBcmd1bWVudChuYW1lKTtcbiAgICB2YXIgY25hbWUgPSBwYXJzZXIuR2V0QXJndW1lbnQobmFtZSk7XG4gICAgdmFyIG1hdGggPSBQYXJzZVV0aWxfanNfMS5kZWZhdWx0LmludGVybmFsTWF0aChwYXJzZXIsIHBhcnNlci5HZXRBcmd1bWVudChuYW1lKSk7XG4gICAgdmFyIG9wdGlvbnMgPSBwYXJzZXIub3B0aW9ucy5jb2xvcjtcbiAgICB2YXIgY29sb3JNb2RlbCA9IHBhcnNlci5jb25maWd1cmF0aW9uLnBhY2thZ2VEYXRhLmdldCgnY29sb3InKS5tb2RlbDtcbiAgICB2YXIgbm9kZSA9IHBhcnNlci5jcmVhdGUoJ25vZGUnLCAnbXBhZGRlZCcsIG1hdGgsIHtcbiAgICAgICAgbWF0aGJhY2tncm91bmQ6IGNvbG9yTW9kZWwuZ2V0Q29sb3IoJ25hbWVkJywgY25hbWUpLFxuICAgICAgICBzdHlsZTogXCJib3JkZXI6IFwiLmNvbmNhdChvcHRpb25zLmJvcmRlcldpZHRoLCBcIiBzb2xpZCBcIikuY29uY2F0KGNvbG9yTW9kZWwuZ2V0Q29sb3IoJ25hbWVkJywgZm5hbWUpKVxuICAgIH0pO1xuICAgIE5vZGVVdGlsX2pzXzEuZGVmYXVsdC5zZXRQcm9wZXJ0aWVzKG5vZGUsIHBhZGRpbmcob3B0aW9ucy5wYWRkaW5nKSk7XG4gICAgcGFyc2VyLlB1c2gobm9kZSk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29sb3JNZXRob2RzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/color/ColorMethods.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/color/ColorUtil.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/color/ColorUtil.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ColorModel = void 0;\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar ColorConstants_js_1 = __webpack_require__(/*! ./ColorConstants.js */ \"./node_modules/mathjax-full/js/input/tex/color/ColorConstants.js\");\nvar ColorModelProcessors = new Map();\nvar ColorModel = (function () {\n    function ColorModel() {\n        this.userColors = new Map();\n    }\n    ColorModel.prototype.normalizeColor = function (model, def) {\n        if (!model || model === 'named') {\n            return def;\n        }\n        if (ColorModelProcessors.has(model)) {\n            var modelProcessor = ColorModelProcessors.get(model);\n            return modelProcessor(def);\n        }\n        throw new TexError_js_1.default('UndefinedColorModel', 'Color model \\'%1\\' not defined', model);\n    };\n    ColorModel.prototype.getColor = function (model, def) {\n        if (!model || model === 'named') {\n            return this.getColorByName(def);\n        }\n        return this.normalizeColor(model, def);\n    };\n    ColorModel.prototype.getColorByName = function (name) {\n        if (this.userColors.has(name)) {\n            return this.userColors.get(name);\n        }\n        if (ColorConstants_js_1.COLORS.has(name)) {\n            return ColorConstants_js_1.COLORS.get(name);\n        }\n        return name;\n    };\n    ColorModel.prototype.defineColor = function (model, name, def) {\n        var normalized = this.normalizeColor(model, def);\n        this.userColors.set(name, normalized);\n    };\n    return ColorModel;\n}());\nexports.ColorModel = ColorModel;\nColorModelProcessors.set('rgb', function (rgb) {\n    var e_1, _a;\n    var rgbParts = rgb.trim().split(/\\s*,\\s*/);\n    var RGB = '#';\n    if (rgbParts.length !== 3) {\n        throw new TexError_js_1.default('ModelArg1', 'Color values for the %1 model require 3 numbers', 'rgb');\n    }\n    try {\n        for (var rgbParts_1 = __values(rgbParts), rgbParts_1_1 = rgbParts_1.next(); !rgbParts_1_1.done; rgbParts_1_1 = rgbParts_1.next()) {\n            var rgbPart = rgbParts_1_1.value;\n            if (!rgbPart.match(/^(\\d+(\\.\\d*)?|\\.\\d+)$/)) {\n                throw new TexError_js_1.default('InvalidDecimalNumber', 'Invalid decimal number');\n            }\n            var n = parseFloat(rgbPart);\n            if (n < 0 || n > 1) {\n                throw new TexError_js_1.default('ModelArg2', 'Color values for the %1 model must be between %2 and %3', 'rgb', '0', '1');\n            }\n            var pn = Math.floor(n * 255).toString(16);\n            if (pn.length < 2) {\n                pn = '0' + pn;\n            }\n            RGB += pn;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (rgbParts_1_1 && !rgbParts_1_1.done && (_a = rgbParts_1.return)) _a.call(rgbParts_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return RGB;\n});\nColorModelProcessors.set('RGB', function (rgb) {\n    var e_2, _a;\n    var rgbParts = rgb.trim().split(/\\s*,\\s*/);\n    var RGB = '#';\n    if (rgbParts.length !== 3) {\n        throw new TexError_js_1.default('ModelArg1', 'Color values for the %1 model require 3 numbers', 'RGB');\n    }\n    try {\n        for (var rgbParts_2 = __values(rgbParts), rgbParts_2_1 = rgbParts_2.next(); !rgbParts_2_1.done; rgbParts_2_1 = rgbParts_2.next()) {\n            var rgbPart = rgbParts_2_1.value;\n            if (!rgbPart.match(/^\\d+$/)) {\n                throw new TexError_js_1.default('InvalidNumber', 'Invalid number');\n            }\n            var n = parseInt(rgbPart);\n            if (n > 255) {\n                throw new TexError_js_1.default('ModelArg2', 'Color values for the %1 model must be between %2 and %3', 'RGB', '0', '255');\n            }\n            var pn = n.toString(16);\n            if (pn.length < 2) {\n                pn = '0' + pn;\n            }\n            RGB += pn;\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (rgbParts_2_1 && !rgbParts_2_1.done && (_a = rgbParts_2.return)) _a.call(rgbParts_2);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return RGB;\n});\nColorModelProcessors.set('gray', function (gray) {\n    if (!gray.match(/^\\s*(\\d+(\\.\\d*)?|\\.\\d+)\\s*$/)) {\n        throw new TexError_js_1.default('InvalidDecimalNumber', 'Invalid decimal number');\n    }\n    var n = parseFloat(gray);\n    if (n < 0 || n > 1) {\n        throw new TexError_js_1.default('ModelArg2', 'Color values for the %1 model must be between %2 and %3', 'gray', '0', '1');\n    }\n    var pn = Math.floor(n * 255).toString(16);\n    if (pn.length < 2) {\n        pn = '0' + pn;\n    }\n    return \"#\".concat(pn).concat(pn).concat(pn);\n});\n//# sourceMappingURL=ColorUtil.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/color/ColorUtil.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/colortbl/ColortblConfiguration.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/colortbl/ColortblConfiguration.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ColortblConfiguration = exports.ColorArrayItem = void 0;\nvar BaseItems_js_1 = __webpack_require__(/*! ../base/BaseItems.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseItems.js\");\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar ColorArrayItem = (function (_super) {\n    __extends(ColorArrayItem, _super);\n    function ColorArrayItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.color = {\n            cell: '',\n            row: '',\n            col: []\n        };\n        _this.hasColor = false;\n        return _this;\n    }\n    ColorArrayItem.prototype.EndEntry = function () {\n        _super.prototype.EndEntry.call(this);\n        var cell = this.row[this.row.length - 1];\n        var color = this.color.cell || this.color.row || this.color.col[this.row.length - 1];\n        if (color) {\n            cell.attributes.set('mathbackground', color);\n            this.color.cell = '';\n            this.hasColor = true;\n        }\n    };\n    ColorArrayItem.prototype.EndRow = function () {\n        _super.prototype.EndRow.call(this);\n        this.color.row = '';\n    };\n    ColorArrayItem.prototype.createMml = function () {\n        var mml = _super.prototype.createMml.call(this);\n        var table = (mml.isKind('mrow') ? mml.childNodes[1] : mml);\n        if (table.isKind('menclose')) {\n            table = table.childNodes[0].childNodes[0];\n        }\n        if (this.hasColor && table.attributes.get('frame') === 'none') {\n            table.attributes.set('frame', '');\n        }\n        return mml;\n    };\n    return ColorArrayItem;\n}(BaseItems_js_1.ArrayItem));\nexports.ColorArrayItem = ColorArrayItem;\nnew SymbolMap_js_1.CommandMap('colortbl', {\n    cellcolor: ['TableColor', 'cell'],\n    rowcolor: ['TableColor', 'row'],\n    columncolor: ['TableColor', 'col']\n}, {\n    TableColor: function (parser, name, type) {\n        var lookup = parser.configuration.packageData.get('color').model;\n        var model = parser.GetBrackets(name, '');\n        var color = lookup.getColor(model, parser.GetArgument(name));\n        var top = parser.stack.Top();\n        if (!(top instanceof ColorArrayItem)) {\n            throw new TexError_js_1.default('UnsupportedTableColor', 'Unsupported use of %1', parser.currentCS);\n        }\n        if (type === 'col') {\n            if (top.table.length) {\n                throw new TexError_js_1.default('ColumnColorNotTop', '%1 must be in the top row', name);\n            }\n            top.color.col[top.row.length] = color;\n            if (parser.GetBrackets(name, '')) {\n                parser.GetBrackets(name, '');\n            }\n        }\n        else {\n            top.color[type] = color;\n            if (type === 'row' && (top.Size() || top.row.length)) {\n                throw new TexError_js_1.default('RowColorNotFirst', '%1 must be at the beginning of a row', name);\n            }\n        }\n    }\n});\nvar config = function (config, jax) {\n    if (!jax.parseOptions.packageData.has('color')) {\n        Configuration_js_1.ConfigurationHandler.get('color').config(config, jax);\n    }\n};\nexports.ColortblConfiguration = Configuration_js_1.Configuration.create('colortbl', {\n    handler: { macro: ['colortbl'] },\n    items: { 'array': ColorArrayItem },\n    priority: 10,\n    config: [config, 10]\n});\n//# sourceMappingURL=ColortblConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9jb2xvcnRibC9Db2xvcnRibENvbmZpZ3VyYXRpb24uanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ3ZGLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkIsR0FBRyxzQkFBc0I7QUFDdEQscUJBQXFCLG1CQUFPLENBQUMsd0ZBQXNCO0FBQ25ELHlCQUF5QixtQkFBTyxDQUFDLHNGQUFxQjtBQUN0RCxxQkFBcUIsbUJBQU8sQ0FBQyw4RUFBaUI7QUFDOUMsb0NBQW9DLG1CQUFPLENBQUMsNEVBQWdCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCLGVBQWUscUJBQXFCO0FBQ3BDLGFBQWEseUJBQXlCO0FBQ3RDO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvY29sb3J0YmwvQ29sb3J0YmxDb25maWd1cmF0aW9uLmpzPzVkOTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db2xvcnRibENvbmZpZ3VyYXRpb24gPSBleHBvcnRzLkNvbG9yQXJyYXlJdGVtID0gdm9pZCAwO1xudmFyIEJhc2VJdGVtc19qc18xID0gcmVxdWlyZShcIi4uL2Jhc2UvQmFzZUl0ZW1zLmpzXCIpO1xudmFyIENvbmZpZ3VyYXRpb25fanNfMSA9IHJlcXVpcmUoXCIuLi9Db25maWd1cmF0aW9uLmpzXCIpO1xudmFyIFN5bWJvbE1hcF9qc18xID0gcmVxdWlyZShcIi4uL1N5bWJvbE1hcC5qc1wiKTtcbnZhciBUZXhFcnJvcl9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi9UZXhFcnJvci5qc1wiKSk7XG52YXIgQ29sb3JBcnJheUl0ZW0gPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhDb2xvckFycmF5SXRlbSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBDb2xvckFycmF5SXRlbSgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLmNvbG9yID0ge1xuICAgICAgICAgICAgY2VsbDogJycsXG4gICAgICAgICAgICByb3c6ICcnLFxuICAgICAgICAgICAgY29sOiBbXVxuICAgICAgICB9O1xuICAgICAgICBfdGhpcy5oYXNDb2xvciA9IGZhbHNlO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIENvbG9yQXJyYXlJdGVtLnByb3RvdHlwZS5FbmRFbnRyeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5FbmRFbnRyeS5jYWxsKHRoaXMpO1xuICAgICAgICB2YXIgY2VsbCA9IHRoaXMucm93W3RoaXMucm93Lmxlbmd0aCAtIDFdO1xuICAgICAgICB2YXIgY29sb3IgPSB0aGlzLmNvbG9yLmNlbGwgfHwgdGhpcy5jb2xvci5yb3cgfHwgdGhpcy5jb2xvci5jb2xbdGhpcy5yb3cubGVuZ3RoIC0gMV07XG4gICAgICAgIGlmIChjb2xvcikge1xuICAgICAgICAgICAgY2VsbC5hdHRyaWJ1dGVzLnNldCgnbWF0aGJhY2tncm91bmQnLCBjb2xvcik7XG4gICAgICAgICAgICB0aGlzLmNvbG9yLmNlbGwgPSAnJztcbiAgICAgICAgICAgIHRoaXMuaGFzQ29sb3IgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBDb2xvckFycmF5SXRlbS5wcm90b3R5cGUuRW5kUm93ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBfc3VwZXIucHJvdG90eXBlLkVuZFJvdy5jYWxsKHRoaXMpO1xuICAgICAgICB0aGlzLmNvbG9yLnJvdyA9ICcnO1xuICAgIH07XG4gICAgQ29sb3JBcnJheUl0ZW0ucHJvdG90eXBlLmNyZWF0ZU1tbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIG1tbCA9IF9zdXBlci5wcm90b3R5cGUuY3JlYXRlTW1sLmNhbGwodGhpcyk7XG4gICAgICAgIHZhciB0YWJsZSA9IChtbWwuaXNLaW5kKCdtcm93JykgPyBtbWwuY2hpbGROb2Rlc1sxXSA6IG1tbCk7XG4gICAgICAgIGlmICh0YWJsZS5pc0tpbmQoJ21lbmNsb3NlJykpIHtcbiAgICAgICAgICAgIHRhYmxlID0gdGFibGUuY2hpbGROb2Rlc1swXS5jaGlsZE5vZGVzWzBdO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmhhc0NvbG9yICYmIHRhYmxlLmF0dHJpYnV0ZXMuZ2V0KCdmcmFtZScpID09PSAnbm9uZScpIHtcbiAgICAgICAgICAgIHRhYmxlLmF0dHJpYnV0ZXMuc2V0KCdmcmFtZScsICcnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbW1sO1xuICAgIH07XG4gICAgcmV0dXJuIENvbG9yQXJyYXlJdGVtO1xufShCYXNlSXRlbXNfanNfMS5BcnJheUl0ZW0pKTtcbmV4cG9ydHMuQ29sb3JBcnJheUl0ZW0gPSBDb2xvckFycmF5SXRlbTtcbm5ldyBTeW1ib2xNYXBfanNfMS5Db21tYW5kTWFwKCdjb2xvcnRibCcsIHtcbiAgICBjZWxsY29sb3I6IFsnVGFibGVDb2xvcicsICdjZWxsJ10sXG4gICAgcm93Y29sb3I6IFsnVGFibGVDb2xvcicsICdyb3cnXSxcbiAgICBjb2x1bW5jb2xvcjogWydUYWJsZUNvbG9yJywgJ2NvbCddXG59LCB7XG4gICAgVGFibGVDb2xvcjogZnVuY3Rpb24gKHBhcnNlciwgbmFtZSwgdHlwZSkge1xuICAgICAgICB2YXIgbG9va3VwID0gcGFyc2VyLmNvbmZpZ3VyYXRpb24ucGFja2FnZURhdGEuZ2V0KCdjb2xvcicpLm1vZGVsO1xuICAgICAgICB2YXIgbW9kZWwgPSBwYXJzZXIuR2V0QnJhY2tldHMobmFtZSwgJycpO1xuICAgICAgICB2YXIgY29sb3IgPSBsb29rdXAuZ2V0Q29sb3IobW9kZWwsIHBhcnNlci5HZXRBcmd1bWVudChuYW1lKSk7XG4gICAgICAgIHZhciB0b3AgPSBwYXJzZXIuc3RhY2suVG9wKCk7XG4gICAgICAgIGlmICghKHRvcCBpbnN0YW5jZW9mIENvbG9yQXJyYXlJdGVtKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFRleEVycm9yX2pzXzEuZGVmYXVsdCgnVW5zdXBwb3J0ZWRUYWJsZUNvbG9yJywgJ1Vuc3VwcG9ydGVkIHVzZSBvZiAlMScsIHBhcnNlci5jdXJyZW50Q1MpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlID09PSAnY29sJykge1xuICAgICAgICAgICAgaWYgKHRvcC50YWJsZS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVGV4RXJyb3JfanNfMS5kZWZhdWx0KCdDb2x1bW5Db2xvck5vdFRvcCcsICclMSBtdXN0IGJlIGluIHRoZSB0b3Agcm93JywgbmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0b3AuY29sb3IuY29sW3RvcC5yb3cubGVuZ3RoXSA9IGNvbG9yO1xuICAgICAgICAgICAgaWYgKHBhcnNlci5HZXRCcmFja2V0cyhuYW1lLCAnJykpIHtcbiAgICAgICAgICAgICAgICBwYXJzZXIuR2V0QnJhY2tldHMobmFtZSwgJycpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdG9wLmNvbG9yW3R5cGVdID0gY29sb3I7XG4gICAgICAgICAgICBpZiAodHlwZSA9PT0gJ3JvdycgJiYgKHRvcC5TaXplKCkgfHwgdG9wLnJvdy5sZW5ndGgpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFRleEVycm9yX2pzXzEuZGVmYXVsdCgnUm93Q29sb3JOb3RGaXJzdCcsICclMSBtdXN0IGJlIGF0IHRoZSBiZWdpbm5pbmcgb2YgYSByb3cnLCBuYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0pO1xudmFyIGNvbmZpZyA9IGZ1bmN0aW9uIChjb25maWcsIGpheCkge1xuICAgIGlmICghamF4LnBhcnNlT3B0aW9ucy5wYWNrYWdlRGF0YS5oYXMoJ2NvbG9yJykpIHtcbiAgICAgICAgQ29uZmlndXJhdGlvbl9qc18xLkNvbmZpZ3VyYXRpb25IYW5kbGVyLmdldCgnY29sb3InKS5jb25maWcoY29uZmlnLCBqYXgpO1xuICAgIH1cbn07XG5leHBvcnRzLkNvbG9ydGJsQ29uZmlndXJhdGlvbiA9IENvbmZpZ3VyYXRpb25fanNfMS5Db25maWd1cmF0aW9uLmNyZWF0ZSgnY29sb3J0YmwnLCB7XG4gICAgaGFuZGxlcjogeyBtYWNybzogWydjb2xvcnRibCddIH0sXG4gICAgaXRlbXM6IHsgJ2FycmF5JzogQ29sb3JBcnJheUl0ZW0gfSxcbiAgICBwcmlvcml0eTogMTAsXG4gICAgY29uZmlnOiBbY29uZmlnLCAxMF1cbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29sb3J0YmxDb25maWd1cmF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/colortbl/ColortblConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/colorv2/ColorV2Configuration.js":
/*!********************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/colorv2/ColorV2Configuration.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ColorConfiguration = exports.ColorV2Methods = void 0;\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nexports.ColorV2Methods = {\n    Color: function (parser, name) {\n        var color = parser.GetArgument(name);\n        var old = parser.stack.env['color'];\n        parser.stack.env['color'] = color;\n        var math = parser.ParseArg(name);\n        if (old) {\n            parser.stack.env['color'] = old;\n        }\n        else {\n            delete parser.stack.env['color'];\n        }\n        var node = parser.create('node', 'mstyle', [math], { mathcolor: color });\n        parser.Push(node);\n    }\n};\nnew SymbolMap_js_1.CommandMap('colorv2', { color: 'Color' }, exports.ColorV2Methods);\nexports.ColorConfiguration = Configuration_js_1.Configuration.create('colorv2', { handler: { macro: ['colorv2'] } });\n//# sourceMappingURL=ColorV2Configuration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9jb2xvcnYyL0NvbG9yVjJDb25maWd1cmF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQixHQUFHLHNCQUFzQjtBQUNuRCxxQkFBcUIsbUJBQU8sQ0FBQyw4RUFBaUI7QUFDOUMseUJBQXlCLG1CQUFPLENBQUMsc0ZBQXFCO0FBQ3RELHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELGtCQUFrQjtBQUMvRTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsZ0JBQWdCO0FBQzNELDBCQUEwQix3REFBd0QsV0FBVyxzQkFBc0I7QUFDbkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvY29sb3J2Mi9Db2xvclYyQ29uZmlndXJhdGlvbi5qcz85YTU2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db2xvckNvbmZpZ3VyYXRpb24gPSBleHBvcnRzLkNvbG9yVjJNZXRob2RzID0gdm9pZCAwO1xudmFyIFN5bWJvbE1hcF9qc18xID0gcmVxdWlyZShcIi4uL1N5bWJvbE1hcC5qc1wiKTtcbnZhciBDb25maWd1cmF0aW9uX2pzXzEgPSByZXF1aXJlKFwiLi4vQ29uZmlndXJhdGlvbi5qc1wiKTtcbmV4cG9ydHMuQ29sb3JWMk1ldGhvZHMgPSB7XG4gICAgQ29sb3I6IGZ1bmN0aW9uIChwYXJzZXIsIG5hbWUpIHtcbiAgICAgICAgdmFyIGNvbG9yID0gcGFyc2VyLkdldEFyZ3VtZW50KG5hbWUpO1xuICAgICAgICB2YXIgb2xkID0gcGFyc2VyLnN0YWNrLmVudlsnY29sb3InXTtcbiAgICAgICAgcGFyc2VyLnN0YWNrLmVudlsnY29sb3InXSA9IGNvbG9yO1xuICAgICAgICB2YXIgbWF0aCA9IHBhcnNlci5QYXJzZUFyZyhuYW1lKTtcbiAgICAgICAgaWYgKG9sZCkge1xuICAgICAgICAgICAgcGFyc2VyLnN0YWNrLmVudlsnY29sb3InXSA9IG9sZDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGRlbGV0ZSBwYXJzZXIuc3RhY2suZW52Wydjb2xvciddO1xuICAgICAgICB9XG4gICAgICAgIHZhciBub2RlID0gcGFyc2VyLmNyZWF0ZSgnbm9kZScsICdtc3R5bGUnLCBbbWF0aF0sIHsgbWF0aGNvbG9yOiBjb2xvciB9KTtcbiAgICAgICAgcGFyc2VyLlB1c2gobm9kZSk7XG4gICAgfVxufTtcbm5ldyBTeW1ib2xNYXBfanNfMS5Db21tYW5kTWFwKCdjb2xvcnYyJywgeyBjb2xvcjogJ0NvbG9yJyB9LCBleHBvcnRzLkNvbG9yVjJNZXRob2RzKTtcbmV4cG9ydHMuQ29sb3JDb25maWd1cmF0aW9uID0gQ29uZmlndXJhdGlvbl9qc18xLkNvbmZpZ3VyYXRpb24uY3JlYXRlKCdjb2xvcnYyJywgeyBoYW5kbGVyOiB7IG1hY3JvOiBbJ2NvbG9ydjInXSB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29sb3JWMkNvbmZpZ3VyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/colorv2/ColorV2Configuration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/configmacros/ConfigMacrosConfiguration.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/configmacros/ConfigMacrosConfiguration.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConfigMacrosConfiguration = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar Options_js_1 = __webpack_require__(/*! ../../../util/Options.js */ \"./node_modules/mathjax-full/js/util/Options.js\");\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar ParseMethods_js_1 = __importDefault(__webpack_require__(/*! ../ParseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/ParseMethods.js\"));\nvar Symbol_js_1 = __webpack_require__(/*! ../Symbol.js */ \"./node_modules/mathjax-full/js/input/tex/Symbol.js\");\nvar NewcommandMethods_js_1 = __importDefault(__webpack_require__(/*! ../newcommand/NewcommandMethods.js */ \"./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandMethods.js\"));\nvar NewcommandItems_js_1 = __webpack_require__(/*! ../newcommand/NewcommandItems.js */ \"./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandItems.js\");\nvar MACROSMAP = 'configmacros-map';\nvar ENVIRONMENTMAP = 'configmacros-env-map';\nfunction configmacrosInit(config) {\n    new SymbolMap_js_1.CommandMap(MACROSMAP, {}, {});\n    new SymbolMap_js_1.EnvironmentMap(ENVIRONMENTMAP, ParseMethods_js_1.default.environment, {}, {});\n    config.append(Configuration_js_1.Configuration.local({\n        handler: {\n            macro: [MACROSMAP],\n            environment: [ENVIRONMENTMAP]\n        },\n        priority: 3\n    }));\n}\nfunction configmacrosConfig(_config, jax) {\n    configMacros(jax);\n    configEnvironments(jax);\n}\nfunction configMacros(jax) {\n    var e_1, _a;\n    var handler = jax.parseOptions.handlers.retrieve(MACROSMAP);\n    var macros = jax.parseOptions.options.macros;\n    try {\n        for (var _b = __values(Object.keys(macros)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var cs = _c.value;\n            var def = (typeof macros[cs] === 'string' ? [macros[cs]] : macros[cs]);\n            var macro = Array.isArray(def[2]) ?\n                new Symbol_js_1.Macro(cs, NewcommandMethods_js_1.default.MacroWithTemplate, def.slice(0, 2).concat(def[2])) :\n                new Symbol_js_1.Macro(cs, NewcommandMethods_js_1.default.Macro, def);\n            handler.add(cs, macro);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n}\nfunction configEnvironments(jax) {\n    var e_2, _a;\n    var handler = jax.parseOptions.handlers.retrieve(ENVIRONMENTMAP);\n    var environments = jax.parseOptions.options.environments;\n    try {\n        for (var _b = __values(Object.keys(environments)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var env = _c.value;\n            handler.add(env, new Symbol_js_1.Macro(env, NewcommandMethods_js_1.default.BeginEnv, [true].concat(environments[env])));\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n}\nexports.ConfigMacrosConfiguration = Configuration_js_1.Configuration.create('configmacros', {\n    init: configmacrosInit,\n    config: configmacrosConfig,\n    items: (_a = {},\n        _a[NewcommandItems_js_1.BeginEnvItem.prototype.kind] = NewcommandItems_js_1.BeginEnvItem,\n        _a),\n    options: {\n        macros: (0, Options_js_1.expandable)({}),\n        environments: (0, Options_js_1.expandable)({})\n    }\n});\n//# sourceMappingURL=ConfigMacrosConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9jb25maWdtYWNyb3MvQ29uZmlnTWFjcm9zQ29uZmlndXJhdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUNBQWlDO0FBQ2pDLHlCQUF5QixtQkFBTyxDQUFDLHNGQUFxQjtBQUN0RCxtQkFBbUIsbUJBQU8sQ0FBQyxnRkFBMEI7QUFDckQscUJBQXFCLG1CQUFPLENBQUMsOEVBQWlCO0FBQzlDLHdDQUF3QyxtQkFBTyxDQUFDLG9GQUFvQjtBQUNwRSxrQkFBa0IsbUJBQU8sQ0FBQyx3RUFBYztBQUN4Qyw2Q0FBNkMsbUJBQU8sQ0FBQyxvSEFBb0M7QUFDekYsMkJBQTJCLG1CQUFPLENBQUMsZ0hBQWtDO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxJQUFJO0FBQ25ELCtGQUErRixJQUFJO0FBQ25HO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUVBQXFFLFVBQVU7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkVBQTJFLFVBQVU7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsUUFBUTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsK0NBQStDO0FBQy9DLHFEQUFxRDtBQUNyRDtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9jb25maWdtYWNyb3MvQ29uZmlnTWFjcm9zQ29uZmlndXJhdGlvbi5qcz81OGZiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fdmFsdWVzID0gKHRoaXMgJiYgdGhpcy5fX3ZhbHVlcykgfHwgZnVuY3Rpb24obykge1xuICAgIHZhciBzID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIFN5bWJvbC5pdGVyYXRvciwgbSA9IHMgJiYgb1tzXSwgaSA9IDA7XG4gICAgaWYgKG0pIHJldHVybiBtLmNhbGwobyk7XG4gICAgaWYgKG8gJiYgdHlwZW9mIG8ubGVuZ3RoID09PSBcIm51bWJlclwiKSByZXR1cm4ge1xuICAgICAgICBuZXh0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAobyAmJiBpID49IG8ubGVuZ3RoKSBvID0gdm9pZCAwO1xuICAgICAgICAgICAgcmV0dXJuIHsgdmFsdWU6IG8gJiYgb1tpKytdLCBkb25lOiAhbyB9O1xuICAgICAgICB9XG4gICAgfTtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHMgPyBcIk9iamVjdCBpcyBub3QgaXRlcmFibGUuXCIgOiBcIlN5bWJvbC5pdGVyYXRvciBpcyBub3QgZGVmaW5lZC5cIik7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xudmFyIF9hO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25maWdNYWNyb3NDb25maWd1cmF0aW9uID0gdm9pZCAwO1xudmFyIENvbmZpZ3VyYXRpb25fanNfMSA9IHJlcXVpcmUoXCIuLi9Db25maWd1cmF0aW9uLmpzXCIpO1xudmFyIE9wdGlvbnNfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlsL09wdGlvbnMuanNcIik7XG52YXIgU3ltYm9sTWFwX2pzXzEgPSByZXF1aXJlKFwiLi4vU3ltYm9sTWFwLmpzXCIpO1xudmFyIFBhcnNlTWV0aG9kc19qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi9QYXJzZU1ldGhvZHMuanNcIikpO1xudmFyIFN5bWJvbF9qc18xID0gcmVxdWlyZShcIi4uL1N5bWJvbC5qc1wiKTtcbnZhciBOZXdjb21tYW5kTWV0aG9kc19qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi9uZXdjb21tYW5kL05ld2NvbW1hbmRNZXRob2RzLmpzXCIpKTtcbnZhciBOZXdjb21tYW5kSXRlbXNfanNfMSA9IHJlcXVpcmUoXCIuLi9uZXdjb21tYW5kL05ld2NvbW1hbmRJdGVtcy5qc1wiKTtcbnZhciBNQUNST1NNQVAgPSAnY29uZmlnbWFjcm9zLW1hcCc7XG52YXIgRU5WSVJPTk1FTlRNQVAgPSAnY29uZmlnbWFjcm9zLWVudi1tYXAnO1xuZnVuY3Rpb24gY29uZmlnbWFjcm9zSW5pdChjb25maWcpIHtcbiAgICBuZXcgU3ltYm9sTWFwX2pzXzEuQ29tbWFuZE1hcChNQUNST1NNQVAsIHt9LCB7fSk7XG4gICAgbmV3IFN5bWJvbE1hcF9qc18xLkVudmlyb25tZW50TWFwKEVOVklST05NRU5UTUFQLCBQYXJzZU1ldGhvZHNfanNfMS5kZWZhdWx0LmVudmlyb25tZW50LCB7fSwge30pO1xuICAgIGNvbmZpZy5hcHBlbmQoQ29uZmlndXJhdGlvbl9qc18xLkNvbmZpZ3VyYXRpb24ubG9jYWwoe1xuICAgICAgICBoYW5kbGVyOiB7XG4gICAgICAgICAgICBtYWNybzogW01BQ1JPU01BUF0sXG4gICAgICAgICAgICBlbnZpcm9ubWVudDogW0VOVklST05NRU5UTUFQXVxuICAgICAgICB9LFxuICAgICAgICBwcmlvcml0eTogM1xuICAgIH0pKTtcbn1cbmZ1bmN0aW9uIGNvbmZpZ21hY3Jvc0NvbmZpZyhfY29uZmlnLCBqYXgpIHtcbiAgICBjb25maWdNYWNyb3MoamF4KTtcbiAgICBjb25maWdFbnZpcm9ubWVudHMoamF4KTtcbn1cbmZ1bmN0aW9uIGNvbmZpZ01hY3JvcyhqYXgpIHtcbiAgICB2YXIgZV8xLCBfYTtcbiAgICB2YXIgaGFuZGxlciA9IGpheC5wYXJzZU9wdGlvbnMuaGFuZGxlcnMucmV0cmlldmUoTUFDUk9TTUFQKTtcbiAgICB2YXIgbWFjcm9zID0gamF4LnBhcnNlT3B0aW9ucy5vcHRpb25zLm1hY3JvcztcbiAgICB0cnkge1xuICAgICAgICBmb3IgKHZhciBfYiA9IF9fdmFsdWVzKE9iamVjdC5rZXlzKG1hY3JvcykpLCBfYyA9IF9iLm5leHQoKTsgIV9jLmRvbmU7IF9jID0gX2IubmV4dCgpKSB7XG4gICAgICAgICAgICB2YXIgY3MgPSBfYy52YWx1ZTtcbiAgICAgICAgICAgIHZhciBkZWYgPSAodHlwZW9mIG1hY3Jvc1tjc10gPT09ICdzdHJpbmcnID8gW21hY3Jvc1tjc11dIDogbWFjcm9zW2NzXSk7XG4gICAgICAgICAgICB2YXIgbWFjcm8gPSBBcnJheS5pc0FycmF5KGRlZlsyXSkgP1xuICAgICAgICAgICAgICAgIG5ldyBTeW1ib2xfanNfMS5NYWNybyhjcywgTmV3Y29tbWFuZE1ldGhvZHNfanNfMS5kZWZhdWx0Lk1hY3JvV2l0aFRlbXBsYXRlLCBkZWYuc2xpY2UoMCwgMikuY29uY2F0KGRlZlsyXSkpIDpcbiAgICAgICAgICAgICAgICBuZXcgU3ltYm9sX2pzXzEuTWFjcm8oY3MsIE5ld2NvbW1hbmRNZXRob2RzX2pzXzEuZGVmYXVsdC5NYWNybywgZGVmKTtcbiAgICAgICAgICAgIGhhbmRsZXIuYWRkKGNzLCBtYWNybyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2F0Y2ggKGVfMV8xKSB7IGVfMSA9IHsgZXJyb3I6IGVfMV8xIH07IH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChfYyAmJiAhX2MuZG9uZSAmJiAoX2EgPSBfYi5yZXR1cm4pKSBfYS5jYWxsKF9iKTtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHsgaWYgKGVfMSkgdGhyb3cgZV8xLmVycm9yOyB9XG4gICAgfVxufVxuZnVuY3Rpb24gY29uZmlnRW52aXJvbm1lbnRzKGpheCkge1xuICAgIHZhciBlXzIsIF9hO1xuICAgIHZhciBoYW5kbGVyID0gamF4LnBhcnNlT3B0aW9ucy5oYW5kbGVycy5yZXRyaWV2ZShFTlZJUk9OTUVOVE1BUCk7XG4gICAgdmFyIGVudmlyb25tZW50cyA9IGpheC5wYXJzZU9wdGlvbnMub3B0aW9ucy5lbnZpcm9ubWVudHM7XG4gICAgdHJ5IHtcbiAgICAgICAgZm9yICh2YXIgX2IgPSBfX3ZhbHVlcyhPYmplY3Qua2V5cyhlbnZpcm9ubWVudHMpKSwgX2MgPSBfYi5uZXh0KCk7ICFfYy5kb25lOyBfYyA9IF9iLm5leHQoKSkge1xuICAgICAgICAgICAgdmFyIGVudiA9IF9jLnZhbHVlO1xuICAgICAgICAgICAgaGFuZGxlci5hZGQoZW52LCBuZXcgU3ltYm9sX2pzXzEuTWFjcm8oZW52LCBOZXdjb21tYW5kTWV0aG9kc19qc18xLmRlZmF1bHQuQmVnaW5FbnYsIFt0cnVlXS5jb25jYXQoZW52aXJvbm1lbnRzW2Vudl0pKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2F0Y2ggKGVfMl8xKSB7IGVfMiA9IHsgZXJyb3I6IGVfMl8xIH07IH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChfYyAmJiAhX2MuZG9uZSAmJiAoX2EgPSBfYi5yZXR1cm4pKSBfYS5jYWxsKF9iKTtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHsgaWYgKGVfMikgdGhyb3cgZV8yLmVycm9yOyB9XG4gICAgfVxufVxuZXhwb3J0cy5Db25maWdNYWNyb3NDb25maWd1cmF0aW9uID0gQ29uZmlndXJhdGlvbl9qc18xLkNvbmZpZ3VyYXRpb24uY3JlYXRlKCdjb25maWdtYWNyb3MnLCB7XG4gICAgaW5pdDogY29uZmlnbWFjcm9zSW5pdCxcbiAgICBjb25maWc6IGNvbmZpZ21hY3Jvc0NvbmZpZyxcbiAgICBpdGVtczogKF9hID0ge30sXG4gICAgICAgIF9hW05ld2NvbW1hbmRJdGVtc19qc18xLkJlZ2luRW52SXRlbS5wcm90b3R5cGUua2luZF0gPSBOZXdjb21tYW5kSXRlbXNfanNfMS5CZWdpbkVudkl0ZW0sXG4gICAgICAgIF9hKSxcbiAgICBvcHRpb25zOiB7XG4gICAgICAgIG1hY3JvczogKDAsIE9wdGlvbnNfanNfMS5leHBhbmRhYmxlKSh7fSksXG4gICAgICAgIGVudmlyb25tZW50czogKDAsIE9wdGlvbnNfanNfMS5leHBhbmRhYmxlKSh7fSlcbiAgICB9XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbmZpZ01hY3Jvc0NvbmZpZ3VyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/configmacros/ConfigMacrosConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/empheq/EmpheqConfiguration.js":
/*!******************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/empheq/EmpheqConfiguration.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EmpheqConfiguration = exports.EmpheqMethods = exports.EmpheqBeginItem = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar BaseItems_js_1 = __webpack_require__(/*! ../base/BaseItems.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseItems.js\");\nvar EmpheqUtil_js_1 = __webpack_require__(/*! ./EmpheqUtil.js */ \"./node_modules/mathjax-full/js/input/tex/empheq/EmpheqUtil.js\");\nvar EmpheqBeginItem = (function (_super) {\n    __extends(EmpheqBeginItem, _super);\n    function EmpheqBeginItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(EmpheqBeginItem.prototype, \"kind\", {\n        get: function () {\n            return 'empheq-begin';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    EmpheqBeginItem.prototype.checkItem = function (item) {\n        if (item.isKind('end') && item.getName() === this.getName()) {\n            this.setProperty('end', false);\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    return EmpheqBeginItem;\n}(BaseItems_js_1.BeginItem));\nexports.EmpheqBeginItem = EmpheqBeginItem;\nexports.EmpheqMethods = {\n    Empheq: function (parser, begin) {\n        if (parser.stack.env.closing === begin.getName()) {\n            delete parser.stack.env.closing;\n            parser.Push(parser.itemFactory.create('end').setProperty('name', parser.stack.global.empheq));\n            parser.stack.global.empheq = '';\n            var empheq = parser.stack.Top();\n            EmpheqUtil_js_1.EmpheqUtil.adjustTable(empheq, parser);\n            parser.Push(parser.itemFactory.create('end').setProperty('name', 'empheq'));\n        }\n        else {\n            ParseUtil_js_1.default.checkEqnEnv(parser);\n            delete parser.stack.global.eqnenv;\n            var opts = parser.GetBrackets('\\\\begin{' + begin.getName() + '}') || '';\n            var _a = __read((parser.GetArgument('\\\\begin{' + begin.getName() + '}') || '').split(/=/), 2), env = _a[0], n = _a[1];\n            if (!EmpheqUtil_js_1.EmpheqUtil.checkEnv(env)) {\n                throw new TexError_js_1.default('UnknownEnv', 'Unknown environment \"%1\"', env);\n            }\n            if (opts) {\n                begin.setProperties(EmpheqUtil_js_1.EmpheqUtil.splitOptions(opts, { left: 1, right: 1 }));\n            }\n            parser.stack.global.empheq = env;\n            parser.string = '\\\\begin{' + env + '}' + (n ? '{' + n + '}' : '') + parser.string.slice(parser.i);\n            parser.i = 0;\n            parser.Push(begin);\n        }\n    },\n    EmpheqMO: function (parser, _name, c) {\n        parser.Push(parser.create('token', 'mo', {}, c));\n    },\n    EmpheqDelim: function (parser, name) {\n        var c = parser.GetDelimiter(name);\n        parser.Push(parser.create('token', 'mo', { stretchy: true, symmetric: true }, c));\n    }\n};\nnew SymbolMap_js_1.EnvironmentMap('empheq-env', EmpheqUtil_js_1.EmpheqUtil.environment, {\n    empheq: ['Empheq', 'empheq'],\n}, exports.EmpheqMethods);\nnew SymbolMap_js_1.CommandMap('empheq-macros', {\n    empheqlbrace: ['EmpheqMO', '{'],\n    empheqrbrace: ['EmpheqMO', '}'],\n    empheqlbrack: ['EmpheqMO', '['],\n    empheqrbrack: ['EmpheqMO', ']'],\n    empheqlangle: ['EmpheqMO', '\\u27E8'],\n    empheqrangle: ['EmpheqMO', '\\u27E9'],\n    empheqlparen: ['EmpheqMO', '('],\n    empheqrparen: ['EmpheqMO', ')'],\n    empheqlvert: ['EmpheqMO', '|'],\n    empheqrvert: ['EmpheqMO', '|'],\n    empheqlVert: ['EmpheqMO', '\\u2016'],\n    empheqrVert: ['EmpheqMO', '\\u2016'],\n    empheqlfloor: ['EmpheqMO', '\\u230A'],\n    empheqrfloor: ['EmpheqMO', '\\u230B'],\n    empheqlceil: ['EmpheqMO', '\\u2308'],\n    empheqrceil: ['EmpheqMO', '\\u2309'],\n    empheqbiglbrace: ['EmpheqMO', '{'],\n    empheqbigrbrace: ['EmpheqMO', '}'],\n    empheqbiglbrack: ['EmpheqMO', '['],\n    empheqbigrbrack: ['EmpheqMO', ']'],\n    empheqbiglangle: ['EmpheqMO', '\\u27E8'],\n    empheqbigrangle: ['EmpheqMO', '\\u27E9'],\n    empheqbiglparen: ['EmpheqMO', '('],\n    empheqbigrparen: ['EmpheqMO', ')'],\n    empheqbiglvert: ['EmpheqMO', '|'],\n    empheqbigrvert: ['EmpheqMO', '|'],\n    empheqbiglVert: ['EmpheqMO', '\\u2016'],\n    empheqbigrVert: ['EmpheqMO', '\\u2016'],\n    empheqbiglfloor: ['EmpheqMO', '\\u230A'],\n    empheqbigrfloor: ['EmpheqMO', '\\u230B'],\n    empheqbiglceil: ['EmpheqMO', '\\u2308'],\n    empheqbigrceil: ['EmpheqMO', '\\u2309'],\n    empheql: 'EmpheqDelim',\n    empheqr: 'EmpheqDelim',\n    empheqbigl: 'EmpheqDelim',\n    empheqbigr: 'EmpheqDelim'\n}, exports.EmpheqMethods);\nexports.EmpheqConfiguration = Configuration_js_1.Configuration.create('empheq', {\n    handler: {\n        macro: ['empheq-macros'],\n        environment: ['empheq-env'],\n    },\n    items: (_a = {},\n        _a[EmpheqBeginItem.prototype.kind] = EmpheqBeginItem,\n        _a)\n});\n//# sourceMappingURL=EmpheqConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/empheq/EmpheqConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/empheq/EmpheqUtil.js":
/*!*********************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/empheq/EmpheqUtil.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EmpheqUtil = void 0;\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar TexParser_js_1 = __importDefault(__webpack_require__(/*! ../TexParser.js */ \"./node_modules/mathjax-full/js/input/tex/TexParser.js\"));\nexports.EmpheqUtil = {\n    environment: function (parser, env, func, args) {\n        var name = args[0];\n        var item = parser.itemFactory.create(name + '-begin').setProperties({ name: env, end: name });\n        parser.Push(func.apply(void 0, __spreadArray([parser, item], __read(args.slice(1)), false)));\n    },\n    splitOptions: function (text, allowed) {\n        if (allowed === void 0) { allowed = null; }\n        return ParseUtil_js_1.default.keyvalOptions(text, allowed, true);\n    },\n    columnCount: function (table) {\n        var e_1, _a;\n        var m = 0;\n        try {\n            for (var _b = __values(table.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var row = _c.value;\n                var n = row.childNodes.length - (row.isKind('mlabeledtr') ? 1 : 0);\n                if (n > m)\n                    m = n;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return m;\n    },\n    cellBlock: function (tex, table, parser, env) {\n        var e_2, _a;\n        var mpadded = parser.create('node', 'mpadded', [], { height: 0, depth: 0, voffset: '-1height' });\n        var result = new TexParser_js_1.default(tex, parser.stack.env, parser.configuration);\n        var mml = result.mml();\n        if (env && result.configuration.tags.label) {\n            result.configuration.tags.currentTag.env = env;\n            result.configuration.tags.getTag(true);\n        }\n        try {\n            for (var _b = __values((mml.isInferred ? mml.childNodes : [mml])), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                mpadded.appendChild(child);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        mpadded.appendChild(parser.create('node', 'mphantom', [\n            parser.create('node', 'mpadded', [table], { width: 0 })\n        ]));\n        return mpadded;\n    },\n    topRowTable: function (original, parser) {\n        var table = ParseUtil_js_1.default.copyNode(original, parser);\n        table.setChildren(table.childNodes.slice(0, 1));\n        table.attributes.set('align', 'baseline 1');\n        return original.factory.create('mphantom', {}, [parser.create('node', 'mpadded', [table], { width: 0 })]);\n    },\n    rowspanCell: function (mtd, tex, table, parser, env) {\n        mtd.appendChild(parser.create('node', 'mpadded', [\n            this.cellBlock(tex, ParseUtil_js_1.default.copyNode(table, parser), parser, env),\n            this.topRowTable(table, parser)\n        ], { height: 0, depth: 0, voffset: 'height' }));\n    },\n    left: function (table, original, left, parser, env) {\n        var e_3, _a;\n        if (env === void 0) { env = ''; }\n        table.attributes.set('columnalign', 'right ' + (table.attributes.get('columnalign') || ''));\n        table.attributes.set('columnspacing', '0em ' + (table.attributes.get('columnspacing') || ''));\n        var mtd;\n        try {\n            for (var _b = __values(table.childNodes.slice(0).reverse()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var row = _c.value;\n                mtd = parser.create('node', 'mtd');\n                row.childNodes.unshift(mtd);\n                mtd.parent = row;\n                if (row.isKind('mlabeledtr')) {\n                    row.childNodes[0] = row.childNodes[1];\n                    row.childNodes[1] = mtd;\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        this.rowspanCell(mtd, left, original, parser, env);\n    },\n    right: function (table, original, right, parser, env) {\n        if (env === void 0) { env = ''; }\n        if (table.childNodes.length === 0) {\n            table.appendChild(parser.create('node', 'mtr'));\n        }\n        var m = exports.EmpheqUtil.columnCount(table);\n        var row = table.childNodes[0];\n        while (row.childNodes.length < m)\n            row.appendChild(parser.create('node', 'mtd'));\n        var mtd = row.appendChild(parser.create('node', 'mtd'));\n        exports.EmpheqUtil.rowspanCell(mtd, right, original, parser, env);\n        table.attributes.set('columnalign', (table.attributes.get('columnalign') || '').split(/ /).slice(0, m).join(' ') + ' left');\n        table.attributes.set('columnspacing', (table.attributes.get('columnspacing') || '').split(/ /).slice(0, m - 1).join(' ') + ' 0em');\n    },\n    adjustTable: function (empheq, parser) {\n        var left = empheq.getProperty('left');\n        var right = empheq.getProperty('right');\n        if (left || right) {\n            var table = empheq.Last;\n            var original = ParseUtil_js_1.default.copyNode(table, parser);\n            if (left)\n                this.left(table, original, left, parser);\n            if (right)\n                this.right(table, original, right, parser);\n        }\n    },\n    allowEnv: {\n        equation: true,\n        align: true,\n        gather: true,\n        flalign: true,\n        alignat: true,\n        multline: true\n    },\n    checkEnv: function (env) {\n        return this.allowEnv.hasOwnProperty(env.replace(/\\*$/, '')) || false;\n    }\n};\n//# sourceMappingURL=EmpheqUtil.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/empheq/EmpheqUtil.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/enclose/EncloseConfiguration.js":
/*!********************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/enclose/EncloseConfiguration.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EncloseConfiguration = exports.EncloseMethods = exports.ENCLOSE_OPTIONS = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nexports.ENCLOSE_OPTIONS = {\n    'data-arrowhead': 1,\n    color: 1,\n    mathcolor: 1,\n    background: 1,\n    mathbackground: 1,\n    'data-padding': 1,\n    'data-thickness': 1\n};\nexports.EncloseMethods = {};\nexports.EncloseMethods.Enclose = function (parser, name) {\n    var notation = parser.GetArgument(name).replace(/,/g, ' ');\n    var attr = parser.GetBrackets(name, '');\n    var math = parser.ParseArg(name);\n    var def = ParseUtil_js_1.default.keyvalOptions(attr, exports.ENCLOSE_OPTIONS);\n    def.notation = notation;\n    parser.Push(parser.create('node', 'menclose', [math], def));\n};\nnew SymbolMap_js_1.CommandMap('enclose', { enclose: 'Enclose' }, exports.EncloseMethods);\nexports.EncloseConfiguration = Configuration_js_1.Configuration.create('enclose', { handler: { macro: ['enclose'] } });\n//# sourceMappingURL=EncloseConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9lbmNsb3NlL0VuY2xvc2VDb25maWd1cmF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCLEdBQUcsc0JBQXNCLEdBQUcsdUJBQXVCO0FBQy9FLHlCQUF5QixtQkFBTyxDQUFDLHNGQUFxQjtBQUN0RCxxQkFBcUIsbUJBQU8sQ0FBQyw4RUFBaUI7QUFDOUMscUNBQXFDLG1CQUFPLENBQUMsOEVBQWlCO0FBQzlELHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxvQkFBb0I7QUFDL0QsNEJBQTRCLHdEQUF3RCxXQUFXLHNCQUFzQjtBQUNySCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9lbmNsb3NlL0VuY2xvc2VDb25maWd1cmF0aW9uLmpzP2M0MjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkVuY2xvc2VDb25maWd1cmF0aW9uID0gZXhwb3J0cy5FbmNsb3NlTWV0aG9kcyA9IGV4cG9ydHMuRU5DTE9TRV9PUFRJT05TID0gdm9pZCAwO1xudmFyIENvbmZpZ3VyYXRpb25fanNfMSA9IHJlcXVpcmUoXCIuLi9Db25maWd1cmF0aW9uLmpzXCIpO1xudmFyIFN5bWJvbE1hcF9qc18xID0gcmVxdWlyZShcIi4uL1N5bWJvbE1hcC5qc1wiKTtcbnZhciBQYXJzZVV0aWxfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vUGFyc2VVdGlsLmpzXCIpKTtcbmV4cG9ydHMuRU5DTE9TRV9PUFRJT05TID0ge1xuICAgICdkYXRhLWFycm93aGVhZCc6IDEsXG4gICAgY29sb3I6IDEsXG4gICAgbWF0aGNvbG9yOiAxLFxuICAgIGJhY2tncm91bmQ6IDEsXG4gICAgbWF0aGJhY2tncm91bmQ6IDEsXG4gICAgJ2RhdGEtcGFkZGluZyc6IDEsXG4gICAgJ2RhdGEtdGhpY2tuZXNzJzogMVxufTtcbmV4cG9ydHMuRW5jbG9zZU1ldGhvZHMgPSB7fTtcbmV4cG9ydHMuRW5jbG9zZU1ldGhvZHMuRW5jbG9zZSA9IGZ1bmN0aW9uIChwYXJzZXIsIG5hbWUpIHtcbiAgICB2YXIgbm90YXRpb24gPSBwYXJzZXIuR2V0QXJndW1lbnQobmFtZSkucmVwbGFjZSgvLC9nLCAnICcpO1xuICAgIHZhciBhdHRyID0gcGFyc2VyLkdldEJyYWNrZXRzKG5hbWUsICcnKTtcbiAgICB2YXIgbWF0aCA9IHBhcnNlci5QYXJzZUFyZyhuYW1lKTtcbiAgICB2YXIgZGVmID0gUGFyc2VVdGlsX2pzXzEuZGVmYXVsdC5rZXl2YWxPcHRpb25zKGF0dHIsIGV4cG9ydHMuRU5DTE9TRV9PUFRJT05TKTtcbiAgICBkZWYubm90YXRpb24gPSBub3RhdGlvbjtcbiAgICBwYXJzZXIuUHVzaChwYXJzZXIuY3JlYXRlKCdub2RlJywgJ21lbmNsb3NlJywgW21hdGhdLCBkZWYpKTtcbn07XG5uZXcgU3ltYm9sTWFwX2pzXzEuQ29tbWFuZE1hcCgnZW5jbG9zZScsIHsgZW5jbG9zZTogJ0VuY2xvc2UnIH0sIGV4cG9ydHMuRW5jbG9zZU1ldGhvZHMpO1xuZXhwb3J0cy5FbmNsb3NlQ29uZmlndXJhdGlvbiA9IENvbmZpZ3VyYXRpb25fanNfMS5Db25maWd1cmF0aW9uLmNyZWF0ZSgnZW5jbG9zZScsIHsgaGFuZGxlcjogeyBtYWNybzogWydlbmNsb3NlJ10gfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUVuY2xvc2VDb25maWd1cmF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/enclose/EncloseConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/extpfeil/ExtpfeilConfiguration.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/extpfeil/ExtpfeilConfiguration.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ExtpfeilConfiguration = exports.ExtpfeilMethods = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar AmsMethods_js_1 = __webpack_require__(/*! ../ams/AmsMethods.js */ \"./node_modules/mathjax-full/js/input/tex/ams/AmsMethods.js\");\nvar NewcommandUtil_js_1 = __importDefault(__webpack_require__(/*! ../newcommand/NewcommandUtil.js */ \"./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandUtil.js\"));\nvar NewcommandConfiguration_js_1 = __webpack_require__(/*! ../newcommand/NewcommandConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandConfiguration.js\");\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nexports.ExtpfeilMethods = {};\nexports.ExtpfeilMethods.xArrow = AmsMethods_js_1.AmsMethods.xArrow;\nexports.ExtpfeilMethods.NewExtArrow = function (parser, name) {\n    var cs = parser.GetArgument(name);\n    var space = parser.GetArgument(name);\n    var chr = parser.GetArgument(name);\n    if (!cs.match(/^\\\\([a-z]+|.)$/i)) {\n        throw new TexError_js_1.default('NewextarrowArg1', 'First argument to %1 must be a control sequence name', name);\n    }\n    if (!space.match(/^(\\d+),(\\d+)$/)) {\n        throw new TexError_js_1.default('NewextarrowArg2', 'Second argument to %1 must be two integers separated by a comma', name);\n    }\n    if (!chr.match(/^(\\d+|0x[0-9A-F]+)$/i)) {\n        throw new TexError_js_1.default('NewextarrowArg3', 'Third argument to %1 must be a unicode character number', name);\n    }\n    cs = cs.substr(1);\n    var spaces = space.split(',');\n    NewcommandUtil_js_1.default.addMacro(parser, cs, exports.ExtpfeilMethods.xArrow, [parseInt(chr), parseInt(spaces[0]), parseInt(spaces[1])]);\n};\nnew SymbolMap_js_1.CommandMap('extpfeil', {\n    xtwoheadrightarrow: ['xArrow', 0x21A0, 12, 16],\n    xtwoheadleftarrow: ['xArrow', 0x219E, 17, 13],\n    xmapsto: ['xArrow', 0x21A6, 6, 7],\n    xlongequal: ['xArrow', 0x003D, 7, 7],\n    xtofrom: ['xArrow', 0x21C4, 12, 12],\n    Newextarrow: 'NewExtArrow'\n}, exports.ExtpfeilMethods);\nvar init = function (config) {\n    NewcommandConfiguration_js_1.NewcommandConfiguration.init(config);\n};\nexports.ExtpfeilConfiguration = Configuration_js_1.Configuration.create('extpfeil', {\n    handler: { macro: ['extpfeil'] },\n    init: init\n});\n//# sourceMappingURL=ExtpfeilConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9leHRwZmVpbC9FeHRwZmVpbENvbmZpZ3VyYXRpb24uanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkIsR0FBRyx1QkFBdUI7QUFDdkQseUJBQXlCLG1CQUFPLENBQUMsc0ZBQXFCO0FBQ3RELHFCQUFxQixtQkFBTyxDQUFDLDhFQUFpQjtBQUM5QyxzQkFBc0IsbUJBQU8sQ0FBQyx3RkFBc0I7QUFDcEQsMENBQTBDLG1CQUFPLENBQUMsOEdBQWlDO0FBQ25GLG1DQUFtQyxtQkFBTyxDQUFDLGdJQUEwQztBQUNyRixvQ0FBb0MsbUJBQU8sQ0FBQyw0RUFBZ0I7QUFDNUQsdUJBQXVCO0FBQ3ZCLDhCQUE4QjtBQUM5QixtQ0FBbUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0IsZUFBZSxxQkFBcUI7QUFDcEM7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvZXh0cGZlaWwvRXh0cGZlaWxDb25maWd1cmF0aW9uLmpzPzQxZmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkV4dHBmZWlsQ29uZmlndXJhdGlvbiA9IGV4cG9ydHMuRXh0cGZlaWxNZXRob2RzID0gdm9pZCAwO1xudmFyIENvbmZpZ3VyYXRpb25fanNfMSA9IHJlcXVpcmUoXCIuLi9Db25maWd1cmF0aW9uLmpzXCIpO1xudmFyIFN5bWJvbE1hcF9qc18xID0gcmVxdWlyZShcIi4uL1N5bWJvbE1hcC5qc1wiKTtcbnZhciBBbXNNZXRob2RzX2pzXzEgPSByZXF1aXJlKFwiLi4vYW1zL0Ftc01ldGhvZHMuanNcIik7XG52YXIgTmV3Y29tbWFuZFV0aWxfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vbmV3Y29tbWFuZC9OZXdjb21tYW5kVXRpbC5qc1wiKSk7XG52YXIgTmV3Y29tbWFuZENvbmZpZ3VyYXRpb25fanNfMSA9IHJlcXVpcmUoXCIuLi9uZXdjb21tYW5kL05ld2NvbW1hbmRDb25maWd1cmF0aW9uLmpzXCIpO1xudmFyIFRleEVycm9yX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL1RleEVycm9yLmpzXCIpKTtcbmV4cG9ydHMuRXh0cGZlaWxNZXRob2RzID0ge307XG5leHBvcnRzLkV4dHBmZWlsTWV0aG9kcy54QXJyb3cgPSBBbXNNZXRob2RzX2pzXzEuQW1zTWV0aG9kcy54QXJyb3c7XG5leHBvcnRzLkV4dHBmZWlsTWV0aG9kcy5OZXdFeHRBcnJvdyA9IGZ1bmN0aW9uIChwYXJzZXIsIG5hbWUpIHtcbiAgICB2YXIgY3MgPSBwYXJzZXIuR2V0QXJndW1lbnQobmFtZSk7XG4gICAgdmFyIHNwYWNlID0gcGFyc2VyLkdldEFyZ3VtZW50KG5hbWUpO1xuICAgIHZhciBjaHIgPSBwYXJzZXIuR2V0QXJndW1lbnQobmFtZSk7XG4gICAgaWYgKCFjcy5tYXRjaCgvXlxcXFwoW2Etel0rfC4pJC9pKSkge1xuICAgICAgICB0aHJvdyBuZXcgVGV4RXJyb3JfanNfMS5kZWZhdWx0KCdOZXdleHRhcnJvd0FyZzEnLCAnRmlyc3QgYXJndW1lbnQgdG8gJTEgbXVzdCBiZSBhIGNvbnRyb2wgc2VxdWVuY2UgbmFtZScsIG5hbWUpO1xuICAgIH1cbiAgICBpZiAoIXNwYWNlLm1hdGNoKC9eKFxcZCspLChcXGQrKSQvKSkge1xuICAgICAgICB0aHJvdyBuZXcgVGV4RXJyb3JfanNfMS5kZWZhdWx0KCdOZXdleHRhcnJvd0FyZzInLCAnU2Vjb25kIGFyZ3VtZW50IHRvICUxIG11c3QgYmUgdHdvIGludGVnZXJzIHNlcGFyYXRlZCBieSBhIGNvbW1hJywgbmFtZSk7XG4gICAgfVxuICAgIGlmICghY2hyLm1hdGNoKC9eKFxcZCt8MHhbMC05QS1GXSspJC9pKSkge1xuICAgICAgICB0aHJvdyBuZXcgVGV4RXJyb3JfanNfMS5kZWZhdWx0KCdOZXdleHRhcnJvd0FyZzMnLCAnVGhpcmQgYXJndW1lbnQgdG8gJTEgbXVzdCBiZSBhIHVuaWNvZGUgY2hhcmFjdGVyIG51bWJlcicsIG5hbWUpO1xuICAgIH1cbiAgICBjcyA9IGNzLnN1YnN0cigxKTtcbiAgICB2YXIgc3BhY2VzID0gc3BhY2Uuc3BsaXQoJywnKTtcbiAgICBOZXdjb21tYW5kVXRpbF9qc18xLmRlZmF1bHQuYWRkTWFjcm8ocGFyc2VyLCBjcywgZXhwb3J0cy5FeHRwZmVpbE1ldGhvZHMueEFycm93LCBbcGFyc2VJbnQoY2hyKSwgcGFyc2VJbnQoc3BhY2VzWzBdKSwgcGFyc2VJbnQoc3BhY2VzWzFdKV0pO1xufTtcbm5ldyBTeW1ib2xNYXBfanNfMS5Db21tYW5kTWFwKCdleHRwZmVpbCcsIHtcbiAgICB4dHdvaGVhZHJpZ2h0YXJyb3c6IFsneEFycm93JywgMHgyMUEwLCAxMiwgMTZdLFxuICAgIHh0d29oZWFkbGVmdGFycm93OiBbJ3hBcnJvdycsIDB4MjE5RSwgMTcsIDEzXSxcbiAgICB4bWFwc3RvOiBbJ3hBcnJvdycsIDB4MjFBNiwgNiwgN10sXG4gICAgeGxvbmdlcXVhbDogWyd4QXJyb3cnLCAweDAwM0QsIDcsIDddLFxuICAgIHh0b2Zyb206IFsneEFycm93JywgMHgyMUM0LCAxMiwgMTJdLFxuICAgIE5ld2V4dGFycm93OiAnTmV3RXh0QXJyb3cnXG59LCBleHBvcnRzLkV4dHBmZWlsTWV0aG9kcyk7XG52YXIgaW5pdCA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICBOZXdjb21tYW5kQ29uZmlndXJhdGlvbl9qc18xLk5ld2NvbW1hbmRDb25maWd1cmF0aW9uLmluaXQoY29uZmlnKTtcbn07XG5leHBvcnRzLkV4dHBmZWlsQ29uZmlndXJhdGlvbiA9IENvbmZpZ3VyYXRpb25fanNfMS5Db25maWd1cmF0aW9uLmNyZWF0ZSgnZXh0cGZlaWwnLCB7XG4gICAgaGFuZGxlcjogeyBtYWNybzogWydleHRwZmVpbCddIH0sXG4gICAgaW5pdDogaW5pdFxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1FeHRwZmVpbENvbmZpZ3VyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/extpfeil/ExtpfeilConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/gensymb/GensymbConfiguration.js":
/*!********************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/gensymb/GensymbConfiguration.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.GensymbConfiguration = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar TexConstants_js_1 = __webpack_require__(/*! ../TexConstants.js */ \"./node_modules/mathjax-full/js/input/tex/TexConstants.js\");\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nfunction mathcharUnit(parser, mchar) {\n    var def = mchar.attributes || {};\n    def.mathvariant = TexConstants_js_1.TexConstant.Variant.NORMAL;\n    def.class = 'MathML-Unit';\n    var node = parser.create('token', 'mi', def, mchar.char);\n    parser.Push(node);\n}\nnew SymbolMap_js_1.CharacterMap('gensymb-symbols', mathcharUnit, {\n    ohm: '\\u2126',\n    degree: '\\u00B0',\n    celsius: '\\u2103',\n    perthousand: '\\u2030',\n    micro: '\\u00B5'\n});\nexports.GensymbConfiguration = Configuration_js_1.Configuration.create('gensymb', {\n    handler: { macro: ['gensymb-symbols'] },\n});\n//# sourceMappingURL=GensymbConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9nZW5zeW1iL0dlbnN5bWJDb25maWd1cmF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QjtBQUM1Qix5QkFBeUIsbUJBQU8sQ0FBQyxzRkFBcUI7QUFDdEQsd0JBQXdCLG1CQUFPLENBQUMsb0ZBQW9CO0FBQ3BELHFCQUFxQixtQkFBTyxDQUFDLDhFQUFpQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCw0QkFBNEI7QUFDNUIsZUFBZSw0QkFBNEI7QUFDM0MsQ0FBQztBQUNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvaW5wdXQvdGV4L2dlbnN5bWIvR2Vuc3ltYkNvbmZpZ3VyYXRpb24uanM/ZDhjYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuR2Vuc3ltYkNvbmZpZ3VyYXRpb24gPSB2b2lkIDA7XG52YXIgQ29uZmlndXJhdGlvbl9qc18xID0gcmVxdWlyZShcIi4uL0NvbmZpZ3VyYXRpb24uanNcIik7XG52YXIgVGV4Q29uc3RhbnRzX2pzXzEgPSByZXF1aXJlKFwiLi4vVGV4Q29uc3RhbnRzLmpzXCIpO1xudmFyIFN5bWJvbE1hcF9qc18xID0gcmVxdWlyZShcIi4uL1N5bWJvbE1hcC5qc1wiKTtcbmZ1bmN0aW9uIG1hdGhjaGFyVW5pdChwYXJzZXIsIG1jaGFyKSB7XG4gICAgdmFyIGRlZiA9IG1jaGFyLmF0dHJpYnV0ZXMgfHwge307XG4gICAgZGVmLm1hdGh2YXJpYW50ID0gVGV4Q29uc3RhbnRzX2pzXzEuVGV4Q29uc3RhbnQuVmFyaWFudC5OT1JNQUw7XG4gICAgZGVmLmNsYXNzID0gJ01hdGhNTC1Vbml0JztcbiAgICB2YXIgbm9kZSA9IHBhcnNlci5jcmVhdGUoJ3Rva2VuJywgJ21pJywgZGVmLCBtY2hhci5jaGFyKTtcbiAgICBwYXJzZXIuUHVzaChub2RlKTtcbn1cbm5ldyBTeW1ib2xNYXBfanNfMS5DaGFyYWN0ZXJNYXAoJ2dlbnN5bWItc3ltYm9scycsIG1hdGhjaGFyVW5pdCwge1xuICAgIG9obTogJ1xcdTIxMjYnLFxuICAgIGRlZ3JlZTogJ1xcdTAwQjAnLFxuICAgIGNlbHNpdXM6ICdcXHUyMTAzJyxcbiAgICBwZXJ0aG91c2FuZDogJ1xcdTIwMzAnLFxuICAgIG1pY3JvOiAnXFx1MDBCNSdcbn0pO1xuZXhwb3J0cy5HZW5zeW1iQ29uZmlndXJhdGlvbiA9IENvbmZpZ3VyYXRpb25fanNfMS5Db25maWd1cmF0aW9uLmNyZWF0ZSgnZ2Vuc3ltYicsIHtcbiAgICBoYW5kbGVyOiB7IG1hY3JvOiBbJ2dlbnN5bWItc3ltYm9scyddIH0sXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUdlbnN5bWJDb25maWd1cmF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/gensymb/GensymbConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/html/HtmlConfiguration.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/html/HtmlConfiguration.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HtmlConfiguration = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar HtmlMethods_js_1 = __importDefault(__webpack_require__(/*! ./HtmlMethods.js */ \"./node_modules/mathjax-full/js/input/tex/html/HtmlMethods.js\"));\nnew SymbolMap_js_1.CommandMap('html_macros', {\n    href: 'Href',\n    'class': 'Class',\n    style: 'Style',\n    cssId: 'Id'\n}, HtmlMethods_js_1.default);\nexports.HtmlConfiguration = Configuration_js_1.Configuration.create('html', { handler: { macro: ['html_macros'] } });\n//# sourceMappingURL=HtmlConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9odG1sL0h0bWxDb25maWd1cmF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCO0FBQ3pCLHlCQUF5QixtQkFBTyxDQUFDLHNGQUFxQjtBQUN0RCxxQkFBcUIsbUJBQU8sQ0FBQyw4RUFBaUI7QUFDOUMsdUNBQXVDLG1CQUFPLENBQUMsc0ZBQWtCO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QseUJBQXlCLHFEQUFxRCxXQUFXLDBCQUEwQjtBQUNuSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9odG1sL0h0bWxDb25maWd1cmF0aW9uLmpzP2EwZjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkh0bWxDb25maWd1cmF0aW9uID0gdm9pZCAwO1xudmFyIENvbmZpZ3VyYXRpb25fanNfMSA9IHJlcXVpcmUoXCIuLi9Db25maWd1cmF0aW9uLmpzXCIpO1xudmFyIFN5bWJvbE1hcF9qc18xID0gcmVxdWlyZShcIi4uL1N5bWJvbE1hcC5qc1wiKTtcbnZhciBIdG1sTWV0aG9kc19qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL0h0bWxNZXRob2RzLmpzXCIpKTtcbm5ldyBTeW1ib2xNYXBfanNfMS5Db21tYW5kTWFwKCdodG1sX21hY3JvcycsIHtcbiAgICBocmVmOiAnSHJlZicsXG4gICAgJ2NsYXNzJzogJ0NsYXNzJyxcbiAgICBzdHlsZTogJ1N0eWxlJyxcbiAgICBjc3NJZDogJ0lkJ1xufSwgSHRtbE1ldGhvZHNfanNfMS5kZWZhdWx0KTtcbmV4cG9ydHMuSHRtbENvbmZpZ3VyYXRpb24gPSBDb25maWd1cmF0aW9uX2pzXzEuQ29uZmlndXJhdGlvbi5jcmVhdGUoJ2h0bWwnLCB7IGhhbmRsZXI6IHsgbWFjcm86IFsnaHRtbF9tYWNyb3MnXSB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SHRtbENvbmZpZ3VyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/html/HtmlConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/html/HtmlMethods.js":
/*!********************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/html/HtmlMethods.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar HtmlMethods = {};\nHtmlMethods.Href = function (parser, name) {\n    var url = parser.GetArgument(name);\n    var arg = GetArgumentMML(parser, name);\n    NodeUtil_js_1.default.setAttribute(arg, 'href', url);\n    parser.Push(arg);\n};\nHtmlMethods.Class = function (parser, name) {\n    var CLASS = parser.GetArgument(name);\n    var arg = GetArgumentMML(parser, name);\n    var oldClass = NodeUtil_js_1.default.getAttribute(arg, 'class');\n    if (oldClass) {\n        CLASS = oldClass + ' ' + CLASS;\n    }\n    NodeUtil_js_1.default.setAttribute(arg, 'class', CLASS);\n    parser.Push(arg);\n};\nHtmlMethods.Style = function (parser, name) {\n    var style = parser.GetArgument(name);\n    var arg = GetArgumentMML(parser, name);\n    var oldStyle = NodeUtil_js_1.default.getAttribute(arg, 'style');\n    if (oldStyle) {\n        if (style.charAt(style.length - 1) !== ';') {\n            style += ';';\n        }\n        style = oldStyle + ' ' + style;\n    }\n    NodeUtil_js_1.default.setAttribute(arg, 'style', style);\n    parser.Push(arg);\n};\nHtmlMethods.Id = function (parser, name) {\n    var ID = parser.GetArgument(name);\n    var arg = GetArgumentMML(parser, name);\n    NodeUtil_js_1.default.setAttribute(arg, 'id', ID);\n    parser.Push(arg);\n};\nvar GetArgumentMML = function (parser, name) {\n    var arg = parser.ParseArg(name);\n    if (!NodeUtil_js_1.default.isInferred(arg)) {\n        return arg;\n    }\n    var children = NodeUtil_js_1.default.getChildren(arg);\n    if (children.length === 1) {\n        return children[0];\n    }\n    var mrow = parser.create('node', 'mrow');\n    NodeUtil_js_1.default.copyChildren(arg, mrow);\n    NodeUtil_js_1.default.copyAttributes(arg, mrow);\n    return mrow;\n};\nexports[\"default\"] = HtmlMethods;\n//# sourceMappingURL=HtmlMethods.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9odG1sL0h0bWxNZXRob2RzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0NBQW9DLG1CQUFPLENBQUMsNEVBQWdCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlEO0FBQ2pELHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9odG1sL0h0bWxNZXRob2RzLmpzP2E0YTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgTm9kZVV0aWxfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vTm9kZVV0aWwuanNcIikpO1xudmFyIEh0bWxNZXRob2RzID0ge307XG5IdG1sTWV0aG9kcy5IcmVmID0gZnVuY3Rpb24gKHBhcnNlciwgbmFtZSkge1xuICAgIHZhciB1cmwgPSBwYXJzZXIuR2V0QXJndW1lbnQobmFtZSk7XG4gICAgdmFyIGFyZyA9IEdldEFyZ3VtZW50TU1MKHBhcnNlciwgbmFtZSk7XG4gICAgTm9kZVV0aWxfanNfMS5kZWZhdWx0LnNldEF0dHJpYnV0ZShhcmcsICdocmVmJywgdXJsKTtcbiAgICBwYXJzZXIuUHVzaChhcmcpO1xufTtcbkh0bWxNZXRob2RzLkNsYXNzID0gZnVuY3Rpb24gKHBhcnNlciwgbmFtZSkge1xuICAgIHZhciBDTEFTUyA9IHBhcnNlci5HZXRBcmd1bWVudChuYW1lKTtcbiAgICB2YXIgYXJnID0gR2V0QXJndW1lbnRNTUwocGFyc2VyLCBuYW1lKTtcbiAgICB2YXIgb2xkQ2xhc3MgPSBOb2RlVXRpbF9qc18xLmRlZmF1bHQuZ2V0QXR0cmlidXRlKGFyZywgJ2NsYXNzJyk7XG4gICAgaWYgKG9sZENsYXNzKSB7XG4gICAgICAgIENMQVNTID0gb2xkQ2xhc3MgKyAnICcgKyBDTEFTUztcbiAgICB9XG4gICAgTm9kZVV0aWxfanNfMS5kZWZhdWx0LnNldEF0dHJpYnV0ZShhcmcsICdjbGFzcycsIENMQVNTKTtcbiAgICBwYXJzZXIuUHVzaChhcmcpO1xufTtcbkh0bWxNZXRob2RzLlN0eWxlID0gZnVuY3Rpb24gKHBhcnNlciwgbmFtZSkge1xuICAgIHZhciBzdHlsZSA9IHBhcnNlci5HZXRBcmd1bWVudChuYW1lKTtcbiAgICB2YXIgYXJnID0gR2V0QXJndW1lbnRNTUwocGFyc2VyLCBuYW1lKTtcbiAgICB2YXIgb2xkU3R5bGUgPSBOb2RlVXRpbF9qc18xLmRlZmF1bHQuZ2V0QXR0cmlidXRlKGFyZywgJ3N0eWxlJyk7XG4gICAgaWYgKG9sZFN0eWxlKSB7XG4gICAgICAgIGlmIChzdHlsZS5jaGFyQXQoc3R5bGUubGVuZ3RoIC0gMSkgIT09ICc7Jykge1xuICAgICAgICAgICAgc3R5bGUgKz0gJzsnO1xuICAgICAgICB9XG4gICAgICAgIHN0eWxlID0gb2xkU3R5bGUgKyAnICcgKyBzdHlsZTtcbiAgICB9XG4gICAgTm9kZVV0aWxfanNfMS5kZWZhdWx0LnNldEF0dHJpYnV0ZShhcmcsICdzdHlsZScsIHN0eWxlKTtcbiAgICBwYXJzZXIuUHVzaChhcmcpO1xufTtcbkh0bWxNZXRob2RzLklkID0gZnVuY3Rpb24gKHBhcnNlciwgbmFtZSkge1xuICAgIHZhciBJRCA9IHBhcnNlci5HZXRBcmd1bWVudChuYW1lKTtcbiAgICB2YXIgYXJnID0gR2V0QXJndW1lbnRNTUwocGFyc2VyLCBuYW1lKTtcbiAgICBOb2RlVXRpbF9qc18xLmRlZmF1bHQuc2V0QXR0cmlidXRlKGFyZywgJ2lkJywgSUQpO1xuICAgIHBhcnNlci5QdXNoKGFyZyk7XG59O1xudmFyIEdldEFyZ3VtZW50TU1MID0gZnVuY3Rpb24gKHBhcnNlciwgbmFtZSkge1xuICAgIHZhciBhcmcgPSBwYXJzZXIuUGFyc2VBcmcobmFtZSk7XG4gICAgaWYgKCFOb2RlVXRpbF9qc18xLmRlZmF1bHQuaXNJbmZlcnJlZChhcmcpKSB7XG4gICAgICAgIHJldHVybiBhcmc7XG4gICAgfVxuICAgIHZhciBjaGlsZHJlbiA9IE5vZGVVdGlsX2pzXzEuZGVmYXVsdC5nZXRDaGlsZHJlbihhcmcpO1xuICAgIGlmIChjaGlsZHJlbi5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgcmV0dXJuIGNoaWxkcmVuWzBdO1xuICAgIH1cbiAgICB2YXIgbXJvdyA9IHBhcnNlci5jcmVhdGUoJ25vZGUnLCAnbXJvdycpO1xuICAgIE5vZGVVdGlsX2pzXzEuZGVmYXVsdC5jb3B5Q2hpbGRyZW4oYXJnLCBtcm93KTtcbiAgICBOb2RlVXRpbF9qc18xLmRlZmF1bHQuY29weUF0dHJpYnV0ZXMoYXJnLCBtcm93KTtcbiAgICByZXR1cm4gbXJvdztcbn07XG5leHBvcnRzLmRlZmF1bHQgPSBIdG1sTWV0aG9kcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUh0bWxNZXRob2RzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/html/HtmlMethods.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsConfiguration.js":
/*!************************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsConfiguration.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MathtoolsConfiguration = exports.fixPrescripts = exports.PAIREDDELIMS = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar Options_js_1 = __webpack_require__(/*! ../../../util/Options.js */ \"./node_modules/mathjax-full/js/util/Options.js\");\n__webpack_require__(/*! ./MathtoolsMappings.js */ \"./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsMappings.js\");\nvar MathtoolsUtil_js_1 = __webpack_require__(/*! ./MathtoolsUtil.js */ \"./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsUtil.js\");\nvar MathtoolsTags_js_1 = __webpack_require__(/*! ./MathtoolsTags.js */ \"./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsTags.js\");\nvar MathtoolsItems_js_1 = __webpack_require__(/*! ./MathtoolsItems.js */ \"./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsItems.js\");\nexports.PAIREDDELIMS = 'mathtools-paired-delims';\nfunction initMathtools(config) {\n    new SymbolMap_js_1.CommandMap(exports.PAIREDDELIMS, {}, {});\n    config.append(Configuration_js_1.Configuration.local({ handler: { macro: [exports.PAIREDDELIMS] }, priority: -5 }));\n}\nfunction configMathtools(config, jax) {\n    var e_1, _a;\n    var parser = jax.parseOptions;\n    var pairedDelims = parser.options.mathtools.pairedDelimiters;\n    try {\n        for (var _b = __values(Object.keys(pairedDelims)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var cs = _c.value;\n            MathtoolsUtil_js_1.MathtoolsUtil.addPairedDelims(parser, cs, pairedDelims[cs]);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    (0, MathtoolsTags_js_1.MathtoolsTagFormat)(config, jax);\n}\nfunction fixPrescripts(_a) {\n    var e_2, _b, e_3, _c, e_4, _d;\n    var data = _a.data;\n    try {\n        for (var _e = __values(data.getList('mmultiscripts')), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var node = _f.value;\n            if (!node.getProperty('fixPrescript'))\n                continue;\n            var childNodes = NodeUtil_js_1.default.getChildren(node);\n            var n = 0;\n            try {\n                for (var _g = (e_3 = void 0, __values([1, 2])), _h = _g.next(); !_h.done; _h = _g.next()) {\n                    var i = _h.value;\n                    if (!childNodes[i]) {\n                        NodeUtil_js_1.default.setChild(node, i, data.nodeFactory.create('node', 'none'));\n                        n++;\n                    }\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_h && !_h.done && (_c = _g.return)) _c.call(_g);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            try {\n                for (var _j = (e_4 = void 0, __values([4, 5])), _k = _j.next(); !_k.done; _k = _j.next()) {\n                    var i = _k.value;\n                    if (NodeUtil_js_1.default.isType(childNodes[i], 'mrow') && NodeUtil_js_1.default.getChildren(childNodes[i]).length === 0) {\n                        NodeUtil_js_1.default.setChild(node, i, data.nodeFactory.create('node', 'none'));\n                    }\n                }\n            }\n            catch (e_4_1) { e_4 = { error: e_4_1 }; }\n            finally {\n                try {\n                    if (_k && !_k.done && (_d = _j.return)) _d.call(_j);\n                }\n                finally { if (e_4) throw e_4.error; }\n            }\n            if (n === 2) {\n                childNodes.splice(1, 2);\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n}\nexports.fixPrescripts = fixPrescripts;\nexports.MathtoolsConfiguration = Configuration_js_1.Configuration.create('mathtools', {\n    handler: {\n        macro: ['mathtools-macros', 'mathtools-delimiters'],\n        environment: ['mathtools-environments'],\n        delimiter: ['mathtools-delimiters'],\n        character: ['mathtools-characters']\n    },\n    items: (_a = {},\n        _a[MathtoolsItems_js_1.MultlinedItem.prototype.kind] = MathtoolsItems_js_1.MultlinedItem,\n        _a),\n    init: initMathtools,\n    config: configMathtools,\n    postprocessors: [[fixPrescripts, -6]],\n    options: {\n        mathtools: {\n            'multlinegap': '1em',\n            'multlined-pos': 'c',\n            'firstline-afterskip': '',\n            'lastline-preskip': '',\n            'smallmatrix-align': 'c',\n            'shortvdotsadjustabove': '.2em',\n            'shortvdotsadjustbelow': '.2em',\n            'centercolon': false,\n            'centercolon-offset': '.04em',\n            'thincolon-dx': '-.04em',\n            'thincolon-dw': '-.08em',\n            'use-unicode': false,\n            'prescript-sub-format': '',\n            'prescript-sup-format': '',\n            'prescript-arg-format': '',\n            'allow-mathtoolsset': true,\n            pairedDelimiters: (0, Options_js_1.expandable)({}),\n            tagforms: (0, Options_js_1.expandable)({}),\n        }\n    }\n});\n//# sourceMappingURL=MathtoolsConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsItems.js":
/*!****************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsItems.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultlinedItem = void 0;\nvar AmsItems_js_1 = __webpack_require__(/*! ../ams/AmsItems.js */ \"./node_modules/mathjax-full/js/input/tex/ams/AmsItems.js\");\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar TexConstants_js_1 = __webpack_require__(/*! ../TexConstants.js */ \"./node_modules/mathjax-full/js/input/tex/TexConstants.js\");\nvar MultlinedItem = (function (_super) {\n    __extends(MultlinedItem, _super);\n    function MultlinedItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MultlinedItem.prototype, \"kind\", {\n        get: function () {\n            return 'multlined';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MultlinedItem.prototype.EndTable = function () {\n        if (this.Size() || this.row.length) {\n            this.EndEntry();\n            this.EndRow();\n        }\n        if (this.table.length > 1) {\n            var options = this.factory.configuration.options.mathtools;\n            var gap = options.multlinegap;\n            var firstskip = options['firstline-afterskip'] || gap;\n            var lastskip = options['lastline-preskip'] || gap;\n            var first = NodeUtil_js_1.default.getChildren(this.table[0])[0];\n            if (NodeUtil_js_1.default.getAttribute(first, 'columnalign') !== TexConstants_js_1.TexConstant.Align.RIGHT) {\n                first.appendChild(this.create('node', 'mspace', [], { width: firstskip }));\n            }\n            var last = NodeUtil_js_1.default.getChildren(this.table[this.table.length - 1])[0];\n            if (NodeUtil_js_1.default.getAttribute(last, 'columnalign') !== TexConstants_js_1.TexConstant.Align.LEFT) {\n                var top_1 = NodeUtil_js_1.default.getChildren(last)[0];\n                top_1.childNodes.unshift(null);\n                var space = this.create('node', 'mspace', [], { width: lastskip });\n                NodeUtil_js_1.default.setChild(top_1, 0, space);\n            }\n        }\n        _super.prototype.EndTable.call(this);\n    };\n    return MultlinedItem;\n}(AmsItems_js_1.MultlineItem));\nexports.MultlinedItem = MultlinedItem;\n//# sourceMappingURL=MathtoolsItems.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9tYXRodG9vbHMvTWF0aHRvb2xzSXRlbXMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ3ZGLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsb0JBQW9CLG1CQUFPLENBQUMsb0ZBQW9CO0FBQ2hELG9DQUFvQyxtQkFBTyxDQUFDLDRFQUFnQjtBQUM1RCx3QkFBd0IsbUJBQU8sQ0FBQyxvRkFBb0I7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNFQUFzRSxrQkFBa0I7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRSxpQkFBaUI7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9tYXRodG9vbHMvTWF0aHRvb2xzSXRlbXMuanM/ZGE0OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChiLCBwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgIH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYiAhPT0gXCJmdW5jdGlvblwiICYmIGIgIT09IG51bGwpXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIiArIFN0cmluZyhiKSArIFwiIGlzIG5vdCBhIGNvbnN0cnVjdG9yIG9yIG51bGxcIik7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk11bHRsaW5lZEl0ZW0gPSB2b2lkIDA7XG52YXIgQW1zSXRlbXNfanNfMSA9IHJlcXVpcmUoXCIuLi9hbXMvQW1zSXRlbXMuanNcIik7XG52YXIgTm9kZVV0aWxfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vTm9kZVV0aWwuanNcIikpO1xudmFyIFRleENvbnN0YW50c19qc18xID0gcmVxdWlyZShcIi4uL1RleENvbnN0YW50cy5qc1wiKTtcbnZhciBNdWx0bGluZWRJdGVtID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoTXVsdGxpbmVkSXRlbSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBNdWx0bGluZWRJdGVtKCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShNdWx0bGluZWRJdGVtLnByb3RvdHlwZSwgXCJraW5kXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gJ211bHRsaW5lZCc7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBNdWx0bGluZWRJdGVtLnByb3RvdHlwZS5FbmRUYWJsZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMuU2l6ZSgpIHx8IHRoaXMucm93Lmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5FbmRFbnRyeSgpO1xuICAgICAgICAgICAgdGhpcy5FbmRSb3coKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy50YWJsZS5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICB2YXIgb3B0aW9ucyA9IHRoaXMuZmFjdG9yeS5jb25maWd1cmF0aW9uLm9wdGlvbnMubWF0aHRvb2xzO1xuICAgICAgICAgICAgdmFyIGdhcCA9IG9wdGlvbnMubXVsdGxpbmVnYXA7XG4gICAgICAgICAgICB2YXIgZmlyc3Rza2lwID0gb3B0aW9uc1snZmlyc3RsaW5lLWFmdGVyc2tpcCddIHx8IGdhcDtcbiAgICAgICAgICAgIHZhciBsYXN0c2tpcCA9IG9wdGlvbnNbJ2xhc3RsaW5lLXByZXNraXAnXSB8fCBnYXA7XG4gICAgICAgICAgICB2YXIgZmlyc3QgPSBOb2RlVXRpbF9qc18xLmRlZmF1bHQuZ2V0Q2hpbGRyZW4odGhpcy50YWJsZVswXSlbMF07XG4gICAgICAgICAgICBpZiAoTm9kZVV0aWxfanNfMS5kZWZhdWx0LmdldEF0dHJpYnV0ZShmaXJzdCwgJ2NvbHVtbmFsaWduJykgIT09IFRleENvbnN0YW50c19qc18xLlRleENvbnN0YW50LkFsaWduLlJJR0hUKSB7XG4gICAgICAgICAgICAgICAgZmlyc3QuYXBwZW5kQ2hpbGQodGhpcy5jcmVhdGUoJ25vZGUnLCAnbXNwYWNlJywgW10sIHsgd2lkdGg6IGZpcnN0c2tpcCB9KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgbGFzdCA9IE5vZGVVdGlsX2pzXzEuZGVmYXVsdC5nZXRDaGlsZHJlbih0aGlzLnRhYmxlW3RoaXMudGFibGUubGVuZ3RoIC0gMV0pWzBdO1xuICAgICAgICAgICAgaWYgKE5vZGVVdGlsX2pzXzEuZGVmYXVsdC5nZXRBdHRyaWJ1dGUobGFzdCwgJ2NvbHVtbmFsaWduJykgIT09IFRleENvbnN0YW50c19qc18xLlRleENvbnN0YW50LkFsaWduLkxFRlQpIHtcbiAgICAgICAgICAgICAgICB2YXIgdG9wXzEgPSBOb2RlVXRpbF9qc18xLmRlZmF1bHQuZ2V0Q2hpbGRyZW4obGFzdClbMF07XG4gICAgICAgICAgICAgICAgdG9wXzEuY2hpbGROb2Rlcy51bnNoaWZ0KG51bGwpO1xuICAgICAgICAgICAgICAgIHZhciBzcGFjZSA9IHRoaXMuY3JlYXRlKCdub2RlJywgJ21zcGFjZScsIFtdLCB7IHdpZHRoOiBsYXN0c2tpcCB9KTtcbiAgICAgICAgICAgICAgICBOb2RlVXRpbF9qc18xLmRlZmF1bHQuc2V0Q2hpbGQodG9wXzEsIDAsIHNwYWNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBfc3VwZXIucHJvdG90eXBlLkVuZFRhYmxlLmNhbGwodGhpcyk7XG4gICAgfTtcbiAgICByZXR1cm4gTXVsdGxpbmVkSXRlbTtcbn0oQW1zSXRlbXNfanNfMS5NdWx0bGluZUl0ZW0pKTtcbmV4cG9ydHMuTXVsdGxpbmVkSXRlbSA9IE11bHRsaW5lZEl0ZW07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NYXRodG9vbHNJdGVtcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsItems.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsMappings.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsMappings.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ParseMethods_js_1 = __importDefault(__webpack_require__(/*! ../ParseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/ParseMethods.js\"));\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar TexConstants_js_1 = __webpack_require__(/*! ../TexConstants.js */ \"./node_modules/mathjax-full/js/input/tex/TexConstants.js\");\nvar MathtoolsMethods_js_1 = __webpack_require__(/*! ./MathtoolsMethods.js */ \"./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsMethods.js\");\nnew SymbolMap_js_1.CommandMap('mathtools-macros', {\n    shoveleft: ['HandleShove', TexConstants_js_1.TexConstant.Align.LEFT],\n    shoveright: ['HandleShove', TexConstants_js_1.TexConstant.Align.RIGHT],\n    xleftrightarrow: ['xArrow', 0x2194, 10, 10],\n    xLeftarrow: ['xArrow', 0x21D0, 12, 7],\n    xRightarrow: ['xArrow', 0x21D2, 7, 12],\n    xLeftrightarrow: ['xArrow', 0x21D4, 12, 12],\n    xhookleftarrow: ['xArrow', 0x21A9, 10, 5],\n    xhookrightarrow: ['xArrow', 0x21AA, 5, 10],\n    xmapsto: ['xArrow', 0x21A6, 10, 10],\n    xrightharpoondown: ['xArrow', 0x21C1, 5, 10],\n    xleftharpoondown: ['xArrow', 0x21BD, 10, 5],\n    xrightleftharpoons: ['xArrow', 0x21CC, 10, 10],\n    xrightharpoonup: ['xArrow', 0x21C0, 5, 10],\n    xleftharpoonup: ['xArrow', 0x21BC, 10, 5],\n    xleftrightharpoons: ['xArrow', 0x21CB, 10, 10],\n    mathllap: ['MathLap', 'l', false],\n    mathrlap: ['MathLap', 'r', false],\n    mathclap: ['MathLap', 'c', false],\n    clap: ['MtLap', 'c'],\n    textllap: ['MtLap', 'l'],\n    textrlap: ['MtLap', 'r'],\n    textclap: ['MtLap', 'c'],\n    cramped: 'Cramped',\n    crampedllap: ['MathLap', 'l', true],\n    crampedrlap: ['MathLap', 'r', true],\n    crampedclap: ['MathLap', 'c', true],\n    crampedsubstack: ['Macro', '\\\\begin{crampedsubarray}{c}#1\\\\end{crampedsubarray}', 1],\n    mathmbox: 'MathMBox',\n    mathmakebox: 'MathMakeBox',\n    overbracket: 'UnderOverBracket',\n    underbracket: 'UnderOverBracket',\n    refeq: 'HandleRef',\n    MoveEqLeft: ['Macro', '\\\\hspace{#1em}&\\\\hspace{-#1em}', 1, '2'],\n    Aboxed: 'Aboxed',\n    ArrowBetweenLines: 'ArrowBetweenLines',\n    vdotswithin: 'VDotsWithin',\n    shortvdotswithin: 'ShortVDotsWithin',\n    MTFlushSpaceAbove: 'FlushSpaceAbove',\n    MTFlushSpaceBelow: 'FlushSpaceBelow',\n    DeclarePairedDelimiter: 'DeclarePairedDelimiter',\n    DeclarePairedDelimiterX: 'DeclarePairedDelimiterX',\n    DeclarePairedDelimiterXPP: 'DeclarePairedDelimiterXPP',\n    DeclarePairedDelimiters: 'DeclarePairedDelimiter',\n    DeclarePairedDelimitersX: 'DeclarePairedDelimiterX',\n    DeclarePairedDelimitersXPP: 'DeclarePairedDelimiterXPP',\n    centercolon: ['CenterColon', true, true],\n    ordinarycolon: ['CenterColon', false],\n    MTThinColon: ['CenterColon', true, true, true],\n    coloneqq: ['Relation', ':=', '\\u2254'],\n    Coloneqq: ['Relation', '::=', '\\u2A74'],\n    coloneq: ['Relation', ':-'],\n    Coloneq: ['Relation', '::-'],\n    eqqcolon: ['Relation', '=:', '\\u2255'],\n    Eqqcolon: ['Relation', '=::'],\n    eqcolon: ['Relation', '-:', '\\u2239'],\n    Eqcolon: ['Relation', '-::'],\n    colonapprox: ['Relation', ':\\\\approx'],\n    Colonapprox: ['Relation', '::\\\\approx'],\n    colonsim: ['Relation', ':\\\\sim'],\n    Colonsim: ['Relation', '::\\\\sim'],\n    dblcolon: ['Relation', '::', '\\u2237'],\n    nuparrow: ['NArrow', '\\u2191', '.06em'],\n    ndownarrow: ['NArrow', '\\u2193', '.25em'],\n    bigtimes: ['Macro', '\\\\mathop{\\\\Large\\\\kern-.1em\\\\boldsymbol{\\\\times}\\\\kern-.1em}'],\n    splitfrac: ['SplitFrac', false],\n    splitdfrac: ['SplitFrac', true],\n    xmathstrut: 'XMathStrut',\n    prescript: 'Prescript',\n    newtagform: ['NewTagForm', false],\n    renewtagform: ['NewTagForm', true],\n    usetagform: 'UseTagForm',\n    adjustlimits: [\n        'MacroWithTemplate',\n        '\\\\mathop{{#1}\\\\vphantom{{#3}}}_{{#2}\\\\vphantom{{#4}}}\\\\mathop{{#3}\\\\vphantom{{#1}}}_{{#4}\\\\vphantom{{#2}}}',\n        4, , '_', , '_'\n    ],\n    mathtoolsset: 'SetOptions'\n}, MathtoolsMethods_js_1.MathtoolsMethods);\nnew SymbolMap_js_1.EnvironmentMap('mathtools-environments', ParseMethods_js_1.default.environment, {\n    dcases: ['Array', null, '\\\\{', '', 'll', null, '.2em', 'D'],\n    rcases: ['Array', null, '', '\\\\}', 'll', null, '.2em'],\n    drcases: ['Array', null, '', '\\\\}', 'll', null, '.2em', 'D'],\n    'dcases*': ['Cases', null, '{', '', 'D'],\n    'rcases*': ['Cases', null, '', '}'],\n    'drcases*': ['Cases', null, '', '}', 'D'],\n    'cases*': ['Cases', null, '{', ''],\n    'matrix*': ['MtMatrix', null, null, null],\n    'pmatrix*': ['MtMatrix', null, '(', ')'],\n    'bmatrix*': ['MtMatrix', null, '[', ']'],\n    'Bmatrix*': ['MtMatrix', null, '\\\\{', '\\\\}'],\n    'vmatrix*': ['MtMatrix', null, '\\\\vert', '\\\\vert'],\n    'Vmatrix*': ['MtMatrix', null, '\\\\Vert', '\\\\Vert'],\n    'smallmatrix*': ['MtSmallMatrix', null, null, null],\n    psmallmatrix: ['MtSmallMatrix', null, '(', ')', 'c'],\n    'psmallmatrix*': ['MtSmallMatrix', null, '(', ')'],\n    bsmallmatrix: ['MtSmallMatrix', null, '[', ']', 'c'],\n    'bsmallmatrix*': ['MtSmallMatrix', null, '[', ']'],\n    Bsmallmatrix: ['MtSmallMatrix', null, '\\\\{', '\\\\}', 'c'],\n    'Bsmallmatrix*': ['MtSmallMatrix', null, '\\\\{', '\\\\}'],\n    vsmallmatrix: ['MtSmallMatrix', null, '\\\\vert', '\\\\vert', 'c'],\n    'vsmallmatrix*': ['MtSmallMatrix', null, '\\\\vert', '\\\\vert'],\n    Vsmallmatrix: ['MtSmallMatrix', null, '\\\\Vert', '\\\\Vert', 'c'],\n    'Vsmallmatrix*': ['MtSmallMatrix', null, '\\\\Vert', '\\\\Vert'],\n    crampedsubarray: ['Array', null, null, null, null, '0em', '0.1em', 'S\\'', 1],\n    multlined: 'MtMultlined',\n    spreadlines: ['SpreadLines', true],\n    lgathered: ['AmsEqnArray', null, null, null, 'l', null, '.5em', 'D'],\n    rgathered: ['AmsEqnArray', null, null, null, 'r', null, '.5em', 'D'],\n}, MathtoolsMethods_js_1.MathtoolsMethods);\nnew SymbolMap_js_1.DelimiterMap('mathtools-delimiters', ParseMethods_js_1.default.delimiter, {\n    '\\\\lparen': '(',\n    '\\\\rparen': ')'\n});\nnew SymbolMap_js_1.CommandMap('mathtools-characters', {\n    ':': ['CenterColon', true]\n}, MathtoolsMethods_js_1.MathtoolsMethods);\n//# sourceMappingURL=MathtoolsMappings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsMappings.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsMethods.js":
/*!******************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsMethods.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MathtoolsMethods = void 0;\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar AmsMethods_js_1 = __webpack_require__(/*! ../ams/AmsMethods.js */ \"./node_modules/mathjax-full/js/input/tex/ams/AmsMethods.js\");\nvar BaseMethods_js_1 = __importDefault(__webpack_require__(/*! ../base/BaseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseMethods.js\"));\nvar TexParser_js_1 = __importDefault(__webpack_require__(/*! ../TexParser.js */ \"./node_modules/mathjax-full/js/input/tex/TexParser.js\"));\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar MmlNode_js_1 = __webpack_require__(/*! ../../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar lengths_js_1 = __webpack_require__(/*! ../../../util/lengths.js */ \"./node_modules/mathjax-full/js/util/lengths.js\");\nvar Options_js_1 = __webpack_require__(/*! ../../../util/Options.js */ \"./node_modules/mathjax-full/js/util/Options.js\");\nvar NewcommandUtil_js_1 = __importDefault(__webpack_require__(/*! ../newcommand/NewcommandUtil.js */ \"./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandUtil.js\"));\nvar NewcommandMethods_js_1 = __importDefault(__webpack_require__(/*! ../newcommand/NewcommandMethods.js */ \"./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandMethods.js\"));\nvar MathtoolsUtil_js_1 = __webpack_require__(/*! ./MathtoolsUtil.js */ \"./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsUtil.js\");\nexports.MathtoolsMethods = {\n    MtMatrix: function (parser, begin, open, close) {\n        var align = parser.GetBrackets(\"\\\\begin{\".concat(begin.getName(), \"}\"), 'c');\n        return exports.MathtoolsMethods.Array(parser, begin, open, close, align);\n    },\n    MtSmallMatrix: function (parser, begin, open, close, align) {\n        if (!align) {\n            align = parser.GetBrackets(\"\\\\begin{\".concat(begin.getName(), \"}\"), parser.options.mathtools['smallmatrix-align']);\n        }\n        return exports.MathtoolsMethods.Array(parser, begin, open, close, align, ParseUtil_js_1.default.Em(1 / 3), '.2em', 'S', 1);\n    },\n    MtMultlined: function (parser, begin) {\n        var _a;\n        var name = \"\\\\begin{\".concat(begin.getName(), \"}\");\n        var pos = parser.GetBrackets(name, parser.options.mathtools['multlined-pos'] || 'c');\n        var width = pos ? parser.GetBrackets(name, '') : '';\n        if (pos && !pos.match(/^[cbt]$/)) {\n            _a = __read([pos, width], 2), width = _a[0], pos = _a[1];\n        }\n        parser.Push(begin);\n        var item = parser.itemFactory.create('multlined', parser, begin);\n        item.arraydef = {\n            displaystyle: true,\n            rowspacing: '.5em',\n            width: width || 'auto',\n            columnwidth: '100%',\n        };\n        return ParseUtil_js_1.default.setArrayAlign(item, pos || 'c');\n    },\n    HandleShove: function (parser, name, shove) {\n        var top = parser.stack.Top();\n        if (top.kind !== 'multline' && top.kind !== 'multlined') {\n            throw new TexError_js_1.default('CommandInMultlined', '%1 can only appear within the multline or multlined environments', name);\n        }\n        if (top.Size()) {\n            throw new TexError_js_1.default('CommandAtTheBeginingOfLine', '%1 must come at the beginning of the line', name);\n        }\n        top.setProperty('shove', shove);\n        var shift = parser.GetBrackets(name);\n        var mml = parser.ParseArg(name);\n        if (shift) {\n            var mrow = parser.create('node', 'mrow', []);\n            var mspace = parser.create('node', 'mspace', [], { width: shift });\n            if (shove === 'left') {\n                mrow.appendChild(mspace);\n                mrow.appendChild(mml);\n            }\n            else {\n                mrow.appendChild(mml);\n                mrow.appendChild(mspace);\n            }\n            mml = mrow;\n        }\n        parser.Push(mml);\n    },\n    SpreadLines: function (parser, begin) {\n        var e_1, _a;\n        if (parser.stack.env.closing === begin.getName()) {\n            delete parser.stack.env.closing;\n            var top_1 = parser.stack.Pop();\n            var mml = top_1.toMml();\n            var spread = top_1.getProperty('spread');\n            if (mml.isInferred) {\n                try {\n                    for (var _b = __values(NodeUtil_js_1.default.getChildren(mml)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var child = _c.value;\n                        MathtoolsUtil_js_1.MathtoolsUtil.spreadLines(child, spread);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else {\n                MathtoolsUtil_js_1.MathtoolsUtil.spreadLines(mml, spread);\n            }\n            parser.Push(mml);\n        }\n        else {\n            var spread = parser.GetDimen(\"\\\\begin{\".concat(begin.getName(), \"}\"));\n            begin.setProperty('spread', spread);\n            parser.Push(begin);\n        }\n    },\n    Cases: function (parser, begin, open, close, style) {\n        var array = parser.itemFactory.create('array').setProperty('casesEnv', begin.getName());\n        array.arraydef = {\n            rowspacing: '.2em',\n            columnspacing: '1em',\n            columnalign: 'left'\n        };\n        if (style === 'D') {\n            array.arraydef.displaystyle = true;\n        }\n        array.setProperties({ open: open, close: close });\n        parser.Push(begin);\n        return array;\n    },\n    MathLap: function (parser, name, pos, cramped) {\n        var style = parser.GetBrackets(name, '').trim();\n        var mml = parser.create('node', 'mstyle', [\n            parser.create('node', 'mpadded', [parser.ParseArg(name)], __assign({ width: 0 }, (pos === 'r' ? {} : { lspace: (pos === 'l' ? '-1width' : '-.5width') })))\n        ], { 'data-cramped': cramped });\n        MathtoolsUtil_js_1.MathtoolsUtil.setDisplayLevel(mml, style);\n        parser.Push(parser.create('node', 'TeXAtom', [mml]));\n    },\n    Cramped: function (parser, name) {\n        var style = parser.GetBrackets(name, '').trim();\n        var arg = parser.ParseArg(name);\n        var mml = parser.create('node', 'mstyle', [arg], { 'data-cramped': true });\n        MathtoolsUtil_js_1.MathtoolsUtil.setDisplayLevel(mml, style);\n        parser.Push(mml);\n    },\n    MtLap: function (parser, name, pos) {\n        var content = ParseUtil_js_1.default.internalMath(parser, parser.GetArgument(name), 0);\n        var mml = parser.create('node', 'mpadded', content, { width: 0 });\n        if (pos !== 'r') {\n            NodeUtil_js_1.default.setAttribute(mml, 'lspace', pos === 'l' ? '-1width' : '-.5width');\n        }\n        parser.Push(mml);\n    },\n    MathMakeBox: function (parser, name) {\n        var width = parser.GetBrackets(name);\n        var pos = parser.GetBrackets(name, 'c');\n        var mml = parser.create('node', 'mpadded', [parser.ParseArg(name)]);\n        if (width) {\n            NodeUtil_js_1.default.setAttribute(mml, 'width', width);\n        }\n        var align = (0, Options_js_1.lookup)(pos, { c: 'center', r: 'right' }, '');\n        if (align) {\n            NodeUtil_js_1.default.setAttribute(mml, 'data-align', align);\n        }\n        parser.Push(mml);\n    },\n    MathMBox: function (parser, name) {\n        parser.Push(parser.create('node', 'mrow', [parser.ParseArg(name)]));\n    },\n    UnderOverBracket: function (parser, name) {\n        var thickness = (0, lengths_js_1.length2em)(parser.GetBrackets(name, '.1em'), .1);\n        var height = parser.GetBrackets(name, '.2em');\n        var arg = parser.GetArgument(name);\n        var _a = __read((name.charAt(1) === 'o' ?\n            ['over', 'accent', 'bottom'] :\n            ['under', 'accentunder', 'top']), 3), pos = _a[0], accent = _a[1], border = _a[2];\n        var t = (0, lengths_js_1.em)(thickness);\n        var base = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();\n        var copy = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();\n        var script = parser.create('node', 'mpadded', [\n            parser.create('node', 'mphantom', [copy])\n        ], {\n            style: \"border: \".concat(t, \" solid; border-\").concat(border, \": none\"),\n            height: height,\n            depth: 0\n        });\n        var node = ParseUtil_js_1.default.underOver(parser, base, script, pos, true);\n        var munderover = NodeUtil_js_1.default.getChildAt(NodeUtil_js_1.default.getChildAt(node, 0), 0);\n        NodeUtil_js_1.default.setAttribute(munderover, accent, true);\n        parser.Push(node);\n    },\n    Aboxed: function (parser, name) {\n        var top = MathtoolsUtil_js_1.MathtoolsUtil.checkAlignment(parser, name);\n        if (top.row.length % 2 === 1) {\n            top.row.push(parser.create('node', 'mtd', []));\n        }\n        var arg = parser.GetArgument(name);\n        var rest = parser.string.substr(parser.i);\n        parser.string = arg + '&&\\\\endAboxed';\n        parser.i = 0;\n        var left = parser.GetUpTo(name, '&');\n        var right = parser.GetUpTo(name, '&');\n        parser.GetUpTo(name, '\\\\endAboxed');\n        var tex = ParseUtil_js_1.default.substituteArgs(parser, [left, right], '\\\\rlap{\\\\boxed{#1{}#2}}\\\\kern.267em\\\\phantom{#1}&\\\\phantom{{}#2}\\\\kern.267em');\n        parser.string = tex + rest;\n        parser.i = 0;\n    },\n    ArrowBetweenLines: function (parser, name) {\n        var top = MathtoolsUtil_js_1.MathtoolsUtil.checkAlignment(parser, name);\n        if (top.Size() || top.row.length) {\n            throw new TexError_js_1.default('BetweenLines', '%1 must be on a row by itself', name);\n        }\n        var star = parser.GetStar();\n        var symbol = parser.GetBrackets(name, '\\\\Updownarrow');\n        if (star) {\n            top.EndEntry();\n            top.EndEntry();\n        }\n        var tex = (star ? '\\\\quad' + symbol : symbol + '\\\\quad');\n        var mml = new TexParser_js_1.default(tex, parser.stack.env, parser.configuration).mml();\n        parser.Push(mml);\n        top.EndEntry();\n        top.EndRow();\n    },\n    VDotsWithin: function (parser, name) {\n        var top = parser.stack.Top();\n        var isFlush = (top.getProperty('flushspaceabove') === top.table.length);\n        var arg = '\\\\mmlToken{mi}{}' + parser.GetArgument(name) + '\\\\mmlToken{mi}{}';\n        var base = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();\n        var mml = parser.create('node', 'mpadded', [\n            parser.create('node', 'mpadded', [\n                parser.create('node', 'mo', [\n                    parser.create('text', '\\u22EE')\n                ])\n            ], __assign({ width: 0, lspace: '-.5width' }, (isFlush ? { height: '-.6em', voffset: '-.18em' } : {}))),\n            parser.create('node', 'mphantom', [base])\n        ], {\n            lspace: '.5width'\n        });\n        parser.Push(mml);\n    },\n    ShortVDotsWithin: function (parser, _name) {\n        var top = parser.stack.Top();\n        var star = parser.GetStar();\n        exports.MathtoolsMethods.FlushSpaceAbove(parser, '\\\\MTFlushSpaceAbove');\n        !star && top.EndEntry();\n        exports.MathtoolsMethods.VDotsWithin(parser, '\\\\vdotswithin');\n        star && top.EndEntry();\n        exports.MathtoolsMethods.FlushSpaceBelow(parser, '\\\\MTFlushSpaceBelow');\n    },\n    FlushSpaceAbove: function (parser, name) {\n        var top = MathtoolsUtil_js_1.MathtoolsUtil.checkAlignment(parser, name);\n        top.setProperty('flushspaceabove', top.table.length);\n        top.addRowSpacing('-' + parser.options.mathtools['shortvdotsadjustabove']);\n    },\n    FlushSpaceBelow: function (parser, name) {\n        var top = MathtoolsUtil_js_1.MathtoolsUtil.checkAlignment(parser, name);\n        top.Size() && top.EndEntry();\n        top.EndRow();\n        top.addRowSpacing('-' + parser.options.mathtools['shortvdotsadjustbelow']);\n    },\n    PairedDelimiters: function (parser, name, open, close, body, n, pre, post) {\n        if (body === void 0) { body = '#1'; }\n        if (n === void 0) { n = 1; }\n        if (pre === void 0) { pre = ''; }\n        if (post === void 0) { post = ''; }\n        var star = parser.GetStar();\n        var size = (star ? '' : parser.GetBrackets(name));\n        var _a = __read((star ? ['\\\\left', '\\\\right'] : size ? [size + 'l', size + 'r'] : ['', '']), 2), left = _a[0], right = _a[1];\n        var delim = (star ? '\\\\middle' : size || '');\n        if (n) {\n            var args = [];\n            for (var i = args.length; i < n; i++) {\n                args.push(parser.GetArgument(name));\n            }\n            pre = ParseUtil_js_1.default.substituteArgs(parser, args, pre);\n            body = ParseUtil_js_1.default.substituteArgs(parser, args, body);\n            post = ParseUtil_js_1.default.substituteArgs(parser, args, post);\n        }\n        body = body.replace(/\\\\delimsize/g, delim);\n        parser.string = [pre, left, open, body, right, close, post, parser.string.substr(parser.i)]\n            .reduce(function (s, part) { return ParseUtil_js_1.default.addArgs(parser, s, part); }, '');\n        parser.i = 0;\n        ParseUtil_js_1.default.checkMaxMacros(parser);\n    },\n    DeclarePairedDelimiter: function (parser, name) {\n        var cs = NewcommandUtil_js_1.default.GetCsNameArgument(parser, name);\n        var open = parser.GetArgument(name);\n        var close = parser.GetArgument(name);\n        MathtoolsUtil_js_1.MathtoolsUtil.addPairedDelims(parser.configuration, cs, [open, close]);\n    },\n    DeclarePairedDelimiterX: function (parser, name) {\n        var cs = NewcommandUtil_js_1.default.GetCsNameArgument(parser, name);\n        var n = NewcommandUtil_js_1.default.GetArgCount(parser, name);\n        var open = parser.GetArgument(name);\n        var close = parser.GetArgument(name);\n        var body = parser.GetArgument(name);\n        MathtoolsUtil_js_1.MathtoolsUtil.addPairedDelims(parser.configuration, cs, [open, close, body, n]);\n    },\n    DeclarePairedDelimiterXPP: function (parser, name) {\n        var cs = NewcommandUtil_js_1.default.GetCsNameArgument(parser, name);\n        var n = NewcommandUtil_js_1.default.GetArgCount(parser, name);\n        var pre = parser.GetArgument(name);\n        var open = parser.GetArgument(name);\n        var close = parser.GetArgument(name);\n        var post = parser.GetArgument(name);\n        var body = parser.GetArgument(name);\n        MathtoolsUtil_js_1.MathtoolsUtil.addPairedDelims(parser.configuration, cs, [open, close, body, n, pre, post]);\n    },\n    CenterColon: function (parser, _name, center, force, thin) {\n        if (force === void 0) { force = false; }\n        if (thin === void 0) { thin = false; }\n        var options = parser.options.mathtools;\n        var mml = parser.create('token', 'mo', {}, ':');\n        if (center && (options['centercolon'] || force)) {\n            var dy = options['centercolon-offset'];\n            mml = parser.create('node', 'mpadded', [mml], __assign({ voffset: dy, height: \"+\".concat(dy), depth: \"-\".concat(dy) }, (thin ? { width: options['thincolon-dw'], lspace: options['thincolon-dx'] } : {})));\n        }\n        parser.Push(mml);\n    },\n    Relation: function (parser, _name, tex, unicode) {\n        var options = parser.options.mathtools;\n        if (options['use-unicode'] && unicode) {\n            parser.Push(parser.create('token', 'mo', { texClass: MmlNode_js_1.TEXCLASS.REL }, unicode));\n        }\n        else {\n            tex = '\\\\mathrel{' + tex.replace(/:/g, '\\\\MTThinColon').replace(/-/g, '\\\\mathrel{-}') + '}';\n            parser.string = ParseUtil_js_1.default.addArgs(parser, tex, parser.string.substr(parser.i));\n            parser.i = 0;\n        }\n    },\n    NArrow: function (parser, _name, c, dy) {\n        parser.Push(parser.create('node', 'TeXAtom', [\n            parser.create('token', 'mtext', {}, c),\n            parser.create('node', 'mpadded', [\n                parser.create('node', 'mpadded', [\n                    parser.create('node', 'menclose', [\n                        parser.create('node', 'mspace', [], { height: '.2em', depth: 0, width: '.4em' })\n                    ], { notation: 'updiagonalstrike', 'data-thickness': '.05em', 'data-padding': 0 })\n                ], { width: 0, lspace: '-.5width', voffset: dy }),\n                parser.create('node', 'mphantom', [\n                    parser.create('token', 'mtext', {}, c)\n                ])\n            ], { width: 0, lspace: '-.5width' })\n        ], { texClass: MmlNode_js_1.TEXCLASS.REL }));\n    },\n    SplitFrac: function (parser, name, display) {\n        var num = parser.ParseArg(name);\n        var den = parser.ParseArg(name);\n        parser.Push(parser.create('node', 'mstyle', [\n            parser.create('node', 'mfrac', [\n                parser.create('node', 'mstyle', [\n                    num,\n                    parser.create('token', 'mi'),\n                    parser.create('token', 'mspace', { width: '1em' })\n                ], { scriptlevel: 0 }),\n                parser.create('node', 'mstyle', [\n                    parser.create('token', 'mspace', { width: '1em' }),\n                    parser.create('token', 'mi'),\n                    den\n                ], { scriptlevel: 0 })\n            ], { linethickness: 0, numalign: 'left', denomalign: 'right' })\n        ], { displaystyle: display, scriptlevel: 0 }));\n    },\n    XMathStrut: function (parser, name) {\n        var dd = parser.GetBrackets(name);\n        var dh = parser.GetArgument(name);\n        dh = MathtoolsUtil_js_1.MathtoolsUtil.plusOrMinus(name, dh);\n        dd = MathtoolsUtil_js_1.MathtoolsUtil.plusOrMinus(name, dd || dh);\n        parser.Push(parser.create('node', 'TeXAtom', [\n            parser.create('node', 'mpadded', [\n                parser.create('node', 'mphantom', [\n                    parser.create('token', 'mo', { stretchy: false }, '(')\n                ])\n            ], { width: 0, height: dh + 'height', depth: dd + 'depth' })\n        ], { texClass: MmlNode_js_1.TEXCLASS.ORD }));\n    },\n    Prescript: function (parser, name) {\n        var sup = MathtoolsUtil_js_1.MathtoolsUtil.getScript(parser, name, 'sup');\n        var sub = MathtoolsUtil_js_1.MathtoolsUtil.getScript(parser, name, 'sub');\n        var base = MathtoolsUtil_js_1.MathtoolsUtil.getScript(parser, name, 'arg');\n        if (NodeUtil_js_1.default.isType(sup, 'none') && NodeUtil_js_1.default.isType(sub, 'none')) {\n            parser.Push(base);\n            return;\n        }\n        var mml = parser.create('node', 'mmultiscripts', [base]);\n        NodeUtil_js_1.default.getChildren(mml).push(null, null);\n        NodeUtil_js_1.default.appendChildren(mml, [parser.create('node', 'mprescripts'), sub, sup]);\n        mml.setProperty('fixPrescript', true);\n        parser.Push(mml);\n    },\n    NewTagForm: function (parser, name, renew) {\n        if (renew === void 0) { renew = false; }\n        var tags = parser.tags;\n        if (!('mtFormats' in tags)) {\n            throw new TexError_js_1.default('TagsNotMT', '%1 can only be used with ams or mathtools tags', name);\n        }\n        var id = parser.GetArgument(name).trim();\n        if (!id) {\n            throw new TexError_js_1.default('InvalidTagFormID', 'Tag form name can\\'t be empty');\n        }\n        var format = parser.GetBrackets(name, '');\n        var left = parser.GetArgument(name);\n        var right = parser.GetArgument(name);\n        if (!renew && tags.mtFormats.has(id)) {\n            throw new TexError_js_1.default('DuplicateTagForm', 'Duplicate tag form: %1', id);\n        }\n        tags.mtFormats.set(id, [left, right, format]);\n    },\n    UseTagForm: function (parser, name) {\n        var tags = parser.tags;\n        if (!('mtFormats' in tags)) {\n            throw new TexError_js_1.default('TagsNotMT', '%1 can only be used with ams or mathtools tags', name);\n        }\n        var id = parser.GetArgument(name).trim();\n        if (!id) {\n            tags.mtCurrent = null;\n            return;\n        }\n        if (!tags.mtFormats.has(id)) {\n            throw new TexError_js_1.default('UndefinedTagForm', 'Undefined tag form: %1', id);\n        }\n        tags.mtCurrent = tags.mtFormats.get(id);\n    },\n    SetOptions: function (parser, name) {\n        var e_2, _a;\n        var options = parser.options.mathtools;\n        if (!options['allow-mathtoolsset']) {\n            throw new TexError_js_1.default('ForbiddenMathtoolsSet', '%1 is disabled', name);\n        }\n        var allowed = {};\n        Object.keys(options).forEach(function (id) {\n            if (id !== 'pariedDelimiters' && id !== 'tagforms' && id !== 'allow-mathtoolsset') {\n                allowed[id] = 1;\n            }\n        });\n        var args = parser.GetArgument(name);\n        var keys = ParseUtil_js_1.default.keyvalOptions(args, allowed, true);\n        try {\n            for (var _b = __values(Object.keys(keys)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var id = _c.value;\n                options[id] = keys[id];\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    },\n    Array: BaseMethods_js_1.default.Array,\n    Macro: BaseMethods_js_1.default.Macro,\n    xArrow: AmsMethods_js_1.AmsMethods.xArrow,\n    HandleRef: AmsMethods_js_1.AmsMethods.HandleRef,\n    AmsEqnArray: AmsMethods_js_1.AmsMethods.AmsEqnArray,\n    MacroWithTemplate: NewcommandMethods_js_1.default.MacroWithTemplate,\n};\n//# sourceMappingURL=MathtoolsMethods.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsMethods.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsTags.js":
/*!***************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsTags.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MathtoolsTagFormat = void 0;\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar Tags_js_1 = __webpack_require__(/*! ../Tags.js */ \"./node_modules/mathjax-full/js/input/tex/Tags.js\");\nvar tagID = 0;\nfunction MathtoolsTagFormat(config, jax) {\n    var tags = jax.parseOptions.options.tags;\n    if (tags !== 'base' && config.tags.hasOwnProperty(tags)) {\n        Tags_js_1.TagsFactory.add(tags, config.tags[tags]);\n    }\n    var TagClass = Tags_js_1.TagsFactory.create(jax.parseOptions.options.tags).constructor;\n    var TagFormat = (function (_super) {\n        __extends(TagFormat, _super);\n        function TagFormat() {\n            var e_1, _a;\n            var _this = _super.call(this) || this;\n            _this.mtFormats = new Map();\n            _this.mtCurrent = null;\n            var forms = jax.parseOptions.options.mathtools.tagforms;\n            try {\n                for (var _b = __values(Object.keys(forms)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var form = _c.value;\n                    if (!Array.isArray(forms[form]) || forms[form].length !== 3) {\n                        throw new TexError_js_1.default('InvalidTagFormDef', 'The tag form definition for \"%1\" should be an array fo three strings', form);\n                    }\n                    _this.mtFormats.set(form, forms[form]);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return _this;\n        }\n        TagFormat.prototype.formatTag = function (tag) {\n            if (this.mtCurrent) {\n                var _a = __read(this.mtCurrent, 3), left = _a[0], right = _a[1], format = _a[2];\n                return (format ? \"\".concat(left).concat(format, \"{\").concat(tag, \"}\").concat(right) : \"\".concat(left).concat(tag).concat(right));\n            }\n            return _super.prototype.formatTag.call(this, tag);\n        };\n        return TagFormat;\n    }(TagClass));\n    tagID++;\n    var tagName = 'MathtoolsTags-' + tagID;\n    Tags_js_1.TagsFactory.add(tagName, TagFormat);\n    jax.parseOptions.options.tags = tagName;\n}\nexports.MathtoolsTagFormat = MathtoolsTagFormat;\n//# sourceMappingURL=MathtoolsTags.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9tYXRodG9vbHMvTWF0aHRvb2xzVGFncy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCLHNDQUFzQyxrQkFBa0I7QUFDdkYsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE1BQU07QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCLG9DQUFvQyxtQkFBTyxDQUFDLDRFQUFnQjtBQUM1RCxnQkFBZ0IsbUJBQU8sQ0FBQyxvRUFBWTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRFQUE0RSxVQUFVO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLFFBQVE7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFLGlCQUFpQjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvaW5wdXQvdGV4L21hdGh0b29scy9NYXRodG9vbHNUYWdzLmpzP2E5ZTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9fdmFsdWVzID0gKHRoaXMgJiYgdGhpcy5fX3ZhbHVlcykgfHwgZnVuY3Rpb24obykge1xuICAgIHZhciBzID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIFN5bWJvbC5pdGVyYXRvciwgbSA9IHMgJiYgb1tzXSwgaSA9IDA7XG4gICAgaWYgKG0pIHJldHVybiBtLmNhbGwobyk7XG4gICAgaWYgKG8gJiYgdHlwZW9mIG8ubGVuZ3RoID09PSBcIm51bWJlclwiKSByZXR1cm4ge1xuICAgICAgICBuZXh0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAobyAmJiBpID49IG8ubGVuZ3RoKSBvID0gdm9pZCAwO1xuICAgICAgICAgICAgcmV0dXJuIHsgdmFsdWU6IG8gJiYgb1tpKytdLCBkb25lOiAhbyB9O1xuICAgICAgICB9XG4gICAgfTtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHMgPyBcIk9iamVjdCBpcyBub3QgaXRlcmFibGUuXCIgOiBcIlN5bWJvbC5pdGVyYXRvciBpcyBub3QgZGVmaW5lZC5cIik7XG59O1xudmFyIF9fcmVhZCA9ICh0aGlzICYmIHRoaXMuX19yZWFkKSB8fCBmdW5jdGlvbiAobywgbikge1xuICAgIHZhciBtID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9bU3ltYm9sLml0ZXJhdG9yXTtcbiAgICBpZiAoIW0pIHJldHVybiBvO1xuICAgIHZhciBpID0gbS5jYWxsKG8pLCByLCBhciA9IFtdLCBlO1xuICAgIHRyeSB7XG4gICAgICAgIHdoaWxlICgobiA9PT0gdm9pZCAwIHx8IG4tLSA+IDApICYmICEociA9IGkubmV4dCgpKS5kb25lKSBhci5wdXNoKHIudmFsdWUpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHsgZSA9IHsgZXJyb3I6IGVycm9yIH07IH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChyICYmICFyLmRvbmUgJiYgKG0gPSBpW1wicmV0dXJuXCJdKSkgbS5jYWxsKGkpO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkgeyBpZiAoZSkgdGhyb3cgZS5lcnJvcjsgfVxuICAgIH1cbiAgICByZXR1cm4gYXI7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NYXRodG9vbHNUYWdGb3JtYXQgPSB2b2lkIDA7XG52YXIgVGV4RXJyb3JfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vVGV4RXJyb3IuanNcIikpO1xudmFyIFRhZ3NfanNfMSA9IHJlcXVpcmUoXCIuLi9UYWdzLmpzXCIpO1xudmFyIHRhZ0lEID0gMDtcbmZ1bmN0aW9uIE1hdGh0b29sc1RhZ0Zvcm1hdChjb25maWcsIGpheCkge1xuICAgIHZhciB0YWdzID0gamF4LnBhcnNlT3B0aW9ucy5vcHRpb25zLnRhZ3M7XG4gICAgaWYgKHRhZ3MgIT09ICdiYXNlJyAmJiBjb25maWcudGFncy5oYXNPd25Qcm9wZXJ0eSh0YWdzKSkge1xuICAgICAgICBUYWdzX2pzXzEuVGFnc0ZhY3RvcnkuYWRkKHRhZ3MsIGNvbmZpZy50YWdzW3RhZ3NdKTtcbiAgICB9XG4gICAgdmFyIFRhZ0NsYXNzID0gVGFnc19qc18xLlRhZ3NGYWN0b3J5LmNyZWF0ZShqYXgucGFyc2VPcHRpb25zLm9wdGlvbnMudGFncykuY29uc3RydWN0b3I7XG4gICAgdmFyIFRhZ0Zvcm1hdCA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgICAgIF9fZXh0ZW5kcyhUYWdGb3JtYXQsIF9zdXBlcik7XG4gICAgICAgIGZ1bmN0aW9uIFRhZ0Zvcm1hdCgpIHtcbiAgICAgICAgICAgIHZhciBlXzEsIF9hO1xuICAgICAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcbiAgICAgICAgICAgIF90aGlzLm10Rm9ybWF0cyA9IG5ldyBNYXAoKTtcbiAgICAgICAgICAgIF90aGlzLm10Q3VycmVudCA9IG51bGw7XG4gICAgICAgICAgICB2YXIgZm9ybXMgPSBqYXgucGFyc2VPcHRpb25zLm9wdGlvbnMubWF0aHRvb2xzLnRhZ2Zvcm1zO1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBfYiA9IF9fdmFsdWVzKE9iamVjdC5rZXlzKGZvcm1zKSksIF9jID0gX2IubmV4dCgpOyAhX2MuZG9uZTsgX2MgPSBfYi5uZXh0KCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZvcm0gPSBfYy52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGZvcm1zW2Zvcm1dKSB8fCBmb3Jtc1tmb3JtXS5sZW5ndGggIT09IDMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBUZXhFcnJvcl9qc18xLmRlZmF1bHQoJ0ludmFsaWRUYWdGb3JtRGVmJywgJ1RoZSB0YWcgZm9ybSBkZWZpbml0aW9uIGZvciBcIiUxXCIgc2hvdWxkIGJlIGFuIGFycmF5IGZvIHRocmVlIHN0cmluZ3MnLCBmb3JtKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBfdGhpcy5tdEZvcm1hdHMuc2V0KGZvcm0sIGZvcm1zW2Zvcm1dKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZV8xXzEpIHsgZV8xID0geyBlcnJvcjogZV8xXzEgfTsgfVxuICAgICAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKF9jICYmICFfYy5kb25lICYmIChfYSA9IF9iLnJldHVybikpIF9hLmNhbGwoX2IpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmaW5hbGx5IHsgaWYgKGVfMSkgdGhyb3cgZV8xLmVycm9yOyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgICAgIH1cbiAgICAgICAgVGFnRm9ybWF0LnByb3RvdHlwZS5mb3JtYXRUYWcgPSBmdW5jdGlvbiAodGFnKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5tdEN1cnJlbnQpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2EgPSBfX3JlYWQodGhpcy5tdEN1cnJlbnQsIDMpLCBsZWZ0ID0gX2FbMF0sIHJpZ2h0ID0gX2FbMV0sIGZvcm1hdCA9IF9hWzJdO1xuICAgICAgICAgICAgICAgIHJldHVybiAoZm9ybWF0ID8gXCJcIi5jb25jYXQobGVmdCkuY29uY2F0KGZvcm1hdCwgXCJ7XCIpLmNvbmNhdCh0YWcsIFwifVwiKS5jb25jYXQocmlnaHQpIDogXCJcIi5jb25jYXQobGVmdCkuY29uY2F0KHRhZykuY29uY2F0KHJpZ2h0KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gX3N1cGVyLnByb3RvdHlwZS5mb3JtYXRUYWcuY2FsbCh0aGlzLCB0YWcpO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gVGFnRm9ybWF0O1xuICAgIH0oVGFnQ2xhc3MpKTtcbiAgICB0YWdJRCsrO1xuICAgIHZhciB0YWdOYW1lID0gJ01hdGh0b29sc1RhZ3MtJyArIHRhZ0lEO1xuICAgIFRhZ3NfanNfMS5UYWdzRmFjdG9yeS5hZGQodGFnTmFtZSwgVGFnRm9ybWF0KTtcbiAgICBqYXgucGFyc2VPcHRpb25zLm9wdGlvbnMudGFncyA9IHRhZ05hbWU7XG59XG5leHBvcnRzLk1hdGh0b29sc1RhZ0Zvcm1hdCA9IE1hdGh0b29sc1RhZ0Zvcm1hdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1hdGh0b29sc1RhZ3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsTags.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsUtil.js":
/*!***************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsUtil.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MathtoolsUtil = void 0;\nvar BaseItems_js_1 = __webpack_require__(/*! ../base/BaseItems.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseItems.js\");\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar TexParser_js_1 = __importDefault(__webpack_require__(/*! ../TexParser.js */ \"./node_modules/mathjax-full/js/input/tex/TexParser.js\"));\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar Symbol_js_1 = __webpack_require__(/*! ../Symbol.js */ \"./node_modules/mathjax-full/js/input/tex/Symbol.js\");\nvar Options_js_1 = __webpack_require__(/*! ../../../util/Options.js */ \"./node_modules/mathjax-full/js/util/Options.js\");\nvar MathtoolsMethods_js_1 = __webpack_require__(/*! ./MathtoolsMethods.js */ \"./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsMethods.js\");\nvar MathtoolsConfiguration_js_1 = __webpack_require__(/*! ./MathtoolsConfiguration.js */ \"./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsConfiguration.js\");\nexports.MathtoolsUtil = {\n    setDisplayLevel: function (mml, style) {\n        if (!style)\n            return;\n        var _a = __read((0, Options_js_1.lookup)(style, {\n            '\\\\displaystyle': [true, 0],\n            '\\\\textstyle': [false, 0],\n            '\\\\scriptstyle': [false, 1],\n            '\\\\scriptscriptstyle': [false, 2]\n        }, [null, null]), 2), display = _a[0], script = _a[1];\n        if (display !== null) {\n            mml.attributes.set('displaystyle', display);\n            mml.attributes.set('scriptlevel', script);\n        }\n    },\n    checkAlignment: function (parser, name) {\n        var top = parser.stack.Top();\n        if (top.kind !== BaseItems_js_1.EqnArrayItem.prototype.kind) {\n            throw new TexError_js_1.default('NotInAlignment', '%1 can only be used in aligment environments', name);\n        }\n        return top;\n    },\n    addPairedDelims: function (config, cs, args) {\n        var delims = config.handlers.retrieve(MathtoolsConfiguration_js_1.PAIREDDELIMS);\n        delims.add(cs, new Symbol_js_1.Macro(cs, MathtoolsMethods_js_1.MathtoolsMethods.PairedDelimiters, args));\n    },\n    spreadLines: function (mtable, spread) {\n        if (!mtable.isKind('mtable'))\n            return;\n        var rowspacing = mtable.attributes.get('rowspacing');\n        if (rowspacing) {\n            var add_1 = ParseUtil_js_1.default.dimen2em(spread);\n            rowspacing = rowspacing\n                .split(/ /)\n                .map(function (s) { return ParseUtil_js_1.default.Em(Math.max(0, ParseUtil_js_1.default.dimen2em(s) + add_1)); })\n                .join(' ');\n        }\n        else {\n            rowspacing = spread;\n        }\n        mtable.attributes.set('rowspacing', rowspacing);\n    },\n    plusOrMinus: function (name, n) {\n        n = n.trim();\n        if (!n.match(/^[-+]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)$/)) {\n            throw new TexError_js_1.default('NotANumber', 'Argument to %1 is not a number', name);\n        }\n        return (n.match(/^[-+]/) ? n : '+' + n);\n    },\n    getScript: function (parser, name, pos) {\n        var arg = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));\n        if (arg === '') {\n            return parser.create('node', 'none');\n        }\n        var format = parser.options.mathtools[\"prescript-\".concat(pos, \"-format\")];\n        format && (arg = \"\".concat(format, \"{\").concat(arg, \"}\"));\n        return new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();\n    }\n};\n//# sourceMappingURL=MathtoolsUtil.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9tYXRodG9vbHMvTWF0aHRvb2xzVXRpbC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE1BQU07QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCLHFCQUFxQixtQkFBTyxDQUFDLHdGQUFzQjtBQUNuRCxxQ0FBcUMsbUJBQU8sQ0FBQyw4RUFBaUI7QUFDOUQscUNBQXFDLG1CQUFPLENBQUMsOEVBQWlCO0FBQzlELG9DQUFvQyxtQkFBTyxDQUFDLDRFQUFnQjtBQUM1RCxrQkFBa0IsbUJBQU8sQ0FBQyx3RUFBYztBQUN4QyxtQkFBbUIsbUJBQU8sQ0FBQyxnRkFBMEI7QUFDckQsNEJBQTRCLG1CQUFPLENBQUMscUdBQXVCO0FBQzNELGtDQUFrQyxtQkFBTyxDQUFDLGlIQUE2QjtBQUN2RSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsNEZBQTRGO0FBQ2hJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLGlCQUFpQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9tYXRodG9vbHMvTWF0aHRvb2xzVXRpbC5qcz9mZmM5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fcmVhZCA9ICh0aGlzICYmIHRoaXMuX19yZWFkKSB8fCBmdW5jdGlvbiAobywgbikge1xuICAgIHZhciBtID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9bU3ltYm9sLml0ZXJhdG9yXTtcbiAgICBpZiAoIW0pIHJldHVybiBvO1xuICAgIHZhciBpID0gbS5jYWxsKG8pLCByLCBhciA9IFtdLCBlO1xuICAgIHRyeSB7XG4gICAgICAgIHdoaWxlICgobiA9PT0gdm9pZCAwIHx8IG4tLSA+IDApICYmICEociA9IGkubmV4dCgpKS5kb25lKSBhci5wdXNoKHIudmFsdWUpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHsgZSA9IHsgZXJyb3I6IGVycm9yIH07IH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChyICYmICFyLmRvbmUgJiYgKG0gPSBpW1wicmV0dXJuXCJdKSkgbS5jYWxsKGkpO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkgeyBpZiAoZSkgdGhyb3cgZS5lcnJvcjsgfVxuICAgIH1cbiAgICByZXR1cm4gYXI7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NYXRodG9vbHNVdGlsID0gdm9pZCAwO1xudmFyIEJhc2VJdGVtc19qc18xID0gcmVxdWlyZShcIi4uL2Jhc2UvQmFzZUl0ZW1zLmpzXCIpO1xudmFyIFBhcnNlVXRpbF9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi9QYXJzZVV0aWwuanNcIikpO1xudmFyIFRleFBhcnNlcl9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi9UZXhQYXJzZXIuanNcIikpO1xudmFyIFRleEVycm9yX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL1RleEVycm9yLmpzXCIpKTtcbnZhciBTeW1ib2xfanNfMSA9IHJlcXVpcmUoXCIuLi9TeW1ib2wuanNcIik7XG52YXIgT3B0aW9uc19qc18xID0gcmVxdWlyZShcIi4uLy4uLy4uL3V0aWwvT3B0aW9ucy5qc1wiKTtcbnZhciBNYXRodG9vbHNNZXRob2RzX2pzXzEgPSByZXF1aXJlKFwiLi9NYXRodG9vbHNNZXRob2RzLmpzXCIpO1xudmFyIE1hdGh0b29sc0NvbmZpZ3VyYXRpb25fanNfMSA9IHJlcXVpcmUoXCIuL01hdGh0b29sc0NvbmZpZ3VyYXRpb24uanNcIik7XG5leHBvcnRzLk1hdGh0b29sc1V0aWwgPSB7XG4gICAgc2V0RGlzcGxheUxldmVsOiBmdW5jdGlvbiAobW1sLCBzdHlsZSkge1xuICAgICAgICBpZiAoIXN0eWxlKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB2YXIgX2EgPSBfX3JlYWQoKDAsIE9wdGlvbnNfanNfMS5sb29rdXApKHN0eWxlLCB7XG4gICAgICAgICAgICAnXFxcXGRpc3BsYXlzdHlsZSc6IFt0cnVlLCAwXSxcbiAgICAgICAgICAgICdcXFxcdGV4dHN0eWxlJzogW2ZhbHNlLCAwXSxcbiAgICAgICAgICAgICdcXFxcc2NyaXB0c3R5bGUnOiBbZmFsc2UsIDFdLFxuICAgICAgICAgICAgJ1xcXFxzY3JpcHRzY3JpcHRzdHlsZSc6IFtmYWxzZSwgMl1cbiAgICAgICAgfSwgW251bGwsIG51bGxdKSwgMiksIGRpc3BsYXkgPSBfYVswXSwgc2NyaXB0ID0gX2FbMV07XG4gICAgICAgIGlmIChkaXNwbGF5ICE9PSBudWxsKSB7XG4gICAgICAgICAgICBtbWwuYXR0cmlidXRlcy5zZXQoJ2Rpc3BsYXlzdHlsZScsIGRpc3BsYXkpO1xuICAgICAgICAgICAgbW1sLmF0dHJpYnV0ZXMuc2V0KCdzY3JpcHRsZXZlbCcsIHNjcmlwdCk7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIGNoZWNrQWxpZ25tZW50OiBmdW5jdGlvbiAocGFyc2VyLCBuYW1lKSB7XG4gICAgICAgIHZhciB0b3AgPSBwYXJzZXIuc3RhY2suVG9wKCk7XG4gICAgICAgIGlmICh0b3Aua2luZCAhPT0gQmFzZUl0ZW1zX2pzXzEuRXFuQXJyYXlJdGVtLnByb3RvdHlwZS5raW5kKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVGV4RXJyb3JfanNfMS5kZWZhdWx0KCdOb3RJbkFsaWdubWVudCcsICclMSBjYW4gb25seSBiZSB1c2VkIGluIGFsaWdtZW50IGVudmlyb25tZW50cycsIG5hbWUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0b3A7XG4gICAgfSxcbiAgICBhZGRQYWlyZWREZWxpbXM6IGZ1bmN0aW9uIChjb25maWcsIGNzLCBhcmdzKSB7XG4gICAgICAgIHZhciBkZWxpbXMgPSBjb25maWcuaGFuZGxlcnMucmV0cmlldmUoTWF0aHRvb2xzQ29uZmlndXJhdGlvbl9qc18xLlBBSVJFRERFTElNUyk7XG4gICAgICAgIGRlbGltcy5hZGQoY3MsIG5ldyBTeW1ib2xfanNfMS5NYWNybyhjcywgTWF0aHRvb2xzTWV0aG9kc19qc18xLk1hdGh0b29sc01ldGhvZHMuUGFpcmVkRGVsaW1pdGVycywgYXJncykpO1xuICAgIH0sXG4gICAgc3ByZWFkTGluZXM6IGZ1bmN0aW9uIChtdGFibGUsIHNwcmVhZCkge1xuICAgICAgICBpZiAoIW10YWJsZS5pc0tpbmQoJ210YWJsZScpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB2YXIgcm93c3BhY2luZyA9IG10YWJsZS5hdHRyaWJ1dGVzLmdldCgncm93c3BhY2luZycpO1xuICAgICAgICBpZiAocm93c3BhY2luZykge1xuICAgICAgICAgICAgdmFyIGFkZF8xID0gUGFyc2VVdGlsX2pzXzEuZGVmYXVsdC5kaW1lbjJlbShzcHJlYWQpO1xuICAgICAgICAgICAgcm93c3BhY2luZyA9IHJvd3NwYWNpbmdcbiAgICAgICAgICAgICAgICAuc3BsaXQoLyAvKVxuICAgICAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKHMpIHsgcmV0dXJuIFBhcnNlVXRpbF9qc18xLmRlZmF1bHQuRW0oTWF0aC5tYXgoMCwgUGFyc2VVdGlsX2pzXzEuZGVmYXVsdC5kaW1lbjJlbShzKSArIGFkZF8xKSk7IH0pXG4gICAgICAgICAgICAgICAgLmpvaW4oJyAnKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJvd3NwYWNpbmcgPSBzcHJlYWQ7XG4gICAgICAgIH1cbiAgICAgICAgbXRhYmxlLmF0dHJpYnV0ZXMuc2V0KCdyb3dzcGFjaW5nJywgcm93c3BhY2luZyk7XG4gICAgfSxcbiAgICBwbHVzT3JNaW51czogZnVuY3Rpb24gKG5hbWUsIG4pIHtcbiAgICAgICAgbiA9IG4udHJpbSgpO1xuICAgICAgICBpZiAoIW4ubWF0Y2goL15bLStdPyg/OlxcZCsoPzpcXC5cXGQqKT98XFwuXFxkKykkLykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUZXhFcnJvcl9qc18xLmRlZmF1bHQoJ05vdEFOdW1iZXInLCAnQXJndW1lbnQgdG8gJTEgaXMgbm90IGEgbnVtYmVyJywgbmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChuLm1hdGNoKC9eWy0rXS8pID8gbiA6ICcrJyArIG4pO1xuICAgIH0sXG4gICAgZ2V0U2NyaXB0OiBmdW5jdGlvbiAocGFyc2VyLCBuYW1lLCBwb3MpIHtcbiAgICAgICAgdmFyIGFyZyA9IFBhcnNlVXRpbF9qc18xLmRlZmF1bHQudHJpbVNwYWNlcyhwYXJzZXIuR2V0QXJndW1lbnQobmFtZSkpO1xuICAgICAgICBpZiAoYXJnID09PSAnJykge1xuICAgICAgICAgICAgcmV0dXJuIHBhcnNlci5jcmVhdGUoJ25vZGUnLCAnbm9uZScpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBmb3JtYXQgPSBwYXJzZXIub3B0aW9ucy5tYXRodG9vbHNbXCJwcmVzY3JpcHQtXCIuY29uY2F0KHBvcywgXCItZm9ybWF0XCIpXTtcbiAgICAgICAgZm9ybWF0ICYmIChhcmcgPSBcIlwiLmNvbmNhdChmb3JtYXQsIFwie1wiKS5jb25jYXQoYXJnLCBcIn1cIikpO1xuICAgICAgICByZXR1cm4gbmV3IFRleFBhcnNlcl9qc18xLmRlZmF1bHQoYXJnLCBwYXJzZXIuc3RhY2suZW52LCBwYXJzZXIuY29uZmlndXJhdGlvbikubW1sKCk7XG4gICAgfVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU1hdGh0b29sc1V0aWwuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/mathtools/MathtoolsUtil.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/mhchem/MhchemConfiguration.js":
/*!******************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/mhchem/MhchemConfiguration.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MhchemConfiguration = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar BaseMethods_js_1 = __importDefault(__webpack_require__(/*! ../base/BaseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseMethods.js\"));\nvar AmsMethods_js_1 = __webpack_require__(/*! ../ams/AmsMethods.js */ \"./node_modules/mathjax-full/js/input/tex/ams/AmsMethods.js\");\nvar mhchemParser_js_1 = __webpack_require__(/*! mhchemparser/dist/mhchemParser.js */ \"./node_modules/mhchemparser/dist/mhchemParser.js\");\nvar MhchemMethods = {};\nMhchemMethods.Macro = BaseMethods_js_1.default.Macro;\nMhchemMethods.xArrow = AmsMethods_js_1.AmsMethods.xArrow;\nMhchemMethods.Machine = function (parser, name, machine) {\n    var arg = parser.GetArgument(name);\n    var tex;\n    try {\n        tex = mhchemParser_js_1.mhchemParser.toTex(arg, machine);\n    }\n    catch (err) {\n        throw new TexError_js_1.default(err[0], err[1]);\n    }\n    parser.string = tex + parser.string.substr(parser.i);\n    parser.i = 0;\n};\nnew SymbolMap_js_1.CommandMap('mhchem', {\n    ce: ['Machine', 'ce'],\n    pu: ['Machine', 'pu'],\n    longrightleftharpoons: [\n        'Macro',\n        '\\\\stackrel{\\\\textstyle{-}\\\\!\\\\!{\\\\rightharpoonup}}{\\\\smash{{\\\\leftharpoondown}\\\\!\\\\!{-}}}'\n    ],\n    longRightleftharpoons: [\n        'Macro',\n        '\\\\stackrel{\\\\textstyle{-}\\\\!\\\\!{\\\\rightharpoonup}}{\\\\smash{\\\\leftharpoondown}}'\n    ],\n    longLeftrightharpoons: [\n        'Macro',\n        '\\\\stackrel{\\\\textstyle\\\\vphantom{{-}}{\\\\rightharpoonup}}{\\\\smash{{\\\\leftharpoondown}\\\\!\\\\!{-}}}'\n    ],\n    longleftrightarrows: [\n        'Macro',\n        '\\\\stackrel{\\\\longrightarrow}{\\\\smash{\\\\longleftarrow}\\\\Rule{0px}{.25em}{0px}}'\n    ],\n    tripledash: [\n        'Macro',\n        '\\\\vphantom{-}\\\\raise2mu{\\\\kern2mu\\\\tiny\\\\text{-}\\\\kern1mu\\\\text{-}\\\\kern1mu\\\\text{-}\\\\kern2mu}'\n    ],\n    xleftrightarrow: ['xArrow', 0x2194, 6, 6],\n    xrightleftharpoons: ['xArrow', 0x21CC, 5, 7],\n    xRightleftharpoons: ['xArrow', 0x21CC, 5, 7],\n    xLeftrightharpoons: ['xArrow', 0x21CC, 5, 7]\n}, MhchemMethods);\nexports.MhchemConfiguration = Configuration_js_1.Configuration.create('mhchem', { handler: { macro: ['mhchem'] } });\n//# sourceMappingURL=MhchemConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9taGNoZW0vTWhjaGVtQ29uZmlndXJhdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQix5QkFBeUIsbUJBQU8sQ0FBQyxzRkFBcUI7QUFDdEQscUJBQXFCLG1CQUFPLENBQUMsOEVBQWlCO0FBQzlDLG9DQUFvQyxtQkFBTyxDQUFDLDRFQUFnQjtBQUM1RCx1Q0FBdUMsbUJBQU8sQ0FBQyw0RkFBd0I7QUFDdkUsc0JBQXNCLG1CQUFPLENBQUMsd0ZBQXNCO0FBQ3BELHdCQUF3QixtQkFBTyxDQUFDLDJGQUFtQztBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFlBQVksRUFBRSxPQUFPLG1CQUFtQixTQUFTLGtCQUFrQixPQUFPLElBQUk7QUFDbEc7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFlBQVksRUFBRSxPQUFPLG1CQUFtQixRQUFRLG1CQUFtQjtBQUN2RjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsdUJBQXVCLElBQUksbUJBQW1CLFNBQVMsa0JBQWtCLE9BQU8sSUFBSTtBQUN4RztBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isa0JBQWtCLFFBQVEsZ0JBQWdCLE9BQU8sS0FBSyxPQUFPLEtBQUs7QUFDdEY7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLEVBQUUsV0FBVyxzQkFBc0IsRUFBRSxnQkFBZ0IsRUFBRSxnQkFBZ0IsRUFBRSxVQUFVO0FBQ3ZHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsMkJBQTJCLHVEQUF1RCxXQUFXLHFCQUFxQjtBQUNsSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9taGNoZW0vTWhjaGVtQ29uZmlndXJhdGlvbi5qcz8yNjQ4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NaGNoZW1Db25maWd1cmF0aW9uID0gdm9pZCAwO1xudmFyIENvbmZpZ3VyYXRpb25fanNfMSA9IHJlcXVpcmUoXCIuLi9Db25maWd1cmF0aW9uLmpzXCIpO1xudmFyIFN5bWJvbE1hcF9qc18xID0gcmVxdWlyZShcIi4uL1N5bWJvbE1hcC5qc1wiKTtcbnZhciBUZXhFcnJvcl9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi9UZXhFcnJvci5qc1wiKSk7XG52YXIgQmFzZU1ldGhvZHNfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vYmFzZS9CYXNlTWV0aG9kcy5qc1wiKSk7XG52YXIgQW1zTWV0aG9kc19qc18xID0gcmVxdWlyZShcIi4uL2Ftcy9BbXNNZXRob2RzLmpzXCIpO1xudmFyIG1oY2hlbVBhcnNlcl9qc18xID0gcmVxdWlyZShcIm1oY2hlbXBhcnNlci9kaXN0L21oY2hlbVBhcnNlci5qc1wiKTtcbnZhciBNaGNoZW1NZXRob2RzID0ge307XG5NaGNoZW1NZXRob2RzLk1hY3JvID0gQmFzZU1ldGhvZHNfanNfMS5kZWZhdWx0Lk1hY3JvO1xuTWhjaGVtTWV0aG9kcy54QXJyb3cgPSBBbXNNZXRob2RzX2pzXzEuQW1zTWV0aG9kcy54QXJyb3c7XG5NaGNoZW1NZXRob2RzLk1hY2hpbmUgPSBmdW5jdGlvbiAocGFyc2VyLCBuYW1lLCBtYWNoaW5lKSB7XG4gICAgdmFyIGFyZyA9IHBhcnNlci5HZXRBcmd1bWVudChuYW1lKTtcbiAgICB2YXIgdGV4O1xuICAgIHRyeSB7XG4gICAgICAgIHRleCA9IG1oY2hlbVBhcnNlcl9qc18xLm1oY2hlbVBhcnNlci50b1RleChhcmcsIG1hY2hpbmUpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIHRocm93IG5ldyBUZXhFcnJvcl9qc18xLmRlZmF1bHQoZXJyWzBdLCBlcnJbMV0pO1xuICAgIH1cbiAgICBwYXJzZXIuc3RyaW5nID0gdGV4ICsgcGFyc2VyLnN0cmluZy5zdWJzdHIocGFyc2VyLmkpO1xuICAgIHBhcnNlci5pID0gMDtcbn07XG5uZXcgU3ltYm9sTWFwX2pzXzEuQ29tbWFuZE1hcCgnbWhjaGVtJywge1xuICAgIGNlOiBbJ01hY2hpbmUnLCAnY2UnXSxcbiAgICBwdTogWydNYWNoaW5lJywgJ3B1J10sXG4gICAgbG9uZ3JpZ2h0bGVmdGhhcnBvb25zOiBbXG4gICAgICAgICdNYWNybycsXG4gICAgICAgICdcXFxcc3RhY2tyZWx7XFxcXHRleHRzdHlsZXstfVxcXFwhXFxcXCF7XFxcXHJpZ2h0aGFycG9vbnVwfX17XFxcXHNtYXNoe3tcXFxcbGVmdGhhcnBvb25kb3dufVxcXFwhXFxcXCF7LX19fSdcbiAgICBdLFxuICAgIGxvbmdSaWdodGxlZnRoYXJwb29uczogW1xuICAgICAgICAnTWFjcm8nLFxuICAgICAgICAnXFxcXHN0YWNrcmVse1xcXFx0ZXh0c3R5bGV7LX1cXFxcIVxcXFwhe1xcXFxyaWdodGhhcnBvb251cH19e1xcXFxzbWFzaHtcXFxcbGVmdGhhcnBvb25kb3dufX0nXG4gICAgXSxcbiAgICBsb25nTGVmdHJpZ2h0aGFycG9vbnM6IFtcbiAgICAgICAgJ01hY3JvJyxcbiAgICAgICAgJ1xcXFxzdGFja3JlbHtcXFxcdGV4dHN0eWxlXFxcXHZwaGFudG9te3stfX17XFxcXHJpZ2h0aGFycG9vbnVwfX17XFxcXHNtYXNoe3tcXFxcbGVmdGhhcnBvb25kb3dufVxcXFwhXFxcXCF7LX19fSdcbiAgICBdLFxuICAgIGxvbmdsZWZ0cmlnaHRhcnJvd3M6IFtcbiAgICAgICAgJ01hY3JvJyxcbiAgICAgICAgJ1xcXFxzdGFja3JlbHtcXFxcbG9uZ3JpZ2h0YXJyb3d9e1xcXFxzbWFzaHtcXFxcbG9uZ2xlZnRhcnJvd31cXFxcUnVsZXswcHh9ey4yNWVtfXswcHh9fSdcbiAgICBdLFxuICAgIHRyaXBsZWRhc2g6IFtcbiAgICAgICAgJ01hY3JvJyxcbiAgICAgICAgJ1xcXFx2cGhhbnRvbXstfVxcXFxyYWlzZTJtdXtcXFxca2VybjJtdVxcXFx0aW55XFxcXHRleHR7LX1cXFxca2VybjFtdVxcXFx0ZXh0ey19XFxcXGtlcm4xbXVcXFxcdGV4dHstfVxcXFxrZXJuMm11fSdcbiAgICBdLFxuICAgIHhsZWZ0cmlnaHRhcnJvdzogWyd4QXJyb3cnLCAweDIxOTQsIDYsIDZdLFxuICAgIHhyaWdodGxlZnRoYXJwb29uczogWyd4QXJyb3cnLCAweDIxQ0MsIDUsIDddLFxuICAgIHhSaWdodGxlZnRoYXJwb29uczogWyd4QXJyb3cnLCAweDIxQ0MsIDUsIDddLFxuICAgIHhMZWZ0cmlnaHRoYXJwb29uczogWyd4QXJyb3cnLCAweDIxQ0MsIDUsIDddXG59LCBNaGNoZW1NZXRob2RzKTtcbmV4cG9ydHMuTWhjaGVtQ29uZmlndXJhdGlvbiA9IENvbmZpZ3VyYXRpb25fanNfMS5Db25maWd1cmF0aW9uLmNyZWF0ZSgnbWhjaGVtJywgeyBoYW5kbGVyOiB7IG1hY3JvOiBbJ21oY2hlbSddIH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1NaGNoZW1Db25maWd1cmF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/mhchem/MhchemConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandConfiguration.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandConfiguration.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NewcommandConfiguration = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar NewcommandItems_js_1 = __webpack_require__(/*! ./NewcommandItems.js */ \"./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandItems.js\");\nvar NewcommandUtil_js_1 = __importDefault(__webpack_require__(/*! ./NewcommandUtil.js */ \"./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandUtil.js\"));\n__webpack_require__(/*! ./NewcommandMappings.js */ \"./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandMappings.js\");\nvar ParseMethods_js_1 = __importDefault(__webpack_require__(/*! ../ParseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/ParseMethods.js\"));\nvar sm = __importStar(__webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\"));\nvar init = function (config) {\n    new sm.DelimiterMap(NewcommandUtil_js_1.default.NEW_DELIMITER, ParseMethods_js_1.default.delimiter, {});\n    new sm.CommandMap(NewcommandUtil_js_1.default.NEW_COMMAND, {}, {});\n    new sm.EnvironmentMap(NewcommandUtil_js_1.default.NEW_ENVIRONMENT, ParseMethods_js_1.default.environment, {}, {});\n    config.append(Configuration_js_1.Configuration.local({ handler: { character: [],\n            delimiter: [NewcommandUtil_js_1.default.NEW_DELIMITER],\n            macro: [NewcommandUtil_js_1.default.NEW_DELIMITER,\n                NewcommandUtil_js_1.default.NEW_COMMAND],\n            environment: [NewcommandUtil_js_1.default.NEW_ENVIRONMENT]\n        },\n        priority: -1 }));\n};\nexports.NewcommandConfiguration = Configuration_js_1.Configuration.create('newcommand', {\n    handler: {\n        macro: ['Newcommand-macros']\n    },\n    items: (_a = {},\n        _a[NewcommandItems_js_1.BeginEnvItem.prototype.kind] = NewcommandItems_js_1.BeginEnvItem,\n        _a),\n    options: { maxMacros: 1000 },\n    init: init\n});\n//# sourceMappingURL=NewcommandConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9uZXdjb21tYW5kL05ld2NvbW1hbmRDb25maWd1cmF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCO0FBQy9CLHlCQUF5QixtQkFBTyxDQUFDLHNGQUFxQjtBQUN0RCwyQkFBMkIsbUJBQU8sQ0FBQyxvR0FBc0I7QUFDekQsMENBQTBDLG1CQUFPLENBQUMsa0dBQXFCO0FBQ3ZFLG1CQUFPLENBQUMsMEdBQXlCO0FBQ2pDLHdDQUF3QyxtQkFBTyxDQUFDLG9GQUFvQjtBQUNwRSxzQkFBc0IsbUJBQU8sQ0FBQyw4RUFBaUI7QUFDL0M7QUFDQSwwR0FBMEc7QUFDMUcsaUVBQWlFLElBQUk7QUFDckUsZ0hBQWdILElBQUk7QUFDcEgsMkRBQTJELFdBQVc7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Qsc0JBQXNCO0FBQ3RCO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQSxlQUFlLGlCQUFpQjtBQUNoQztBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9uZXdjb21tYW5kL05ld2NvbW1hbmRDb25maWd1cmF0aW9uLmpzP2RmOWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbnZhciBfYTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTmV3Y29tbWFuZENvbmZpZ3VyYXRpb24gPSB2b2lkIDA7XG52YXIgQ29uZmlndXJhdGlvbl9qc18xID0gcmVxdWlyZShcIi4uL0NvbmZpZ3VyYXRpb24uanNcIik7XG52YXIgTmV3Y29tbWFuZEl0ZW1zX2pzXzEgPSByZXF1aXJlKFwiLi9OZXdjb21tYW5kSXRlbXMuanNcIik7XG52YXIgTmV3Y29tbWFuZFV0aWxfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9OZXdjb21tYW5kVXRpbC5qc1wiKSk7XG5yZXF1aXJlKFwiLi9OZXdjb21tYW5kTWFwcGluZ3MuanNcIik7XG52YXIgUGFyc2VNZXRob2RzX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL1BhcnNlTWV0aG9kcy5qc1wiKSk7XG52YXIgc20gPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4uL1N5bWJvbE1hcC5qc1wiKSk7XG52YXIgaW5pdCA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICBuZXcgc20uRGVsaW1pdGVyTWFwKE5ld2NvbW1hbmRVdGlsX2pzXzEuZGVmYXVsdC5ORVdfREVMSU1JVEVSLCBQYXJzZU1ldGhvZHNfanNfMS5kZWZhdWx0LmRlbGltaXRlciwge30pO1xuICAgIG5ldyBzbS5Db21tYW5kTWFwKE5ld2NvbW1hbmRVdGlsX2pzXzEuZGVmYXVsdC5ORVdfQ09NTUFORCwge30sIHt9KTtcbiAgICBuZXcgc20uRW52aXJvbm1lbnRNYXAoTmV3Y29tbWFuZFV0aWxfanNfMS5kZWZhdWx0Lk5FV19FTlZJUk9OTUVOVCwgUGFyc2VNZXRob2RzX2pzXzEuZGVmYXVsdC5lbnZpcm9ubWVudCwge30sIHt9KTtcbiAgICBjb25maWcuYXBwZW5kKENvbmZpZ3VyYXRpb25fanNfMS5Db25maWd1cmF0aW9uLmxvY2FsKHsgaGFuZGxlcjogeyBjaGFyYWN0ZXI6IFtdLFxuICAgICAgICAgICAgZGVsaW1pdGVyOiBbTmV3Y29tbWFuZFV0aWxfanNfMS5kZWZhdWx0Lk5FV19ERUxJTUlURVJdLFxuICAgICAgICAgICAgbWFjcm86IFtOZXdjb21tYW5kVXRpbF9qc18xLmRlZmF1bHQuTkVXX0RFTElNSVRFUixcbiAgICAgICAgICAgICAgICBOZXdjb21tYW5kVXRpbF9qc18xLmRlZmF1bHQuTkVXX0NPTU1BTkRdLFxuICAgICAgICAgICAgZW52aXJvbm1lbnQ6IFtOZXdjb21tYW5kVXRpbF9qc18xLmRlZmF1bHQuTkVXX0VOVklST05NRU5UXVxuICAgICAgICB9LFxuICAgICAgICBwcmlvcml0eTogLTEgfSkpO1xufTtcbmV4cG9ydHMuTmV3Y29tbWFuZENvbmZpZ3VyYXRpb24gPSBDb25maWd1cmF0aW9uX2pzXzEuQ29uZmlndXJhdGlvbi5jcmVhdGUoJ25ld2NvbW1hbmQnLCB7XG4gICAgaGFuZGxlcjoge1xuICAgICAgICBtYWNybzogWydOZXdjb21tYW5kLW1hY3JvcyddXG4gICAgfSxcbiAgICBpdGVtczogKF9hID0ge30sXG4gICAgICAgIF9hW05ld2NvbW1hbmRJdGVtc19qc18xLkJlZ2luRW52SXRlbS5wcm90b3R5cGUua2luZF0gPSBOZXdjb21tYW5kSXRlbXNfanNfMS5CZWdpbkVudkl0ZW0sXG4gICAgICAgIF9hKSxcbiAgICBvcHRpb25zOiB7IG1heE1hY3JvczogMTAwMCB9LFxuICAgIGluaXQ6IGluaXRcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TmV3Y29tbWFuZENvbmZpZ3VyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandItems.js":
/*!******************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandItems.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BeginEnvItem = void 0;\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar StackItem_js_1 = __webpack_require__(/*! ../StackItem.js */ \"./node_modules/mathjax-full/js/input/tex/StackItem.js\");\nvar BeginEnvItem = (function (_super) {\n    __extends(BeginEnvItem, _super);\n    function BeginEnvItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(BeginEnvItem.prototype, \"kind\", {\n        get: function () {\n            return 'beginEnv';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BeginEnvItem.prototype, \"isOpen\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BeginEnvItem.prototype.checkItem = function (item) {\n        if (item.isKind('end')) {\n            if (item.getName() !== this.getName()) {\n                throw new TexError_js_1.default('EnvBadEnd', '\\\\begin{%1} ended with \\\\end{%2}', this.getName(), item.getName());\n            }\n            return [[this.factory.create('mml', this.toMml())], true];\n        }\n        if (item.isKind('stop')) {\n            throw new TexError_js_1.default('EnvMissingEnd', 'Missing \\\\end{%1}', this.getName());\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    return BeginEnvItem;\n}(StackItem_js_1.BaseItem));\nexports.BeginEnvItem = BeginEnvItem;\n//# sourceMappingURL=NewcommandItems.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9uZXdjb21tYW5kL05ld2NvbW1hbmRJdGVtcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCLHNDQUFzQyxrQkFBa0I7QUFDdkYsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQixvQ0FBb0MsbUJBQU8sQ0FBQyw0RUFBZ0I7QUFDNUQscUJBQXFCLG1CQUFPLENBQUMsOEVBQWlCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxzRUFBc0UsSUFBSSxpQkFBaUIsR0FBRztBQUM5RjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRFQUE0RSxHQUFHO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELG9CQUFvQjtBQUNwQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9uZXdjb21tYW5kL05ld2NvbW1hbmRJdGVtcy5qcz9jNGNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQmVnaW5FbnZJdGVtID0gdm9pZCAwO1xudmFyIFRleEVycm9yX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL1RleEVycm9yLmpzXCIpKTtcbnZhciBTdGFja0l0ZW1fanNfMSA9IHJlcXVpcmUoXCIuLi9TdGFja0l0ZW0uanNcIik7XG52YXIgQmVnaW5FbnZJdGVtID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoQmVnaW5FbnZJdGVtLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEJlZ2luRW52SXRlbSgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQmVnaW5FbnZJdGVtLnByb3RvdHlwZSwgXCJraW5kXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gJ2JlZ2luRW52JztcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShCZWdpbkVudkl0ZW0ucHJvdG90eXBlLCBcImlzT3BlblwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBCZWdpbkVudkl0ZW0ucHJvdG90eXBlLmNoZWNrSXRlbSA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIGlmIChpdGVtLmlzS2luZCgnZW5kJykpIHtcbiAgICAgICAgICAgIGlmIChpdGVtLmdldE5hbWUoKSAhPT0gdGhpcy5nZXROYW1lKCkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVGV4RXJyb3JfanNfMS5kZWZhdWx0KCdFbnZCYWRFbmQnLCAnXFxcXGJlZ2lueyUxfSBlbmRlZCB3aXRoIFxcXFxlbmR7JTJ9JywgdGhpcy5nZXROYW1lKCksIGl0ZW0uZ2V0TmFtZSgpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBbW3RoaXMuZmFjdG9yeS5jcmVhdGUoJ21tbCcsIHRoaXMudG9NbWwoKSldLCB0cnVlXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXRlbS5pc0tpbmQoJ3N0b3AnKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFRleEVycm9yX2pzXzEuZGVmYXVsdCgnRW52TWlzc2luZ0VuZCcsICdNaXNzaW5nIFxcXFxlbmR7JTF9JywgdGhpcy5nZXROYW1lKCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfc3VwZXIucHJvdG90eXBlLmNoZWNrSXRlbS5jYWxsKHRoaXMsIGl0ZW0pO1xuICAgIH07XG4gICAgcmV0dXJuIEJlZ2luRW52SXRlbTtcbn0oU3RhY2tJdGVtX2pzXzEuQmFzZUl0ZW0pKTtcbmV4cG9ydHMuQmVnaW5FbnZJdGVtID0gQmVnaW5FbnZJdGVtO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TmV3Y29tbWFuZEl0ZW1zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandItems.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandMappings.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandMappings.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar NewcommandMethods_js_1 = __importDefault(__webpack_require__(/*! ./NewcommandMethods.js */ \"./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandMethods.js\"));\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nnew SymbolMap_js_1.CommandMap('Newcommand-macros', {\n    newcommand: 'NewCommand',\n    renewcommand: 'NewCommand',\n    newenvironment: 'NewEnvironment',\n    renewenvironment: 'NewEnvironment',\n    def: 'MacroDef',\n    'let': 'Let'\n}, NewcommandMethods_js_1.default);\n//# sourceMappingURL=NewcommandMappings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9uZXdjb21tYW5kL05ld2NvbW1hbmRNYXBwaW5ncy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZDQUE2QyxtQkFBTyxDQUFDLHdHQUF3QjtBQUM3RSxxQkFBcUIsbUJBQU8sQ0FBQyw4RUFBaUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvbmV3Y29tbWFuZC9OZXdjb21tYW5kTWFwcGluZ3MuanM/ZTQwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBOZXdjb21tYW5kTWV0aG9kc19qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL05ld2NvbW1hbmRNZXRob2RzLmpzXCIpKTtcbnZhciBTeW1ib2xNYXBfanNfMSA9IHJlcXVpcmUoXCIuLi9TeW1ib2xNYXAuanNcIik7XG5uZXcgU3ltYm9sTWFwX2pzXzEuQ29tbWFuZE1hcCgnTmV3Y29tbWFuZC1tYWNyb3MnLCB7XG4gICAgbmV3Y29tbWFuZDogJ05ld0NvbW1hbmQnLFxuICAgIHJlbmV3Y29tbWFuZDogJ05ld0NvbW1hbmQnLFxuICAgIG5ld2Vudmlyb25tZW50OiAnTmV3RW52aXJvbm1lbnQnLFxuICAgIHJlbmV3ZW52aXJvbm1lbnQ6ICdOZXdFbnZpcm9ubWVudCcsXG4gICAgZGVmOiAnTWFjcm9EZWYnLFxuICAgICdsZXQnOiAnTGV0J1xufSwgTmV3Y29tbWFuZE1ldGhvZHNfanNfMS5kZWZhdWx0KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU5ld2NvbW1hbmRNYXBwaW5ncy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandMappings.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandMethods.js":
/*!********************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandMethods.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar sm = __importStar(__webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\"));\nvar BaseMethods_js_1 = __importDefault(__webpack_require__(/*! ../base/BaseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseMethods.js\"));\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar NewcommandUtil_js_1 = __importDefault(__webpack_require__(/*! ./NewcommandUtil.js */ \"./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandUtil.js\"));\nvar NewcommandMethods = {};\nNewcommandMethods.NewCommand = function (parser, name) {\n    var cs = NewcommandUtil_js_1.default.GetCsNameArgument(parser, name);\n    var n = NewcommandUtil_js_1.default.GetArgCount(parser, name);\n    var opt = parser.GetBrackets(name);\n    var def = parser.GetArgument(name);\n    NewcommandUtil_js_1.default.addMacro(parser, cs, NewcommandMethods.Macro, [def, n, opt]);\n};\nNewcommandMethods.NewEnvironment = function (parser, name) {\n    var env = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));\n    var n = NewcommandUtil_js_1.default.GetArgCount(parser, name);\n    var opt = parser.GetBrackets(name);\n    var bdef = parser.GetArgument(name);\n    var edef = parser.GetArgument(name);\n    NewcommandUtil_js_1.default.addEnvironment(parser, env, NewcommandMethods.BeginEnv, [true, bdef, edef, n, opt]);\n};\nNewcommandMethods.MacroDef = function (parser, name) {\n    var cs = NewcommandUtil_js_1.default.GetCSname(parser, name);\n    var params = NewcommandUtil_js_1.default.GetTemplate(parser, name, '\\\\' + cs);\n    var def = parser.GetArgument(name);\n    !(params instanceof Array) ?\n        NewcommandUtil_js_1.default.addMacro(parser, cs, NewcommandMethods.Macro, [def, params]) :\n        NewcommandUtil_js_1.default.addMacro(parser, cs, NewcommandMethods.MacroWithTemplate, [def].concat(params));\n};\nNewcommandMethods.Let = function (parser, name) {\n    var cs = NewcommandUtil_js_1.default.GetCSname(parser, name);\n    var c = parser.GetNext();\n    if (c === '=') {\n        parser.i++;\n        c = parser.GetNext();\n    }\n    var handlers = parser.configuration.handlers;\n    if (c === '\\\\') {\n        name = NewcommandUtil_js_1.default.GetCSname(parser, name);\n        var macro_1 = handlers.get('delimiter').lookup('\\\\' + name);\n        if (macro_1) {\n            NewcommandUtil_js_1.default.addDelimiter(parser, '\\\\' + cs, macro_1.char, macro_1.attributes);\n            return;\n        }\n        var map_1 = handlers.get('macro').applicable(name);\n        if (!map_1) {\n            return;\n        }\n        if (map_1 instanceof sm.MacroMap) {\n            var macro_2 = map_1.lookup(name);\n            NewcommandUtil_js_1.default.addMacro(parser, cs, macro_2.func, macro_2.args, macro_2.symbol);\n            return;\n        }\n        macro_1 = map_1.lookup(name);\n        var newArgs = NewcommandUtil_js_1.default.disassembleSymbol(cs, macro_1);\n        var method = function (p, _cs) {\n            var rest = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                rest[_i - 2] = arguments[_i];\n            }\n            var symb = NewcommandUtil_js_1.default.assembleSymbol(rest);\n            return map_1.parser(p, symb);\n        };\n        NewcommandUtil_js_1.default.addMacro(parser, cs, method, newArgs);\n        return;\n    }\n    parser.i++;\n    var macro = handlers.get('delimiter').lookup(c);\n    if (macro) {\n        NewcommandUtil_js_1.default.addDelimiter(parser, '\\\\' + cs, macro.char, macro.attributes);\n        return;\n    }\n    NewcommandUtil_js_1.default.addMacro(parser, cs, NewcommandMethods.Macro, [c]);\n};\nNewcommandMethods.MacroWithTemplate = function (parser, name, text, n) {\n    var params = [];\n    for (var _i = 4; _i < arguments.length; _i++) {\n        params[_i - 4] = arguments[_i];\n    }\n    var argCount = parseInt(n, 10);\n    if (argCount) {\n        var args = [];\n        parser.GetNext();\n        if (params[0] && !NewcommandUtil_js_1.default.MatchParam(parser, params[0])) {\n            throw new TexError_js_1.default('MismatchUseDef', 'Use of %1 doesn\\'t match its definition', name);\n        }\n        for (var i = 0; i < argCount; i++) {\n            args.push(NewcommandUtil_js_1.default.GetParameter(parser, name, params[i + 1]));\n        }\n        text = ParseUtil_js_1.default.substituteArgs(parser, args, text);\n    }\n    parser.string = ParseUtil_js_1.default.addArgs(parser, text, parser.string.slice(parser.i));\n    parser.i = 0;\n    ParseUtil_js_1.default.checkMaxMacros(parser);\n};\nNewcommandMethods.BeginEnv = function (parser, begin, bdef, edef, n, def) {\n    if (begin.getProperty('end') && parser.stack.env['closing'] === begin.getName()) {\n        delete parser.stack.env['closing'];\n        var rest = parser.string.slice(parser.i);\n        parser.string = edef;\n        parser.i = 0;\n        parser.Parse();\n        parser.string = rest;\n        parser.i = 0;\n        return parser.itemFactory.create('end').setProperty('name', begin.getName());\n    }\n    if (n) {\n        var args = [];\n        if (def != null) {\n            var optional = parser.GetBrackets('\\\\begin{' + begin.getName() + '}');\n            args.push(optional == null ? def : optional);\n        }\n        for (var i = args.length; i < n; i++) {\n            args.push(parser.GetArgument('\\\\begin{' + begin.getName() + '}'));\n        }\n        bdef = ParseUtil_js_1.default.substituteArgs(parser, args, bdef);\n        edef = ParseUtil_js_1.default.substituteArgs(parser, [], edef);\n    }\n    parser.string = ParseUtil_js_1.default.addArgs(parser, bdef, parser.string.slice(parser.i));\n    parser.i = 0;\n    return parser.itemFactory.create('beginEnv').setProperty('name', begin.getName());\n};\nNewcommandMethods.Macro = BaseMethods_js_1.default.Macro;\nexports[\"default\"] = NewcommandMethods;\n//# sourceMappingURL=NewcommandMethods.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandMethods.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandUtil.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandUtil.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar Symbol_js_1 = __webpack_require__(/*! ../Symbol.js */ \"./node_modules/mathjax-full/js/input/tex/Symbol.js\");\nvar NewcommandUtil;\n(function (NewcommandUtil) {\n    function disassembleSymbol(name, symbol) {\n        var newArgs = [name, symbol.char];\n        if (symbol.attributes) {\n            for (var key in symbol.attributes) {\n                newArgs.push(key);\n                newArgs.push(symbol.attributes[key]);\n            }\n        }\n        return newArgs;\n    }\n    NewcommandUtil.disassembleSymbol = disassembleSymbol;\n    function assembleSymbol(args) {\n        var name = args[0];\n        var char = args[1];\n        var attrs = {};\n        for (var i = 2; i < args.length; i = i + 2) {\n            attrs[args[i]] = args[i + 1];\n        }\n        return new Symbol_js_1.Symbol(name, char, attrs);\n    }\n    NewcommandUtil.assembleSymbol = assembleSymbol;\n    function GetCSname(parser, cmd) {\n        var c = parser.GetNext();\n        if (c !== '\\\\') {\n            throw new TexError_js_1.default('MissingCS', '%1 must be followed by a control sequence', cmd);\n        }\n        var cs = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(cmd));\n        return cs.substr(1);\n    }\n    NewcommandUtil.GetCSname = GetCSname;\n    function GetCsNameArgument(parser, name) {\n        var cs = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name));\n        if (cs.charAt(0) === '\\\\') {\n            cs = cs.substr(1);\n        }\n        if (!cs.match(/^(.|[a-z]+)$/i)) {\n            throw new TexError_js_1.default('IllegalControlSequenceName', 'Illegal control sequence name for %1', name);\n        }\n        return cs;\n    }\n    NewcommandUtil.GetCsNameArgument = GetCsNameArgument;\n    function GetArgCount(parser, name) {\n        var n = parser.GetBrackets(name);\n        if (n) {\n            n = ParseUtil_js_1.default.trimSpaces(n);\n            if (!n.match(/^[0-9]+$/)) {\n                throw new TexError_js_1.default('IllegalParamNumber', 'Illegal number of parameters specified in %1', name);\n            }\n        }\n        return n;\n    }\n    NewcommandUtil.GetArgCount = GetArgCount;\n    function GetTemplate(parser, cmd, cs) {\n        var c = parser.GetNext();\n        var params = [];\n        var n = 0;\n        var i = parser.i;\n        while (parser.i < parser.string.length) {\n            c = parser.GetNext();\n            if (c === '#') {\n                if (i !== parser.i) {\n                    params[n] = parser.string.substr(i, parser.i - i);\n                }\n                c = parser.string.charAt(++parser.i);\n                if (!c.match(/^[1-9]$/)) {\n                    throw new TexError_js_1.default('CantUseHash2', 'Illegal use of # in template for %1', cs);\n                }\n                if (parseInt(c) !== ++n) {\n                    throw new TexError_js_1.default('SequentialParam', 'Parameters for %1 must be numbered sequentially', cs);\n                }\n                i = parser.i + 1;\n            }\n            else if (c === '{') {\n                if (i !== parser.i) {\n                    params[n] = parser.string.substr(i, parser.i - i);\n                }\n                if (params.length > 0) {\n                    return [n.toString()].concat(params);\n                }\n                else {\n                    return n;\n                }\n            }\n            parser.i++;\n        }\n        throw new TexError_js_1.default('MissingReplacementString', 'Missing replacement string for definition of %1', cmd);\n    }\n    NewcommandUtil.GetTemplate = GetTemplate;\n    function GetParameter(parser, name, param) {\n        if (param == null) {\n            return parser.GetArgument(name);\n        }\n        var i = parser.i;\n        var j = 0;\n        var hasBraces = 0;\n        while (parser.i < parser.string.length) {\n            var c = parser.string.charAt(parser.i);\n            if (c === '{') {\n                if (parser.i === i) {\n                    hasBraces = 1;\n                }\n                parser.GetArgument(name);\n                j = parser.i - i;\n            }\n            else if (MatchParam(parser, param)) {\n                if (hasBraces) {\n                    i++;\n                    j -= 2;\n                }\n                return parser.string.substr(i, j);\n            }\n            else if (c === '\\\\') {\n                parser.i++;\n                j++;\n                hasBraces = 0;\n                var match = parser.string.substr(parser.i).match(/[a-z]+|./i);\n                if (match) {\n                    parser.i += match[0].length;\n                    j = parser.i - i;\n                }\n            }\n            else {\n                parser.i++;\n                j++;\n                hasBraces = 0;\n            }\n        }\n        throw new TexError_js_1.default('RunawayArgument', 'Runaway argument for %1?', name);\n    }\n    NewcommandUtil.GetParameter = GetParameter;\n    function MatchParam(parser, param) {\n        if (parser.string.substr(parser.i, param.length) !== param) {\n            return 0;\n        }\n        if (param.match(/\\\\[a-z]+$/i) &&\n            parser.string.charAt(parser.i + param.length).match(/[a-z]/i)) {\n            return 0;\n        }\n        parser.i += param.length;\n        return 1;\n    }\n    NewcommandUtil.MatchParam = MatchParam;\n    function addDelimiter(parser, cs, char, attr) {\n        var handlers = parser.configuration.handlers;\n        var handler = handlers.retrieve(NewcommandUtil.NEW_DELIMITER);\n        handler.add(cs, new Symbol_js_1.Symbol(cs, char, attr));\n    }\n    NewcommandUtil.addDelimiter = addDelimiter;\n    function addMacro(parser, cs, func, attr, symbol) {\n        if (symbol === void 0) { symbol = ''; }\n        var handlers = parser.configuration.handlers;\n        var handler = handlers.retrieve(NewcommandUtil.NEW_COMMAND);\n        handler.add(cs, new Symbol_js_1.Macro(symbol ? symbol : cs, func, attr));\n    }\n    NewcommandUtil.addMacro = addMacro;\n    function addEnvironment(parser, env, func, attr) {\n        var handlers = parser.configuration.handlers;\n        var handler = handlers.retrieve(NewcommandUtil.NEW_ENVIRONMENT);\n        handler.add(env, new Symbol_js_1.Macro(env, func, attr));\n    }\n    NewcommandUtil.addEnvironment = addEnvironment;\n    NewcommandUtil.NEW_DELIMITER = 'new-Delimiter';\n    NewcommandUtil.NEW_COMMAND = 'new-Command';\n    NewcommandUtil.NEW_ENVIRONMENT = 'new-Environment';\n})(NewcommandUtil || (NewcommandUtil = {}));\nexports[\"default\"] = NewcommandUtil;\n//# sourceMappingURL=NewcommandUtil.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/newcommand/NewcommandUtil.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/noerrors/NoErrorsConfiguration.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/noerrors/NoErrorsConfiguration.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NoErrorsConfiguration = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nfunction noErrors(factory, message, _id, expr) {\n    var mtext = factory.create('token', 'mtext', {}, expr.replace(/\\n/g, ' '));\n    var error = factory.create('node', 'merror', [mtext], { 'data-mjx-error': message, title: message });\n    return error;\n}\nexports.NoErrorsConfiguration = Configuration_js_1.Configuration.create('noerrors', { nodes: { 'error': noErrors } });\n//# sourceMappingURL=NoErrorsConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9ub2Vycm9ycy9Ob0Vycm9yc0NvbmZpZ3VyYXRpb24uanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCO0FBQzdCLHlCQUF5QixtQkFBTyxDQUFDLHNGQUFxQjtBQUN0RDtBQUNBLG1EQUFtRDtBQUNuRCw0REFBNEQsMkNBQTJDO0FBQ3ZHO0FBQ0E7QUFDQSw2QkFBNkIseURBQXlELFNBQVMscUJBQXFCO0FBQ3BIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvaW5wdXQvdGV4L25vZXJyb3JzL05vRXJyb3JzQ29uZmlndXJhdGlvbi5qcz9hMTE2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Ob0Vycm9yc0NvbmZpZ3VyYXRpb24gPSB2b2lkIDA7XG52YXIgQ29uZmlndXJhdGlvbl9qc18xID0gcmVxdWlyZShcIi4uL0NvbmZpZ3VyYXRpb24uanNcIik7XG5mdW5jdGlvbiBub0Vycm9ycyhmYWN0b3J5LCBtZXNzYWdlLCBfaWQsIGV4cHIpIHtcbiAgICB2YXIgbXRleHQgPSBmYWN0b3J5LmNyZWF0ZSgndG9rZW4nLCAnbXRleHQnLCB7fSwgZXhwci5yZXBsYWNlKC9cXG4vZywgJyAnKSk7XG4gICAgdmFyIGVycm9yID0gZmFjdG9yeS5jcmVhdGUoJ25vZGUnLCAnbWVycm9yJywgW210ZXh0XSwgeyAnZGF0YS1tangtZXJyb3InOiBtZXNzYWdlLCB0aXRsZTogbWVzc2FnZSB9KTtcbiAgICByZXR1cm4gZXJyb3I7XG59XG5leHBvcnRzLk5vRXJyb3JzQ29uZmlndXJhdGlvbiA9IENvbmZpZ3VyYXRpb25fanNfMS5Db25maWd1cmF0aW9uLmNyZWF0ZSgnbm9lcnJvcnMnLCB7IG5vZGVzOiB7ICdlcnJvcic6IG5vRXJyb3JzIH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ob0Vycm9yc0NvbmZpZ3VyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/noerrors/NoErrorsConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/noundefined/NoUndefinedConfiguration.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/noundefined/NoUndefinedConfiguration.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NoUndefinedConfiguration = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nfunction noUndefined(parser, name) {\n    var e_1, _a;\n    var textNode = parser.create('text', '\\\\' + name);\n    var options = parser.options.noundefined || {};\n    var def = {};\n    try {\n        for (var _b = __values(['color', 'background', 'size']), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var id = _c.value;\n            if (options[id]) {\n                def['math' + id] = options[id];\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    parser.Push(parser.create('node', 'mtext', [], def, textNode));\n}\nexports.NoUndefinedConfiguration = Configuration_js_1.Configuration.create('noundefined', {\n    fallback: { macro: noUndefined },\n    options: {\n        noundefined: {\n            color: 'red',\n            background: '',\n            size: ''\n        }\n    },\n    priority: 3\n});\n//# sourceMappingURL=NoUndefinedConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9ub3VuZGVmaW5lZC9Ob1VuZGVmaW5lZENvbmZpZ3VyYXRpb24uanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0NBQWdDO0FBQ2hDLHlCQUF5QixtQkFBTyxDQUFDLHNGQUFxQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRkFBaUYsVUFBVTtBQUMzRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsUUFBUTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEMsZ0JBQWdCLG9CQUFvQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvbm91bmRlZmluZWQvTm9VbmRlZmluZWRDb25maWd1cmF0aW9uLmpzPzNkYTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX192YWx1ZXMgPSAodGhpcyAmJiB0aGlzLl9fdmFsdWVzKSB8fCBmdW5jdGlvbihvKSB7XG4gICAgdmFyIHMgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgU3ltYm9sLml0ZXJhdG9yLCBtID0gcyAmJiBvW3NdLCBpID0gMDtcbiAgICBpZiAobSkgcmV0dXJuIG0uY2FsbChvKTtcbiAgICBpZiAobyAmJiB0eXBlb2Ygby5sZW5ndGggPT09IFwibnVtYmVyXCIpIHJldHVybiB7XG4gICAgICAgIG5leHQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChvICYmIGkgPj0gby5sZW5ndGgpIG8gPSB2b2lkIDA7XG4gICAgICAgICAgICByZXR1cm4geyB2YWx1ZTogbyAmJiBvW2krK10sIGRvbmU6ICFvIH07XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IocyA/IFwiT2JqZWN0IGlzIG5vdCBpdGVyYWJsZS5cIiA6IFwiU3ltYm9sLml0ZXJhdG9yIGlzIG5vdCBkZWZpbmVkLlwiKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk5vVW5kZWZpbmVkQ29uZmlndXJhdGlvbiA9IHZvaWQgMDtcbnZhciBDb25maWd1cmF0aW9uX2pzXzEgPSByZXF1aXJlKFwiLi4vQ29uZmlndXJhdGlvbi5qc1wiKTtcbmZ1bmN0aW9uIG5vVW5kZWZpbmVkKHBhcnNlciwgbmFtZSkge1xuICAgIHZhciBlXzEsIF9hO1xuICAgIHZhciB0ZXh0Tm9kZSA9IHBhcnNlci5jcmVhdGUoJ3RleHQnLCAnXFxcXCcgKyBuYW1lKTtcbiAgICB2YXIgb3B0aW9ucyA9IHBhcnNlci5vcHRpb25zLm5vdW5kZWZpbmVkIHx8IHt9O1xuICAgIHZhciBkZWYgPSB7fTtcbiAgICB0cnkge1xuICAgICAgICBmb3IgKHZhciBfYiA9IF9fdmFsdWVzKFsnY29sb3InLCAnYmFja2dyb3VuZCcsICdzaXplJ10pLCBfYyA9IF9iLm5leHQoKTsgIV9jLmRvbmU7IF9jID0gX2IubmV4dCgpKSB7XG4gICAgICAgICAgICB2YXIgaWQgPSBfYy52YWx1ZTtcbiAgICAgICAgICAgIGlmIChvcHRpb25zW2lkXSkge1xuICAgICAgICAgICAgICAgIGRlZlsnbWF0aCcgKyBpZF0gPSBvcHRpb25zW2lkXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZV8xXzEpIHsgZV8xID0geyBlcnJvcjogZV8xXzEgfTsgfVxuICAgIGZpbmFsbHkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKF9jICYmICFfYy5kb25lICYmIChfYSA9IF9iLnJldHVybikpIF9hLmNhbGwoX2IpO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkgeyBpZiAoZV8xKSB0aHJvdyBlXzEuZXJyb3I7IH1cbiAgICB9XG4gICAgcGFyc2VyLlB1c2gocGFyc2VyLmNyZWF0ZSgnbm9kZScsICdtdGV4dCcsIFtdLCBkZWYsIHRleHROb2RlKSk7XG59XG5leHBvcnRzLk5vVW5kZWZpbmVkQ29uZmlndXJhdGlvbiA9IENvbmZpZ3VyYXRpb25fanNfMS5Db25maWd1cmF0aW9uLmNyZWF0ZSgnbm91bmRlZmluZWQnLCB7XG4gICAgZmFsbGJhY2s6IHsgbWFjcm86IG5vVW5kZWZpbmVkIH0sXG4gICAgb3B0aW9uczoge1xuICAgICAgICBub3VuZGVmaW5lZDoge1xuICAgICAgICAgICAgY29sb3I6ICdyZWQnLFxuICAgICAgICAgICAgYmFja2dyb3VuZDogJycsXG4gICAgICAgICAgICBzaXplOiAnJ1xuICAgICAgICB9XG4gICAgfSxcbiAgICBwcmlvcml0eTogM1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ob1VuZGVmaW5lZENvbmZpZ3VyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/noundefined/NoUndefinedConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/physics/PhysicsConfiguration.js":
/*!********************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/physics/PhysicsConfiguration.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PhysicsConfiguration = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar PhysicsItems_js_1 = __webpack_require__(/*! ./PhysicsItems.js */ \"./node_modules/mathjax-full/js/input/tex/physics/PhysicsItems.js\");\n__webpack_require__(/*! ./PhysicsMappings.js */ \"./node_modules/mathjax-full/js/input/tex/physics/PhysicsMappings.js\");\nexports.PhysicsConfiguration = Configuration_js_1.Configuration.create('physics', {\n    handler: {\n        macro: [\n            'Physics-automatic-bracing-macros',\n            'Physics-vector-macros',\n            'Physics-vector-mo',\n            'Physics-vector-mi',\n            'Physics-derivative-macros',\n            'Physics-expressions-macros',\n            'Physics-quick-quad-macros',\n            'Physics-bra-ket-macros',\n            'Physics-matrix-macros'\n        ],\n        character: ['Physics-characters'],\n        environment: ['Physics-aux-envs']\n    },\n    items: (_a = {},\n        _a[PhysicsItems_js_1.AutoOpen.prototype.kind] = PhysicsItems_js_1.AutoOpen,\n        _a),\n    options: {\n        physics: {\n            italicdiff: false,\n            arrowdel: false\n        }\n    }\n});\n//# sourceMappingURL=PhysicsConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9waHlzaWNzL1BoeXNpY3NDb25maWd1cmF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCO0FBQzVCLHlCQUF5QixtQkFBTyxDQUFDLHNGQUFxQjtBQUN0RCx3QkFBd0IsbUJBQU8sQ0FBQywyRkFBbUI7QUFDbkQsbUJBQU8sQ0FBQyxpR0FBc0I7QUFDOUIsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvcGh5c2ljcy9QaHlzaWNzQ29uZmlndXJhdGlvbi5qcz82ZjgxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9hO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5QaHlzaWNzQ29uZmlndXJhdGlvbiA9IHZvaWQgMDtcbnZhciBDb25maWd1cmF0aW9uX2pzXzEgPSByZXF1aXJlKFwiLi4vQ29uZmlndXJhdGlvbi5qc1wiKTtcbnZhciBQaHlzaWNzSXRlbXNfanNfMSA9IHJlcXVpcmUoXCIuL1BoeXNpY3NJdGVtcy5qc1wiKTtcbnJlcXVpcmUoXCIuL1BoeXNpY3NNYXBwaW5ncy5qc1wiKTtcbmV4cG9ydHMuUGh5c2ljc0NvbmZpZ3VyYXRpb24gPSBDb25maWd1cmF0aW9uX2pzXzEuQ29uZmlndXJhdGlvbi5jcmVhdGUoJ3BoeXNpY3MnLCB7XG4gICAgaGFuZGxlcjoge1xuICAgICAgICBtYWNybzogW1xuICAgICAgICAgICAgJ1BoeXNpY3MtYXV0b21hdGljLWJyYWNpbmctbWFjcm9zJyxcbiAgICAgICAgICAgICdQaHlzaWNzLXZlY3Rvci1tYWNyb3MnLFxuICAgICAgICAgICAgJ1BoeXNpY3MtdmVjdG9yLW1vJyxcbiAgICAgICAgICAgICdQaHlzaWNzLXZlY3Rvci1taScsXG4gICAgICAgICAgICAnUGh5c2ljcy1kZXJpdmF0aXZlLW1hY3JvcycsXG4gICAgICAgICAgICAnUGh5c2ljcy1leHByZXNzaW9ucy1tYWNyb3MnLFxuICAgICAgICAgICAgJ1BoeXNpY3MtcXVpY2stcXVhZC1tYWNyb3MnLFxuICAgICAgICAgICAgJ1BoeXNpY3MtYnJhLWtldC1tYWNyb3MnLFxuICAgICAgICAgICAgJ1BoeXNpY3MtbWF0cml4LW1hY3JvcydcbiAgICAgICAgXSxcbiAgICAgICAgY2hhcmFjdGVyOiBbJ1BoeXNpY3MtY2hhcmFjdGVycyddLFxuICAgICAgICBlbnZpcm9ubWVudDogWydQaHlzaWNzLWF1eC1lbnZzJ11cbiAgICB9LFxuICAgIGl0ZW1zOiAoX2EgPSB7fSxcbiAgICAgICAgX2FbUGh5c2ljc0l0ZW1zX2pzXzEuQXV0b09wZW4ucHJvdG90eXBlLmtpbmRdID0gUGh5c2ljc0l0ZW1zX2pzXzEuQXV0b09wZW4sXG4gICAgICAgIF9hKSxcbiAgICBvcHRpb25zOiB7XG4gICAgICAgIHBoeXNpY3M6IHtcbiAgICAgICAgICAgIGl0YWxpY2RpZmY6IGZhbHNlLFxuICAgICAgICAgICAgYXJyb3dkZWw6IGZhbHNlXG4gICAgICAgIH1cbiAgICB9XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBoeXNpY3NDb25maWd1cmF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/physics/PhysicsConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/physics/PhysicsItems.js":
/*!************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/physics/PhysicsItems.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AutoOpen = void 0;\nvar StackItem_js_1 = __webpack_require__(/*! ../StackItem.js */ \"./node_modules/mathjax-full/js/input/tex/StackItem.js\");\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar TexParser_js_1 = __importDefault(__webpack_require__(/*! ../TexParser.js */ \"./node_modules/mathjax-full/js/input/tex/TexParser.js\"));\nvar AutoOpen = (function (_super) {\n    __extends(AutoOpen, _super);\n    function AutoOpen() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.openCount = 0;\n        return _this;\n    }\n    Object.defineProperty(AutoOpen.prototype, \"kind\", {\n        get: function () {\n            return 'auto open';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AutoOpen.prototype, \"isOpen\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AutoOpen.prototype.toMml = function () {\n        var parser = this.factory.configuration.parser;\n        var right = this.getProperty('right');\n        if (this.getProperty('smash')) {\n            var mml_1 = _super.prototype.toMml.call(this);\n            var smash = parser.create('node', 'mpadded', [mml_1], { height: 0, depth: 0 });\n            this.Clear();\n            this.Push(parser.create('node', 'TeXAtom', [smash]));\n        }\n        if (right) {\n            this.Push(new TexParser_js_1.default(right, parser.stack.env, parser.configuration).mml());\n        }\n        var mml = ParseUtil_js_1.default.fenced(this.factory.configuration, this.getProperty('open'), _super.prototype.toMml.call(this), this.getProperty('close'), this.getProperty('big'));\n        NodeUtil_js_1.default.removeProperties(mml, 'open', 'close', 'texClass');\n        return mml;\n    };\n    AutoOpen.prototype.checkItem = function (item) {\n        if (item.isKind('mml') && item.Size() === 1) {\n            var mml = item.toMml();\n            if (mml.isKind('mo') && mml.getText() === this.getProperty('open')) {\n                this.openCount++;\n            }\n        }\n        var close = item.getProperty('autoclose');\n        if (close && close === this.getProperty('close') && !this.openCount--) {\n            if (this.getProperty('ignore')) {\n                this.Clear();\n                return [[], true];\n            }\n            return [[this.toMml()], true];\n        }\n        return _super.prototype.checkItem.call(this, item);\n    };\n    AutoOpen.errors = Object.assign(Object.create(StackItem_js_1.BaseItem.errors), {\n        'stop': ['ExtraOrMissingDelims', 'Extra open or missing close delimiter']\n    });\n    return AutoOpen;\n}(StackItem_js_1.BaseItem));\nexports.AutoOpen = AutoOpen;\n//# sourceMappingURL=PhysicsItems.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9waHlzaWNzL1BoeXNpY3NJdGVtcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCLHNDQUFzQyxrQkFBa0I7QUFDdkYsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQjtBQUNoQixxQkFBcUIsbUJBQU8sQ0FBQyw4RUFBaUI7QUFDOUMscUNBQXFDLG1CQUFPLENBQUMsOEVBQWlCO0FBQzlELG9DQUFvQyxtQkFBTyxDQUFDLDRFQUFnQjtBQUM1RCxxQ0FBcUMsbUJBQU8sQ0FBQyw4RUFBaUI7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0VBQW9FLHFCQUFxQjtBQUN6RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQztBQUNELGdCQUFnQjtBQUNoQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9waHlzaWNzL1BoeXNpY3NJdGVtcy5qcz8yZjYxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXV0b09wZW4gPSB2b2lkIDA7XG52YXIgU3RhY2tJdGVtX2pzXzEgPSByZXF1aXJlKFwiLi4vU3RhY2tJdGVtLmpzXCIpO1xudmFyIFBhcnNlVXRpbF9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi9QYXJzZVV0aWwuanNcIikpO1xudmFyIE5vZGVVdGlsX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL05vZGVVdGlsLmpzXCIpKTtcbnZhciBUZXhQYXJzZXJfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vVGV4UGFyc2VyLmpzXCIpKTtcbnZhciBBdXRvT3BlbiA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEF1dG9PcGVuLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEF1dG9PcGVuKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMub3BlbkNvdW50ID0gMDtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQXV0b09wZW4ucHJvdG90eXBlLCBcImtpbmRcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiAnYXV0byBvcGVuJztcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBdXRvT3Blbi5wcm90b3R5cGUsIFwiaXNPcGVuXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIEF1dG9PcGVuLnByb3RvdHlwZS50b01tbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHBhcnNlciA9IHRoaXMuZmFjdG9yeS5jb25maWd1cmF0aW9uLnBhcnNlcjtcbiAgICAgICAgdmFyIHJpZ2h0ID0gdGhpcy5nZXRQcm9wZXJ0eSgncmlnaHQnKTtcbiAgICAgICAgaWYgKHRoaXMuZ2V0UHJvcGVydHkoJ3NtYXNoJykpIHtcbiAgICAgICAgICAgIHZhciBtbWxfMSA9IF9zdXBlci5wcm90b3R5cGUudG9NbWwuY2FsbCh0aGlzKTtcbiAgICAgICAgICAgIHZhciBzbWFzaCA9IHBhcnNlci5jcmVhdGUoJ25vZGUnLCAnbXBhZGRlZCcsIFttbWxfMV0sIHsgaGVpZ2h0OiAwLCBkZXB0aDogMCB9KTtcbiAgICAgICAgICAgIHRoaXMuQ2xlYXIoKTtcbiAgICAgICAgICAgIHRoaXMuUHVzaChwYXJzZXIuY3JlYXRlKCdub2RlJywgJ1RlWEF0b20nLCBbc21hc2hdKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJpZ2h0KSB7XG4gICAgICAgICAgICB0aGlzLlB1c2gobmV3IFRleFBhcnNlcl9qc18xLmRlZmF1bHQocmlnaHQsIHBhcnNlci5zdGFjay5lbnYsIHBhcnNlci5jb25maWd1cmF0aW9uKS5tbWwoKSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG1tbCA9IFBhcnNlVXRpbF9qc18xLmRlZmF1bHQuZmVuY2VkKHRoaXMuZmFjdG9yeS5jb25maWd1cmF0aW9uLCB0aGlzLmdldFByb3BlcnR5KCdvcGVuJyksIF9zdXBlci5wcm90b3R5cGUudG9NbWwuY2FsbCh0aGlzKSwgdGhpcy5nZXRQcm9wZXJ0eSgnY2xvc2UnKSwgdGhpcy5nZXRQcm9wZXJ0eSgnYmlnJykpO1xuICAgICAgICBOb2RlVXRpbF9qc18xLmRlZmF1bHQucmVtb3ZlUHJvcGVydGllcyhtbWwsICdvcGVuJywgJ2Nsb3NlJywgJ3RleENsYXNzJyk7XG4gICAgICAgIHJldHVybiBtbWw7XG4gICAgfTtcbiAgICBBdXRvT3Blbi5wcm90b3R5cGUuY2hlY2tJdGVtID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgaWYgKGl0ZW0uaXNLaW5kKCdtbWwnKSAmJiBpdGVtLlNpemUoKSA9PT0gMSkge1xuICAgICAgICAgICAgdmFyIG1tbCA9IGl0ZW0udG9NbWwoKTtcbiAgICAgICAgICAgIGlmIChtbWwuaXNLaW5kKCdtbycpICYmIG1tbC5nZXRUZXh0KCkgPT09IHRoaXMuZ2V0UHJvcGVydHkoJ29wZW4nKSkge1xuICAgICAgICAgICAgICAgIHRoaXMub3BlbkNvdW50Kys7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGNsb3NlID0gaXRlbS5nZXRQcm9wZXJ0eSgnYXV0b2Nsb3NlJyk7XG4gICAgICAgIGlmIChjbG9zZSAmJiBjbG9zZSA9PT0gdGhpcy5nZXRQcm9wZXJ0eSgnY2xvc2UnKSAmJiAhdGhpcy5vcGVuQ291bnQtLSkge1xuICAgICAgICAgICAgaWYgKHRoaXMuZ2V0UHJvcGVydHkoJ2lnbm9yZScpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5DbGVhcigpO1xuICAgICAgICAgICAgICAgIHJldHVybiBbW10sIHRydWVdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFtbdGhpcy50b01tbCgpXSwgdHJ1ZV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF9zdXBlci5wcm90b3R5cGUuY2hlY2tJdGVtLmNhbGwodGhpcywgaXRlbSk7XG4gICAgfTtcbiAgICBBdXRvT3Blbi5lcnJvcnMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5jcmVhdGUoU3RhY2tJdGVtX2pzXzEuQmFzZUl0ZW0uZXJyb3JzKSwge1xuICAgICAgICAnc3RvcCc6IFsnRXh0cmFPck1pc3NpbmdEZWxpbXMnLCAnRXh0cmEgb3BlbiBvciBtaXNzaW5nIGNsb3NlIGRlbGltaXRlciddXG4gICAgfSk7XG4gICAgcmV0dXJuIEF1dG9PcGVuO1xufShTdGFja0l0ZW1fanNfMS5CYXNlSXRlbSkpO1xuZXhwb3J0cy5BdXRvT3BlbiA9IEF1dG9PcGVuO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UGh5c2ljc0l0ZW1zLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/physics/PhysicsItems.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/physics/PhysicsMappings.js":
/*!***************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/physics/PhysicsMappings.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar PhysicsMethods_js_1 = __importDefault(__webpack_require__(/*! ./PhysicsMethods.js */ \"./node_modules/mathjax-full/js/input/tex/physics/PhysicsMethods.js\"));\nvar TexConstants_js_1 = __webpack_require__(/*! ../TexConstants.js */ \"./node_modules/mathjax-full/js/input/tex/TexConstants.js\");\nvar ParseMethods_js_1 = __importDefault(__webpack_require__(/*! ../ParseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/ParseMethods.js\"));\nvar MmlNode_js_1 = __webpack_require__(/*! ../../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nnew SymbolMap_js_1.CommandMap('Physics-automatic-bracing-macros', {\n    'quantity': 'Quantity',\n    'qty': 'Quantity',\n    'pqty': ['Quantity', '(', ')', true],\n    'bqty': ['Quantity', '[', ']', true],\n    'vqty': ['Quantity', '|', '|', true],\n    'Bqty': ['Quantity', '\\\\{', '\\\\}', true],\n    'absolutevalue': ['Quantity', '|', '|', true],\n    'abs': ['Quantity', '|', '|', true],\n    'norm': ['Quantity', '\\\\|', '\\\\|', true],\n    'evaluated': 'Eval',\n    'eval': 'Eval',\n    'order': ['Quantity', '(', ')', true, 'O',\n        TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],\n    'commutator': 'Commutator',\n    'comm': 'Commutator',\n    'anticommutator': ['Commutator', '\\\\{', '\\\\}'],\n    'acomm': ['Commutator', '\\\\{', '\\\\}'],\n    'poissonbracket': ['Commutator', '\\\\{', '\\\\}'],\n    'pb': ['Commutator', '\\\\{', '\\\\}']\n}, PhysicsMethods_js_1.default);\nnew SymbolMap_js_1.CharacterMap('Physics-vector-mo', ParseMethods_js_1.default.mathchar0mo, {\n    dotproduct: ['\\u22C5', { mathvariant: TexConstants_js_1.TexConstant.Variant.BOLD }],\n    vdot: ['\\u22C5', { mathvariant: TexConstants_js_1.TexConstant.Variant.BOLD }],\n    crossproduct: '\\u00D7',\n    cross: '\\u00D7',\n    cp: '\\u00D7',\n    gradientnabla: ['\\u2207', { mathvariant: TexConstants_js_1.TexConstant.Variant.BOLD }]\n});\nnew SymbolMap_js_1.CharacterMap('Physics-vector-mi', ParseMethods_js_1.default.mathchar0mi, {\n    real: ['\\u211C', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }],\n    imaginary: ['\\u2111', { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL }]\n});\nnew SymbolMap_js_1.CommandMap('Physics-vector-macros', {\n    'vnabla': 'Vnabla',\n    'vectorbold': 'VectorBold',\n    'vb': 'VectorBold',\n    'vectorarrow': ['StarMacro', 1, '\\\\vec{\\\\vb', '{#1}}'],\n    'va': ['StarMacro', 1, '\\\\vec{\\\\vb', '{#1}}'],\n    'vectorunit': ['StarMacro', 1, '\\\\hat{\\\\vb', '{#1}}'],\n    'vu': ['StarMacro', 1, '\\\\hat{\\\\vb', '{#1}}'],\n    'gradient': ['OperatorApplication', '\\\\vnabla', '(', '['],\n    'grad': ['OperatorApplication', '\\\\vnabla', '(', '['],\n    'divergence': ['VectorOperator', '\\\\vnabla\\\\vdot', '(', '['],\n    'div': ['VectorOperator', '\\\\vnabla\\\\vdot', '(', '['],\n    'curl': ['VectorOperator', '\\\\vnabla\\\\crossproduct', '(', '['],\n    'laplacian': ['OperatorApplication', '\\\\nabla^2', '(', '['],\n}, PhysicsMethods_js_1.default);\nnew SymbolMap_js_1.CommandMap('Physics-expressions-macros', {\n    'sin': 'Expression',\n    'sinh': 'Expression',\n    'arcsin': 'Expression',\n    'asin': 'Expression',\n    'cos': 'Expression',\n    'cosh': 'Expression',\n    'arccos': 'Expression',\n    'acos': 'Expression',\n    'tan': 'Expression',\n    'tanh': 'Expression',\n    'arctan': 'Expression',\n    'atan': 'Expression',\n    'csc': 'Expression',\n    'csch': 'Expression',\n    'arccsc': 'Expression',\n    'acsc': 'Expression',\n    'sec': 'Expression',\n    'sech': 'Expression',\n    'arcsec': 'Expression',\n    'asec': 'Expression',\n    'cot': 'Expression',\n    'coth': 'Expression',\n    'arccot': 'Expression',\n    'acot': 'Expression',\n    'exp': ['Expression', false],\n    'log': 'Expression',\n    'ln': 'Expression',\n    'det': ['Expression', false],\n    'Pr': ['Expression', false],\n    'tr': ['Expression', false],\n    'trace': ['Expression', false, 'tr'],\n    'Tr': ['Expression', false],\n    'Trace': ['Expression', false, 'Tr'],\n    'rank': 'NamedFn',\n    'erf': ['Expression', false],\n    'Residue': ['Macro', '\\\\mathrm{Res}'],\n    'Res': ['OperatorApplication', '\\\\Residue', '(', '[', '{'],\n    'principalvalue': ['OperatorApplication', '{\\\\cal P}'],\n    'pv': ['OperatorApplication', '{\\\\cal P}'],\n    'PV': ['OperatorApplication', '{\\\\rm P.V.}'],\n    'Re': ['OperatorApplication', '\\\\mathrm{Re}', '{'],\n    'Im': ['OperatorApplication', '\\\\mathrm{Im}', '{'],\n    'sine': ['NamedFn', 'sin'],\n    'hypsine': ['NamedFn', 'sinh'],\n    'arcsine': ['NamedFn', 'arcsin'],\n    'asine': ['NamedFn', 'asin'],\n    'cosine': ['NamedFn', 'cos'],\n    'hypcosine': ['NamedFn', 'cosh'],\n    'arccosine': ['NamedFn', 'arccos'],\n    'acosine': ['NamedFn', 'acos'],\n    'tangent': ['NamedFn', 'tan'],\n    'hyptangent': ['NamedFn', 'tanh'],\n    'arctangent': ['NamedFn', 'arctan'],\n    'atangent': ['NamedFn', 'atan'],\n    'cosecant': ['NamedFn', 'csc'],\n    'hypcosecant': ['NamedFn', 'csch'],\n    'arccosecant': ['NamedFn', 'arccsc'],\n    'acosecant': ['NamedFn', 'acsc'],\n    'secant': ['NamedFn', 'sec'],\n    'hypsecant': ['NamedFn', 'sech'],\n    'arcsecant': ['NamedFn', 'arcsec'],\n    'asecant': ['NamedFn', 'asec'],\n    'cotangent': ['NamedFn', 'cot'],\n    'hypcotangent': ['NamedFn', 'coth'],\n    'arccotangent': ['NamedFn', 'arccot'],\n    'acotangent': ['NamedFn', 'acot'],\n    'exponential': ['NamedFn', 'exp'],\n    'logarithm': ['NamedFn', 'log'],\n    'naturallogarithm': ['NamedFn', 'ln'],\n    'determinant': ['NamedFn', 'det'],\n    'Probability': ['NamedFn', 'Pr'],\n}, PhysicsMethods_js_1.default);\nnew SymbolMap_js_1.CommandMap('Physics-quick-quad-macros', {\n    'qqtext': 'Qqtext',\n    'qq': 'Qqtext',\n    'qcomma': ['Macro', '\\\\qqtext*{,}'],\n    'qc': ['Macro', '\\\\qqtext*{,}'],\n    'qcc': ['Qqtext', 'c.c.'],\n    'qif': ['Qqtext', 'if'],\n    'qthen': ['Qqtext', 'then'],\n    'qelse': ['Qqtext', 'else'],\n    'qotherwise': ['Qqtext', 'otherwise'],\n    'qunless': ['Qqtext', 'unless'],\n    'qgiven': ['Qqtext', 'given'],\n    'qusing': ['Qqtext', 'using'],\n    'qassume': ['Qqtext', 'assume'],\n    'qsince': ['Qqtext', 'since'],\n    'qlet': ['Qqtext', 'let'],\n    'qfor': ['Qqtext', 'for'],\n    'qall': ['Qqtext', 'all'],\n    'qeven': ['Qqtext', 'even'],\n    'qodd': ['Qqtext', 'odd'],\n    'qinteger': ['Qqtext', 'integer'],\n    'qand': ['Qqtext', 'and'],\n    'qor': ['Qqtext', 'or'],\n    'qas': ['Qqtext', 'as'],\n    'qin': ['Qqtext', 'in'],\n}, PhysicsMethods_js_1.default);\nnew SymbolMap_js_1.CommandMap('Physics-derivative-macros', {\n    'diffd': 'DiffD',\n    'flatfrac': ['Macro', '\\\\left.#1\\\\middle/#2\\\\right.', 2],\n    'differential': ['Differential', '\\\\diffd'],\n    'dd': ['Differential', '\\\\diffd'],\n    'variation': ['Differential', '\\\\delta'],\n    'var': ['Differential', '\\\\delta'],\n    'derivative': ['Derivative', 2, '\\\\diffd'],\n    'dv': ['Derivative', 2, '\\\\diffd'],\n    'partialderivative': ['Derivative', 3, '\\\\partial'],\n    'pderivative': ['Derivative', 3, '\\\\partial'],\n    'pdv': ['Derivative', 3, '\\\\partial'],\n    'functionalderivative': ['Derivative', 2, '\\\\delta'],\n    'fderivative': ['Derivative', 2, '\\\\delta'],\n    'fdv': ['Derivative', 2, '\\\\delta'],\n}, PhysicsMethods_js_1.default);\nnew SymbolMap_js_1.CommandMap('Physics-bra-ket-macros', {\n    'bra': 'Bra',\n    'ket': 'Ket',\n    'innerproduct': 'BraKet',\n    'ip': 'BraKet',\n    'braket': 'BraKet',\n    'outerproduct': 'KetBra',\n    'dyad': 'KetBra',\n    'ketbra': 'KetBra',\n    'op': 'KetBra',\n    'expectationvalue': 'Expectation',\n    'expval': 'Expectation',\n    'ev': 'Expectation',\n    'matrixelement': 'MatrixElement',\n    'matrixel': 'MatrixElement',\n    'mel': 'MatrixElement',\n}, PhysicsMethods_js_1.default);\nnew SymbolMap_js_1.CommandMap('Physics-matrix-macros', {\n    'matrixquantity': 'MatrixQuantity',\n    'mqty': 'MatrixQuantity',\n    'pmqty': ['Macro', '\\\\mqty(#1)', 1],\n    'Pmqty': ['Macro', '\\\\mqty*(#1)', 1],\n    'bmqty': ['Macro', '\\\\mqty[#1]', 1],\n    'vmqty': ['Macro', '\\\\mqty|#1|', 1],\n    'smallmatrixquantity': ['MatrixQuantity', true],\n    'smqty': ['MatrixQuantity', true],\n    'spmqty': ['Macro', '\\\\smqty(#1)', 1],\n    'sPmqty': ['Macro', '\\\\smqty*(#1)', 1],\n    'sbmqty': ['Macro', '\\\\smqty[#1]', 1],\n    'svmqty': ['Macro', '\\\\smqty|#1|', 1],\n    'matrixdeterminant': ['Macro', '\\\\vmqty{#1}', 1],\n    'mdet': ['Macro', '\\\\vmqty{#1}', 1],\n    'smdet': ['Macro', '\\\\svmqty{#1}', 1],\n    'identitymatrix': 'IdentityMatrix',\n    'imat': 'IdentityMatrix',\n    'xmatrix': 'XMatrix',\n    'xmat': 'XMatrix',\n    'zeromatrix': ['Macro', '\\\\xmat{0}{#1}{#2}', 2],\n    'zmat': ['Macro', '\\\\xmat{0}{#1}{#2}', 2],\n    'paulimatrix': 'PauliMatrix',\n    'pmat': 'PauliMatrix',\n    'diagonalmatrix': 'DiagonalMatrix',\n    'dmat': 'DiagonalMatrix',\n    'antidiagonalmatrix': ['DiagonalMatrix', true],\n    'admat': ['DiagonalMatrix', true]\n}, PhysicsMethods_js_1.default);\nnew SymbolMap_js_1.EnvironmentMap('Physics-aux-envs', ParseMethods_js_1.default.environment, {\n    smallmatrix: ['Array', null, null, null, 'c', '0.333em', '.2em', 'S', 1]\n}, PhysicsMethods_js_1.default);\nnew SymbolMap_js_1.MacroMap('Physics-characters', {\n    '|': ['AutoClose', MmlNode_js_1.TEXCLASS.ORD],\n    ')': 'AutoClose',\n    ']': 'AutoClose'\n}, PhysicsMethods_js_1.default);\n//# sourceMappingURL=PhysicsMappings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9waHlzaWNzL1BoeXNpY3NNYXBwaW5ncy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQixtQkFBTyxDQUFDLDhFQUFpQjtBQUM5QywwQ0FBMEMsbUJBQU8sQ0FBQywrRkFBcUI7QUFDdkUsd0JBQXdCLG1CQUFPLENBQUMsb0ZBQW9CO0FBQ3BELHdDQUF3QyxtQkFBTyxDQUFDLG9GQUFvQjtBQUNwRSxtQkFBbUIsbUJBQU8sQ0FBQyxnR0FBa0M7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLE9BQU87QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLE9BQU87QUFDaEQsZ0NBQWdDLE9BQU87QUFDdkMseUNBQXlDLE9BQU87QUFDaEQsNkJBQTZCLE9BQU87QUFDcEMsQ0FBQztBQUNEO0FBQ0EsNkJBQTZCLHlEQUF5RDtBQUN0Rix1QkFBdUIseURBQXlEO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyx5REFBeUQ7QUFDekYsQ0FBQztBQUNEO0FBQ0EsdUJBQXVCLDJEQUEyRDtBQUNsRiw0QkFBNEIsMkRBQTJEO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxTQUFTLElBQUk7QUFDeEQsa0NBQWtDLFNBQVMsSUFBSTtBQUMvQywwQ0FBMEMsU0FBUyxJQUFJO0FBQ3ZELGtDQUFrQyxTQUFTLElBQUk7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxJQUFJO0FBQ3ZDLDREQUE0RDtBQUM1RCxnREFBZ0QsUUFBUTtBQUN4RCxvQ0FBb0MsUUFBUTtBQUM1QyxvQ0FBb0MsVUFBVTtBQUM5Qyw0Q0FBNEMsR0FBRyxLQUFLO0FBQ3BELDRDQUE0QyxHQUFHLEtBQUs7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsRUFBRTtBQUNyQywrQkFBK0IsRUFBRTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxHQUFHO0FBQy9DLCtCQUErQixHQUFHO0FBQ2xDLGlDQUFpQyxHQUFHO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLEdBQUcsSUFBSSxHQUFHO0FBQzlDLDhCQUE4QixHQUFHLElBQUksR0FBRztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC9waHlzaWNzL1BoeXNpY3NNYXBwaW5ncy5qcz9jZDgzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIFN5bWJvbE1hcF9qc18xID0gcmVxdWlyZShcIi4uL1N5bWJvbE1hcC5qc1wiKTtcbnZhciBQaHlzaWNzTWV0aG9kc19qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL1BoeXNpY3NNZXRob2RzLmpzXCIpKTtcbnZhciBUZXhDb25zdGFudHNfanNfMSA9IHJlcXVpcmUoXCIuLi9UZXhDb25zdGFudHMuanNcIik7XG52YXIgUGFyc2VNZXRob2RzX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL1BhcnNlTWV0aG9kcy5qc1wiKSk7XG52YXIgTW1sTm9kZV9qc18xID0gcmVxdWlyZShcIi4uLy4uLy4uL2NvcmUvTW1sVHJlZS9NbWxOb2RlLmpzXCIpO1xubmV3IFN5bWJvbE1hcF9qc18xLkNvbW1hbmRNYXAoJ1BoeXNpY3MtYXV0b21hdGljLWJyYWNpbmctbWFjcm9zJywge1xuICAgICdxdWFudGl0eSc6ICdRdWFudGl0eScsXG4gICAgJ3F0eSc6ICdRdWFudGl0eScsXG4gICAgJ3BxdHknOiBbJ1F1YW50aXR5JywgJygnLCAnKScsIHRydWVdLFxuICAgICdicXR5JzogWydRdWFudGl0eScsICdbJywgJ10nLCB0cnVlXSxcbiAgICAndnF0eSc6IFsnUXVhbnRpdHknLCAnfCcsICd8JywgdHJ1ZV0sXG4gICAgJ0JxdHknOiBbJ1F1YW50aXR5JywgJ1xcXFx7JywgJ1xcXFx9JywgdHJ1ZV0sXG4gICAgJ2Fic29sdXRldmFsdWUnOiBbJ1F1YW50aXR5JywgJ3wnLCAnfCcsIHRydWVdLFxuICAgICdhYnMnOiBbJ1F1YW50aXR5JywgJ3wnLCAnfCcsIHRydWVdLFxuICAgICdub3JtJzogWydRdWFudGl0eScsICdcXFxcfCcsICdcXFxcfCcsIHRydWVdLFxuICAgICdldmFsdWF0ZWQnOiAnRXZhbCcsXG4gICAgJ2V2YWwnOiAnRXZhbCcsXG4gICAgJ29yZGVyJzogWydRdWFudGl0eScsICcoJywgJyknLCB0cnVlLCAnTycsXG4gICAgICAgIFRleENvbnN0YW50c19qc18xLlRleENvbnN0YW50LlZhcmlhbnQuQ0FMTElHUkFQSElDXSxcbiAgICAnY29tbXV0YXRvcic6ICdDb21tdXRhdG9yJyxcbiAgICAnY29tbSc6ICdDb21tdXRhdG9yJyxcbiAgICAnYW50aWNvbW11dGF0b3InOiBbJ0NvbW11dGF0b3InLCAnXFxcXHsnLCAnXFxcXH0nXSxcbiAgICAnYWNvbW0nOiBbJ0NvbW11dGF0b3InLCAnXFxcXHsnLCAnXFxcXH0nXSxcbiAgICAncG9pc3NvbmJyYWNrZXQnOiBbJ0NvbW11dGF0b3InLCAnXFxcXHsnLCAnXFxcXH0nXSxcbiAgICAncGInOiBbJ0NvbW11dGF0b3InLCAnXFxcXHsnLCAnXFxcXH0nXVxufSwgUGh5c2ljc01ldGhvZHNfanNfMS5kZWZhdWx0KTtcbm5ldyBTeW1ib2xNYXBfanNfMS5DaGFyYWN0ZXJNYXAoJ1BoeXNpY3MtdmVjdG9yLW1vJywgUGFyc2VNZXRob2RzX2pzXzEuZGVmYXVsdC5tYXRoY2hhcjBtbywge1xuICAgIGRvdHByb2R1Y3Q6IFsnXFx1MjJDNScsIHsgbWF0aHZhcmlhbnQ6IFRleENvbnN0YW50c19qc18xLlRleENvbnN0YW50LlZhcmlhbnQuQk9MRCB9XSxcbiAgICB2ZG90OiBbJ1xcdTIyQzUnLCB7IG1hdGh2YXJpYW50OiBUZXhDb25zdGFudHNfanNfMS5UZXhDb25zdGFudC5WYXJpYW50LkJPTEQgfV0sXG4gICAgY3Jvc3Nwcm9kdWN0OiAnXFx1MDBENycsXG4gICAgY3Jvc3M6ICdcXHUwMEQ3JyxcbiAgICBjcDogJ1xcdTAwRDcnLFxuICAgIGdyYWRpZW50bmFibGE6IFsnXFx1MjIwNycsIHsgbWF0aHZhcmlhbnQ6IFRleENvbnN0YW50c19qc18xLlRleENvbnN0YW50LlZhcmlhbnQuQk9MRCB9XVxufSk7XG5uZXcgU3ltYm9sTWFwX2pzXzEuQ2hhcmFjdGVyTWFwKCdQaHlzaWNzLXZlY3Rvci1taScsIFBhcnNlTWV0aG9kc19qc18xLmRlZmF1bHQubWF0aGNoYXIwbWksIHtcbiAgICByZWFsOiBbJ1xcdTIxMUMnLCB7IG1hdGh2YXJpYW50OiBUZXhDb25zdGFudHNfanNfMS5UZXhDb25zdGFudC5WYXJpYW50Lk5PUk1BTCB9XSxcbiAgICBpbWFnaW5hcnk6IFsnXFx1MjExMScsIHsgbWF0aHZhcmlhbnQ6IFRleENvbnN0YW50c19qc18xLlRleENvbnN0YW50LlZhcmlhbnQuTk9STUFMIH1dXG59KTtcbm5ldyBTeW1ib2xNYXBfanNfMS5Db21tYW5kTWFwKCdQaHlzaWNzLXZlY3Rvci1tYWNyb3MnLCB7XG4gICAgJ3ZuYWJsYSc6ICdWbmFibGEnLFxuICAgICd2ZWN0b3Jib2xkJzogJ1ZlY3RvckJvbGQnLFxuICAgICd2Yic6ICdWZWN0b3JCb2xkJyxcbiAgICAndmVjdG9yYXJyb3cnOiBbJ1N0YXJNYWNybycsIDEsICdcXFxcdmVje1xcXFx2YicsICd7IzF9fSddLFxuICAgICd2YSc6IFsnU3Rhck1hY3JvJywgMSwgJ1xcXFx2ZWN7XFxcXHZiJywgJ3sjMX19J10sXG4gICAgJ3ZlY3RvcnVuaXQnOiBbJ1N0YXJNYWNybycsIDEsICdcXFxcaGF0e1xcXFx2YicsICd7IzF9fSddLFxuICAgICd2dSc6IFsnU3Rhck1hY3JvJywgMSwgJ1xcXFxoYXR7XFxcXHZiJywgJ3sjMX19J10sXG4gICAgJ2dyYWRpZW50JzogWydPcGVyYXRvckFwcGxpY2F0aW9uJywgJ1xcXFx2bmFibGEnLCAnKCcsICdbJ10sXG4gICAgJ2dyYWQnOiBbJ09wZXJhdG9yQXBwbGljYXRpb24nLCAnXFxcXHZuYWJsYScsICcoJywgJ1snXSxcbiAgICAnZGl2ZXJnZW5jZSc6IFsnVmVjdG9yT3BlcmF0b3InLCAnXFxcXHZuYWJsYVxcXFx2ZG90JywgJygnLCAnWyddLFxuICAgICdkaXYnOiBbJ1ZlY3Rvck9wZXJhdG9yJywgJ1xcXFx2bmFibGFcXFxcdmRvdCcsICcoJywgJ1snXSxcbiAgICAnY3VybCc6IFsnVmVjdG9yT3BlcmF0b3InLCAnXFxcXHZuYWJsYVxcXFxjcm9zc3Byb2R1Y3QnLCAnKCcsICdbJ10sXG4gICAgJ2xhcGxhY2lhbic6IFsnT3BlcmF0b3JBcHBsaWNhdGlvbicsICdcXFxcbmFibGFeMicsICcoJywgJ1snXSxcbn0sIFBoeXNpY3NNZXRob2RzX2pzXzEuZGVmYXVsdCk7XG5uZXcgU3ltYm9sTWFwX2pzXzEuQ29tbWFuZE1hcCgnUGh5c2ljcy1leHByZXNzaW9ucy1tYWNyb3MnLCB7XG4gICAgJ3Npbic6ICdFeHByZXNzaW9uJyxcbiAgICAnc2luaCc6ICdFeHByZXNzaW9uJyxcbiAgICAnYXJjc2luJzogJ0V4cHJlc3Npb24nLFxuICAgICdhc2luJzogJ0V4cHJlc3Npb24nLFxuICAgICdjb3MnOiAnRXhwcmVzc2lvbicsXG4gICAgJ2Nvc2gnOiAnRXhwcmVzc2lvbicsXG4gICAgJ2FyY2Nvcyc6ICdFeHByZXNzaW9uJyxcbiAgICAnYWNvcyc6ICdFeHByZXNzaW9uJyxcbiAgICAndGFuJzogJ0V4cHJlc3Npb24nLFxuICAgICd0YW5oJzogJ0V4cHJlc3Npb24nLFxuICAgICdhcmN0YW4nOiAnRXhwcmVzc2lvbicsXG4gICAgJ2F0YW4nOiAnRXhwcmVzc2lvbicsXG4gICAgJ2NzYyc6ICdFeHByZXNzaW9uJyxcbiAgICAnY3NjaCc6ICdFeHByZXNzaW9uJyxcbiAgICAnYXJjY3NjJzogJ0V4cHJlc3Npb24nLFxuICAgICdhY3NjJzogJ0V4cHJlc3Npb24nLFxuICAgICdzZWMnOiAnRXhwcmVzc2lvbicsXG4gICAgJ3NlY2gnOiAnRXhwcmVzc2lvbicsXG4gICAgJ2FyY3NlYyc6ICdFeHByZXNzaW9uJyxcbiAgICAnYXNlYyc6ICdFeHByZXNzaW9uJyxcbiAgICAnY290JzogJ0V4cHJlc3Npb24nLFxuICAgICdjb3RoJzogJ0V4cHJlc3Npb24nLFxuICAgICdhcmNjb3QnOiAnRXhwcmVzc2lvbicsXG4gICAgJ2Fjb3QnOiAnRXhwcmVzc2lvbicsXG4gICAgJ2V4cCc6IFsnRXhwcmVzc2lvbicsIGZhbHNlXSxcbiAgICAnbG9nJzogJ0V4cHJlc3Npb24nLFxuICAgICdsbic6ICdFeHByZXNzaW9uJyxcbiAgICAnZGV0JzogWydFeHByZXNzaW9uJywgZmFsc2VdLFxuICAgICdQcic6IFsnRXhwcmVzc2lvbicsIGZhbHNlXSxcbiAgICAndHInOiBbJ0V4cHJlc3Npb24nLCBmYWxzZV0sXG4gICAgJ3RyYWNlJzogWydFeHByZXNzaW9uJywgZmFsc2UsICd0ciddLFxuICAgICdUcic6IFsnRXhwcmVzc2lvbicsIGZhbHNlXSxcbiAgICAnVHJhY2UnOiBbJ0V4cHJlc3Npb24nLCBmYWxzZSwgJ1RyJ10sXG4gICAgJ3JhbmsnOiAnTmFtZWRGbicsXG4gICAgJ2VyZic6IFsnRXhwcmVzc2lvbicsIGZhbHNlXSxcbiAgICAnUmVzaWR1ZSc6IFsnTWFjcm8nLCAnXFxcXG1hdGhybXtSZXN9J10sXG4gICAgJ1Jlcyc6IFsnT3BlcmF0b3JBcHBsaWNhdGlvbicsICdcXFxcUmVzaWR1ZScsICcoJywgJ1snLCAneyddLFxuICAgICdwcmluY2lwYWx2YWx1ZSc6IFsnT3BlcmF0b3JBcHBsaWNhdGlvbicsICd7XFxcXGNhbCBQfSddLFxuICAgICdwdic6IFsnT3BlcmF0b3JBcHBsaWNhdGlvbicsICd7XFxcXGNhbCBQfSddLFxuICAgICdQVic6IFsnT3BlcmF0b3JBcHBsaWNhdGlvbicsICd7XFxcXHJtIFAuVi59J10sXG4gICAgJ1JlJzogWydPcGVyYXRvckFwcGxpY2F0aW9uJywgJ1xcXFxtYXRocm17UmV9JywgJ3snXSxcbiAgICAnSW0nOiBbJ09wZXJhdG9yQXBwbGljYXRpb24nLCAnXFxcXG1hdGhybXtJbX0nLCAneyddLFxuICAgICdzaW5lJzogWydOYW1lZEZuJywgJ3NpbiddLFxuICAgICdoeXBzaW5lJzogWydOYW1lZEZuJywgJ3NpbmgnXSxcbiAgICAnYXJjc2luZSc6IFsnTmFtZWRGbicsICdhcmNzaW4nXSxcbiAgICAnYXNpbmUnOiBbJ05hbWVkRm4nLCAnYXNpbiddLFxuICAgICdjb3NpbmUnOiBbJ05hbWVkRm4nLCAnY29zJ10sXG4gICAgJ2h5cGNvc2luZSc6IFsnTmFtZWRGbicsICdjb3NoJ10sXG4gICAgJ2FyY2Nvc2luZSc6IFsnTmFtZWRGbicsICdhcmNjb3MnXSxcbiAgICAnYWNvc2luZSc6IFsnTmFtZWRGbicsICdhY29zJ10sXG4gICAgJ3RhbmdlbnQnOiBbJ05hbWVkRm4nLCAndGFuJ10sXG4gICAgJ2h5cHRhbmdlbnQnOiBbJ05hbWVkRm4nLCAndGFuaCddLFxuICAgICdhcmN0YW5nZW50JzogWydOYW1lZEZuJywgJ2FyY3RhbiddLFxuICAgICdhdGFuZ2VudCc6IFsnTmFtZWRGbicsICdhdGFuJ10sXG4gICAgJ2Nvc2VjYW50JzogWydOYW1lZEZuJywgJ2NzYyddLFxuICAgICdoeXBjb3NlY2FudCc6IFsnTmFtZWRGbicsICdjc2NoJ10sXG4gICAgJ2FyY2Nvc2VjYW50JzogWydOYW1lZEZuJywgJ2FyY2NzYyddLFxuICAgICdhY29zZWNhbnQnOiBbJ05hbWVkRm4nLCAnYWNzYyddLFxuICAgICdzZWNhbnQnOiBbJ05hbWVkRm4nLCAnc2VjJ10sXG4gICAgJ2h5cHNlY2FudCc6IFsnTmFtZWRGbicsICdzZWNoJ10sXG4gICAgJ2FyY3NlY2FudCc6IFsnTmFtZWRGbicsICdhcmNzZWMnXSxcbiAgICAnYXNlY2FudCc6IFsnTmFtZWRGbicsICdhc2VjJ10sXG4gICAgJ2NvdGFuZ2VudCc6IFsnTmFtZWRGbicsICdjb3QnXSxcbiAgICAnaHlwY290YW5nZW50JzogWydOYW1lZEZuJywgJ2NvdGgnXSxcbiAgICAnYXJjY290YW5nZW50JzogWydOYW1lZEZuJywgJ2FyY2NvdCddLFxuICAgICdhY290YW5nZW50JzogWydOYW1lZEZuJywgJ2Fjb3QnXSxcbiAgICAnZXhwb25lbnRpYWwnOiBbJ05hbWVkRm4nLCAnZXhwJ10sXG4gICAgJ2xvZ2FyaXRobSc6IFsnTmFtZWRGbicsICdsb2cnXSxcbiAgICAnbmF0dXJhbGxvZ2FyaXRobSc6IFsnTmFtZWRGbicsICdsbiddLFxuICAgICdkZXRlcm1pbmFudCc6IFsnTmFtZWRGbicsICdkZXQnXSxcbiAgICAnUHJvYmFiaWxpdHknOiBbJ05hbWVkRm4nLCAnUHInXSxcbn0sIFBoeXNpY3NNZXRob2RzX2pzXzEuZGVmYXVsdCk7XG5uZXcgU3ltYm9sTWFwX2pzXzEuQ29tbWFuZE1hcCgnUGh5c2ljcy1xdWljay1xdWFkLW1hY3JvcycsIHtcbiAgICAncXF0ZXh0JzogJ1FxdGV4dCcsXG4gICAgJ3FxJzogJ1FxdGV4dCcsXG4gICAgJ3Fjb21tYSc6IFsnTWFjcm8nLCAnXFxcXHFxdGV4dCp7LH0nXSxcbiAgICAncWMnOiBbJ01hY3JvJywgJ1xcXFxxcXRleHQqeyx9J10sXG4gICAgJ3FjYyc6IFsnUXF0ZXh0JywgJ2MuYy4nXSxcbiAgICAncWlmJzogWydRcXRleHQnLCAnaWYnXSxcbiAgICAncXRoZW4nOiBbJ1FxdGV4dCcsICd0aGVuJ10sXG4gICAgJ3FlbHNlJzogWydRcXRleHQnLCAnZWxzZSddLFxuICAgICdxb3RoZXJ3aXNlJzogWydRcXRleHQnLCAnb3RoZXJ3aXNlJ10sXG4gICAgJ3F1bmxlc3MnOiBbJ1FxdGV4dCcsICd1bmxlc3MnXSxcbiAgICAncWdpdmVuJzogWydRcXRleHQnLCAnZ2l2ZW4nXSxcbiAgICAncXVzaW5nJzogWydRcXRleHQnLCAndXNpbmcnXSxcbiAgICAncWFzc3VtZSc6IFsnUXF0ZXh0JywgJ2Fzc3VtZSddLFxuICAgICdxc2luY2UnOiBbJ1FxdGV4dCcsICdzaW5jZSddLFxuICAgICdxbGV0JzogWydRcXRleHQnLCAnbGV0J10sXG4gICAgJ3Fmb3InOiBbJ1FxdGV4dCcsICdmb3InXSxcbiAgICAncWFsbCc6IFsnUXF0ZXh0JywgJ2FsbCddLFxuICAgICdxZXZlbic6IFsnUXF0ZXh0JywgJ2V2ZW4nXSxcbiAgICAncW9kZCc6IFsnUXF0ZXh0JywgJ29kZCddLFxuICAgICdxaW50ZWdlcic6IFsnUXF0ZXh0JywgJ2ludGVnZXInXSxcbiAgICAncWFuZCc6IFsnUXF0ZXh0JywgJ2FuZCddLFxuICAgICdxb3InOiBbJ1FxdGV4dCcsICdvciddLFxuICAgICdxYXMnOiBbJ1FxdGV4dCcsICdhcyddLFxuICAgICdxaW4nOiBbJ1FxdGV4dCcsICdpbiddLFxufSwgUGh5c2ljc01ldGhvZHNfanNfMS5kZWZhdWx0KTtcbm5ldyBTeW1ib2xNYXBfanNfMS5Db21tYW5kTWFwKCdQaHlzaWNzLWRlcml2YXRpdmUtbWFjcm9zJywge1xuICAgICdkaWZmZCc6ICdEaWZmRCcsXG4gICAgJ2ZsYXRmcmFjJzogWydNYWNybycsICdcXFxcbGVmdC4jMVxcXFxtaWRkbGUvIzJcXFxccmlnaHQuJywgMl0sXG4gICAgJ2RpZmZlcmVudGlhbCc6IFsnRGlmZmVyZW50aWFsJywgJ1xcXFxkaWZmZCddLFxuICAgICdkZCc6IFsnRGlmZmVyZW50aWFsJywgJ1xcXFxkaWZmZCddLFxuICAgICd2YXJpYXRpb24nOiBbJ0RpZmZlcmVudGlhbCcsICdcXFxcZGVsdGEnXSxcbiAgICAndmFyJzogWydEaWZmZXJlbnRpYWwnLCAnXFxcXGRlbHRhJ10sXG4gICAgJ2Rlcml2YXRpdmUnOiBbJ0Rlcml2YXRpdmUnLCAyLCAnXFxcXGRpZmZkJ10sXG4gICAgJ2R2JzogWydEZXJpdmF0aXZlJywgMiwgJ1xcXFxkaWZmZCddLFxuICAgICdwYXJ0aWFsZGVyaXZhdGl2ZSc6IFsnRGVyaXZhdGl2ZScsIDMsICdcXFxccGFydGlhbCddLFxuICAgICdwZGVyaXZhdGl2ZSc6IFsnRGVyaXZhdGl2ZScsIDMsICdcXFxccGFydGlhbCddLFxuICAgICdwZHYnOiBbJ0Rlcml2YXRpdmUnLCAzLCAnXFxcXHBhcnRpYWwnXSxcbiAgICAnZnVuY3Rpb25hbGRlcml2YXRpdmUnOiBbJ0Rlcml2YXRpdmUnLCAyLCAnXFxcXGRlbHRhJ10sXG4gICAgJ2ZkZXJpdmF0aXZlJzogWydEZXJpdmF0aXZlJywgMiwgJ1xcXFxkZWx0YSddLFxuICAgICdmZHYnOiBbJ0Rlcml2YXRpdmUnLCAyLCAnXFxcXGRlbHRhJ10sXG59LCBQaHlzaWNzTWV0aG9kc19qc18xLmRlZmF1bHQpO1xubmV3IFN5bWJvbE1hcF9qc18xLkNvbW1hbmRNYXAoJ1BoeXNpY3MtYnJhLWtldC1tYWNyb3MnLCB7XG4gICAgJ2JyYSc6ICdCcmEnLFxuICAgICdrZXQnOiAnS2V0JyxcbiAgICAnaW5uZXJwcm9kdWN0JzogJ0JyYUtldCcsXG4gICAgJ2lwJzogJ0JyYUtldCcsXG4gICAgJ2JyYWtldCc6ICdCcmFLZXQnLFxuICAgICdvdXRlcnByb2R1Y3QnOiAnS2V0QnJhJyxcbiAgICAnZHlhZCc6ICdLZXRCcmEnLFxuICAgICdrZXRicmEnOiAnS2V0QnJhJyxcbiAgICAnb3AnOiAnS2V0QnJhJyxcbiAgICAnZXhwZWN0YXRpb252YWx1ZSc6ICdFeHBlY3RhdGlvbicsXG4gICAgJ2V4cHZhbCc6ICdFeHBlY3RhdGlvbicsXG4gICAgJ2V2JzogJ0V4cGVjdGF0aW9uJyxcbiAgICAnbWF0cml4ZWxlbWVudCc6ICdNYXRyaXhFbGVtZW50JyxcbiAgICAnbWF0cml4ZWwnOiAnTWF0cml4RWxlbWVudCcsXG4gICAgJ21lbCc6ICdNYXRyaXhFbGVtZW50Jyxcbn0sIFBoeXNpY3NNZXRob2RzX2pzXzEuZGVmYXVsdCk7XG5uZXcgU3ltYm9sTWFwX2pzXzEuQ29tbWFuZE1hcCgnUGh5c2ljcy1tYXRyaXgtbWFjcm9zJywge1xuICAgICdtYXRyaXhxdWFudGl0eSc6ICdNYXRyaXhRdWFudGl0eScsXG4gICAgJ21xdHknOiAnTWF0cml4UXVhbnRpdHknLFxuICAgICdwbXF0eSc6IFsnTWFjcm8nLCAnXFxcXG1xdHkoIzEpJywgMV0sXG4gICAgJ1BtcXR5JzogWydNYWNybycsICdcXFxcbXF0eSooIzEpJywgMV0sXG4gICAgJ2JtcXR5JzogWydNYWNybycsICdcXFxcbXF0eVsjMV0nLCAxXSxcbiAgICAndm1xdHknOiBbJ01hY3JvJywgJ1xcXFxtcXR5fCMxfCcsIDFdLFxuICAgICdzbWFsbG1hdHJpeHF1YW50aXR5JzogWydNYXRyaXhRdWFudGl0eScsIHRydWVdLFxuICAgICdzbXF0eSc6IFsnTWF0cml4UXVhbnRpdHknLCB0cnVlXSxcbiAgICAnc3BtcXR5JzogWydNYWNybycsICdcXFxcc21xdHkoIzEpJywgMV0sXG4gICAgJ3NQbXF0eSc6IFsnTWFjcm8nLCAnXFxcXHNtcXR5KigjMSknLCAxXSxcbiAgICAnc2JtcXR5JzogWydNYWNybycsICdcXFxcc21xdHlbIzFdJywgMV0sXG4gICAgJ3N2bXF0eSc6IFsnTWFjcm8nLCAnXFxcXHNtcXR5fCMxfCcsIDFdLFxuICAgICdtYXRyaXhkZXRlcm1pbmFudCc6IFsnTWFjcm8nLCAnXFxcXHZtcXR5eyMxfScsIDFdLFxuICAgICdtZGV0JzogWydNYWNybycsICdcXFxcdm1xdHl7IzF9JywgMV0sXG4gICAgJ3NtZGV0JzogWydNYWNybycsICdcXFxcc3ZtcXR5eyMxfScsIDFdLFxuICAgICdpZGVudGl0eW1hdHJpeCc6ICdJZGVudGl0eU1hdHJpeCcsXG4gICAgJ2ltYXQnOiAnSWRlbnRpdHlNYXRyaXgnLFxuICAgICd4bWF0cml4JzogJ1hNYXRyaXgnLFxuICAgICd4bWF0JzogJ1hNYXRyaXgnLFxuICAgICd6ZXJvbWF0cml4JzogWydNYWNybycsICdcXFxceG1hdHswfXsjMX17IzJ9JywgMl0sXG4gICAgJ3ptYXQnOiBbJ01hY3JvJywgJ1xcXFx4bWF0ezB9eyMxfXsjMn0nLCAyXSxcbiAgICAncGF1bGltYXRyaXgnOiAnUGF1bGlNYXRyaXgnLFxuICAgICdwbWF0JzogJ1BhdWxpTWF0cml4JyxcbiAgICAnZGlhZ29uYWxtYXRyaXgnOiAnRGlhZ29uYWxNYXRyaXgnLFxuICAgICdkbWF0JzogJ0RpYWdvbmFsTWF0cml4JyxcbiAgICAnYW50aWRpYWdvbmFsbWF0cml4JzogWydEaWFnb25hbE1hdHJpeCcsIHRydWVdLFxuICAgICdhZG1hdCc6IFsnRGlhZ29uYWxNYXRyaXgnLCB0cnVlXVxufSwgUGh5c2ljc01ldGhvZHNfanNfMS5kZWZhdWx0KTtcbm5ldyBTeW1ib2xNYXBfanNfMS5FbnZpcm9ubWVudE1hcCgnUGh5c2ljcy1hdXgtZW52cycsIFBhcnNlTWV0aG9kc19qc18xLmRlZmF1bHQuZW52aXJvbm1lbnQsIHtcbiAgICBzbWFsbG1hdHJpeDogWydBcnJheScsIG51bGwsIG51bGwsIG51bGwsICdjJywgJzAuMzMzZW0nLCAnLjJlbScsICdTJywgMV1cbn0sIFBoeXNpY3NNZXRob2RzX2pzXzEuZGVmYXVsdCk7XG5uZXcgU3ltYm9sTWFwX2pzXzEuTWFjcm9NYXAoJ1BoeXNpY3MtY2hhcmFjdGVycycsIHtcbiAgICAnfCc6IFsnQXV0b0Nsb3NlJywgTW1sTm9kZV9qc18xLlRFWENMQVNTLk9SRF0sXG4gICAgJyknOiAnQXV0b0Nsb3NlJyxcbiAgICAnXSc6ICdBdXRvQ2xvc2UnXG59LCBQaHlzaWNzTWV0aG9kc19qc18xLmRlZmF1bHQpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UGh5c2ljc01hcHBpbmdzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/physics/PhysicsMappings.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/physics/PhysicsMethods.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/physics/PhysicsMethods.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar BaseMethods_js_1 = __importDefault(__webpack_require__(/*! ../base/BaseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseMethods.js\"));\nvar TexParser_js_1 = __importDefault(__webpack_require__(/*! ../TexParser.js */ \"./node_modules/mathjax-full/js/input/tex/TexParser.js\"));\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar MmlNode_js_1 = __webpack_require__(/*! ../../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar NodeFactory_js_1 = __webpack_require__(/*! ../NodeFactory.js */ \"./node_modules/mathjax-full/js/input/tex/NodeFactory.js\");\nvar PhysicsMethods = {};\nvar pairs = {\n    '(': ')',\n    '[': ']',\n    '{': '}',\n    '|': '|',\n};\nvar biggs = /^(b|B)i(g{1,2})$/;\nPhysicsMethods.Quantity = function (parser, name, open, close, arg, named, variant) {\n    if (open === void 0) { open = '('; }\n    if (close === void 0) { close = ')'; }\n    if (arg === void 0) { arg = false; }\n    if (named === void 0) { named = ''; }\n    if (variant === void 0) { variant = ''; }\n    var star = arg ? parser.GetStar() : false;\n    var next = parser.GetNext();\n    var position = parser.i;\n    var big = null;\n    if (next === '\\\\') {\n        parser.i++;\n        big = parser.GetCS();\n        if (!big.match(biggs)) {\n            var empty = parser.create('node', 'mrow');\n            parser.Push(ParseUtil_js_1.default.fenced(parser.configuration, open, empty, close));\n            parser.i = position;\n            return;\n        }\n        next = parser.GetNext();\n    }\n    var right = pairs[next];\n    if (arg && next !== '{') {\n        throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);\n    }\n    if (!right) {\n        var empty = parser.create('node', 'mrow');\n        parser.Push(ParseUtil_js_1.default.fenced(parser.configuration, open, empty, close));\n        parser.i = position;\n        return;\n    }\n    if (named) {\n        var mml = parser.create('token', 'mi', { texClass: MmlNode_js_1.TEXCLASS.OP }, named);\n        if (variant) {\n            NodeUtil_js_1.default.setAttribute(mml, 'mathvariant', variant);\n        }\n        parser.Push(parser.itemFactory.create('fn', mml));\n    }\n    if (next === '{') {\n        var argument = parser.GetArgument(name);\n        next = arg ? open : '\\\\{';\n        right = arg ? close : '\\\\}';\n        argument = star ? next + ' ' + argument + ' ' + right :\n            (big ?\n                '\\\\' + big + 'l' + next + ' ' + argument + ' ' + '\\\\' + big + 'r' + right :\n                '\\\\left' + next + ' ' + argument + ' ' + '\\\\right' + right);\n        parser.Push(new TexParser_js_1.default(argument, parser.stack.env, parser.configuration).mml());\n        return;\n    }\n    if (arg) {\n        next = open;\n        right = close;\n    }\n    parser.i++;\n    parser.Push(parser.itemFactory.create('auto open')\n        .setProperties({ open: next, close: right, big: big }));\n};\nPhysicsMethods.Eval = function (parser, name) {\n    var star = parser.GetStar();\n    var next = parser.GetNext();\n    if (next === '{') {\n        var arg = parser.GetArgument(name);\n        var replace = '\\\\left. ' +\n            (star ? '\\\\smash{' + arg + '}' : arg) +\n            ' ' + '\\\\vphantom{\\\\int}\\\\right|';\n        parser.string = parser.string.slice(0, parser.i) + replace +\n            parser.string.slice(parser.i);\n        return;\n    }\n    if (next === '(' || next === '[') {\n        parser.i++;\n        parser.Push(parser.itemFactory.create('auto open')\n            .setProperties({ open: next, close: '|',\n            smash: star, right: '\\\\vphantom{\\\\int}' }));\n        return;\n    }\n    throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);\n};\nPhysicsMethods.Commutator = function (parser, name, open, close) {\n    if (open === void 0) { open = '['; }\n    if (close === void 0) { close = ']'; }\n    var star = parser.GetStar();\n    var next = parser.GetNext();\n    var big = null;\n    if (next === '\\\\') {\n        parser.i++;\n        big = parser.GetCS();\n        if (!big.match(biggs)) {\n            throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);\n        }\n        next = parser.GetNext();\n    }\n    if (next !== '{') {\n        throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', parser.currentCS);\n    }\n    var arg1 = parser.GetArgument(name);\n    var arg2 = parser.GetArgument(name);\n    var argument = arg1 + ',' + arg2;\n    argument = star ? open + ' ' + argument + ' ' + close :\n        (big ?\n            '\\\\' + big + 'l' + open + ' ' + argument + ' ' + '\\\\' + big + 'r' + close :\n            '\\\\left' + open + ' ' + argument + ' ' + '\\\\right' + close);\n    parser.Push(new TexParser_js_1.default(argument, parser.stack.env, parser.configuration).mml());\n};\nvar latinCap = [0x41, 0x5A];\nvar latinSmall = [0x61, 0x7A];\nvar greekCap = [0x391, 0x3A9];\nvar greekSmall = [0x3B1, 0x3C9];\nvar digits = [0x30, 0x39];\nfunction inRange(value, range) {\n    return (value >= range[0] && value <= range[1]);\n}\nfunction createVectorToken(factory, kind, def, text) {\n    var parser = factory.configuration.parser;\n    var token = NodeFactory_js_1.NodeFactory.createToken(factory, kind, def, text);\n    var code = text.codePointAt(0);\n    if (text.length === 1 && !parser.stack.env.font &&\n        parser.stack.env.vectorFont &&\n        (inRange(code, latinCap) || inRange(code, latinSmall) ||\n            inRange(code, greekCap) || inRange(code, digits) ||\n            (inRange(code, greekSmall) && parser.stack.env.vectorStar) ||\n            NodeUtil_js_1.default.getAttribute(token, 'accent'))) {\n        NodeUtil_js_1.default.setAttribute(token, 'mathvariant', parser.stack.env.vectorFont);\n    }\n    return token;\n}\nPhysicsMethods.VectorBold = function (parser, name) {\n    var star = parser.GetStar();\n    var arg = parser.GetArgument(name);\n    var oldToken = parser.configuration.nodeFactory.get('token');\n    var oldFont = parser.stack.env.font;\n    delete parser.stack.env.font;\n    parser.configuration.nodeFactory.set('token', createVectorToken);\n    parser.stack.env.vectorFont = star ? 'bold-italic' : 'bold';\n    parser.stack.env.vectorStar = star;\n    var node = new TexParser_js_1.default(arg, parser.stack.env, parser.configuration).mml();\n    if (oldFont) {\n        parser.stack.env.font = oldFont;\n    }\n    delete parser.stack.env.vectorFont;\n    delete parser.stack.env.vectorStar;\n    parser.configuration.nodeFactory.set('token', oldToken);\n    parser.Push(node);\n};\nPhysicsMethods.StarMacro = function (parser, name, argcount) {\n    var parts = [];\n    for (var _i = 3; _i < arguments.length; _i++) {\n        parts[_i - 3] = arguments[_i];\n    }\n    var star = parser.GetStar();\n    var args = [];\n    if (argcount) {\n        for (var i = args.length; i < argcount; i++) {\n            args.push(parser.GetArgument(name));\n        }\n    }\n    var macro = parts.join(star ? '*' : '');\n    macro = ParseUtil_js_1.default.substituteArgs(parser, args, macro);\n    parser.string = ParseUtil_js_1.default.addArgs(parser, macro, parser.string.slice(parser.i));\n    parser.i = 0;\n    ParseUtil_js_1.default.checkMaxMacros(parser);\n};\nvar vectorApplication = function (parser, kind, name, operator, fences) {\n    var op = new TexParser_js_1.default(operator, parser.stack.env, parser.configuration).mml();\n    parser.Push(parser.itemFactory.create(kind, op));\n    var left = parser.GetNext();\n    var right = pairs[left];\n    if (!right) {\n        return;\n    }\n    var lfence = '', rfence = '', arg = '';\n    var enlarge = fences.indexOf(left) !== -1;\n    if (left === '{') {\n        arg = parser.GetArgument(name);\n        lfence = enlarge ? '\\\\left\\\\{' : '';\n        rfence = enlarge ? '\\\\right\\\\}' : '';\n        var macro = lfence + ' ' + arg + ' ' + rfence;\n        parser.string = macro + parser.string.slice(parser.i);\n        parser.i = 0;\n        return;\n    }\n    if (!enlarge) {\n        return;\n    }\n    parser.i++;\n    parser.Push(parser.itemFactory.create('auto open')\n        .setProperties({ open: left, close: right }));\n};\nPhysicsMethods.OperatorApplication = function (parser, name, operator) {\n    var fences = [];\n    for (var _i = 3; _i < arguments.length; _i++) {\n        fences[_i - 3] = arguments[_i];\n    }\n    vectorApplication(parser, 'fn', name, operator, fences);\n};\nPhysicsMethods.VectorOperator = function (parser, name, operator) {\n    var fences = [];\n    for (var _i = 3; _i < arguments.length; _i++) {\n        fences[_i - 3] = arguments[_i];\n    }\n    vectorApplication(parser, 'mml', name, operator, fences);\n};\nPhysicsMethods.Expression = function (parser, name, opt, id) {\n    if (opt === void 0) { opt = true; }\n    if (id === void 0) { id = ''; }\n    id = id || name.slice(1);\n    var exp = opt ? parser.GetBrackets(name) : null;\n    var mml = parser.create('token', 'mi', { texClass: MmlNode_js_1.TEXCLASS.OP }, id);\n    if (exp) {\n        var sup = new TexParser_js_1.default(exp, parser.stack.env, parser.configuration).mml();\n        mml = parser.create('node', 'msup', [mml, sup]);\n    }\n    parser.Push(parser.itemFactory.create('fn', mml));\n    if (parser.GetNext() !== '(') {\n        return;\n    }\n    parser.i++;\n    parser.Push(parser.itemFactory.create('auto open')\n        .setProperties({ open: '(', close: ')' }));\n};\nPhysicsMethods.Qqtext = function (parser, name, text) {\n    var star = parser.GetStar();\n    var arg = text ? text : parser.GetArgument(name);\n    var replace = (star ? '' : '\\\\quad') + '\\\\text{' + arg + '}\\\\quad ';\n    parser.string = parser.string.slice(0, parser.i) + replace +\n        parser.string.slice(parser.i);\n};\nPhysicsMethods.Differential = function (parser, name, op) {\n    var optArg = parser.GetBrackets(name);\n    var power = optArg != null ? '^{' + optArg + '}' : ' ';\n    var parens = parser.GetNext() === '(';\n    var braces = parser.GetNext() === '{';\n    var macro = op + power;\n    if (!(parens || braces)) {\n        macro += parser.GetArgument(name, true) || '';\n        var mml = new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml();\n        parser.Push(mml);\n        return;\n    }\n    if (braces) {\n        macro += parser.GetArgument(name);\n        var mml = new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml();\n        parser.Push(parser.create('node', 'TeXAtom', [mml], { texClass: MmlNode_js_1.TEXCLASS.OP }));\n        return;\n    }\n    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());\n    parser.i++;\n    parser.Push(parser.itemFactory.create('auto open')\n        .setProperties({ open: '(', close: ')' }));\n};\nPhysicsMethods.Derivative = function (parser, name, argMax, op) {\n    var star = parser.GetStar();\n    var optArg = parser.GetBrackets(name);\n    var argCounter = 1;\n    var args = [];\n    args.push(parser.GetArgument(name));\n    while (parser.GetNext() === '{' && argCounter < argMax) {\n        args.push(parser.GetArgument(name));\n        argCounter++;\n    }\n    var ignore = false;\n    var power1 = ' ';\n    var power2 = ' ';\n    if (argMax > 2 && args.length > 2) {\n        power1 = '^{' + (args.length - 1) + '}';\n        ignore = true;\n    }\n    else if (optArg != null) {\n        if (argMax > 2 && args.length > 1) {\n            ignore = true;\n        }\n        power1 = '^{' + optArg + '}';\n        power2 = power1;\n    }\n    var frac = star ? '\\\\flatfrac' : '\\\\frac';\n    var first = args.length > 1 ? args[0] : '';\n    var second = args.length > 1 ? args[1] : args[0];\n    var rest = '';\n    for (var i = 2, arg = void 0; arg = args[i]; i++) {\n        rest += op + ' ' + arg;\n    }\n    var macro = frac + '{' + op + power1 + first + '}' +\n        '{' + op + ' ' + second + power2 + ' ' + rest + '}';\n    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());\n    if (parser.GetNext() === '(') {\n        parser.i++;\n        parser.Push(parser.itemFactory.create('auto open')\n            .setProperties({ open: '(', close: ')', ignore: ignore }));\n    }\n};\nPhysicsMethods.Bra = function (parser, name) {\n    var starBra = parser.GetStar();\n    var bra = parser.GetArgument(name);\n    var ket = '';\n    var hasKet = false;\n    var starKet = false;\n    if (parser.GetNext() === '\\\\') {\n        var saveI = parser.i;\n        parser.i++;\n        var cs = parser.GetCS();\n        var symbol = parser.lookup('macro', cs);\n        if (symbol && symbol.symbol === 'ket') {\n            hasKet = true;\n            saveI = parser.i;\n            starKet = parser.GetStar();\n            if (parser.GetNext() === '{') {\n                ket = parser.GetArgument(cs, true);\n            }\n            else {\n                parser.i = saveI;\n                starKet = false;\n            }\n        }\n        else {\n            parser.i = saveI;\n        }\n    }\n    var macro = '';\n    if (hasKet) {\n        macro = (starBra || starKet) ?\n            \"\\\\langle{\".concat(bra, \"}\\\\vert{\").concat(ket, \"}\\\\rangle\") :\n            \"\\\\left\\\\langle{\".concat(bra, \"}\\\\middle\\\\vert{\").concat(ket, \"}\\\\right\\\\rangle\");\n    }\n    else {\n        macro = (starBra || starKet) ?\n            \"\\\\langle{\".concat(bra, \"}\\\\vert\") : \"\\\\left\\\\langle{\".concat(bra, \"}\\\\right\\\\vert{\").concat(ket, \"}\");\n    }\n    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());\n};\nPhysicsMethods.Ket = function (parser, name) {\n    var star = parser.GetStar();\n    var ket = parser.GetArgument(name);\n    var macro = star ? \"\\\\vert{\".concat(ket, \"}\\\\rangle\") :\n        \"\\\\left\\\\vert{\".concat(ket, \"}\\\\right\\\\rangle\");\n    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());\n};\nPhysicsMethods.BraKet = function (parser, name) {\n    var star = parser.GetStar();\n    var bra = parser.GetArgument(name);\n    var ket = null;\n    if (parser.GetNext() === '{') {\n        ket = parser.GetArgument(name, true);\n    }\n    var macro = '';\n    if (ket == null) {\n        macro = star ?\n            \"\\\\langle{\".concat(bra, \"}\\\\vert{\").concat(bra, \"}\\\\rangle\") :\n            \"\\\\left\\\\langle{\".concat(bra, \"}\\\\middle\\\\vert{\").concat(bra, \"}\\\\right\\\\rangle\");\n    }\n    else {\n        macro = star ?\n            \"\\\\langle{\".concat(bra, \"}\\\\vert{\").concat(ket, \"}\\\\rangle\") :\n            \"\\\\left\\\\langle{\".concat(bra, \"}\\\\middle\\\\vert{\").concat(ket, \"}\\\\right\\\\rangle\");\n    }\n    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());\n};\nPhysicsMethods.KetBra = function (parser, name) {\n    var star = parser.GetStar();\n    var ket = parser.GetArgument(name);\n    var bra = null;\n    if (parser.GetNext() === '{') {\n        bra = parser.GetArgument(name, true);\n    }\n    var macro = '';\n    if (bra == null) {\n        macro = star ?\n            \"\\\\vert{\".concat(ket, \"}\\\\rangle\\\\!\\\\langle{\").concat(ket, \"}\\\\vert\") :\n            \"\\\\left\\\\vert{\".concat(ket, \"}\\\\middle\\\\rangle\\\\!\\\\middle\\\\langle{\").concat(ket, \"}\\\\right\\\\vert\");\n    }\n    else {\n        macro = star ?\n            \"\\\\vert{\".concat(ket, \"}\\\\rangle\\\\!\\\\langle{\").concat(bra, \"}\\\\vert\") :\n            \"\\\\left\\\\vert{\".concat(ket, \"}\\\\middle\\\\rangle\\\\!\\\\middle\\\\langle{\").concat(bra, \"}\\\\right\\\\vert\");\n    }\n    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());\n};\nfunction outputBraket(_a, star1, star2) {\n    var _b = __read(_a, 3), arg1 = _b[0], arg2 = _b[1], arg3 = _b[2];\n    return (star1 && star2) ?\n        \"\\\\left\\\\langle{\".concat(arg1, \"}\\\\middle\\\\vert{\").concat(arg2, \"}\\\\middle\\\\vert{\").concat(arg3, \"}\\\\right\\\\rangle\") :\n        (star1 ? \"\\\\langle{\".concat(arg1, \"}\\\\vert{\").concat(arg2, \"}\\\\vert{\").concat(arg3, \"}\\\\rangle\") :\n            \"\\\\left\\\\langle{\".concat(arg1, \"}\\\\right\\\\vert{\").concat(arg2, \"}\\\\left\\\\vert{\").concat(arg3, \"}\\\\right\\\\rangle\"));\n}\nPhysicsMethods.Expectation = function (parser, name) {\n    var star1 = parser.GetStar();\n    var star2 = star1 && parser.GetStar();\n    var arg1 = parser.GetArgument(name);\n    var arg2 = null;\n    if (parser.GetNext() === '{') {\n        arg2 = parser.GetArgument(name, true);\n    }\n    var macro = (arg1 && arg2) ?\n        outputBraket([arg2, arg1, arg2], star1, star2) :\n        (star1 ? \"\\\\langle {\".concat(arg1, \"} \\\\rangle\") :\n            \"\\\\left\\\\langle {\".concat(arg1, \"} \\\\right\\\\rangle\"));\n    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());\n};\nPhysicsMethods.MatrixElement = function (parser, name) {\n    var star1 = parser.GetStar();\n    var star2 = star1 && parser.GetStar();\n    var arg1 = parser.GetArgument(name);\n    var arg2 = parser.GetArgument(name);\n    var arg3 = parser.GetArgument(name);\n    var macro = outputBraket([arg1, arg2, arg3], star1, star2);\n    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());\n};\nPhysicsMethods.MatrixQuantity = function (parser, name, small) {\n    var star = parser.GetStar();\n    var next = parser.GetNext();\n    var array = small ? 'smallmatrix' : 'array';\n    var arg = '';\n    var open = '';\n    var close = '';\n    switch (next) {\n        case '{':\n            arg = parser.GetArgument(name);\n            break;\n        case '(':\n            parser.i++;\n            open = star ? '\\\\lgroup' : '(';\n            close = star ? '\\\\rgroup' : ')';\n            arg = parser.GetUpTo(name, ')');\n            break;\n        case '[':\n            parser.i++;\n            open = '[';\n            close = ']';\n            arg = parser.GetUpTo(name, ']');\n            break;\n        case '|':\n            parser.i++;\n            open = '|';\n            close = '|';\n            arg = parser.GetUpTo(name, '|');\n            break;\n        default:\n            open = '(';\n            close = ')';\n            break;\n    }\n    var macro = (open ? '\\\\left' : '') + open +\n        '\\\\begin{' + array + '}{} ' + arg + '\\\\end{' + array + '}' +\n        (open ? '\\\\right' : '') + close;\n    parser.Push(new TexParser_js_1.default(macro, parser.stack.env, parser.configuration).mml());\n};\nPhysicsMethods.IdentityMatrix = function (parser, name) {\n    var arg = parser.GetArgument(name);\n    var size = parseInt(arg, 10);\n    if (isNaN(size)) {\n        throw new TexError_js_1.default('InvalidNumber', 'Invalid number');\n    }\n    if (size <= 1) {\n        parser.string = '1' + parser.string.slice(parser.i);\n        parser.i = 0;\n        return;\n    }\n    var zeros = Array(size).fill('0');\n    var columns = [];\n    for (var i = 0; i < size; i++) {\n        var row = zeros.slice();\n        row[i] = '1';\n        columns.push(row.join(' & '));\n    }\n    parser.string = columns.join('\\\\\\\\ ') + parser.string.slice(parser.i);\n    parser.i = 0;\n};\nPhysicsMethods.XMatrix = function (parser, name) {\n    var star = parser.GetStar();\n    var arg1 = parser.GetArgument(name);\n    var arg2 = parser.GetArgument(name);\n    var arg3 = parser.GetArgument(name);\n    var n = parseInt(arg2, 10);\n    var m = parseInt(arg3, 10);\n    if (isNaN(n) || isNaN(m) || m.toString() !== arg3 || n.toString() !== arg2) {\n        throw new TexError_js_1.default('InvalidNumber', 'Invalid number');\n    }\n    n = n < 1 ? 1 : n;\n    m = m < 1 ? 1 : m;\n    if (!star) {\n        var row = Array(m).fill(arg1).join(' & ');\n        var matrix_1 = Array(n).fill(row).join('\\\\\\\\ ');\n        parser.string = matrix_1 + parser.string.slice(parser.i);\n        parser.i = 0;\n        return;\n    }\n    var matrix = '';\n    if (n === 1 && m === 1) {\n        matrix = arg1;\n    }\n    else if (n === 1) {\n        var row = [];\n        for (var i = 1; i <= m; i++) {\n            row.push(\"\".concat(arg1, \"_{\").concat(i, \"}\"));\n        }\n        matrix = row.join(' & ');\n    }\n    else if (m === 1) {\n        var row = [];\n        for (var i = 1; i <= n; i++) {\n            row.push(\"\".concat(arg1, \"_{\").concat(i, \"}\"));\n        }\n        matrix = row.join('\\\\\\\\ ');\n    }\n    else {\n        var rows = [];\n        for (var i = 1; i <= n; i++) {\n            var row = [];\n            for (var j = 1; j <= m; j++) {\n                row.push(\"\".concat(arg1, \"_{{\").concat(i, \"}{\").concat(j, \"}}\"));\n            }\n            rows.push(row.join(' & '));\n        }\n        matrix = rows.join('\\\\\\\\ ');\n    }\n    parser.string = matrix + parser.string.slice(parser.i);\n    parser.i = 0;\n    return;\n};\nPhysicsMethods.PauliMatrix = function (parser, name) {\n    var arg = parser.GetArgument(name);\n    var matrix = arg.slice(1);\n    switch (arg[0]) {\n        case '0':\n            matrix += ' 1 & 0\\\\\\\\ 0 & 1';\n            break;\n        case '1':\n        case 'x':\n            matrix += ' 0 & 1\\\\\\\\ 1 & 0';\n            break;\n        case '2':\n        case 'y':\n            matrix += ' 0 & -i\\\\\\\\ i & 0';\n            break;\n        case '3':\n        case 'z':\n            matrix += ' 1 & 0\\\\\\\\ 0 & -1';\n            break;\n        default:\n    }\n    parser.string = matrix + parser.string.slice(parser.i);\n    parser.i = 0;\n};\nPhysicsMethods.DiagonalMatrix = function (parser, name, anti) {\n    if (parser.GetNext() !== '{') {\n        return;\n    }\n    var startI = parser.i;\n    parser.GetArgument(name);\n    var endI = parser.i;\n    parser.i = startI + 1;\n    var elements = [];\n    var element = '';\n    var currentI = parser.i;\n    while (currentI < endI) {\n        try {\n            element = parser.GetUpTo(name, ',');\n        }\n        catch (e) {\n            parser.i = endI;\n            elements.push(parser.string.slice(currentI, endI - 1));\n            break;\n        }\n        if (parser.i >= endI) {\n            elements.push(parser.string.slice(currentI, endI));\n            break;\n        }\n        currentI = parser.i;\n        elements.push(element);\n    }\n    parser.string = makeDiagMatrix(elements, anti) + parser.string.slice(endI);\n    parser.i = 0;\n};\nfunction makeDiagMatrix(elements, anti) {\n    var length = elements.length;\n    var matrix = [];\n    for (var i = 0; i < length; i++) {\n        matrix.push(Array(anti ? length - i : i + 1).join('&') +\n            '\\\\mqty{' + elements[i] + '}');\n    }\n    return matrix.join('\\\\\\\\ ');\n}\nPhysicsMethods.AutoClose = function (parser, fence, _texclass) {\n    var mo = parser.create('token', 'mo', { stretchy: false }, fence);\n    var item = parser.itemFactory.create('mml', mo).\n        setProperties({ autoclose: fence });\n    parser.Push(item);\n};\nPhysicsMethods.Vnabla = function (parser, _name) {\n    var argument = parser.options.physics.arrowdel ?\n        '\\\\vec{\\\\gradientnabla}' : '{\\\\gradientnabla}';\n    return parser.Push(new TexParser_js_1.default(argument, parser.stack.env, parser.configuration).mml());\n};\nPhysicsMethods.DiffD = function (parser, _name) {\n    var argument = parser.options.physics.italicdiff ? 'd' : '{\\\\rm d}';\n    return parser.Push(new TexParser_js_1.default(argument, parser.stack.env, parser.configuration).mml());\n};\nPhysicsMethods.Macro = BaseMethods_js_1.default.Macro;\nPhysicsMethods.NamedFn = BaseMethods_js_1.default.NamedFn;\nPhysicsMethods.Array = BaseMethods_js_1.default.Array;\nexports[\"default\"] = PhysicsMethods;\n//# sourceMappingURL=PhysicsMethods.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/physics/PhysicsMethods.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/setoptions/SetOptionsConfiguration.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/setoptions/SetOptionsConfiguration.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SetOptionsConfiguration = exports.SetOptionsUtil = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar Symbol_js_1 = __webpack_require__(/*! ../Symbol.js */ \"./node_modules/mathjax-full/js/input/tex/Symbol.js\");\nvar BaseMethods_js_1 = __importDefault(__webpack_require__(/*! ../base/BaseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseMethods.js\"));\nvar Options_js_1 = __webpack_require__(/*! ../../../util/Options.js */ \"./node_modules/mathjax-full/js/util/Options.js\");\nexports.SetOptionsUtil = {\n    filterPackage: function (parser, extension) {\n        if (extension !== 'tex' && !Configuration_js_1.ConfigurationHandler.get(extension)) {\n            throw new TexError_js_1.default('NotAPackage', 'Not a defined package: %1', extension);\n        }\n        var config = parser.options.setoptions;\n        var options = config.allowOptions[extension];\n        if ((options === undefined && !config.allowPackageDefault) || options === false) {\n            throw new TexError_js_1.default('PackageNotSettable', 'Options can\\'t be set for package \"%1\"', extension);\n        }\n        return true;\n    },\n    filterOption: function (parser, extension, option) {\n        var _a;\n        var config = parser.options.setoptions;\n        var options = config.allowOptions[extension] || {};\n        var allow = (options.hasOwnProperty(option) && !(0, Options_js_1.isObject)(options[option]) ? options[option] : null);\n        if (allow === false || (allow === null && !config.allowOptionsDefault)) {\n            throw new TexError_js_1.default('OptionNotSettable', 'Option \"%1\" is not allowed to be set', option);\n        }\n        if (!((_a = (extension === 'tex' ? parser.options : parser.options[extension])) === null || _a === void 0 ? void 0 : _a.hasOwnProperty(option))) {\n            if (extension === 'tex') {\n                throw new TexError_js_1.default('InvalidTexOption', 'Invalid TeX option \"%1\"', option);\n            }\n            else {\n                throw new TexError_js_1.default('InvalidOptionKey', 'Invalid option \"%1\" for package \"%2\"', option, extension);\n            }\n        }\n        return true;\n    },\n    filterValue: function (_parser, _extension, _option, value) {\n        return value;\n    }\n};\nvar setOptionsMap = new SymbolMap_js_1.CommandMap('setoptions', {\n    setOptions: 'SetOptions'\n}, {\n    SetOptions: function (parser, name) {\n        var e_1, _a;\n        var extension = parser.GetBrackets(name) || 'tex';\n        var options = ParseUtil_js_1.default.keyvalOptions(parser.GetArgument(name));\n        var config = parser.options.setoptions;\n        if (!config.filterPackage(parser, extension))\n            return;\n        try {\n            for (var _b = __values(Object.keys(options)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                if (config.filterOption(parser, extension, key)) {\n                    (extension === 'tex' ? parser.options : parser.options[extension])[key] =\n                        config.filterValue(parser, extension, key, options[key]);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n});\nfunction setoptionsConfig(_config, jax) {\n    var require = jax.parseOptions.handlers.get('macro').lookup('require');\n    if (require) {\n        setOptionsMap.add('Require', new Symbol_js_1.Macro('Require', require._func));\n        setOptionsMap.add('require', new Symbol_js_1.Macro('require', BaseMethods_js_1.default.Macro, ['\\\\Require{#2}\\\\setOptions[#2]{#1}', 2, '']));\n    }\n}\nexports.SetOptionsConfiguration = Configuration_js_1.Configuration.create('setoptions', {\n    handler: { macro: ['setoptions'] },\n    config: setoptionsConfig,\n    priority: 3,\n    options: {\n        setoptions: {\n            filterPackage: exports.SetOptionsUtil.filterPackage,\n            filterOption: exports.SetOptionsUtil.filterOption,\n            filterValue: exports.SetOptionsUtil.filterValue,\n            allowPackageDefault: true,\n            allowOptionsDefault: true,\n            allowOptions: (0, Options_js_1.expandable)({\n                tex: {\n                    FindTeX: false,\n                    formatError: false,\n                    package: false,\n                    baseURL: false,\n                    tags: false,\n                    maxBuffer: false,\n                    maxMaxros: false,\n                    macros: false,\n                    environments: false\n                },\n                setoptions: false,\n                autoload: false,\n                require: false,\n                configmacros: false,\n                tagformat: false\n            })\n        }\n    }\n});\n//# sourceMappingURL=SetOptionsConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/setoptions/SetOptionsConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/tagformat/TagFormatConfiguration.js":
/*!************************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/tagformat/TagFormatConfiguration.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TagFormatConfiguration = exports.tagformatConfig = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar Tags_js_1 = __webpack_require__(/*! ../Tags.js */ \"./node_modules/mathjax-full/js/input/tex/Tags.js\");\nvar tagID = 0;\nfunction tagformatConfig(config, jax) {\n    var tags = jax.parseOptions.options.tags;\n    if (tags !== 'base' && config.tags.hasOwnProperty(tags)) {\n        Tags_js_1.TagsFactory.add(tags, config.tags[tags]);\n    }\n    var TagClass = Tags_js_1.TagsFactory.create(jax.parseOptions.options.tags).constructor;\n    var TagFormat = (function (_super) {\n        __extends(TagFormat, _super);\n        function TagFormat() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        TagFormat.prototype.formatNumber = function (n) {\n            return jax.parseOptions.options.tagformat.number(n);\n        };\n        TagFormat.prototype.formatTag = function (tag) {\n            return jax.parseOptions.options.tagformat.tag(tag);\n        };\n        TagFormat.prototype.formatId = function (id) {\n            return jax.parseOptions.options.tagformat.id(id);\n        };\n        TagFormat.prototype.formatUrl = function (id, base) {\n            return jax.parseOptions.options.tagformat.url(id, base);\n        };\n        return TagFormat;\n    }(TagClass));\n    tagID++;\n    var tagName = 'configTags-' + tagID;\n    Tags_js_1.TagsFactory.add(tagName, TagFormat);\n    jax.parseOptions.options.tags = tagName;\n}\nexports.tagformatConfig = tagformatConfig;\nexports.TagFormatConfiguration = Configuration_js_1.Configuration.create('tagformat', {\n    config: [tagformatConfig, 10],\n    options: {\n        tagformat: {\n            number: function (n) { return n.toString(); },\n            tag: function (tag) { return '(' + tag + ')'; },\n            id: function (id) { return 'mjx-eqn:' + id.replace(/\\s/g, '_'); },\n            url: function (id, base) { return base + '#' + encodeURIComponent(id); },\n        }\n    }\n});\n//# sourceMappingURL=TagFormatConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC90YWdmb3JtYXQvVGFnRm9ybWF0Q29uZmlndXJhdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCLHNDQUFzQyxrQkFBa0I7QUFDdkYsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsQ0FBQztBQUNELDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEIsR0FBRyx1QkFBdUI7QUFDeEQseUJBQXlCLG1CQUFPLENBQUMsc0ZBQXFCO0FBQ3RELGdCQUFnQixtQkFBTyxDQUFDLG9FQUFZO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkIsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxzQkFBc0I7QUFDekQsa0NBQWtDLHlCQUF5QjtBQUMzRCxnQ0FBZ0MsNkNBQTZDO0FBQzdFLHVDQUF1Qyw2Q0FBNkM7QUFDcEY7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC90YWdmb3JtYXQvVGFnRm9ybWF0Q29uZmlndXJhdGlvbi5qcz80OGU1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVGFnRm9ybWF0Q29uZmlndXJhdGlvbiA9IGV4cG9ydHMudGFnZm9ybWF0Q29uZmlnID0gdm9pZCAwO1xudmFyIENvbmZpZ3VyYXRpb25fanNfMSA9IHJlcXVpcmUoXCIuLi9Db25maWd1cmF0aW9uLmpzXCIpO1xudmFyIFRhZ3NfanNfMSA9IHJlcXVpcmUoXCIuLi9UYWdzLmpzXCIpO1xudmFyIHRhZ0lEID0gMDtcbmZ1bmN0aW9uIHRhZ2Zvcm1hdENvbmZpZyhjb25maWcsIGpheCkge1xuICAgIHZhciB0YWdzID0gamF4LnBhcnNlT3B0aW9ucy5vcHRpb25zLnRhZ3M7XG4gICAgaWYgKHRhZ3MgIT09ICdiYXNlJyAmJiBjb25maWcudGFncy5oYXNPd25Qcm9wZXJ0eSh0YWdzKSkge1xuICAgICAgICBUYWdzX2pzXzEuVGFnc0ZhY3RvcnkuYWRkKHRhZ3MsIGNvbmZpZy50YWdzW3RhZ3NdKTtcbiAgICB9XG4gICAgdmFyIFRhZ0NsYXNzID0gVGFnc19qc18xLlRhZ3NGYWN0b3J5LmNyZWF0ZShqYXgucGFyc2VPcHRpb25zLm9wdGlvbnMudGFncykuY29uc3RydWN0b3I7XG4gICAgdmFyIFRhZ0Zvcm1hdCA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgICAgIF9fZXh0ZW5kcyhUYWdGb3JtYXQsIF9zdXBlcik7XG4gICAgICAgIGZ1bmN0aW9uIFRhZ0Zvcm1hdCgpIHtcbiAgICAgICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgfVxuICAgICAgICBUYWdGb3JtYXQucHJvdG90eXBlLmZvcm1hdE51bWJlciA9IGZ1bmN0aW9uIChuKSB7XG4gICAgICAgICAgICByZXR1cm4gamF4LnBhcnNlT3B0aW9ucy5vcHRpb25zLnRhZ2Zvcm1hdC5udW1iZXIobik7XG4gICAgICAgIH07XG4gICAgICAgIFRhZ0Zvcm1hdC5wcm90b3R5cGUuZm9ybWF0VGFnID0gZnVuY3Rpb24gKHRhZykge1xuICAgICAgICAgICAgcmV0dXJuIGpheC5wYXJzZU9wdGlvbnMub3B0aW9ucy50YWdmb3JtYXQudGFnKHRhZyk7XG4gICAgICAgIH07XG4gICAgICAgIFRhZ0Zvcm1hdC5wcm90b3R5cGUuZm9ybWF0SWQgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgICAgICAgIHJldHVybiBqYXgucGFyc2VPcHRpb25zLm9wdGlvbnMudGFnZm9ybWF0LmlkKGlkKTtcbiAgICAgICAgfTtcbiAgICAgICAgVGFnRm9ybWF0LnByb3RvdHlwZS5mb3JtYXRVcmwgPSBmdW5jdGlvbiAoaWQsIGJhc2UpIHtcbiAgICAgICAgICAgIHJldHVybiBqYXgucGFyc2VPcHRpb25zLm9wdGlvbnMudGFnZm9ybWF0LnVybChpZCwgYmFzZSk7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBUYWdGb3JtYXQ7XG4gICAgfShUYWdDbGFzcykpO1xuICAgIHRhZ0lEKys7XG4gICAgdmFyIHRhZ05hbWUgPSAnY29uZmlnVGFncy0nICsgdGFnSUQ7XG4gICAgVGFnc19qc18xLlRhZ3NGYWN0b3J5LmFkZCh0YWdOYW1lLCBUYWdGb3JtYXQpO1xuICAgIGpheC5wYXJzZU9wdGlvbnMub3B0aW9ucy50YWdzID0gdGFnTmFtZTtcbn1cbmV4cG9ydHMudGFnZm9ybWF0Q29uZmlnID0gdGFnZm9ybWF0Q29uZmlnO1xuZXhwb3J0cy5UYWdGb3JtYXRDb25maWd1cmF0aW9uID0gQ29uZmlndXJhdGlvbl9qc18xLkNvbmZpZ3VyYXRpb24uY3JlYXRlKCd0YWdmb3JtYXQnLCB7XG4gICAgY29uZmlnOiBbdGFnZm9ybWF0Q29uZmlnLCAxMF0sXG4gICAgb3B0aW9uczoge1xuICAgICAgICB0YWdmb3JtYXQ6IHtcbiAgICAgICAgICAgIG51bWJlcjogZnVuY3Rpb24gKG4pIHsgcmV0dXJuIG4udG9TdHJpbmcoKTsgfSxcbiAgICAgICAgICAgIHRhZzogZnVuY3Rpb24gKHRhZykgeyByZXR1cm4gJygnICsgdGFnICsgJyknOyB9LFxuICAgICAgICAgICAgaWQ6IGZ1bmN0aW9uIChpZCkgeyByZXR1cm4gJ21qeC1lcW46JyArIGlkLnJlcGxhY2UoL1xccy9nLCAnXycpOyB9LFxuICAgICAgICAgICAgdXJsOiBmdW5jdGlvbiAoaWQsIGJhc2UpIHsgcmV0dXJuIGJhc2UgKyAnIycgKyBlbmNvZGVVUklDb21wb25lbnQoaWQpOyB9LFxuICAgICAgICB9XG4gICAgfVxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UYWdGb3JtYXRDb25maWd1cmF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/tagformat/TagFormatConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/textcomp/TextcompConfiguration.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/textcomp/TextcompConfiguration.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TextcompConfiguration = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\n__webpack_require__(/*! ./TextcompMappings.js */ \"./node_modules/mathjax-full/js/input/tex/textcomp/TextcompMappings.js\");\nexports.TextcompConfiguration = Configuration_js_1.Configuration.create('textcomp', {\n    handler: { macro: ['textcomp-macros'] }\n});\n//# sourceMappingURL=TextcompConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC90ZXh0Y29tcC9UZXh0Y29tcENvbmZpZ3VyYXRpb24uanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCO0FBQzdCLHlCQUF5QixtQkFBTyxDQUFDLHNGQUFxQjtBQUN0RCxtQkFBTyxDQUFDLG9HQUF1QjtBQUMvQiw2QkFBNkI7QUFDN0IsZUFBZTtBQUNmLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC90ZXh0Y29tcC9UZXh0Y29tcENvbmZpZ3VyYXRpb24uanM/NmQ2NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVGV4dGNvbXBDb25maWd1cmF0aW9uID0gdm9pZCAwO1xudmFyIENvbmZpZ3VyYXRpb25fanNfMSA9IHJlcXVpcmUoXCIuLi9Db25maWd1cmF0aW9uLmpzXCIpO1xucmVxdWlyZShcIi4vVGV4dGNvbXBNYXBwaW5ncy5qc1wiKTtcbmV4cG9ydHMuVGV4dGNvbXBDb25maWd1cmF0aW9uID0gQ29uZmlndXJhdGlvbl9qc18xLkNvbmZpZ3VyYXRpb24uY3JlYXRlKCd0ZXh0Y29tcCcsIHtcbiAgICBoYW5kbGVyOiB7IG1hY3JvOiBbJ3RleHRjb21wLW1hY3JvcyddIH1cbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VGV4dGNvbXBDb25maWd1cmF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/textcomp/TextcompConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/textcomp/TextcompMappings.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/textcomp/TextcompMappings.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar TexConstants_js_1 = __webpack_require__(/*! ../TexConstants.js */ \"./node_modules/mathjax-full/js/input/tex/TexConstants.js\");\nvar TextMacrosMethods_js_1 = __webpack_require__(/*! ../textmacros/TextMacrosMethods.js */ \"./node_modules/mathjax-full/js/input/tex/textmacros/TextMacrosMethods.js\");\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar TextParser_js_1 = __webpack_require__(/*! ../textmacros/TextParser.js */ \"./node_modules/mathjax-full/js/input/tex/textmacros/TextParser.js\");\nnew SymbolMap_js_1.CommandMap('textcomp-macros', {\n    'textasciicircum': ['Insert', '\\u005E'],\n    'textasciitilde': ['Insert', '\\u007E'],\n    'textasteriskcentered': ['Insert', '\\u002A'],\n    'textbackslash': ['Insert', '\\u005C'],\n    'textbar': ['Insert', '\\u007C'],\n    'textbraceleft': ['Insert', '\\u007B'],\n    'textbraceright': ['Insert', '\\u007D'],\n    'textbullet': ['Insert', '\\u2022'],\n    'textdagger': ['Insert', '\\u2020'],\n    'textdaggerdbl': ['Insert', '\\u2021'],\n    'textellipsis': ['Insert', '\\u2026'],\n    'textemdash': ['Insert', '\\u2014'],\n    'textendash': ['Insert', '\\u2013'],\n    'textexclamdown': ['Insert', '\\u00A1'],\n    'textgreater': ['Insert', '\\u003E'],\n    'textless': ['Insert', '\\u003C'],\n    'textordfeminine': ['Insert', '\\u00AA'],\n    'textordmasculine': ['Insert', '\\u00BA'],\n    'textparagraph': ['Insert', '\\u00B6'],\n    'textperiodcentered': ['Insert', '\\u00B7'],\n    'textquestiondown': ['Insert', '\\u00BF'],\n    'textquotedblleft': ['Insert', '\\u201C'],\n    'textquotedblright': ['Insert', '\\u201D'],\n    'textquoteleft': ['Insert', '\\u2018'],\n    'textquoteright': ['Insert', '\\u2019'],\n    'textsection': ['Insert', '\\u00A7'],\n    'textunderscore': ['Insert', '\\u005F'],\n    'textvisiblespace': ['Insert', '\\u2423'],\n    'textacutedbl': ['Insert', '\\u02DD'],\n    'textasciiacute': ['Insert', '\\u00B4'],\n    'textasciibreve': ['Insert', '\\u02D8'],\n    'textasciicaron': ['Insert', '\\u02C7'],\n    'textasciidieresis': ['Insert', '\\u00A8'],\n    'textasciimacron': ['Insert', '\\u00AF'],\n    'textgravedbl': ['Insert', '\\u02F5'],\n    'texttildelow': ['Insert', '\\u02F7'],\n    'textbaht': ['Insert', '\\u0E3F'],\n    'textcent': ['Insert', '\\u00A2'],\n    'textcolonmonetary': ['Insert', '\\u20A1'],\n    'textcurrency': ['Insert', '\\u00A4'],\n    'textdollar': ['Insert', '\\u0024'],\n    'textdong': ['Insert', '\\u20AB'],\n    'texteuro': ['Insert', '\\u20AC'],\n    'textflorin': ['Insert', '\\u0192'],\n    'textguarani': ['Insert', '\\u20B2'],\n    'textlira': ['Insert', '\\u20A4'],\n    'textnaira': ['Insert', '\\u20A6'],\n    'textpeso': ['Insert', '\\u20B1'],\n    'textsterling': ['Insert', '\\u00A3'],\n    'textwon': ['Insert', '\\u20A9'],\n    'textyen': ['Insert', '\\u00A5'],\n    'textcircledP': ['Insert', '\\u2117'],\n    'textcompwordmark': ['Insert', '\\u200C'],\n    'textcopyleft': ['Insert', \"\\uD83C\\uDD2F\"],\n    'textcopyright': ['Insert', '\\u00A9'],\n    'textregistered': ['Insert', '\\u00AE'],\n    'textservicemark': ['Insert', '\\u2120'],\n    'texttrademark': ['Insert', '\\u2122'],\n    'textbardbl': ['Insert', '\\u2016'],\n    'textbigcircle': ['Insert', '\\u25EF'],\n    'textblank': ['Insert', '\\u2422'],\n    'textbrokenbar': ['Insert', '\\u00A6'],\n    'textdiscount': ['Insert', '\\u2052'],\n    'textestimated': ['Insert', '\\u212E'],\n    'textinterrobang': ['Insert', '\\u203D'],\n    'textinterrobangdown': ['Insert', '\\u2E18'],\n    'textmusicalnote': ['Insert', '\\u266A'],\n    'textnumero': ['Insert', '\\u2116'],\n    'textopenbullet': ['Insert', '\\u25E6'],\n    'textpertenthousand': ['Insert', '\\u2031'],\n    'textperthousand': ['Insert', '\\u2030'],\n    'textrecipe': ['Insert', '\\u211E'],\n    'textreferencemark': ['Insert', '\\u203B'],\n    'textlangle': ['Insert', '\\u2329'],\n    'textrangle': ['Insert', '\\u232A'],\n    'textlbrackdbl': ['Insert', '\\u27E6'],\n    'textrbrackdbl': ['Insert', '\\u27E7'],\n    'textlquill': ['Insert', '\\u2045'],\n    'textrquill': ['Insert', '\\u2046'],\n    'textcelsius': ['Insert', '\\u2103'],\n    'textdegree': ['Insert', '\\u00B0'],\n    'textdiv': ['Insert', '\\u00F7'],\n    'textdownarrow': ['Insert', '\\u2193'],\n    'textfractionsolidus': ['Insert', '\\u2044'],\n    'textleftarrow': ['Insert', '\\u2190'],\n    'textlnot': ['Insert', '\\u00AC'],\n    'textmho': ['Insert', '\\u2127'],\n    'textminus': ['Insert', '\\u2212'],\n    'textmu': ['Insert', '\\u00B5'],\n    'textohm': ['Insert', '\\u2126'],\n    'textonehalf': ['Insert', '\\u00BD'],\n    'textonequarter': ['Insert', '\\u00BC'],\n    'textonesuperior': ['Insert', '\\u00B9'],\n    'textpm': ['Insert', '\\u00B1'],\n    'textrightarrow': ['Insert', '\\u2192'],\n    'textsurd': ['Insert', '\\u221A'],\n    'textthreequarters': ['Insert', '\\u00BE'],\n    'textthreesuperior': ['Insert', '\\u00B3'],\n    'texttimes': ['Insert', '\\u00D7'],\n    'texttwosuperior': ['Insert', '\\u00B2'],\n    'textuparrow': ['Insert', '\\u2191'],\n    'textborn': ['Insert', '\\u002A'],\n    'textdied': ['Insert', '\\u2020'],\n    'textdivorced': ['Insert', '\\u26AE'],\n    'textmarried': ['Insert', '\\u26AD'],\n    'textcentoldstyle': ['Insert', '\\u00A2', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],\n    'textdollaroldstyle': ['Insert', '\\u0024', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],\n    'textzerooldstyle': ['Insert', '0', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],\n    'textoneoldstyle': ['Insert', '1', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],\n    'texttwooldstyle': ['Insert', '2', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],\n    'textthreeoldstyle': ['Insert', '3', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],\n    'textfouroldstyle': ['Insert', '4', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],\n    'textfiveoldstyle': ['Insert', '5', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],\n    'textsixoldstyle': ['Insert', '6', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],\n    'textsevenoldstyle': ['Insert', '7', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],\n    'texteightoldstyle': ['Insert', '8', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],\n    'textnineoldstyle': ['Insert', '9', TexConstants_js_1.TexConstant.Variant.OLDSTYLE]\n}, {\n    Insert: function (parser, name, c, font) {\n        if (parser instanceof TextParser_js_1.TextParser) {\n            if (!font) {\n                TextMacrosMethods_js_1.TextMacrosMethods.Insert(parser, name, c);\n                return;\n            }\n            parser.saveText();\n        }\n        parser.Push(ParseUtil_js_1.default.internalText(parser, c, font ? { mathvariant: font } : {}));\n    }\n});\n//# sourceMappingURL=TextcompMappings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/textcomp/TextcompMappings.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/textmacros/TextMacrosConfiguration.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/textmacros/TextMacrosConfiguration.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TextMacrosConfiguration = exports.TextBaseConfiguration = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar ParseOptions_js_1 = __importDefault(__webpack_require__(/*! ../ParseOptions.js */ \"./node_modules/mathjax-full/js/input/tex/ParseOptions.js\"));\nvar Tags_js_1 = __webpack_require__(/*! ../Tags.js */ \"./node_modules/mathjax-full/js/input/tex/Tags.js\");\nvar BaseItems_js_1 = __webpack_require__(/*! ../base/BaseItems.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseItems.js\");\nvar TextParser_js_1 = __webpack_require__(/*! ./TextParser.js */ \"./node_modules/mathjax-full/js/input/tex/textmacros/TextParser.js\");\nvar TextMacrosMethods_js_1 = __webpack_require__(/*! ./TextMacrosMethods.js */ \"./node_modules/mathjax-full/js/input/tex/textmacros/TextMacrosMethods.js\");\n__webpack_require__(/*! ./TextMacrosMappings.js */ \"./node_modules/mathjax-full/js/input/tex/textmacros/TextMacrosMappings.js\");\nexports.TextBaseConfiguration = Configuration_js_1.Configuration.create('text-base', {\n    parser: 'text',\n    handler: {\n        character: ['command', 'text-special'],\n        macro: ['text-macros']\n    },\n    fallback: {\n        character: function (parser, c) {\n            parser.text += c;\n        },\n        macro: function (parser, name) {\n            var texParser = parser.texParser;\n            var macro = texParser.lookup('macro', name);\n            if (macro && macro._func !== TextMacrosMethods_js_1.TextMacrosMethods.Macro) {\n                parser.Error('MathMacro', '%1 is only supported in math mode', '\\\\' + name);\n            }\n            texParser.parse('macro', [parser, name]);\n        }\n    },\n    items: (_a = {},\n        _a[BaseItems_js_1.StartItem.prototype.kind] = BaseItems_js_1.StartItem,\n        _a[BaseItems_js_1.StopItem.prototype.kind] = BaseItems_js_1.StopItem,\n        _a[BaseItems_js_1.MmlItem.prototype.kind] = BaseItems_js_1.MmlItem,\n        _a[BaseItems_js_1.StyleItem.prototype.kind] = BaseItems_js_1.StyleItem,\n        _a)\n});\nfunction internalMath(parser, text, level, mathvariant) {\n    var config = parser.configuration.packageData.get('textmacros');\n    if (!(parser instanceof TextParser_js_1.TextParser)) {\n        config.texParser = parser;\n    }\n    return [(new TextParser_js_1.TextParser(text, mathvariant ? { mathvariant: mathvariant } : {}, config.parseOptions, level)).mml()];\n}\nexports.TextMacrosConfiguration = Configuration_js_1.Configuration.create('textmacros', {\n    config: function (_config, jax) {\n        var textConf = new Configuration_js_1.ParserConfiguration(jax.parseOptions.options.textmacros.packages, ['tex', 'text']);\n        textConf.init();\n        var parseOptions = new ParseOptions_js_1.default(textConf, []);\n        parseOptions.options = jax.parseOptions.options;\n        textConf.config(jax);\n        Tags_js_1.TagsFactory.addTags(textConf.tags);\n        parseOptions.tags = Tags_js_1.TagsFactory.getDefault();\n        parseOptions.tags.configuration = parseOptions;\n        parseOptions.packageData = jax.parseOptions.packageData;\n        parseOptions.packageData.set('textmacros', { parseOptions: parseOptions, jax: jax, texParser: null });\n        parseOptions.options.internalMath = internalMath;\n    },\n    preprocessors: [function (data) {\n            var config = data.data.packageData.get('textmacros');\n            config.parseOptions.nodeFactory.setMmlFactory(config.jax.mmlFactory);\n        }],\n    options: {\n        textmacros: {\n            packages: ['text-base']\n        }\n    }\n});\n//# sourceMappingURL=TextMacrosConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC90ZXh0bWFjcm9zL1RleHRNYWNyb3NDb25maWd1cmF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0IsR0FBRyw2QkFBNkI7QUFDL0QseUJBQXlCLG1CQUFPLENBQUMsc0ZBQXFCO0FBQ3RELHdDQUF3QyxtQkFBTyxDQUFDLG9GQUFvQjtBQUNwRSxnQkFBZ0IsbUJBQU8sQ0FBQyxvRUFBWTtBQUNwQyxxQkFBcUIsbUJBQU8sQ0FBQyx3RkFBc0I7QUFDbkQsc0JBQXNCLG1CQUFPLENBQUMsMEZBQWlCO0FBQy9DLDZCQUE2QixtQkFBTyxDQUFDLHdHQUF3QjtBQUM3RCxtQkFBTyxDQUFDLDBHQUF5QjtBQUNqQyw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRSwyQkFBMkIsSUFBSTtBQUNqRztBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCx1REFBdUQ7QUFDNUc7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvdGV4dG1hY3Jvcy9UZXh0TWFjcm9zQ29uZmlndXJhdGlvbi5qcz8zZjYwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xudmFyIF9hO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UZXh0TWFjcm9zQ29uZmlndXJhdGlvbiA9IGV4cG9ydHMuVGV4dEJhc2VDb25maWd1cmF0aW9uID0gdm9pZCAwO1xudmFyIENvbmZpZ3VyYXRpb25fanNfMSA9IHJlcXVpcmUoXCIuLi9Db25maWd1cmF0aW9uLmpzXCIpO1xudmFyIFBhcnNlT3B0aW9uc19qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi9QYXJzZU9wdGlvbnMuanNcIikpO1xudmFyIFRhZ3NfanNfMSA9IHJlcXVpcmUoXCIuLi9UYWdzLmpzXCIpO1xudmFyIEJhc2VJdGVtc19qc18xID0gcmVxdWlyZShcIi4uL2Jhc2UvQmFzZUl0ZW1zLmpzXCIpO1xudmFyIFRleHRQYXJzZXJfanNfMSA9IHJlcXVpcmUoXCIuL1RleHRQYXJzZXIuanNcIik7XG52YXIgVGV4dE1hY3Jvc01ldGhvZHNfanNfMSA9IHJlcXVpcmUoXCIuL1RleHRNYWNyb3NNZXRob2RzLmpzXCIpO1xucmVxdWlyZShcIi4vVGV4dE1hY3Jvc01hcHBpbmdzLmpzXCIpO1xuZXhwb3J0cy5UZXh0QmFzZUNvbmZpZ3VyYXRpb24gPSBDb25maWd1cmF0aW9uX2pzXzEuQ29uZmlndXJhdGlvbi5jcmVhdGUoJ3RleHQtYmFzZScsIHtcbiAgICBwYXJzZXI6ICd0ZXh0JyxcbiAgICBoYW5kbGVyOiB7XG4gICAgICAgIGNoYXJhY3RlcjogWydjb21tYW5kJywgJ3RleHQtc3BlY2lhbCddLFxuICAgICAgICBtYWNybzogWyd0ZXh0LW1hY3JvcyddXG4gICAgfSxcbiAgICBmYWxsYmFjazoge1xuICAgICAgICBjaGFyYWN0ZXI6IGZ1bmN0aW9uIChwYXJzZXIsIGMpIHtcbiAgICAgICAgICAgIHBhcnNlci50ZXh0ICs9IGM7XG4gICAgICAgIH0sXG4gICAgICAgIG1hY3JvOiBmdW5jdGlvbiAocGFyc2VyLCBuYW1lKSB7XG4gICAgICAgICAgICB2YXIgdGV4UGFyc2VyID0gcGFyc2VyLnRleFBhcnNlcjtcbiAgICAgICAgICAgIHZhciBtYWNybyA9IHRleFBhcnNlci5sb29rdXAoJ21hY3JvJywgbmFtZSk7XG4gICAgICAgICAgICBpZiAobWFjcm8gJiYgbWFjcm8uX2Z1bmMgIT09IFRleHRNYWNyb3NNZXRob2RzX2pzXzEuVGV4dE1hY3Jvc01ldGhvZHMuTWFjcm8pIHtcbiAgICAgICAgICAgICAgICBwYXJzZXIuRXJyb3IoJ01hdGhNYWNybycsICclMSBpcyBvbmx5IHN1cHBvcnRlZCBpbiBtYXRoIG1vZGUnLCAnXFxcXCcgKyBuYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRleFBhcnNlci5wYXJzZSgnbWFjcm8nLCBbcGFyc2VyLCBuYW1lXSk7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIGl0ZW1zOiAoX2EgPSB7fSxcbiAgICAgICAgX2FbQmFzZUl0ZW1zX2pzXzEuU3RhcnRJdGVtLnByb3RvdHlwZS5raW5kXSA9IEJhc2VJdGVtc19qc18xLlN0YXJ0SXRlbSxcbiAgICAgICAgX2FbQmFzZUl0ZW1zX2pzXzEuU3RvcEl0ZW0ucHJvdG90eXBlLmtpbmRdID0gQmFzZUl0ZW1zX2pzXzEuU3RvcEl0ZW0sXG4gICAgICAgIF9hW0Jhc2VJdGVtc19qc18xLk1tbEl0ZW0ucHJvdG90eXBlLmtpbmRdID0gQmFzZUl0ZW1zX2pzXzEuTW1sSXRlbSxcbiAgICAgICAgX2FbQmFzZUl0ZW1zX2pzXzEuU3R5bGVJdGVtLnByb3RvdHlwZS5raW5kXSA9IEJhc2VJdGVtc19qc18xLlN0eWxlSXRlbSxcbiAgICAgICAgX2EpXG59KTtcbmZ1bmN0aW9uIGludGVybmFsTWF0aChwYXJzZXIsIHRleHQsIGxldmVsLCBtYXRodmFyaWFudCkge1xuICAgIHZhciBjb25maWcgPSBwYXJzZXIuY29uZmlndXJhdGlvbi5wYWNrYWdlRGF0YS5nZXQoJ3RleHRtYWNyb3MnKTtcbiAgICBpZiAoIShwYXJzZXIgaW5zdGFuY2VvZiBUZXh0UGFyc2VyX2pzXzEuVGV4dFBhcnNlcikpIHtcbiAgICAgICAgY29uZmlnLnRleFBhcnNlciA9IHBhcnNlcjtcbiAgICB9XG4gICAgcmV0dXJuIFsobmV3IFRleHRQYXJzZXJfanNfMS5UZXh0UGFyc2VyKHRleHQsIG1hdGh2YXJpYW50ID8geyBtYXRodmFyaWFudDogbWF0aHZhcmlhbnQgfSA6IHt9LCBjb25maWcucGFyc2VPcHRpb25zLCBsZXZlbCkpLm1tbCgpXTtcbn1cbmV4cG9ydHMuVGV4dE1hY3Jvc0NvbmZpZ3VyYXRpb24gPSBDb25maWd1cmF0aW9uX2pzXzEuQ29uZmlndXJhdGlvbi5jcmVhdGUoJ3RleHRtYWNyb3MnLCB7XG4gICAgY29uZmlnOiBmdW5jdGlvbiAoX2NvbmZpZywgamF4KSB7XG4gICAgICAgIHZhciB0ZXh0Q29uZiA9IG5ldyBDb25maWd1cmF0aW9uX2pzXzEuUGFyc2VyQ29uZmlndXJhdGlvbihqYXgucGFyc2VPcHRpb25zLm9wdGlvbnMudGV4dG1hY3Jvcy5wYWNrYWdlcywgWyd0ZXgnLCAndGV4dCddKTtcbiAgICAgICAgdGV4dENvbmYuaW5pdCgpO1xuICAgICAgICB2YXIgcGFyc2VPcHRpb25zID0gbmV3IFBhcnNlT3B0aW9uc19qc18xLmRlZmF1bHQodGV4dENvbmYsIFtdKTtcbiAgICAgICAgcGFyc2VPcHRpb25zLm9wdGlvbnMgPSBqYXgucGFyc2VPcHRpb25zLm9wdGlvbnM7XG4gICAgICAgIHRleHRDb25mLmNvbmZpZyhqYXgpO1xuICAgICAgICBUYWdzX2pzXzEuVGFnc0ZhY3RvcnkuYWRkVGFncyh0ZXh0Q29uZi50YWdzKTtcbiAgICAgICAgcGFyc2VPcHRpb25zLnRhZ3MgPSBUYWdzX2pzXzEuVGFnc0ZhY3RvcnkuZ2V0RGVmYXVsdCgpO1xuICAgICAgICBwYXJzZU9wdGlvbnMudGFncy5jb25maWd1cmF0aW9uID0gcGFyc2VPcHRpb25zO1xuICAgICAgICBwYXJzZU9wdGlvbnMucGFja2FnZURhdGEgPSBqYXgucGFyc2VPcHRpb25zLnBhY2thZ2VEYXRhO1xuICAgICAgICBwYXJzZU9wdGlvbnMucGFja2FnZURhdGEuc2V0KCd0ZXh0bWFjcm9zJywgeyBwYXJzZU9wdGlvbnM6IHBhcnNlT3B0aW9ucywgamF4OiBqYXgsIHRleFBhcnNlcjogbnVsbCB9KTtcbiAgICAgICAgcGFyc2VPcHRpb25zLm9wdGlvbnMuaW50ZXJuYWxNYXRoID0gaW50ZXJuYWxNYXRoO1xuICAgIH0sXG4gICAgcHJlcHJvY2Vzc29yczogW2Z1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICB2YXIgY29uZmlnID0gZGF0YS5kYXRhLnBhY2thZ2VEYXRhLmdldCgndGV4dG1hY3JvcycpO1xuICAgICAgICAgICAgY29uZmlnLnBhcnNlT3B0aW9ucy5ub2RlRmFjdG9yeS5zZXRNbWxGYWN0b3J5KGNvbmZpZy5qYXgubW1sRmFjdG9yeSk7XG4gICAgICAgIH1dLFxuICAgIG9wdGlvbnM6IHtcbiAgICAgICAgdGV4dG1hY3Jvczoge1xuICAgICAgICAgICAgcGFja2FnZXM6IFsndGV4dC1iYXNlJ11cbiAgICAgICAgfVxuICAgIH1cbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VGV4dE1hY3Jvc0NvbmZpZ3VyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/textmacros/TextMacrosConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/textmacros/TextMacrosMappings.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/textmacros/TextMacrosMappings.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar TexConstants_js_1 = __webpack_require__(/*! ../TexConstants.js */ \"./node_modules/mathjax-full/js/input/tex/TexConstants.js\");\nvar TextMacrosMethods_js_1 = __webpack_require__(/*! ./TextMacrosMethods.js */ \"./node_modules/mathjax-full/js/input/tex/textmacros/TextMacrosMethods.js\");\nvar lengths_js_1 = __webpack_require__(/*! ../../../util/lengths.js */ \"./node_modules/mathjax-full/js/util/lengths.js\");\nnew SymbolMap_js_1.MacroMap('text-special', {\n    '$': 'Math',\n    '%': 'Comment',\n    '^': 'MathModeOnly',\n    '_': 'MathModeOnly',\n    '&': 'Misplaced',\n    '#': 'Misplaced',\n    '~': 'Tilde',\n    ' ': 'Space',\n    '\\t': 'Space',\n    '\\r': 'Space',\n    '\\n': 'Space',\n    '\\u00A0': 'Tilde',\n    '{': 'OpenBrace',\n    '}': 'CloseBrace',\n    '`': 'OpenQuote',\n    '\\'': 'CloseQuote'\n}, TextMacrosMethods_js_1.TextMacrosMethods);\nnew SymbolMap_js_1.CommandMap('text-macros', {\n    '(': 'Math',\n    '$': 'SelfQuote',\n    '_': 'SelfQuote',\n    '%': 'SelfQuote',\n    '{': 'SelfQuote',\n    '}': 'SelfQuote',\n    ' ': 'SelfQuote',\n    '&': 'SelfQuote',\n    '#': 'SelfQuote',\n    '\\\\': 'SelfQuote',\n    '\\'': ['Accent', '\\u00B4'],\n    '\\u2019': ['Accent', '\\u00B4'],\n    '`': ['Accent', '\\u0060'],\n    '\\u2018': ['Accent', '\\u0060'],\n    '^': ['Accent', '^'],\n    '\\\"': ['Accent', '\\u00A8'],\n    '~': ['Accent', '~'],\n    '=': ['Accent', '\\u00AF'],\n    '.': ['Accent', '\\u02D9'],\n    'u': ['Accent', '\\u02D8'],\n    'v': ['Accent', '\\u02C7'],\n    emph: 'Emph',\n    rm: ['SetFont', TexConstants_js_1.TexConstant.Variant.NORMAL],\n    mit: ['SetFont', TexConstants_js_1.TexConstant.Variant.ITALIC],\n    oldstyle: ['SetFont', TexConstants_js_1.TexConstant.Variant.OLDSTYLE],\n    cal: ['SetFont', TexConstants_js_1.TexConstant.Variant.CALLIGRAPHIC],\n    it: ['SetFont', '-tex-mathit'],\n    bf: ['SetFont', TexConstants_js_1.TexConstant.Variant.BOLD],\n    bbFont: ['SetFont', TexConstants_js_1.TexConstant.Variant.DOUBLESTRUCK],\n    scr: ['SetFont', TexConstants_js_1.TexConstant.Variant.SCRIPT],\n    frak: ['SetFont', TexConstants_js_1.TexConstant.Variant.FRAKTUR],\n    sf: ['SetFont', TexConstants_js_1.TexConstant.Variant.SANSSERIF],\n    tt: ['SetFont', TexConstants_js_1.TexConstant.Variant.MONOSPACE],\n    tiny: ['SetSize', 0.5],\n    Tiny: ['SetSize', 0.6],\n    scriptsize: ['SetSize', 0.7],\n    small: ['SetSize', 0.85],\n    normalsize: ['SetSize', 1.0],\n    large: ['SetSize', 1.2],\n    Large: ['SetSize', 1.44],\n    LARGE: ['SetSize', 1.73],\n    huge: ['SetSize', 2.07],\n    Huge: ['SetSize', 2.49],\n    Bbb: ['Macro', '{\\\\bbFont #1}', 1],\n    textnormal: ['Macro', '{\\\\rm #1}', 1],\n    textup: ['Macro', '{\\\\rm #1}', 1],\n    textrm: ['Macro', '{\\\\rm #1}', 1],\n    textit: ['Macro', '{\\\\it #1}', 1],\n    textbf: ['Macro', '{\\\\bf #1}', 1],\n    textsf: ['Macro', '{\\\\sf #1}', 1],\n    texttt: ['Macro', '{\\\\tt #1}', 1],\n    dagger: ['Insert', '\\u2020'],\n    ddagger: ['Insert', '\\u2021'],\n    S: ['Insert', '\\u00A7'],\n    ',': ['Spacer', lengths_js_1.MATHSPACE.thinmathspace],\n    ':': ['Spacer', lengths_js_1.MATHSPACE.mediummathspace],\n    '>': ['Spacer', lengths_js_1.MATHSPACE.mediummathspace],\n    ';': ['Spacer', lengths_js_1.MATHSPACE.thickmathspace],\n    '!': ['Spacer', lengths_js_1.MATHSPACE.negativethinmathspace],\n    enspace: ['Spacer', .5],\n    quad: ['Spacer', 1],\n    qquad: ['Spacer', 2],\n    thinspace: ['Spacer', lengths_js_1.MATHSPACE.thinmathspace],\n    negthinspace: ['Spacer', lengths_js_1.MATHSPACE.negativethinmathspace],\n    hskip: 'Hskip',\n    hspace: 'Hskip',\n    kern: 'Hskip',\n    mskip: 'Hskip',\n    mspace: 'Hskip',\n    mkern: 'Hskip',\n    rule: 'rule',\n    Rule: ['Rule'],\n    Space: ['Rule', 'blank'],\n    color: 'CheckAutoload',\n    textcolor: 'CheckAutoload',\n    colorbox: 'CheckAutoload',\n    fcolorbox: 'CheckAutoload',\n    href: 'CheckAutoload',\n    style: 'CheckAutoload',\n    class: 'CheckAutoload',\n    cssId: 'CheckAutoload',\n    unicode: 'CheckAutoload',\n    ref: ['HandleRef', false],\n    eqref: ['HandleRef', true],\n}, TextMacrosMethods_js_1.TextMacrosMethods);\n//# sourceMappingURL=TextMacrosMappings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC90ZXh0bWFjcm9zL1RleHRNYWNyb3NNYXBwaW5ncy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsbUJBQU8sQ0FBQyw4RUFBaUI7QUFDOUMsd0JBQXdCLG1CQUFPLENBQUMsb0ZBQW9CO0FBQ3BELDZCQUE2QixtQkFBTyxDQUFDLHdHQUF3QjtBQUM3RCxtQkFBbUIsbUJBQU8sQ0FBQyxnRkFBMEI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sTUFBTTtBQUNOO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsWUFBWTtBQUNqQyw0QkFBNEIsUUFBUTtBQUNwQyx3QkFBd0IsUUFBUTtBQUNoQyx3QkFBd0IsUUFBUTtBQUNoQyx3QkFBd0IsUUFBUTtBQUNoQyx3QkFBd0IsUUFBUTtBQUNoQyx3QkFBd0IsUUFBUTtBQUNoQyx3QkFBd0IsUUFBUTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC90ZXh0bWFjcm9zL1RleHRNYWNyb3NNYXBwaW5ncy5qcz81OGJmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIFN5bWJvbE1hcF9qc18xID0gcmVxdWlyZShcIi4uL1N5bWJvbE1hcC5qc1wiKTtcbnZhciBUZXhDb25zdGFudHNfanNfMSA9IHJlcXVpcmUoXCIuLi9UZXhDb25zdGFudHMuanNcIik7XG52YXIgVGV4dE1hY3Jvc01ldGhvZHNfanNfMSA9IHJlcXVpcmUoXCIuL1RleHRNYWNyb3NNZXRob2RzLmpzXCIpO1xudmFyIGxlbmd0aHNfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlsL2xlbmd0aHMuanNcIik7XG5uZXcgU3ltYm9sTWFwX2pzXzEuTWFjcm9NYXAoJ3RleHQtc3BlY2lhbCcsIHtcbiAgICAnJCc6ICdNYXRoJyxcbiAgICAnJSc6ICdDb21tZW50JyxcbiAgICAnXic6ICdNYXRoTW9kZU9ubHknLFxuICAgICdfJzogJ01hdGhNb2RlT25seScsXG4gICAgJyYnOiAnTWlzcGxhY2VkJyxcbiAgICAnIyc6ICdNaXNwbGFjZWQnLFxuICAgICd+JzogJ1RpbGRlJyxcbiAgICAnICc6ICdTcGFjZScsXG4gICAgJ1xcdCc6ICdTcGFjZScsXG4gICAgJ1xccic6ICdTcGFjZScsXG4gICAgJ1xcbic6ICdTcGFjZScsXG4gICAgJ1xcdTAwQTAnOiAnVGlsZGUnLFxuICAgICd7JzogJ09wZW5CcmFjZScsXG4gICAgJ30nOiAnQ2xvc2VCcmFjZScsXG4gICAgJ2AnOiAnT3BlblF1b3RlJyxcbiAgICAnXFwnJzogJ0Nsb3NlUXVvdGUnXG59LCBUZXh0TWFjcm9zTWV0aG9kc19qc18xLlRleHRNYWNyb3NNZXRob2RzKTtcbm5ldyBTeW1ib2xNYXBfanNfMS5Db21tYW5kTWFwKCd0ZXh0LW1hY3JvcycsIHtcbiAgICAnKCc6ICdNYXRoJyxcbiAgICAnJCc6ICdTZWxmUXVvdGUnLFxuICAgICdfJzogJ1NlbGZRdW90ZScsXG4gICAgJyUnOiAnU2VsZlF1b3RlJyxcbiAgICAneyc6ICdTZWxmUXVvdGUnLFxuICAgICd9JzogJ1NlbGZRdW90ZScsXG4gICAgJyAnOiAnU2VsZlF1b3RlJyxcbiAgICAnJic6ICdTZWxmUXVvdGUnLFxuICAgICcjJzogJ1NlbGZRdW90ZScsXG4gICAgJ1xcXFwnOiAnU2VsZlF1b3RlJyxcbiAgICAnXFwnJzogWydBY2NlbnQnLCAnXFx1MDBCNCddLFxuICAgICdcXHUyMDE5JzogWydBY2NlbnQnLCAnXFx1MDBCNCddLFxuICAgICdgJzogWydBY2NlbnQnLCAnXFx1MDA2MCddLFxuICAgICdcXHUyMDE4JzogWydBY2NlbnQnLCAnXFx1MDA2MCddLFxuICAgICdeJzogWydBY2NlbnQnLCAnXiddLFxuICAgICdcXFwiJzogWydBY2NlbnQnLCAnXFx1MDBBOCddLFxuICAgICd+JzogWydBY2NlbnQnLCAnfiddLFxuICAgICc9JzogWydBY2NlbnQnLCAnXFx1MDBBRiddLFxuICAgICcuJzogWydBY2NlbnQnLCAnXFx1MDJEOSddLFxuICAgICd1JzogWydBY2NlbnQnLCAnXFx1MDJEOCddLFxuICAgICd2JzogWydBY2NlbnQnLCAnXFx1MDJDNyddLFxuICAgIGVtcGg6ICdFbXBoJyxcbiAgICBybTogWydTZXRGb250JywgVGV4Q29uc3RhbnRzX2pzXzEuVGV4Q29uc3RhbnQuVmFyaWFudC5OT1JNQUxdLFxuICAgIG1pdDogWydTZXRGb250JywgVGV4Q29uc3RhbnRzX2pzXzEuVGV4Q29uc3RhbnQuVmFyaWFudC5JVEFMSUNdLFxuICAgIG9sZHN0eWxlOiBbJ1NldEZvbnQnLCBUZXhDb25zdGFudHNfanNfMS5UZXhDb25zdGFudC5WYXJpYW50Lk9MRFNUWUxFXSxcbiAgICBjYWw6IFsnU2V0Rm9udCcsIFRleENvbnN0YW50c19qc18xLlRleENvbnN0YW50LlZhcmlhbnQuQ0FMTElHUkFQSElDXSxcbiAgICBpdDogWydTZXRGb250JywgJy10ZXgtbWF0aGl0J10sXG4gICAgYmY6IFsnU2V0Rm9udCcsIFRleENvbnN0YW50c19qc18xLlRleENvbnN0YW50LlZhcmlhbnQuQk9MRF0sXG4gICAgYmJGb250OiBbJ1NldEZvbnQnLCBUZXhDb25zdGFudHNfanNfMS5UZXhDb25zdGFudC5WYXJpYW50LkRPVUJMRVNUUlVDS10sXG4gICAgc2NyOiBbJ1NldEZvbnQnLCBUZXhDb25zdGFudHNfanNfMS5UZXhDb25zdGFudC5WYXJpYW50LlNDUklQVF0sXG4gICAgZnJhazogWydTZXRGb250JywgVGV4Q29uc3RhbnRzX2pzXzEuVGV4Q29uc3RhbnQuVmFyaWFudC5GUkFLVFVSXSxcbiAgICBzZjogWydTZXRGb250JywgVGV4Q29uc3RhbnRzX2pzXzEuVGV4Q29uc3RhbnQuVmFyaWFudC5TQU5TU0VSSUZdLFxuICAgIHR0OiBbJ1NldEZvbnQnLCBUZXhDb25zdGFudHNfanNfMS5UZXhDb25zdGFudC5WYXJpYW50Lk1PTk9TUEFDRV0sXG4gICAgdGlueTogWydTZXRTaXplJywgMC41XSxcbiAgICBUaW55OiBbJ1NldFNpemUnLCAwLjZdLFxuICAgIHNjcmlwdHNpemU6IFsnU2V0U2l6ZScsIDAuN10sXG4gICAgc21hbGw6IFsnU2V0U2l6ZScsIDAuODVdLFxuICAgIG5vcm1hbHNpemU6IFsnU2V0U2l6ZScsIDEuMF0sXG4gICAgbGFyZ2U6IFsnU2V0U2l6ZScsIDEuMl0sXG4gICAgTGFyZ2U6IFsnU2V0U2l6ZScsIDEuNDRdLFxuICAgIExBUkdFOiBbJ1NldFNpemUnLCAxLjczXSxcbiAgICBodWdlOiBbJ1NldFNpemUnLCAyLjA3XSxcbiAgICBIdWdlOiBbJ1NldFNpemUnLCAyLjQ5XSxcbiAgICBCYmI6IFsnTWFjcm8nLCAne1xcXFxiYkZvbnQgIzF9JywgMV0sXG4gICAgdGV4dG5vcm1hbDogWydNYWNybycsICd7XFxcXHJtICMxfScsIDFdLFxuICAgIHRleHR1cDogWydNYWNybycsICd7XFxcXHJtICMxfScsIDFdLFxuICAgIHRleHRybTogWydNYWNybycsICd7XFxcXHJtICMxfScsIDFdLFxuICAgIHRleHRpdDogWydNYWNybycsICd7XFxcXGl0ICMxfScsIDFdLFxuICAgIHRleHRiZjogWydNYWNybycsICd7XFxcXGJmICMxfScsIDFdLFxuICAgIHRleHRzZjogWydNYWNybycsICd7XFxcXHNmICMxfScsIDFdLFxuICAgIHRleHR0dDogWydNYWNybycsICd7XFxcXHR0ICMxfScsIDFdLFxuICAgIGRhZ2dlcjogWydJbnNlcnQnLCAnXFx1MjAyMCddLFxuICAgIGRkYWdnZXI6IFsnSW5zZXJ0JywgJ1xcdTIwMjEnXSxcbiAgICBTOiBbJ0luc2VydCcsICdcXHUwMEE3J10sXG4gICAgJywnOiBbJ1NwYWNlcicsIGxlbmd0aHNfanNfMS5NQVRIU1BBQ0UudGhpbm1hdGhzcGFjZV0sXG4gICAgJzonOiBbJ1NwYWNlcicsIGxlbmd0aHNfanNfMS5NQVRIU1BBQ0UubWVkaXVtbWF0aHNwYWNlXSxcbiAgICAnPic6IFsnU3BhY2VyJywgbGVuZ3Roc19qc18xLk1BVEhTUEFDRS5tZWRpdW1tYXRoc3BhY2VdLFxuICAgICc7JzogWydTcGFjZXInLCBsZW5ndGhzX2pzXzEuTUFUSFNQQUNFLnRoaWNrbWF0aHNwYWNlXSxcbiAgICAnISc6IFsnU3BhY2VyJywgbGVuZ3Roc19qc18xLk1BVEhTUEFDRS5uZWdhdGl2ZXRoaW5tYXRoc3BhY2VdLFxuICAgIGVuc3BhY2U6IFsnU3BhY2VyJywgLjVdLFxuICAgIHF1YWQ6IFsnU3BhY2VyJywgMV0sXG4gICAgcXF1YWQ6IFsnU3BhY2VyJywgMl0sXG4gICAgdGhpbnNwYWNlOiBbJ1NwYWNlcicsIGxlbmd0aHNfanNfMS5NQVRIU1BBQ0UudGhpbm1hdGhzcGFjZV0sXG4gICAgbmVndGhpbnNwYWNlOiBbJ1NwYWNlcicsIGxlbmd0aHNfanNfMS5NQVRIU1BBQ0UubmVnYXRpdmV0aGlubWF0aHNwYWNlXSxcbiAgICBoc2tpcDogJ0hza2lwJyxcbiAgICBoc3BhY2U6ICdIc2tpcCcsXG4gICAga2VybjogJ0hza2lwJyxcbiAgICBtc2tpcDogJ0hza2lwJyxcbiAgICBtc3BhY2U6ICdIc2tpcCcsXG4gICAgbWtlcm46ICdIc2tpcCcsXG4gICAgcnVsZTogJ3J1bGUnLFxuICAgIFJ1bGU6IFsnUnVsZSddLFxuICAgIFNwYWNlOiBbJ1J1bGUnLCAnYmxhbmsnXSxcbiAgICBjb2xvcjogJ0NoZWNrQXV0b2xvYWQnLFxuICAgIHRleHRjb2xvcjogJ0NoZWNrQXV0b2xvYWQnLFxuICAgIGNvbG9yYm94OiAnQ2hlY2tBdXRvbG9hZCcsXG4gICAgZmNvbG9yYm94OiAnQ2hlY2tBdXRvbG9hZCcsXG4gICAgaHJlZjogJ0NoZWNrQXV0b2xvYWQnLFxuICAgIHN0eWxlOiAnQ2hlY2tBdXRvbG9hZCcsXG4gICAgY2xhc3M6ICdDaGVja0F1dG9sb2FkJyxcbiAgICBjc3NJZDogJ0NoZWNrQXV0b2xvYWQnLFxuICAgIHVuaWNvZGU6ICdDaGVja0F1dG9sb2FkJyxcbiAgICByZWY6IFsnSGFuZGxlUmVmJywgZmFsc2VdLFxuICAgIGVxcmVmOiBbJ0hhbmRsZVJlZicsIHRydWVdLFxufSwgVGV4dE1hY3Jvc01ldGhvZHNfanNfMS5UZXh0TWFjcm9zTWV0aG9kcyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UZXh0TWFjcm9zTWFwcGluZ3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/textmacros/TextMacrosMappings.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/textmacros/TextMacrosMethods.js":
/*!********************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/textmacros/TextMacrosMethods.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TextMacrosMethods = void 0;\nvar TexParser_js_1 = __importDefault(__webpack_require__(/*! ../TexParser.js */ \"./node_modules/mathjax-full/js/input/tex/TexParser.js\"));\nvar Retries_js_1 = __webpack_require__(/*! ../../../util/Retries.js */ \"./node_modules/mathjax-full/js/util/Retries.js\");\nvar BaseMethods_js_1 = __importDefault(__webpack_require__(/*! ../base/BaseMethods.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseMethods.js\"));\nexports.TextMacrosMethods = {\n    Comment: function (parser, _c) {\n        while (parser.i < parser.string.length && parser.string.charAt(parser.i) !== '\\n') {\n            parser.i++;\n        }\n        parser.i++;\n    },\n    Math: function (parser, open) {\n        parser.saveText();\n        var i = parser.i;\n        var j, c;\n        var braces = 0;\n        while ((c = parser.GetNext())) {\n            j = parser.i++;\n            switch (c) {\n                case '\\\\':\n                    var cs = parser.GetCS();\n                    if (cs === ')')\n                        c = '\\\\(';\n                case '$':\n                    if (braces === 0 && open === c) {\n                        var config = parser.texParser.configuration;\n                        var mml = (new TexParser_js_1.default(parser.string.substr(i, j - i), parser.stack.env, config)).mml();\n                        parser.PushMath(mml);\n                        return;\n                    }\n                    break;\n                case '{':\n                    braces++;\n                    break;\n                case '}':\n                    if (braces === 0) {\n                        parser.Error('ExtraCloseMissingOpen', 'Extra close brace or missing open brace');\n                    }\n                    braces--;\n                    break;\n            }\n        }\n        parser.Error('MathNotTerminated', 'Math-mode is not properly terminated');\n    },\n    MathModeOnly: function (parser, c) {\n        parser.Error('MathModeOnly', '\\'%1\\' allowed only in math mode', c);\n    },\n    Misplaced: function (parser, c) {\n        parser.Error('Misplaced', '\\'%1\\' can not be used here', c);\n    },\n    OpenBrace: function (parser, _c) {\n        var env = parser.stack.env;\n        parser.envStack.push(env);\n        parser.stack.env = Object.assign({}, env);\n    },\n    CloseBrace: function (parser, _c) {\n        if (parser.envStack.length) {\n            parser.saveText();\n            parser.stack.env = parser.envStack.pop();\n        }\n        else {\n            parser.Error('ExtraCloseMissingOpen', 'Extra close brace or missing open brace');\n        }\n    },\n    OpenQuote: function (parser, c) {\n        if (parser.string.charAt(parser.i) === c) {\n            parser.text += '\\u201C';\n            parser.i++;\n        }\n        else {\n            parser.text += '\\u2018';\n        }\n    },\n    CloseQuote: function (parser, c) {\n        if (parser.string.charAt(parser.i) === c) {\n            parser.text += '\\u201D';\n            parser.i++;\n        }\n        else {\n            parser.text += '\\u2019';\n        }\n    },\n    Tilde: function (parser, _c) {\n        parser.text += '\\u00A0';\n    },\n    Space: function (parser, _c) {\n        parser.text += ' ';\n        while (parser.GetNext().match(/\\s/))\n            parser.i++;\n    },\n    SelfQuote: function (parser, name) {\n        parser.text += name.substr(1);\n    },\n    Insert: function (parser, _name, c) {\n        parser.text += c;\n    },\n    Accent: function (parser, name, c) {\n        var base = parser.ParseArg(name);\n        var accent = parser.create('token', 'mo', {}, c);\n        parser.addAttributes(accent);\n        parser.Push(parser.create('node', 'mover', [base, accent]));\n    },\n    Emph: function (parser, name) {\n        var variant = (parser.stack.env.mathvariant === '-tex-mathit' ? 'normal' : '-tex-mathit');\n        parser.Push(parser.ParseTextArg(name, { mathvariant: variant }));\n    },\n    SetFont: function (parser, _name, variant) {\n        parser.saveText();\n        parser.stack.env.mathvariant = variant;\n    },\n    SetSize: function (parser, _name, size) {\n        parser.saveText();\n        parser.stack.env.mathsize = size;\n    },\n    CheckAutoload: function (parser, name) {\n        var autoload = parser.configuration.packageData.get('autoload');\n        var texParser = parser.texParser;\n        name = name.slice(1);\n        var macro = texParser.lookup('macro', name);\n        if (!macro || (autoload && macro._func === autoload.Autoload)) {\n            texParser.parse('macro', [texParser, name]);\n            if (!macro)\n                return;\n            (0, Retries_js_1.retryAfter)(Promise.resolve());\n        }\n        texParser.parse('macro', [parser, name]);\n    },\n    Macro: BaseMethods_js_1.default.Macro,\n    Spacer: BaseMethods_js_1.default.Spacer,\n    Hskip: BaseMethods_js_1.default.Hskip,\n    rule: BaseMethods_js_1.default.rule,\n    Rule: BaseMethods_js_1.default.Rule,\n    HandleRef: BaseMethods_js_1.default.HandleRef\n};\n//# sourceMappingURL=TextMacrosMethods.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/textmacros/TextMacrosMethods.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/textmacros/TextParser.js":
/*!*************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/textmacros/TextParser.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TextParser = void 0;\nvar TexParser_js_1 = __importDefault(__webpack_require__(/*! ../TexParser.js */ \"./node_modules/mathjax-full/js/input/tex/TexParser.js\"));\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar MmlNode_js_1 = __webpack_require__(/*! ../../../core/MmlTree/MmlNode.js */ \"./node_modules/mathjax-full/js/core/MmlTree/MmlNode.js\");\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar BaseItems_js_1 = __webpack_require__(/*! ../base/BaseItems.js */ \"./node_modules/mathjax-full/js/input/tex/base/BaseItems.js\");\nvar TextParser = (function (_super) {\n    __extends(TextParser, _super);\n    function TextParser(text, env, configuration, level) {\n        var _this = _super.call(this, text, env, configuration) || this;\n        _this.level = level;\n        return _this;\n    }\n    Object.defineProperty(TextParser.prototype, \"texParser\", {\n        get: function () {\n            return this.configuration.packageData.get('textmacros').texParser;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextParser.prototype, \"tags\", {\n        get: function () {\n            return this.texParser.tags;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TextParser.prototype.mml = function () {\n        return (this.level != null ?\n            this.create('node', 'mstyle', this.nodes, { displaystyle: false, scriptlevel: this.level }) :\n            this.nodes.length === 1 ? this.nodes[0] : this.create('node', 'mrow', this.nodes));\n    };\n    TextParser.prototype.Parse = function () {\n        this.text = '';\n        this.nodes = [];\n        this.envStack = [];\n        _super.prototype.Parse.call(this);\n    };\n    TextParser.prototype.saveText = function () {\n        if (this.text) {\n            var mathvariant = this.stack.env.mathvariant;\n            var text = ParseUtil_js_1.default.internalText(this, this.text, mathvariant ? { mathvariant: mathvariant } : {});\n            this.text = '';\n            this.Push(text);\n        }\n    };\n    TextParser.prototype.Push = function (mml) {\n        if (this.text) {\n            this.saveText();\n        }\n        if (mml instanceof BaseItems_js_1.StopItem) {\n            return _super.prototype.Push.call(this, mml);\n        }\n        if (mml instanceof BaseItems_js_1.StyleItem) {\n            this.stack.env.mathcolor = this.stack.env.color;\n            return;\n        }\n        if (mml instanceof MmlNode_js_1.AbstractMmlNode) {\n            this.addAttributes(mml);\n            this.nodes.push(mml);\n        }\n    };\n    TextParser.prototype.PushMath = function (mml) {\n        var e_1, _a;\n        var env = this.stack.env;\n        if (!mml.isKind('TeXAtom')) {\n            mml = this.create('node', 'TeXAtom', [mml]);\n        }\n        try {\n            for (var _b = __values(['mathsize', 'mathcolor']), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var name_1 = _c.value;\n                if (env[name_1] && !mml.attributes.getExplicit(name_1)) {\n                    if (!mml.isToken && !mml.isKind('mstyle')) {\n                        mml = this.create('node', 'mstyle', [mml]);\n                    }\n                    NodeUtil_js_1.default.setAttribute(mml, name_1, env[name_1]);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (mml.isInferred) {\n            mml = this.create('node', 'mrow', mml.childNodes);\n        }\n        this.nodes.push(mml);\n    };\n    TextParser.prototype.addAttributes = function (mml) {\n        var e_2, _a;\n        var env = this.stack.env;\n        if (!mml.isToken)\n            return;\n        try {\n            for (var _b = __values(['mathsize', 'mathcolor', 'mathvariant']), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var name_2 = _c.value;\n                if (env[name_2] && !mml.attributes.getExplicit(name_2)) {\n                    NodeUtil_js_1.default.setAttribute(mml, name_2, env[name_2]);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    TextParser.prototype.ParseTextArg = function (name, env) {\n        var text = this.GetArgument(name);\n        env = Object.assign(Object.assign({}, this.stack.env), env);\n        return (new TextParser(text, env, this.configuration)).mml();\n    };\n    TextParser.prototype.ParseArg = function (name) {\n        return (new TextParser(this.GetArgument(name), this.stack.env, this.configuration)).mml();\n    };\n    TextParser.prototype.Error = function (id, message) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        throw new (TexError_js_1.default.bind.apply(TexError_js_1.default, __spreadArray([void 0, id, message], __read(args), false)))();\n    };\n    return TextParser;\n}(TexParser_js_1.default));\nexports.TextParser = TextParser;\n//# sourceMappingURL=TextParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/textmacros/TextParser.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/unicode/UnicodeConfiguration.js":
/*!********************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/unicode/UnicodeConfiguration.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UnicodeConfiguration = exports.UnicodeMethods = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar ParseUtil_js_1 = __importDefault(__webpack_require__(/*! ../ParseUtil.js */ \"./node_modules/mathjax-full/js/input/tex/ParseUtil.js\"));\nvar NodeUtil_js_1 = __importDefault(__webpack_require__(/*! ../NodeUtil.js */ \"./node_modules/mathjax-full/js/input/tex/NodeUtil.js\"));\nvar Entities_js_1 = __webpack_require__(/*! ../../../util/Entities.js */ \"./node_modules/mathjax-full/js/util/Entities.js\");\nexports.UnicodeMethods = {};\nvar UnicodeCache = {};\nexports.UnicodeMethods.Unicode = function (parser, name) {\n    var HD = parser.GetBrackets(name);\n    var HDsplit = null;\n    var font = null;\n    if (HD) {\n        if (HD.replace(/ /g, '').\n            match(/^(\\d+(\\.\\d*)?|\\.\\d+),(\\d+(\\.\\d*)?|\\.\\d+)$/)) {\n            HDsplit = HD.replace(/ /g, '').split(/,/);\n            font = parser.GetBrackets(name);\n        }\n        else {\n            font = HD;\n        }\n    }\n    var n = ParseUtil_js_1.default.trimSpaces(parser.GetArgument(name)).replace(/^0x/, 'x');\n    if (!n.match(/^(x[0-9A-Fa-f]+|[0-9]+)$/)) {\n        throw new TexError_js_1.default('BadUnicode', 'Argument to \\\\unicode must be a number');\n    }\n    var N = parseInt(n.match(/^x/) ? '0' + n : n);\n    if (!UnicodeCache[N]) {\n        UnicodeCache[N] = [800, 200, font, N];\n    }\n    else if (!font) {\n        font = UnicodeCache[N][2];\n    }\n    if (HDsplit) {\n        UnicodeCache[N][0] = Math.floor(parseFloat(HDsplit[0]) * 1000);\n        UnicodeCache[N][1] = Math.floor(parseFloat(HDsplit[1]) * 1000);\n    }\n    var variant = parser.stack.env.font;\n    var def = {};\n    if (font) {\n        UnicodeCache[N][2] = def.fontfamily = font.replace(/'/g, '\\'');\n        if (variant) {\n            if (variant.match(/bold/)) {\n                def.fontweight = 'bold';\n            }\n            if (variant.match(/italic|-mathit/)) {\n                def.fontstyle = 'italic';\n            }\n        }\n    }\n    else if (variant) {\n        def.mathvariant = variant;\n    }\n    var node = parser.create('token', 'mtext', def, (0, Entities_js_1.numeric)(n));\n    NodeUtil_js_1.default.setProperty(node, 'unicode', true);\n    parser.Push(node);\n};\nnew SymbolMap_js_1.CommandMap('unicode', { unicode: 'Unicode' }, exports.UnicodeMethods);\nexports.UnicodeConfiguration = Configuration_js_1.Configuration.create('unicode', { handler: { macro: ['unicode'] } });\n//# sourceMappingURL=UnicodeConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC91bmljb2RlL1VuaWNvZGVDb25maWd1cmF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCLEdBQUcsc0JBQXNCO0FBQ3JELHlCQUF5QixtQkFBTyxDQUFDLHNGQUFxQjtBQUN0RCxvQ0FBb0MsbUJBQU8sQ0FBQyw0RUFBZ0I7QUFDNUQscUJBQXFCLG1CQUFPLENBQUMsOEVBQWlCO0FBQzlDLHFDQUFxQyxtQkFBTyxDQUFDLDhFQUFpQjtBQUM5RCxvQ0FBb0MsbUJBQU8sQ0FBQyw0RUFBZ0I7QUFDNUQsb0JBQW9CLG1CQUFPLENBQUMsa0ZBQTJCO0FBQ3ZELHNCQUFzQjtBQUN0QjtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsb0JBQW9CO0FBQy9ELDRCQUE0Qix3REFBd0QsV0FBVyxzQkFBc0I7QUFDckgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy9pbnB1dC90ZXgvdW5pY29kZS9Vbmljb2RlQ29uZmlndXJhdGlvbi5qcz9lNjQ0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Vbmljb2RlQ29uZmlndXJhdGlvbiA9IGV4cG9ydHMuVW5pY29kZU1ldGhvZHMgPSB2b2lkIDA7XG52YXIgQ29uZmlndXJhdGlvbl9qc18xID0gcmVxdWlyZShcIi4uL0NvbmZpZ3VyYXRpb24uanNcIik7XG52YXIgVGV4RXJyb3JfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vVGV4RXJyb3IuanNcIikpO1xudmFyIFN5bWJvbE1hcF9qc18xID0gcmVxdWlyZShcIi4uL1N5bWJvbE1hcC5qc1wiKTtcbnZhciBQYXJzZVV0aWxfanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vUGFyc2VVdGlsLmpzXCIpKTtcbnZhciBOb2RlVXRpbF9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi9Ob2RlVXRpbC5qc1wiKSk7XG52YXIgRW50aXRpZXNfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi91dGlsL0VudGl0aWVzLmpzXCIpO1xuZXhwb3J0cy5Vbmljb2RlTWV0aG9kcyA9IHt9O1xudmFyIFVuaWNvZGVDYWNoZSA9IHt9O1xuZXhwb3J0cy5Vbmljb2RlTWV0aG9kcy5Vbmljb2RlID0gZnVuY3Rpb24gKHBhcnNlciwgbmFtZSkge1xuICAgIHZhciBIRCA9IHBhcnNlci5HZXRCcmFja2V0cyhuYW1lKTtcbiAgICB2YXIgSERzcGxpdCA9IG51bGw7XG4gICAgdmFyIGZvbnQgPSBudWxsO1xuICAgIGlmIChIRCkge1xuICAgICAgICBpZiAoSEQucmVwbGFjZSgvIC9nLCAnJykuXG4gICAgICAgICAgICBtYXRjaCgvXihcXGQrKFxcLlxcZCopP3xcXC5cXGQrKSwoXFxkKyhcXC5cXGQqKT98XFwuXFxkKykkLykpIHtcbiAgICAgICAgICAgIEhEc3BsaXQgPSBIRC5yZXBsYWNlKC8gL2csICcnKS5zcGxpdCgvLC8pO1xuICAgICAgICAgICAgZm9udCA9IHBhcnNlci5HZXRCcmFja2V0cyhuYW1lKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGZvbnQgPSBIRDtcbiAgICAgICAgfVxuICAgIH1cbiAgICB2YXIgbiA9IFBhcnNlVXRpbF9qc18xLmRlZmF1bHQudHJpbVNwYWNlcyhwYXJzZXIuR2V0QXJndW1lbnQobmFtZSkpLnJlcGxhY2UoL14weC8sICd4Jyk7XG4gICAgaWYgKCFuLm1hdGNoKC9eKHhbMC05QS1GYS1mXSt8WzAtOV0rKSQvKSkge1xuICAgICAgICB0aHJvdyBuZXcgVGV4RXJyb3JfanNfMS5kZWZhdWx0KCdCYWRVbmljb2RlJywgJ0FyZ3VtZW50IHRvIFxcXFx1bmljb2RlIG11c3QgYmUgYSBudW1iZXInKTtcbiAgICB9XG4gICAgdmFyIE4gPSBwYXJzZUludChuLm1hdGNoKC9eeC8pID8gJzAnICsgbiA6IG4pO1xuICAgIGlmICghVW5pY29kZUNhY2hlW05dKSB7XG4gICAgICAgIFVuaWNvZGVDYWNoZVtOXSA9IFs4MDAsIDIwMCwgZm9udCwgTl07XG4gICAgfVxuICAgIGVsc2UgaWYgKCFmb250KSB7XG4gICAgICAgIGZvbnQgPSBVbmljb2RlQ2FjaGVbTl1bMl07XG4gICAgfVxuICAgIGlmIChIRHNwbGl0KSB7XG4gICAgICAgIFVuaWNvZGVDYWNoZVtOXVswXSA9IE1hdGguZmxvb3IocGFyc2VGbG9hdChIRHNwbGl0WzBdKSAqIDEwMDApO1xuICAgICAgICBVbmljb2RlQ2FjaGVbTl1bMV0gPSBNYXRoLmZsb29yKHBhcnNlRmxvYXQoSERzcGxpdFsxXSkgKiAxMDAwKTtcbiAgICB9XG4gICAgdmFyIHZhcmlhbnQgPSBwYXJzZXIuc3RhY2suZW52LmZvbnQ7XG4gICAgdmFyIGRlZiA9IHt9O1xuICAgIGlmIChmb250KSB7XG4gICAgICAgIFVuaWNvZGVDYWNoZVtOXVsyXSA9IGRlZi5mb250ZmFtaWx5ID0gZm9udC5yZXBsYWNlKC8nL2csICdcXCcnKTtcbiAgICAgICAgaWYgKHZhcmlhbnQpIHtcbiAgICAgICAgICAgIGlmICh2YXJpYW50Lm1hdGNoKC9ib2xkLykpIHtcbiAgICAgICAgICAgICAgICBkZWYuZm9udHdlaWdodCA9ICdib2xkJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2YXJpYW50Lm1hdGNoKC9pdGFsaWN8LW1hdGhpdC8pKSB7XG4gICAgICAgICAgICAgICAgZGVmLmZvbnRzdHlsZSA9ICdpdGFsaWMnO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHZhcmlhbnQpIHtcbiAgICAgICAgZGVmLm1hdGh2YXJpYW50ID0gdmFyaWFudDtcbiAgICB9XG4gICAgdmFyIG5vZGUgPSBwYXJzZXIuY3JlYXRlKCd0b2tlbicsICdtdGV4dCcsIGRlZiwgKDAsIEVudGl0aWVzX2pzXzEubnVtZXJpYykobikpO1xuICAgIE5vZGVVdGlsX2pzXzEuZGVmYXVsdC5zZXRQcm9wZXJ0eShub2RlLCAndW5pY29kZScsIHRydWUpO1xuICAgIHBhcnNlci5QdXNoKG5vZGUpO1xufTtcbm5ldyBTeW1ib2xNYXBfanNfMS5Db21tYW5kTWFwKCd1bmljb2RlJywgeyB1bmljb2RlOiAnVW5pY29kZScgfSwgZXhwb3J0cy5Vbmljb2RlTWV0aG9kcyk7XG5leHBvcnRzLlVuaWNvZGVDb25maWd1cmF0aW9uID0gQ29uZmlndXJhdGlvbl9qc18xLkNvbmZpZ3VyYXRpb24uY3JlYXRlKCd1bmljb2RlJywgeyBoYW5kbGVyOiB7IG1hY3JvOiBbJ3VuaWNvZGUnXSB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VW5pY29kZUNvbmZpZ3VyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/unicode/UnicodeConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/upgreek/UpgreekConfiguration.js":
/*!********************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/upgreek/UpgreekConfiguration.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UpgreekConfiguration = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar TexConstants_js_1 = __webpack_require__(/*! ../TexConstants.js */ \"./node_modules/mathjax-full/js/input/tex/TexConstants.js\");\nfunction mathchar0miNormal(parser, mchar) {\n    var def = mchar.attributes || {};\n    def.mathvariant = TexConstants_js_1.TexConstant.Variant.NORMAL;\n    var node = parser.create('token', 'mi', def, mchar.char);\n    parser.Push(node);\n}\nnew SymbolMap_js_1.CharacterMap('upgreek', mathchar0miNormal, {\n    upalpha: '\\u03B1',\n    upbeta: '\\u03B2',\n    upgamma: '\\u03B3',\n    updelta: '\\u03B4',\n    upepsilon: '\\u03F5',\n    upzeta: '\\u03B6',\n    upeta: '\\u03B7',\n    uptheta: '\\u03B8',\n    upiota: '\\u03B9',\n    upkappa: '\\u03BA',\n    uplambda: '\\u03BB',\n    upmu: '\\u03BC',\n    upnu: '\\u03BD',\n    upxi: '\\u03BE',\n    upomicron: '\\u03BF',\n    uppi: '\\u03C0',\n    uprho: '\\u03C1',\n    upsigma: '\\u03C3',\n    uptau: '\\u03C4',\n    upupsilon: '\\u03C5',\n    upphi: '\\u03D5',\n    upchi: '\\u03C7',\n    uppsi: '\\u03C8',\n    upomega: '\\u03C9',\n    upvarepsilon: '\\u03B5',\n    upvartheta: '\\u03D1',\n    upvarpi: '\\u03D6',\n    upvarrho: '\\u03F1',\n    upvarsigma: '\\u03C2',\n    upvarphi: '\\u03C6',\n    Upgamma: '\\u0393',\n    Updelta: '\\u0394',\n    Uptheta: '\\u0398',\n    Uplambda: '\\u039B',\n    Upxi: '\\u039E',\n    Uppi: '\\u03A0',\n    Upsigma: '\\u03A3',\n    Upupsilon: '\\u03A5',\n    Upphi: '\\u03A6',\n    Uppsi: '\\u03A8',\n    Upomega: '\\u03A9'\n});\nexports.UpgreekConfiguration = Configuration_js_1.Configuration.create('upgreek', {\n    handler: { macro: ['upgreek'] },\n});\n//# sourceMappingURL=UpgreekConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC91cGdyZWVrL1VwZ3JlZWtDb25maWd1cmF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QjtBQUM1Qix5QkFBeUIsbUJBQU8sQ0FBQyxzRkFBcUI7QUFDdEQscUJBQXFCLG1CQUFPLENBQUMsOEVBQWlCO0FBQzlDLHdCQUF3QixtQkFBTyxDQUFDLG9GQUFvQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsNEJBQTRCO0FBQzVCLGVBQWUsb0JBQW9CO0FBQ25DLENBQUM7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC91cGdyZWVrL1VwZ3JlZWtDb25maWd1cmF0aW9uLmpzPzEwNDgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVwZ3JlZWtDb25maWd1cmF0aW9uID0gdm9pZCAwO1xudmFyIENvbmZpZ3VyYXRpb25fanNfMSA9IHJlcXVpcmUoXCIuLi9Db25maWd1cmF0aW9uLmpzXCIpO1xudmFyIFN5bWJvbE1hcF9qc18xID0gcmVxdWlyZShcIi4uL1N5bWJvbE1hcC5qc1wiKTtcbnZhciBUZXhDb25zdGFudHNfanNfMSA9IHJlcXVpcmUoXCIuLi9UZXhDb25zdGFudHMuanNcIik7XG5mdW5jdGlvbiBtYXRoY2hhcjBtaU5vcm1hbChwYXJzZXIsIG1jaGFyKSB7XG4gICAgdmFyIGRlZiA9IG1jaGFyLmF0dHJpYnV0ZXMgfHwge307XG4gICAgZGVmLm1hdGh2YXJpYW50ID0gVGV4Q29uc3RhbnRzX2pzXzEuVGV4Q29uc3RhbnQuVmFyaWFudC5OT1JNQUw7XG4gICAgdmFyIG5vZGUgPSBwYXJzZXIuY3JlYXRlKCd0b2tlbicsICdtaScsIGRlZiwgbWNoYXIuY2hhcik7XG4gICAgcGFyc2VyLlB1c2gobm9kZSk7XG59XG5uZXcgU3ltYm9sTWFwX2pzXzEuQ2hhcmFjdGVyTWFwKCd1cGdyZWVrJywgbWF0aGNoYXIwbWlOb3JtYWwsIHtcbiAgICB1cGFscGhhOiAnXFx1MDNCMScsXG4gICAgdXBiZXRhOiAnXFx1MDNCMicsXG4gICAgdXBnYW1tYTogJ1xcdTAzQjMnLFxuICAgIHVwZGVsdGE6ICdcXHUwM0I0JyxcbiAgICB1cGVwc2lsb246ICdcXHUwM0Y1JyxcbiAgICB1cHpldGE6ICdcXHUwM0I2JyxcbiAgICB1cGV0YTogJ1xcdTAzQjcnLFxuICAgIHVwdGhldGE6ICdcXHUwM0I4JyxcbiAgICB1cGlvdGE6ICdcXHUwM0I5JyxcbiAgICB1cGthcHBhOiAnXFx1MDNCQScsXG4gICAgdXBsYW1iZGE6ICdcXHUwM0JCJyxcbiAgICB1cG11OiAnXFx1MDNCQycsXG4gICAgdXBudTogJ1xcdTAzQkQnLFxuICAgIHVweGk6ICdcXHUwM0JFJyxcbiAgICB1cG9taWNyb246ICdcXHUwM0JGJyxcbiAgICB1cHBpOiAnXFx1MDNDMCcsXG4gICAgdXByaG86ICdcXHUwM0MxJyxcbiAgICB1cHNpZ21hOiAnXFx1MDNDMycsXG4gICAgdXB0YXU6ICdcXHUwM0M0JyxcbiAgICB1cHVwc2lsb246ICdcXHUwM0M1JyxcbiAgICB1cHBoaTogJ1xcdTAzRDUnLFxuICAgIHVwY2hpOiAnXFx1MDNDNycsXG4gICAgdXBwc2k6ICdcXHUwM0M4JyxcbiAgICB1cG9tZWdhOiAnXFx1MDNDOScsXG4gICAgdXB2YXJlcHNpbG9uOiAnXFx1MDNCNScsXG4gICAgdXB2YXJ0aGV0YTogJ1xcdTAzRDEnLFxuICAgIHVwdmFycGk6ICdcXHUwM0Q2JyxcbiAgICB1cHZhcnJobzogJ1xcdTAzRjEnLFxuICAgIHVwdmFyc2lnbWE6ICdcXHUwM0MyJyxcbiAgICB1cHZhcnBoaTogJ1xcdTAzQzYnLFxuICAgIFVwZ2FtbWE6ICdcXHUwMzkzJyxcbiAgICBVcGRlbHRhOiAnXFx1MDM5NCcsXG4gICAgVXB0aGV0YTogJ1xcdTAzOTgnLFxuICAgIFVwbGFtYmRhOiAnXFx1MDM5QicsXG4gICAgVXB4aTogJ1xcdTAzOUUnLFxuICAgIFVwcGk6ICdcXHUwM0EwJyxcbiAgICBVcHNpZ21hOiAnXFx1MDNBMycsXG4gICAgVXB1cHNpbG9uOiAnXFx1MDNBNScsXG4gICAgVXBwaGk6ICdcXHUwM0E2JyxcbiAgICBVcHBzaTogJ1xcdTAzQTgnLFxuICAgIFVwb21lZ2E6ICdcXHUwM0E5J1xufSk7XG5leHBvcnRzLlVwZ3JlZWtDb25maWd1cmF0aW9uID0gQ29uZmlndXJhdGlvbl9qc18xLkNvbmZpZ3VyYXRpb24uY3JlYXRlKCd1cGdyZWVrJywge1xuICAgIGhhbmRsZXI6IHsgbWFjcm86IFsndXBncmVlayddIH0sXG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVVwZ3JlZWtDb25maWd1cmF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/upgreek/UpgreekConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/input/tex/verb/VerbConfiguration.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mathjax-full/js/input/tex/verb/VerbConfiguration.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VerbConfiguration = exports.VerbMethods = void 0;\nvar Configuration_js_1 = __webpack_require__(/*! ../Configuration.js */ \"./node_modules/mathjax-full/js/input/tex/Configuration.js\");\nvar TexConstants_js_1 = __webpack_require__(/*! ../TexConstants.js */ \"./node_modules/mathjax-full/js/input/tex/TexConstants.js\");\nvar SymbolMap_js_1 = __webpack_require__(/*! ../SymbolMap.js */ \"./node_modules/mathjax-full/js/input/tex/SymbolMap.js\");\nvar TexError_js_1 = __importDefault(__webpack_require__(/*! ../TexError.js */ \"./node_modules/mathjax-full/js/input/tex/TexError.js\"));\nexports.VerbMethods = {};\nexports.VerbMethods.Verb = function (parser, name) {\n    var c = parser.GetNext();\n    var start = ++parser.i;\n    if (c === '') {\n        throw new TexError_js_1.default('MissingArgFor', 'Missing argument for %1', name);\n    }\n    while (parser.i < parser.string.length &&\n        parser.string.charAt(parser.i) !== c) {\n        parser.i++;\n    }\n    if (parser.i === parser.string.length) {\n        throw new TexError_js_1.default('NoClosingDelim', 'Can\\'t find closing delimiter for %1', parser.currentCS);\n    }\n    var text = parser.string.slice(start, parser.i).replace(/ /g, '\\u00A0');\n    parser.i++;\n    parser.Push(parser.create('token', 'mtext', { mathvariant: TexConstants_js_1.TexConstant.Variant.MONOSPACE }, text));\n};\nnew SymbolMap_js_1.CommandMap('verb', { verb: 'Verb' }, exports.VerbMethods);\nexports.VerbConfiguration = Configuration_js_1.Configuration.create('verb', { handler: { macro: ['verb'] } });\n//# sourceMappingURL=VerbConfiguration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC92ZXJiL1ZlcmJDb25maWd1cmF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCLEdBQUcsbUJBQW1CO0FBQy9DLHlCQUF5QixtQkFBTyxDQUFDLHNGQUFxQjtBQUN0RCx3QkFBd0IsbUJBQU8sQ0FBQyxvRkFBb0I7QUFDcEQscUJBQXFCLG1CQUFPLENBQUMsOEVBQWlCO0FBQzlDLG9DQUFvQyxtQkFBTyxDQUFDLDRFQUFnQjtBQUM1RCxtQkFBbUI7QUFDbkIsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsOERBQThEO0FBQ2hIO0FBQ0Esd0NBQXdDLGNBQWM7QUFDdEQseUJBQXlCLHFEQUFxRCxXQUFXLG1CQUFtQjtBQUM1RyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL2lucHV0L3RleC92ZXJiL1ZlcmJDb25maWd1cmF0aW9uLmpzPzVlMDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZlcmJDb25maWd1cmF0aW9uID0gZXhwb3J0cy5WZXJiTWV0aG9kcyA9IHZvaWQgMDtcbnZhciBDb25maWd1cmF0aW9uX2pzXzEgPSByZXF1aXJlKFwiLi4vQ29uZmlndXJhdGlvbi5qc1wiKTtcbnZhciBUZXhDb25zdGFudHNfanNfMSA9IHJlcXVpcmUoXCIuLi9UZXhDb25zdGFudHMuanNcIik7XG52YXIgU3ltYm9sTWFwX2pzXzEgPSByZXF1aXJlKFwiLi4vU3ltYm9sTWFwLmpzXCIpO1xudmFyIFRleEVycm9yX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL1RleEVycm9yLmpzXCIpKTtcbmV4cG9ydHMuVmVyYk1ldGhvZHMgPSB7fTtcbmV4cG9ydHMuVmVyYk1ldGhvZHMuVmVyYiA9IGZ1bmN0aW9uIChwYXJzZXIsIG5hbWUpIHtcbiAgICB2YXIgYyA9IHBhcnNlci5HZXROZXh0KCk7XG4gICAgdmFyIHN0YXJ0ID0gKytwYXJzZXIuaTtcbiAgICBpZiAoYyA9PT0gJycpIHtcbiAgICAgICAgdGhyb3cgbmV3IFRleEVycm9yX2pzXzEuZGVmYXVsdCgnTWlzc2luZ0FyZ0ZvcicsICdNaXNzaW5nIGFyZ3VtZW50IGZvciAlMScsIG5hbWUpO1xuICAgIH1cbiAgICB3aGlsZSAocGFyc2VyLmkgPCBwYXJzZXIuc3RyaW5nLmxlbmd0aCAmJlxuICAgICAgICBwYXJzZXIuc3RyaW5nLmNoYXJBdChwYXJzZXIuaSkgIT09IGMpIHtcbiAgICAgICAgcGFyc2VyLmkrKztcbiAgICB9XG4gICAgaWYgKHBhcnNlci5pID09PSBwYXJzZXIuc3RyaW5nLmxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgVGV4RXJyb3JfanNfMS5kZWZhdWx0KCdOb0Nsb3NpbmdEZWxpbScsICdDYW5cXCd0IGZpbmQgY2xvc2luZyBkZWxpbWl0ZXIgZm9yICUxJywgcGFyc2VyLmN1cnJlbnRDUyk7XG4gICAgfVxuICAgIHZhciB0ZXh0ID0gcGFyc2VyLnN0cmluZy5zbGljZShzdGFydCwgcGFyc2VyLmkpLnJlcGxhY2UoLyAvZywgJ1xcdTAwQTAnKTtcbiAgICBwYXJzZXIuaSsrO1xuICAgIHBhcnNlci5QdXNoKHBhcnNlci5jcmVhdGUoJ3Rva2VuJywgJ210ZXh0JywgeyBtYXRodmFyaWFudDogVGV4Q29uc3RhbnRzX2pzXzEuVGV4Q29uc3RhbnQuVmFyaWFudC5NT05PU1BBQ0UgfSwgdGV4dCkpO1xufTtcbm5ldyBTeW1ib2xNYXBfanNfMS5Db21tYW5kTWFwKCd2ZXJiJywgeyB2ZXJiOiAnVmVyYicgfSwgZXhwb3J0cy5WZXJiTWV0aG9kcyk7XG5leHBvcnRzLlZlcmJDb25maWd1cmF0aW9uID0gQ29uZmlndXJhdGlvbl9qc18xLkNvbmZpZ3VyYXRpb24uY3JlYXRlKCd2ZXJiJywgeyBoYW5kbGVyOiB7IG1hY3JvOiBbJ3ZlcmInXSB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VmVyYkNvbmZpZ3VyYXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/input/tex/verb/VerbConfiguration.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/mathjax.js":
/*!*************************************************!*\
  !*** ./node_modules/mathjax-full/js/mathjax.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mathjax = void 0;\nvar version_js_1 = __webpack_require__(/*! ./components/version.js */ \"./node_modules/mathjax-full/js/components/version.js\");\nvar HandlerList_js_1 = __webpack_require__(/*! ./core/HandlerList.js */ \"./node_modules/mathjax-full/js/core/HandlerList.js\");\nvar Retries_js_1 = __webpack_require__(/*! ./util/Retries.js */ \"./node_modules/mathjax-full/js/util/Retries.js\");\nexports.mathjax = {\n    version: version_js_1.VERSION,\n    handlers: new HandlerList_js_1.HandlerList(),\n    document: function (document, options) {\n        return exports.mathjax.handlers.document(document, options);\n    },\n    handleRetriesFor: Retries_js_1.handleRetriesFor,\n    retryAfter: Retries_js_1.retryAfter,\n    asyncLoad: null,\n};\n//# sourceMappingURL=mathjax.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL21hdGhqYXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLG1CQUFtQixtQkFBTyxDQUFDLHFGQUF5QjtBQUNwRCx1QkFBdUIsbUJBQU8sQ0FBQyxpRkFBdUI7QUFDdEQsbUJBQW1CLG1CQUFPLENBQUMseUVBQW1CO0FBQzlDLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvbWF0aGpheC5qcz9iNmQyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tYXRoamF4ID0gdm9pZCAwO1xudmFyIHZlcnNpb25fanNfMSA9IHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvdmVyc2lvbi5qc1wiKTtcbnZhciBIYW5kbGVyTGlzdF9qc18xID0gcmVxdWlyZShcIi4vY29yZS9IYW5kbGVyTGlzdC5qc1wiKTtcbnZhciBSZXRyaWVzX2pzXzEgPSByZXF1aXJlKFwiLi91dGlsL1JldHJpZXMuanNcIik7XG5leHBvcnRzLm1hdGhqYXggPSB7XG4gICAgdmVyc2lvbjogdmVyc2lvbl9qc18xLlZFUlNJT04sXG4gICAgaGFuZGxlcnM6IG5ldyBIYW5kbGVyTGlzdF9qc18xLkhhbmRsZXJMaXN0KCksXG4gICAgZG9jdW1lbnQ6IGZ1bmN0aW9uIChkb2N1bWVudCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gZXhwb3J0cy5tYXRoamF4LmhhbmRsZXJzLmRvY3VtZW50KGRvY3VtZW50LCBvcHRpb25zKTtcbiAgICB9LFxuICAgIGhhbmRsZVJldHJpZXNGb3I6IFJldHJpZXNfanNfMS5oYW5kbGVSZXRyaWVzRm9yLFxuICAgIHJldHJ5QWZ0ZXI6IFJldHJpZXNfanNfMS5yZXRyeUFmdGVyLFxuICAgIGFzeW5jTG9hZDogbnVsbCxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tYXRoamF4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/mathjax.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/util/AsyncLoad.js":
/*!********************************************************!*\
  !*** ./node_modules/mathjax-full/js/util/AsyncLoad.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.asyncLoad = void 0;\nvar mathjax_js_1 = __webpack_require__(/*! ../mathjax.js */ \"./node_modules/mathjax-full/js/mathjax.js\");\nfunction asyncLoad(name) {\n    if (!mathjax_js_1.mathjax.asyncLoad) {\n        return Promise.reject(\"Can't load '\".concat(name, \"': No asyncLoad method specified\"));\n    }\n    return new Promise(function (ok, fail) {\n        var result = mathjax_js_1.mathjax.asyncLoad(name);\n        if (result instanceof Promise) {\n            result.then(function (value) { return ok(value); }).catch(function (err) { return fail(err); });\n        }\n        else {\n            ok(result);\n        }\n    });\n}\nexports.asyncLoad = asyncLoad;\n//# sourceMappingURL=AsyncLoad.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL3V0aWwvQXN5bmNMb2FkLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixtQkFBbUIsbUJBQU8sQ0FBQyxnRUFBZTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxtQkFBbUIseUJBQXlCLG1CQUFtQjtBQUMxRztBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGlCQUFpQjtBQUNqQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL3V0aWwvQXN5bmNMb2FkLmpzP2E2MGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmFzeW5jTG9hZCA9IHZvaWQgMDtcbnZhciBtYXRoamF4X2pzXzEgPSByZXF1aXJlKFwiLi4vbWF0aGpheC5qc1wiKTtcbmZ1bmN0aW9uIGFzeW5jTG9hZChuYW1lKSB7XG4gICAgaWYgKCFtYXRoamF4X2pzXzEubWF0aGpheC5hc3luY0xvYWQpIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KFwiQ2FuJ3QgbG9hZCAnXCIuY29uY2F0KG5hbWUsIFwiJzogTm8gYXN5bmNMb2FkIG1ldGhvZCBzcGVjaWZpZWRcIikpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKG9rLCBmYWlsKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSBtYXRoamF4X2pzXzEubWF0aGpheC5hc3luY0xvYWQobmFtZSk7XG4gICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICByZXN1bHQudGhlbihmdW5jdGlvbiAodmFsdWUpIHsgcmV0dXJuIG9rKHZhbHVlKTsgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgeyByZXR1cm4gZmFpbChlcnIpOyB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG9rKHJlc3VsdCk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydHMuYXN5bmNMb2FkID0gYXN5bmNMb2FkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXN5bmNMb2FkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/util/AsyncLoad.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/util/Entities.js":
/*!*******************************************************!*\
  !*** ./node_modules/mathjax-full/js/util/Entities.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.numeric = exports.translate = exports.remove = exports.add = exports.entities = exports.options = void 0;\nvar Retries_js_1 = __webpack_require__(/*! ./Retries.js */ \"./node_modules/mathjax-full/js/util/Retries.js\");\nvar AsyncLoad_js_1 = __webpack_require__(/*! ./AsyncLoad.js */ \"./node_modules/mathjax-full/js/util/AsyncLoad.js\");\nexports.options = {\n    loadMissingEntities: true\n};\nexports.entities = {\n    ApplyFunction: '\\u2061',\n    Backslash: '\\u2216',\n    Because: '\\u2235',\n    Breve: '\\u02D8',\n    Cap: '\\u22D2',\n    CenterDot: '\\u00B7',\n    CircleDot: '\\u2299',\n    CircleMinus: '\\u2296',\n    CirclePlus: '\\u2295',\n    CircleTimes: '\\u2297',\n    Congruent: '\\u2261',\n    ContourIntegral: '\\u222E',\n    Coproduct: '\\u2210',\n    Cross: '\\u2A2F',\n    Cup: '\\u22D3',\n    CupCap: '\\u224D',\n    Dagger: '\\u2021',\n    Del: '\\u2207',\n    Delta: '\\u0394',\n    Diamond: '\\u22C4',\n    DifferentialD: '\\u2146',\n    DotEqual: '\\u2250',\n    DoubleDot: '\\u00A8',\n    DoubleRightTee: '\\u22A8',\n    DoubleVerticalBar: '\\u2225',\n    DownArrow: '\\u2193',\n    DownLeftVector: '\\u21BD',\n    DownRightVector: '\\u21C1',\n    DownTee: '\\u22A4',\n    Downarrow: '\\u21D3',\n    Element: '\\u2208',\n    EqualTilde: '\\u2242',\n    Equilibrium: '\\u21CC',\n    Exists: '\\u2203',\n    ExponentialE: '\\u2147',\n    FilledVerySmallSquare: '\\u25AA',\n    ForAll: '\\u2200',\n    Gamma: '\\u0393',\n    Gg: '\\u22D9',\n    GreaterEqual: '\\u2265',\n    GreaterEqualLess: '\\u22DB',\n    GreaterFullEqual: '\\u2267',\n    GreaterLess: '\\u2277',\n    GreaterSlantEqual: '\\u2A7E',\n    GreaterTilde: '\\u2273',\n    Hacek: '\\u02C7',\n    Hat: '\\u005E',\n    HumpDownHump: '\\u224E',\n    HumpEqual: '\\u224F',\n    Im: '\\u2111',\n    ImaginaryI: '\\u2148',\n    Integral: '\\u222B',\n    Intersection: '\\u22C2',\n    InvisibleComma: '\\u2063',\n    InvisibleTimes: '\\u2062',\n    Lambda: '\\u039B',\n    Larr: '\\u219E',\n    LeftAngleBracket: '\\u27E8',\n    LeftArrow: '\\u2190',\n    LeftArrowRightArrow: '\\u21C6',\n    LeftCeiling: '\\u2308',\n    LeftDownVector: '\\u21C3',\n    LeftFloor: '\\u230A',\n    LeftRightArrow: '\\u2194',\n    LeftTee: '\\u22A3',\n    LeftTriangle: '\\u22B2',\n    LeftTriangleEqual: '\\u22B4',\n    LeftUpVector: '\\u21BF',\n    LeftVector: '\\u21BC',\n    Leftarrow: '\\u21D0',\n    Leftrightarrow: '\\u21D4',\n    LessEqualGreater: '\\u22DA',\n    LessFullEqual: '\\u2266',\n    LessGreater: '\\u2276',\n    LessSlantEqual: '\\u2A7D',\n    LessTilde: '\\u2272',\n    Ll: '\\u22D8',\n    Lleftarrow: '\\u21DA',\n    LongLeftArrow: '\\u27F5',\n    LongLeftRightArrow: '\\u27F7',\n    LongRightArrow: '\\u27F6',\n    Longleftarrow: '\\u27F8',\n    Longleftrightarrow: '\\u27FA',\n    Longrightarrow: '\\u27F9',\n    Lsh: '\\u21B0',\n    MinusPlus: '\\u2213',\n    NestedGreaterGreater: '\\u226B',\n    NestedLessLess: '\\u226A',\n    NotDoubleVerticalBar: '\\u2226',\n    NotElement: '\\u2209',\n    NotEqual: '\\u2260',\n    NotExists: '\\u2204',\n    NotGreater: '\\u226F',\n    NotGreaterEqual: '\\u2271',\n    NotLeftTriangle: '\\u22EA',\n    NotLeftTriangleEqual: '\\u22EC',\n    NotLess: '\\u226E',\n    NotLessEqual: '\\u2270',\n    NotPrecedes: '\\u2280',\n    NotPrecedesSlantEqual: '\\u22E0',\n    NotRightTriangle: '\\u22EB',\n    NotRightTriangleEqual: '\\u22ED',\n    NotSubsetEqual: '\\u2288',\n    NotSucceeds: '\\u2281',\n    NotSucceedsSlantEqual: '\\u22E1',\n    NotSupersetEqual: '\\u2289',\n    NotTilde: '\\u2241',\n    NotVerticalBar: '\\u2224',\n    Omega: '\\u03A9',\n    OverBar: '\\u203E',\n    OverBrace: '\\u23DE',\n    PartialD: '\\u2202',\n    Phi: '\\u03A6',\n    Pi: '\\u03A0',\n    PlusMinus: '\\u00B1',\n    Precedes: '\\u227A',\n    PrecedesEqual: '\\u2AAF',\n    PrecedesSlantEqual: '\\u227C',\n    PrecedesTilde: '\\u227E',\n    Product: '\\u220F',\n    Proportional: '\\u221D',\n    Psi: '\\u03A8',\n    Rarr: '\\u21A0',\n    Re: '\\u211C',\n    ReverseEquilibrium: '\\u21CB',\n    RightAngleBracket: '\\u27E9',\n    RightArrow: '\\u2192',\n    RightArrowLeftArrow: '\\u21C4',\n    RightCeiling: '\\u2309',\n    RightDownVector: '\\u21C2',\n    RightFloor: '\\u230B',\n    RightTee: '\\u22A2',\n    RightTeeArrow: '\\u21A6',\n    RightTriangle: '\\u22B3',\n    RightTriangleEqual: '\\u22B5',\n    RightUpVector: '\\u21BE',\n    RightVector: '\\u21C0',\n    Rightarrow: '\\u21D2',\n    Rrightarrow: '\\u21DB',\n    Rsh: '\\u21B1',\n    Sigma: '\\u03A3',\n    SmallCircle: '\\u2218',\n    Sqrt: '\\u221A',\n    Square: '\\u25A1',\n    SquareIntersection: '\\u2293',\n    SquareSubset: '\\u228F',\n    SquareSubsetEqual: '\\u2291',\n    SquareSuperset: '\\u2290',\n    SquareSupersetEqual: '\\u2292',\n    SquareUnion: '\\u2294',\n    Star: '\\u22C6',\n    Subset: '\\u22D0',\n    SubsetEqual: '\\u2286',\n    Succeeds: '\\u227B',\n    SucceedsEqual: '\\u2AB0',\n    SucceedsSlantEqual: '\\u227D',\n    SucceedsTilde: '\\u227F',\n    SuchThat: '\\u220B',\n    Sum: '\\u2211',\n    Superset: '\\u2283',\n    SupersetEqual: '\\u2287',\n    Supset: '\\u22D1',\n    Therefore: '\\u2234',\n    Theta: '\\u0398',\n    Tilde: '\\u223C',\n    TildeEqual: '\\u2243',\n    TildeFullEqual: '\\u2245',\n    TildeTilde: '\\u2248',\n    UnderBar: '\\u005F',\n    UnderBrace: '\\u23DF',\n    Union: '\\u22C3',\n    UnionPlus: '\\u228E',\n    UpArrow: '\\u2191',\n    UpDownArrow: '\\u2195',\n    UpTee: '\\u22A5',\n    Uparrow: '\\u21D1',\n    Updownarrow: '\\u21D5',\n    Upsilon: '\\u03A5',\n    Vdash: '\\u22A9',\n    Vee: '\\u22C1',\n    VerticalBar: '\\u2223',\n    VerticalTilde: '\\u2240',\n    Vvdash: '\\u22AA',\n    Wedge: '\\u22C0',\n    Xi: '\\u039E',\n    amp: '\\u0026',\n    acute: '\\u00B4',\n    aleph: '\\u2135',\n    alpha: '\\u03B1',\n    amalg: '\\u2A3F',\n    and: '\\u2227',\n    ang: '\\u2220',\n    angmsd: '\\u2221',\n    angsph: '\\u2222',\n    ape: '\\u224A',\n    backprime: '\\u2035',\n    backsim: '\\u223D',\n    backsimeq: '\\u22CD',\n    beta: '\\u03B2',\n    beth: '\\u2136',\n    between: '\\u226C',\n    bigcirc: '\\u25EF',\n    bigodot: '\\u2A00',\n    bigoplus: '\\u2A01',\n    bigotimes: '\\u2A02',\n    bigsqcup: '\\u2A06',\n    bigstar: '\\u2605',\n    bigtriangledown: '\\u25BD',\n    bigtriangleup: '\\u25B3',\n    biguplus: '\\u2A04',\n    blacklozenge: '\\u29EB',\n    blacktriangle: '\\u25B4',\n    blacktriangledown: '\\u25BE',\n    blacktriangleleft: '\\u25C2',\n    bowtie: '\\u22C8',\n    boxdl: '\\u2510',\n    boxdr: '\\u250C',\n    boxminus: '\\u229F',\n    boxplus: '\\u229E',\n    boxtimes: '\\u22A0',\n    boxul: '\\u2518',\n    boxur: '\\u2514',\n    bsol: '\\u005C',\n    bull: '\\u2022',\n    cap: '\\u2229',\n    check: '\\u2713',\n    chi: '\\u03C7',\n    circ: '\\u02C6',\n    circeq: '\\u2257',\n    circlearrowleft: '\\u21BA',\n    circlearrowright: '\\u21BB',\n    circledR: '\\u00AE',\n    circledS: '\\u24C8',\n    circledast: '\\u229B',\n    circledcirc: '\\u229A',\n    circleddash: '\\u229D',\n    clubs: '\\u2663',\n    colon: '\\u003A',\n    comp: '\\u2201',\n    ctdot: '\\u22EF',\n    cuepr: '\\u22DE',\n    cuesc: '\\u22DF',\n    cularr: '\\u21B6',\n    cup: '\\u222A',\n    curarr: '\\u21B7',\n    curlyvee: '\\u22CE',\n    curlywedge: '\\u22CF',\n    dagger: '\\u2020',\n    daleth: '\\u2138',\n    ddarr: '\\u21CA',\n    deg: '\\u00B0',\n    delta: '\\u03B4',\n    digamma: '\\u03DD',\n    div: '\\u00F7',\n    divideontimes: '\\u22C7',\n    dot: '\\u02D9',\n    doteqdot: '\\u2251',\n    dotplus: '\\u2214',\n    dotsquare: '\\u22A1',\n    dtdot: '\\u22F1',\n    ecir: '\\u2256',\n    efDot: '\\u2252',\n    egs: '\\u2A96',\n    ell: '\\u2113',\n    els: '\\u2A95',\n    empty: '\\u2205',\n    epsi: '\\u03B5',\n    epsiv: '\\u03F5',\n    erDot: '\\u2253',\n    eta: '\\u03B7',\n    eth: '\\u00F0',\n    flat: '\\u266D',\n    fork: '\\u22D4',\n    frown: '\\u2322',\n    gEl: '\\u2A8C',\n    gamma: '\\u03B3',\n    gap: '\\u2A86',\n    gimel: '\\u2137',\n    gnE: '\\u2269',\n    gnap: '\\u2A8A',\n    gne: '\\u2A88',\n    gnsim: '\\u22E7',\n    gt: '\\u003E',\n    gtdot: '\\u22D7',\n    harrw: '\\u21AD',\n    hbar: '\\u210F',\n    hellip: '\\u2026',\n    hookleftarrow: '\\u21A9',\n    hookrightarrow: '\\u21AA',\n    imath: '\\u0131',\n    infin: '\\u221E',\n    intcal: '\\u22BA',\n    iota: '\\u03B9',\n    jmath: '\\u0237',\n    kappa: '\\u03BA',\n    kappav: '\\u03F0',\n    lEg: '\\u2A8B',\n    lambda: '\\u03BB',\n    lap: '\\u2A85',\n    larrlp: '\\u21AB',\n    larrtl: '\\u21A2',\n    lbrace: '\\u007B',\n    lbrack: '\\u005B',\n    le: '\\u2264',\n    leftleftarrows: '\\u21C7',\n    leftthreetimes: '\\u22CB',\n    lessdot: '\\u22D6',\n    lmoust: '\\u23B0',\n    lnE: '\\u2268',\n    lnap: '\\u2A89',\n    lne: '\\u2A87',\n    lnsim: '\\u22E6',\n    longmapsto: '\\u27FC',\n    looparrowright: '\\u21AC',\n    lowast: '\\u2217',\n    loz: '\\u25CA',\n    lt: '\\u003C',\n    ltimes: '\\u22C9',\n    ltri: '\\u25C3',\n    macr: '\\u00AF',\n    malt: '\\u2720',\n    mho: '\\u2127',\n    mu: '\\u03BC',\n    multimap: '\\u22B8',\n    nLeftarrow: '\\u21CD',\n    nLeftrightarrow: '\\u21CE',\n    nRightarrow: '\\u21CF',\n    nVDash: '\\u22AF',\n    nVdash: '\\u22AE',\n    natur: '\\u266E',\n    nearr: '\\u2197',\n    nharr: '\\u21AE',\n    nlarr: '\\u219A',\n    not: '\\u00AC',\n    nrarr: '\\u219B',\n    nu: '\\u03BD',\n    nvDash: '\\u22AD',\n    nvdash: '\\u22AC',\n    nwarr: '\\u2196',\n    omega: '\\u03C9',\n    omicron: '\\u03BF',\n    or: '\\u2228',\n    osol: '\\u2298',\n    period: '\\u002E',\n    phi: '\\u03C6',\n    phiv: '\\u03D5',\n    pi: '\\u03C0',\n    piv: '\\u03D6',\n    prap: '\\u2AB7',\n    precnapprox: '\\u2AB9',\n    precneqq: '\\u2AB5',\n    precnsim: '\\u22E8',\n    prime: '\\u2032',\n    psi: '\\u03C8',\n    quot: '\\u0022',\n    rarrtl: '\\u21A3',\n    rbrace: '\\u007D',\n    rbrack: '\\u005D',\n    rho: '\\u03C1',\n    rhov: '\\u03F1',\n    rightrightarrows: '\\u21C9',\n    rightthreetimes: '\\u22CC',\n    ring: '\\u02DA',\n    rmoust: '\\u23B1',\n    rtimes: '\\u22CA',\n    rtri: '\\u25B9',\n    scap: '\\u2AB8',\n    scnE: '\\u2AB6',\n    scnap: '\\u2ABA',\n    scnsim: '\\u22E9',\n    sdot: '\\u22C5',\n    searr: '\\u2198',\n    sect: '\\u00A7',\n    sharp: '\\u266F',\n    sigma: '\\u03C3',\n    sigmav: '\\u03C2',\n    simne: '\\u2246',\n    smile: '\\u2323',\n    spades: '\\u2660',\n    sub: '\\u2282',\n    subE: '\\u2AC5',\n    subnE: '\\u2ACB',\n    subne: '\\u228A',\n    supE: '\\u2AC6',\n    supnE: '\\u2ACC',\n    supne: '\\u228B',\n    swarr: '\\u2199',\n    tau: '\\u03C4',\n    theta: '\\u03B8',\n    thetav: '\\u03D1',\n    tilde: '\\u02DC',\n    times: '\\u00D7',\n    triangle: '\\u25B5',\n    triangleq: '\\u225C',\n    upsi: '\\u03C5',\n    upuparrows: '\\u21C8',\n    veebar: '\\u22BB',\n    vellip: '\\u22EE',\n    weierp: '\\u2118',\n    xi: '\\u03BE',\n    yen: '\\u00A5',\n    zeta: '\\u03B6',\n    zigrarr: '\\u21DD',\n    nbsp: '\\u00A0',\n    rsquo: '\\u2019',\n    lsquo: '\\u2018'\n};\nvar loaded = {};\nfunction add(additions, file) {\n    Object.assign(exports.entities, additions);\n    loaded[file] = true;\n}\nexports.add = add;\nfunction remove(entity) {\n    delete exports.entities[entity];\n}\nexports.remove = remove;\nfunction translate(text) {\n    return text.replace(/&([a-z][a-z0-9]*|#(?:[0-9]+|x[0-9a-f]+));/ig, replace);\n}\nexports.translate = translate;\nfunction replace(match, entity) {\n    if (entity.charAt(0) === '#') {\n        return numeric(entity.slice(1));\n    }\n    if (exports.entities[entity]) {\n        return exports.entities[entity];\n    }\n    if (exports.options['loadMissingEntities']) {\n        var file = (entity.match(/^[a-zA-Z](fr|scr|opf)$/) ? RegExp.$1 : entity.charAt(0).toLowerCase());\n        if (!loaded[file]) {\n            loaded[file] = true;\n            (0, Retries_js_1.retryAfter)((0, AsyncLoad_js_1.asyncLoad)('./util/entities/' + file + '.js'));\n        }\n    }\n    return match;\n}\nfunction numeric(entity) {\n    var n = (entity.charAt(0) === 'x' ?\n        parseInt(entity.slice(1), 16) :\n        parseInt(entity));\n    return String.fromCodePoint(n);\n}\nexports.numeric = numeric;\n//# sourceMappingURL=Entities.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/util/Entities.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/util/FunctionList.js":
/*!***********************************************************!*\
  !*** ./node_modules/mathjax-full/js/util/FunctionList.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FunctionList = void 0;\nvar PrioritizedList_js_1 = __webpack_require__(/*! ./PrioritizedList.js */ \"./node_modules/mathjax-full/js/util/PrioritizedList.js\");\nvar FunctionList = (function (_super) {\n    __extends(FunctionList, _super);\n    function FunctionList() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FunctionList.prototype.execute = function () {\n        var e_1, _a;\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        try {\n            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var item = _c.value;\n                var result = item.item.apply(item, __spreadArray([], __read(data), false));\n                if (result === false) {\n                    return false;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return true;\n    };\n    FunctionList.prototype.asyncExecute = function () {\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        var i = -1;\n        var items = this.items;\n        return new Promise(function (ok, fail) {\n            (function execute() {\n                var _a;\n                while (++i < items.length) {\n                    var result = (_a = items[i]).item.apply(_a, __spreadArray([], __read(data), false));\n                    if (result instanceof Promise) {\n                        result.then(execute).catch(function (err) { return fail(err); });\n                        return;\n                    }\n                    if (result === false) {\n                        ok(false);\n                        return;\n                    }\n                }\n                ok(true);\n            })();\n        });\n    };\n    return FunctionList;\n}(PrioritizedList_js_1.PrioritizedList));\nexports.FunctionList = FunctionList;\n//# sourceMappingURL=FunctionList.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL3V0aWwvRnVuY3Rpb25MaXN0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnQkFBZ0Isc0NBQXNDLGtCQUFrQjtBQUN2Riw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsTUFBTTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RSxPQUFPO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQiwyQkFBMkIsbUJBQU8sQ0FBQyxvRkFBc0I7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix1QkFBdUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0EsMERBQTBELFVBQVU7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHVCQUF1QjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9FQUFvRSxtQkFBbUI7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLENBQUM7QUFDRCxvQkFBb0I7QUFDcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21hdGhqYXgtZnVsbC9qcy91dGlsL0Z1bmN0aW9uTGlzdC5qcz9lYzU3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbnZhciBfX3ZhbHVlcyA9ICh0aGlzICYmIHRoaXMuX192YWx1ZXMpIHx8IGZ1bmN0aW9uKG8pIHtcbiAgICB2YXIgcyA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBTeW1ib2wuaXRlcmF0b3IsIG0gPSBzICYmIG9bc10sIGkgPSAwO1xuICAgIGlmIChtKSByZXR1cm4gbS5jYWxsKG8pO1xuICAgIGlmIChvICYmIHR5cGVvZiBvLmxlbmd0aCA9PT0gXCJudW1iZXJcIikgcmV0dXJuIHtcbiAgICAgICAgbmV4dDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKG8gJiYgaSA+PSBvLmxlbmd0aCkgbyA9IHZvaWQgMDtcbiAgICAgICAgICAgIHJldHVybiB7IHZhbHVlOiBvICYmIG9baSsrXSwgZG9uZTogIW8gfTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihzID8gXCJPYmplY3QgaXMgbm90IGl0ZXJhYmxlLlwiIDogXCJTeW1ib2wuaXRlcmF0b3IgaXMgbm90IGRlZmluZWQuXCIpO1xufTtcbnZhciBfX3JlYWQgPSAodGhpcyAmJiB0aGlzLl9fcmVhZCkgfHwgZnVuY3Rpb24gKG8sIG4pIHtcbiAgICB2YXIgbSA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvW1N5bWJvbC5pdGVyYXRvcl07XG4gICAgaWYgKCFtKSByZXR1cm4gbztcbiAgICB2YXIgaSA9IG0uY2FsbChvKSwgciwgYXIgPSBbXSwgZTtcbiAgICB0cnkge1xuICAgICAgICB3aGlsZSAoKG4gPT09IHZvaWQgMCB8fCBuLS0gPiAwKSAmJiAhKHIgPSBpLm5leHQoKSkuZG9uZSkgYXIucHVzaChyLnZhbHVlKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7IGUgPSB7IGVycm9yOiBlcnJvciB9OyB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAociAmJiAhci5kb25lICYmIChtID0gaVtcInJldHVyblwiXSkpIG0uY2FsbChpKTtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHsgaWYgKGUpIHRocm93IGUuZXJyb3I7IH1cbiAgICB9XG4gICAgcmV0dXJuIGFyO1xufTtcbnZhciBfX3NwcmVhZEFycmF5ID0gKHRoaXMgJiYgdGhpcy5fX3NwcmVhZEFycmF5KSB8fCBmdW5jdGlvbiAodG8sIGZyb20sIHBhY2spIHtcbiAgICBpZiAocGFjayB8fCBhcmd1bWVudHMubGVuZ3RoID09PSAyKSBmb3IgKHZhciBpID0gMCwgbCA9IGZyb20ubGVuZ3RoLCBhcjsgaSA8IGw7IGkrKykge1xuICAgICAgICBpZiAoYXIgfHwgIShpIGluIGZyb20pKSB7XG4gICAgICAgICAgICBpZiAoIWFyKSBhciA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGZyb20sIDAsIGkpO1xuICAgICAgICAgICAgYXJbaV0gPSBmcm9tW2ldO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0by5jb25jYXQoYXIgfHwgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSkpO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRnVuY3Rpb25MaXN0ID0gdm9pZCAwO1xudmFyIFByaW9yaXRpemVkTGlzdF9qc18xID0gcmVxdWlyZShcIi4vUHJpb3JpdGl6ZWRMaXN0LmpzXCIpO1xudmFyIEZ1bmN0aW9uTGlzdCA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEZ1bmN0aW9uTGlzdCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBGdW5jdGlvbkxpc3QoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICB9XG4gICAgRnVuY3Rpb25MaXN0LnByb3RvdHlwZS5leGVjdXRlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZV8xLCBfYTtcbiAgICAgICAgdmFyIGRhdGEgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIGRhdGFbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yICh2YXIgX2IgPSBfX3ZhbHVlcyh0aGlzKSwgX2MgPSBfYi5uZXh0KCk7ICFfYy5kb25lOyBfYyA9IF9iLm5leHQoKSkge1xuICAgICAgICAgICAgICAgIHZhciBpdGVtID0gX2MudmFsdWU7XG4gICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9IGl0ZW0uaXRlbS5hcHBseShpdGVtLCBfX3NwcmVhZEFycmF5KFtdLCBfX3JlYWQoZGF0YSksIGZhbHNlKSk7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZV8xXzEpIHsgZV8xID0geyBlcnJvcjogZV8xXzEgfTsgfVxuICAgICAgICBmaW5hbGx5IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgaWYgKF9jICYmICFfYy5kb25lICYmIChfYSA9IF9iLnJldHVybikpIF9hLmNhbGwoX2IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZmluYWxseSB7IGlmIChlXzEpIHRocm93IGVfMS5lcnJvcjsgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH07XG4gICAgRnVuY3Rpb25MaXN0LnByb3RvdHlwZS5hc3luY0V4ZWN1dGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBkYXRhID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBkYXRhW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGkgPSAtMTtcbiAgICAgICAgdmFyIGl0ZW1zID0gdGhpcy5pdGVtcztcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChvaywgZmFpbCkge1xuICAgICAgICAgICAgKGZ1bmN0aW9uIGV4ZWN1dGUoKSB7XG4gICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgIHdoaWxlICgrK2kgPCBpdGVtcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJlc3VsdCA9IChfYSA9IGl0ZW1zW2ldKS5pdGVtLmFwcGx5KF9hLCBfX3NwcmVhZEFycmF5KFtdLCBfX3JlYWQoZGF0YSksIGZhbHNlKSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQudGhlbihleGVjdXRlKS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7IHJldHVybiBmYWlsKGVycik7IH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvayhmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgb2sodHJ1ZSk7XG4gICAgICAgICAgICB9KSgpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBGdW5jdGlvbkxpc3Q7XG59KFByaW9yaXRpemVkTGlzdF9qc18xLlByaW9yaXRpemVkTGlzdCkpO1xuZXhwb3J0cy5GdW5jdGlvbkxpc3QgPSBGdW5jdGlvbkxpc3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1GdW5jdGlvbkxpc3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/util/FunctionList.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/util/Options.js":
/*!******************************************************!*\
  !*** ./node_modules/mathjax-full/js/util/Options.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.lookup = exports.separateOptions = exports.selectOptionsFromKeys = exports.selectOptions = exports.userOptions = exports.defaultOptions = exports.insert = exports.copy = exports.keys = exports.makeArray = exports.expandable = exports.Expandable = exports.OPTIONS = exports.REMOVE = exports.APPEND = exports.isObject = void 0;\nvar OBJECT = {}.constructor;\nfunction isObject(obj) {\n    return typeof obj === 'object' && obj !== null &&\n        (obj.constructor === OBJECT || obj.constructor === Expandable);\n}\nexports.isObject = isObject;\nexports.APPEND = '[+]';\nexports.REMOVE = '[-]';\nexports.OPTIONS = {\n    invalidOption: 'warn',\n    optionError: function (message, _key) {\n        if (exports.OPTIONS.invalidOption === 'fatal') {\n            throw new Error(message);\n        }\n        console.warn('MathJax: ' + message);\n    }\n};\nvar Expandable = (function () {\n    function Expandable() {\n    }\n    return Expandable;\n}());\nexports.Expandable = Expandable;\nfunction expandable(def) {\n    return Object.assign(Object.create(Expandable.prototype), def);\n}\nexports.expandable = expandable;\nfunction makeArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\nexports.makeArray = makeArray;\nfunction keys(def) {\n    if (!def) {\n        return [];\n    }\n    return Object.keys(def).concat(Object.getOwnPropertySymbols(def));\n}\nexports.keys = keys;\nfunction copy(def) {\n    var e_1, _a;\n    var props = {};\n    try {\n        for (var _b = __values(keys(def)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var key = _c.value;\n            var prop = Object.getOwnPropertyDescriptor(def, key);\n            var value = prop.value;\n            if (Array.isArray(value)) {\n                prop.value = insert([], value, false);\n            }\n            else if (isObject(value)) {\n                prop.value = copy(value);\n            }\n            if (prop.enumerable) {\n                props[key] = prop;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return Object.defineProperties(def.constructor === Expandable ? expandable({}) : {}, props);\n}\nexports.copy = copy;\nfunction insert(dst, src, warn) {\n    var e_2, _a;\n    if (warn === void 0) { warn = true; }\n    var _loop_1 = function (key) {\n        if (warn && dst[key] === undefined && dst.constructor !== Expandable) {\n            if (typeof key === 'symbol') {\n                key = key.toString();\n            }\n            exports.OPTIONS.optionError(\"Invalid option \\\"\".concat(key, \"\\\" (no default value).\"), key);\n            return \"continue\";\n        }\n        var sval = src[key], dval = dst[key];\n        if (isObject(sval) && dval !== null &&\n            (typeof dval === 'object' || typeof dval === 'function')) {\n            var ids = keys(sval);\n            if (Array.isArray(dval) &&\n                ((ids.length === 1 && (ids[0] === exports.APPEND || ids[0] === exports.REMOVE) && Array.isArray(sval[ids[0]])) ||\n                    (ids.length === 2 && ids.sort().join(',') === exports.APPEND + ',' + exports.REMOVE &&\n                        Array.isArray(sval[exports.APPEND]) && Array.isArray(sval[exports.REMOVE])))) {\n                if (sval[exports.REMOVE]) {\n                    dval = dst[key] = dval.filter(function (x) { return sval[exports.REMOVE].indexOf(x) < 0; });\n                }\n                if (sval[exports.APPEND]) {\n                    dst[key] = __spreadArray(__spreadArray([], __read(dval), false), __read(sval[exports.APPEND]), false);\n                }\n            }\n            else {\n                insert(dval, sval, warn);\n            }\n        }\n        else if (Array.isArray(sval)) {\n            dst[key] = [];\n            insert(dst[key], sval, false);\n        }\n        else if (isObject(sval)) {\n            dst[key] = copy(sval);\n        }\n        else {\n            dst[key] = sval;\n        }\n    };\n    try {\n        for (var _b = __values(keys(src)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var key = _c.value;\n            _loop_1(key);\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return dst;\n}\nexports.insert = insert;\nfunction defaultOptions(options) {\n    var defs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        defs[_i - 1] = arguments[_i];\n    }\n    defs.forEach(function (def) { return insert(options, def, false); });\n    return options;\n}\nexports.defaultOptions = defaultOptions;\nfunction userOptions(options) {\n    var defs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        defs[_i - 1] = arguments[_i];\n    }\n    defs.forEach(function (def) { return insert(options, def, true); });\n    return options;\n}\nexports.userOptions = userOptions;\nfunction selectOptions(options) {\n    var e_3, _a;\n    var keys = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        keys[_i - 1] = arguments[_i];\n    }\n    var subset = {};\n    try {\n        for (var keys_1 = __values(keys), keys_1_1 = keys_1.next(); !keys_1_1.done; keys_1_1 = keys_1.next()) {\n            var key = keys_1_1.value;\n            if (options.hasOwnProperty(key)) {\n                subset[key] = options[key];\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (keys_1_1 && !keys_1_1.done && (_a = keys_1.return)) _a.call(keys_1);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return subset;\n}\nexports.selectOptions = selectOptions;\nfunction selectOptionsFromKeys(options, object) {\n    return selectOptions.apply(void 0, __spreadArray([options], __read(Object.keys(object)), false));\n}\nexports.selectOptionsFromKeys = selectOptionsFromKeys;\nfunction separateOptions(options) {\n    var e_4, _a, e_5, _b;\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    var results = [];\n    try {\n        for (var objects_1 = __values(objects), objects_1_1 = objects_1.next(); !objects_1_1.done; objects_1_1 = objects_1.next()) {\n            var object = objects_1_1.value;\n            var exists = {}, missing = {};\n            try {\n                for (var _c = (e_5 = void 0, __values(Object.keys(options || {}))), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var key = _d.value;\n                    (object[key] === undefined ? missing : exists)[key] = options[key];\n                }\n            }\n            catch (e_5_1) { e_5 = { error: e_5_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n                }\n                finally { if (e_5) throw e_5.error; }\n            }\n            results.push(exists);\n            options = missing;\n        }\n    }\n    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n    finally {\n        try {\n            if (objects_1_1 && !objects_1_1.done && (_a = objects_1.return)) _a.call(objects_1);\n        }\n        finally { if (e_4) throw e_4.error; }\n    }\n    results.unshift(options);\n    return results;\n}\nexports.separateOptions = separateOptions;\nfunction lookup(name, lookup, def) {\n    if (def === void 0) { def = null; }\n    return (lookup.hasOwnProperty(name) ? lookup[name] : def);\n}\nexports.lookup = lookup;\n//# sourceMappingURL=Options.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/util/Options.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/util/PrioritizedList.js":
/*!**************************************************************!*\
  !*** ./node_modules/mathjax-full/js/util/PrioritizedList.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PrioritizedList = void 0;\nvar PrioritizedList = (function () {\n    function PrioritizedList() {\n        this.items = [];\n        this.items = [];\n    }\n    PrioritizedList.prototype[Symbol.iterator] = function () {\n        var i = 0;\n        var items = this.items;\n        return {\n            next: function () {\n                return { value: items[i++], done: (i > items.length) };\n            }\n        };\n    };\n    PrioritizedList.prototype.add = function (item, priority) {\n        if (priority === void 0) { priority = PrioritizedList.DEFAULTPRIORITY; }\n        var i = this.items.length;\n        do {\n            i--;\n        } while (i >= 0 && priority < this.items[i].priority);\n        this.items.splice(i + 1, 0, { item: item, priority: priority });\n        return item;\n    };\n    PrioritizedList.prototype.remove = function (item) {\n        var i = this.items.length;\n        do {\n            i--;\n        } while (i >= 0 && this.items[i].item !== item);\n        if (i >= 0) {\n            this.items.splice(i, 1);\n        }\n    };\n    PrioritizedList.DEFAULTPRIORITY = 5;\n    return PrioritizedList;\n}());\nexports.PrioritizedList = PrioritizedList;\n//# sourceMappingURL=PrioritizedList.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL3V0aWwvUHJpb3JpdGl6ZWRMaXN0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Ysc0NBQXNDLGdDQUFnQztBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHVCQUF1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL3V0aWwvUHJpb3JpdGl6ZWRMaXN0LmpzP2ZmMjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlByaW9yaXRpemVkTGlzdCA9IHZvaWQgMDtcbnZhciBQcmlvcml0aXplZExpc3QgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFByaW9yaXRpemVkTGlzdCgpIHtcbiAgICAgICAgdGhpcy5pdGVtcyA9IFtdO1xuICAgICAgICB0aGlzLml0ZW1zID0gW107XG4gICAgfVxuICAgIFByaW9yaXRpemVkTGlzdC5wcm90b3R5cGVbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGkgPSAwO1xuICAgICAgICB2YXIgaXRlbXMgPSB0aGlzLml0ZW1zO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmV4dDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB7IHZhbHVlOiBpdGVtc1tpKytdLCBkb25lOiAoaSA+IGl0ZW1zLmxlbmd0aCkgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9O1xuICAgIFByaW9yaXRpemVkTGlzdC5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24gKGl0ZW0sIHByaW9yaXR5KSB7XG4gICAgICAgIGlmIChwcmlvcml0eSA9PT0gdm9pZCAwKSB7IHByaW9yaXR5ID0gUHJpb3JpdGl6ZWRMaXN0LkRFRkFVTFRQUklPUklUWTsgfVxuICAgICAgICB2YXIgaSA9IHRoaXMuaXRlbXMubGVuZ3RoO1xuICAgICAgICBkbyB7XG4gICAgICAgICAgICBpLS07XG4gICAgICAgIH0gd2hpbGUgKGkgPj0gMCAmJiBwcmlvcml0eSA8IHRoaXMuaXRlbXNbaV0ucHJpb3JpdHkpO1xuICAgICAgICB0aGlzLml0ZW1zLnNwbGljZShpICsgMSwgMCwgeyBpdGVtOiBpdGVtLCBwcmlvcml0eTogcHJpb3JpdHkgfSk7XG4gICAgICAgIHJldHVybiBpdGVtO1xuICAgIH07XG4gICAgUHJpb3JpdGl6ZWRMaXN0LnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICB2YXIgaSA9IHRoaXMuaXRlbXMubGVuZ3RoO1xuICAgICAgICBkbyB7XG4gICAgICAgICAgICBpLS07XG4gICAgICAgIH0gd2hpbGUgKGkgPj0gMCAmJiB0aGlzLml0ZW1zW2ldLml0ZW0gIT09IGl0ZW0pO1xuICAgICAgICBpZiAoaSA+PSAwKSB7XG4gICAgICAgICAgICB0aGlzLml0ZW1zLnNwbGljZShpLCAxKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgUHJpb3JpdGl6ZWRMaXN0LkRFRkFVTFRQUklPUklUWSA9IDU7XG4gICAgcmV0dXJuIFByaW9yaXRpemVkTGlzdDtcbn0oKSk7XG5leHBvcnRzLlByaW9yaXRpemVkTGlzdCA9IFByaW9yaXRpemVkTGlzdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVByaW9yaXRpemVkTGlzdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/util/PrioritizedList.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/util/Retries.js":
/*!******************************************************!*\
  !*** ./node_modules/mathjax-full/js/util/Retries.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.retryAfter = exports.handleRetriesFor = void 0;\nfunction handleRetriesFor(code) {\n    return new Promise(function run(ok, fail) {\n        try {\n            ok(code());\n        }\n        catch (err) {\n            if (err.retry && err.retry instanceof Promise) {\n                err.retry.then(function () { return run(ok, fail); })\n                    .catch(function (perr) { return fail(perr); });\n            }\n            else if (err.restart && err.restart.isCallback) {\n                MathJax.Callback.After(function () { return run(ok, fail); }, err.restart);\n            }\n            else {\n                fail(err);\n            }\n        }\n    });\n}\nexports.handleRetriesFor = handleRetriesFor;\nfunction retryAfter(promise) {\n    var err = new Error('MathJax retry');\n    err.retry = promise;\n    throw err;\n}\nexports.retryAfter = retryAfter;\n//# sourceMappingURL=Retries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL3V0aWwvUmV0cmllcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0IsR0FBRyx3QkFBd0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsdUJBQXVCO0FBQ3BFLDZDQUE2QyxvQkFBb0I7QUFDakU7QUFDQTtBQUNBLHFEQUFxRCx1QkFBdUI7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvdXRpbC9SZXRyaWVzLmpzPzU5NDAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnJldHJ5QWZ0ZXIgPSBleHBvcnRzLmhhbmRsZVJldHJpZXNGb3IgPSB2b2lkIDA7XG5mdW5jdGlvbiBoYW5kbGVSZXRyaWVzRm9yKGNvZGUpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gcnVuKG9rLCBmYWlsKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBvayhjb2RlKCkpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIGlmIChlcnIucmV0cnkgJiYgZXJyLnJldHJ5IGluc3RhbmNlb2YgUHJvbWlzZSkge1xuICAgICAgICAgICAgICAgIGVyci5yZXRyeS50aGVuKGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJ1bihvaywgZmFpbCk7IH0pXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAocGVycikgeyByZXR1cm4gZmFpbChwZXJyKTsgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChlcnIucmVzdGFydCAmJiBlcnIucmVzdGFydC5pc0NhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgTWF0aEpheC5DYWxsYmFjay5BZnRlcihmdW5jdGlvbiAoKSB7IHJldHVybiBydW4ob2ssIGZhaWwpOyB9LCBlcnIucmVzdGFydCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBmYWlsKGVycik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydHMuaGFuZGxlUmV0cmllc0ZvciA9IGhhbmRsZVJldHJpZXNGb3I7XG5mdW5jdGlvbiByZXRyeUFmdGVyKHByb21pc2UpIHtcbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKCdNYXRoSmF4IHJldHJ5Jyk7XG4gICAgZXJyLnJldHJ5ID0gcHJvbWlzZTtcbiAgICB0aHJvdyBlcnI7XG59XG5leHBvcnRzLnJldHJ5QWZ0ZXIgPSByZXRyeUFmdGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UmV0cmllcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/util/Retries.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/util/lengths.js":
/*!******************************************************!*\
  !*** ./node_modules/mathjax-full/js/util/lengths.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.px = exports.emRounded = exports.em = exports.percent = exports.length2em = exports.MATHSPACE = exports.RELUNITS = exports.UNITS = exports.BIGDIMEN = void 0;\nexports.BIGDIMEN = 1000000;\nexports.UNITS = {\n    px: 1,\n    'in': 96,\n    cm: 96 / 2.54,\n    mm: 96 / 25.4\n};\nexports.RELUNITS = {\n    em: 1,\n    ex: .431,\n    pt: 1 / 10,\n    pc: 12 / 10,\n    mu: 1 / 18\n};\nexports.MATHSPACE = {\n    veryverythinmathspace: 1 / 18,\n    verythinmathspace: 2 / 18,\n    thinmathspace: 3 / 18,\n    mediummathspace: 4 / 18,\n    thickmathspace: 5 / 18,\n    verythickmathspace: 6 / 18,\n    veryverythickmathspace: 7 / 18,\n    negativeveryverythinmathspace: -1 / 18,\n    negativeverythinmathspace: -2 / 18,\n    negativethinmathspace: -3 / 18,\n    negativemediummathspace: -4 / 18,\n    negativethickmathspace: -5 / 18,\n    negativeverythickmathspace: -6 / 18,\n    negativeveryverythickmathspace: -7 / 18,\n    thin: .04,\n    medium: .06,\n    thick: .1,\n    normal: 1,\n    big: 2,\n    small: 1 / Math.sqrt(2),\n    infinity: exports.BIGDIMEN\n};\nfunction length2em(length, size, scale, em) {\n    if (size === void 0) { size = 0; }\n    if (scale === void 0) { scale = 1; }\n    if (em === void 0) { em = 16; }\n    if (typeof length !== 'string') {\n        length = String(length);\n    }\n    if (length === '' || length == null) {\n        return size;\n    }\n    if (exports.MATHSPACE[length]) {\n        return exports.MATHSPACE[length];\n    }\n    var match = length.match(/^\\s*([-+]?(?:\\.\\d+|\\d+(?:\\.\\d*)?))?(pt|em|ex|mu|px|pc|in|mm|cm|%)?/);\n    if (!match) {\n        return size;\n    }\n    var m = parseFloat(match[1] || '1'), unit = match[2];\n    if (exports.UNITS.hasOwnProperty(unit)) {\n        return m * exports.UNITS[unit] / em / scale;\n    }\n    if (exports.RELUNITS.hasOwnProperty(unit)) {\n        return m * exports.RELUNITS[unit];\n    }\n    if (unit === '%') {\n        return m / 100 * size;\n    }\n    return m * size;\n}\nexports.length2em = length2em;\nfunction percent(m) {\n    return (100 * m).toFixed(1).replace(/\\.?0+$/, '') + '%';\n}\nexports.percent = percent;\nfunction em(m) {\n    if (Math.abs(m) < .001)\n        return '0';\n    return (m.toFixed(3).replace(/\\.?0+$/, '')) + 'em';\n}\nexports.em = em;\nfunction emRounded(m, em) {\n    if (em === void 0) { em = 16; }\n    m = (Math.round(m * em) + .05) / em;\n    if (Math.abs(m) < .001)\n        return '0em';\n    return m.toFixed(3).replace(/\\.?0+$/, '') + 'em';\n}\nexports.emRounded = emRounded;\nfunction px(m, M, em) {\n    if (M === void 0) { M = -exports.BIGDIMEN; }\n    if (em === void 0) { em = 16; }\n    m *= em;\n    if (M && m < M)\n        m = M;\n    if (Math.abs(m) < .1)\n        return '0';\n    return m.toFixed(1).replace(/\\.0$/, '') + 'px';\n}\nexports.px = px;\n//# sourceMappingURL=lengths.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL3V0aWwvbGVuZ3Rocy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxVQUFVLEdBQUcsaUJBQWlCLEdBQUcsVUFBVSxHQUFHLGVBQWUsR0FBRyxpQkFBaUIsR0FBRyxpQkFBaUIsR0FBRyxnQkFBZ0IsR0FBRyxhQUFhLEdBQUcsZ0JBQWdCO0FBQzNKLGdCQUFnQjtBQUNoQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQiw0QkFBNEI7QUFDNUIseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSx3QkFBd0I7QUFDeEIseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tYXRoamF4LWZ1bGwvanMvdXRpbC9sZW5ndGhzLmpzP2Y2ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnB4ID0gZXhwb3J0cy5lbVJvdW5kZWQgPSBleHBvcnRzLmVtID0gZXhwb3J0cy5wZXJjZW50ID0gZXhwb3J0cy5sZW5ndGgyZW0gPSBleHBvcnRzLk1BVEhTUEFDRSA9IGV4cG9ydHMuUkVMVU5JVFMgPSBleHBvcnRzLlVOSVRTID0gZXhwb3J0cy5CSUdESU1FTiA9IHZvaWQgMDtcbmV4cG9ydHMuQklHRElNRU4gPSAxMDAwMDAwO1xuZXhwb3J0cy5VTklUUyA9IHtcbiAgICBweDogMSxcbiAgICAnaW4nOiA5NixcbiAgICBjbTogOTYgLyAyLjU0LFxuICAgIG1tOiA5NiAvIDI1LjRcbn07XG5leHBvcnRzLlJFTFVOSVRTID0ge1xuICAgIGVtOiAxLFxuICAgIGV4OiAuNDMxLFxuICAgIHB0OiAxIC8gMTAsXG4gICAgcGM6IDEyIC8gMTAsXG4gICAgbXU6IDEgLyAxOFxufTtcbmV4cG9ydHMuTUFUSFNQQUNFID0ge1xuICAgIHZlcnl2ZXJ5dGhpbm1hdGhzcGFjZTogMSAvIDE4LFxuICAgIHZlcnl0aGlubWF0aHNwYWNlOiAyIC8gMTgsXG4gICAgdGhpbm1hdGhzcGFjZTogMyAvIDE4LFxuICAgIG1lZGl1bW1hdGhzcGFjZTogNCAvIDE4LFxuICAgIHRoaWNrbWF0aHNwYWNlOiA1IC8gMTgsXG4gICAgdmVyeXRoaWNrbWF0aHNwYWNlOiA2IC8gMTgsXG4gICAgdmVyeXZlcnl0aGlja21hdGhzcGFjZTogNyAvIDE4LFxuICAgIG5lZ2F0aXZldmVyeXZlcnl0aGlubWF0aHNwYWNlOiAtMSAvIDE4LFxuICAgIG5lZ2F0aXZldmVyeXRoaW5tYXRoc3BhY2U6IC0yIC8gMTgsXG4gICAgbmVnYXRpdmV0aGlubWF0aHNwYWNlOiAtMyAvIDE4LFxuICAgIG5lZ2F0aXZlbWVkaXVtbWF0aHNwYWNlOiAtNCAvIDE4LFxuICAgIG5lZ2F0aXZldGhpY2ttYXRoc3BhY2U6IC01IC8gMTgsXG4gICAgbmVnYXRpdmV2ZXJ5dGhpY2ttYXRoc3BhY2U6IC02IC8gMTgsXG4gICAgbmVnYXRpdmV2ZXJ5dmVyeXRoaWNrbWF0aHNwYWNlOiAtNyAvIDE4LFxuICAgIHRoaW46IC4wNCxcbiAgICBtZWRpdW06IC4wNixcbiAgICB0aGljazogLjEsXG4gICAgbm9ybWFsOiAxLFxuICAgIGJpZzogMixcbiAgICBzbWFsbDogMSAvIE1hdGguc3FydCgyKSxcbiAgICBpbmZpbml0eTogZXhwb3J0cy5CSUdESU1FTlxufTtcbmZ1bmN0aW9uIGxlbmd0aDJlbShsZW5ndGgsIHNpemUsIHNjYWxlLCBlbSkge1xuICAgIGlmIChzaXplID09PSB2b2lkIDApIHsgc2l6ZSA9IDA7IH1cbiAgICBpZiAoc2NhbGUgPT09IHZvaWQgMCkgeyBzY2FsZSA9IDE7IH1cbiAgICBpZiAoZW0gPT09IHZvaWQgMCkgeyBlbSA9IDE2OyB9XG4gICAgaWYgKHR5cGVvZiBsZW5ndGggIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGxlbmd0aCA9IFN0cmluZyhsZW5ndGgpO1xuICAgIH1cbiAgICBpZiAobGVuZ3RoID09PSAnJyB8fCBsZW5ndGggPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gc2l6ZTtcbiAgICB9XG4gICAgaWYgKGV4cG9ydHMuTUFUSFNQQUNFW2xlbmd0aF0pIHtcbiAgICAgICAgcmV0dXJuIGV4cG9ydHMuTUFUSFNQQUNFW2xlbmd0aF07XG4gICAgfVxuICAgIHZhciBtYXRjaCA9IGxlbmd0aC5tYXRjaCgvXlxccyooWy0rXT8oPzpcXC5cXGQrfFxcZCsoPzpcXC5cXGQqKT8pKT8ocHR8ZW18ZXh8bXV8cHh8cGN8aW58bW18Y218JSk/Lyk7XG4gICAgaWYgKCFtYXRjaCkge1xuICAgICAgICByZXR1cm4gc2l6ZTtcbiAgICB9XG4gICAgdmFyIG0gPSBwYXJzZUZsb2F0KG1hdGNoWzFdIHx8ICcxJyksIHVuaXQgPSBtYXRjaFsyXTtcbiAgICBpZiAoZXhwb3J0cy5VTklUUy5oYXNPd25Qcm9wZXJ0eSh1bml0KSkge1xuICAgICAgICByZXR1cm4gbSAqIGV4cG9ydHMuVU5JVFNbdW5pdF0gLyBlbSAvIHNjYWxlO1xuICAgIH1cbiAgICBpZiAoZXhwb3J0cy5SRUxVTklUUy5oYXNPd25Qcm9wZXJ0eSh1bml0KSkge1xuICAgICAgICByZXR1cm4gbSAqIGV4cG9ydHMuUkVMVU5JVFNbdW5pdF07XG4gICAgfVxuICAgIGlmICh1bml0ID09PSAnJScpIHtcbiAgICAgICAgcmV0dXJuIG0gLyAxMDAgKiBzaXplO1xuICAgIH1cbiAgICByZXR1cm4gbSAqIHNpemU7XG59XG5leHBvcnRzLmxlbmd0aDJlbSA9IGxlbmd0aDJlbTtcbmZ1bmN0aW9uIHBlcmNlbnQobSkge1xuICAgIHJldHVybiAoMTAwICogbSkudG9GaXhlZCgxKS5yZXBsYWNlKC9cXC4/MCskLywgJycpICsgJyUnO1xufVxuZXhwb3J0cy5wZXJjZW50ID0gcGVyY2VudDtcbmZ1bmN0aW9uIGVtKG0pIHtcbiAgICBpZiAoTWF0aC5hYnMobSkgPCAuMDAxKVxuICAgICAgICByZXR1cm4gJzAnO1xuICAgIHJldHVybiAobS50b0ZpeGVkKDMpLnJlcGxhY2UoL1xcLj8wKyQvLCAnJykpICsgJ2VtJztcbn1cbmV4cG9ydHMuZW0gPSBlbTtcbmZ1bmN0aW9uIGVtUm91bmRlZChtLCBlbSkge1xuICAgIGlmIChlbSA9PT0gdm9pZCAwKSB7IGVtID0gMTY7IH1cbiAgICBtID0gKE1hdGgucm91bmQobSAqIGVtKSArIC4wNSkgLyBlbTtcbiAgICBpZiAoTWF0aC5hYnMobSkgPCAuMDAxKVxuICAgICAgICByZXR1cm4gJzBlbSc7XG4gICAgcmV0dXJuIG0udG9GaXhlZCgzKS5yZXBsYWNlKC9cXC4/MCskLywgJycpICsgJ2VtJztcbn1cbmV4cG9ydHMuZW1Sb3VuZGVkID0gZW1Sb3VuZGVkO1xuZnVuY3Rpb24gcHgobSwgTSwgZW0pIHtcbiAgICBpZiAoTSA9PT0gdm9pZCAwKSB7IE0gPSAtZXhwb3J0cy5CSUdESU1FTjsgfVxuICAgIGlmIChlbSA9PT0gdm9pZCAwKSB7IGVtID0gMTY7IH1cbiAgICBtICo9IGVtO1xuICAgIGlmIChNICYmIG0gPCBNKVxuICAgICAgICBtID0gTTtcbiAgICBpZiAoTWF0aC5hYnMobSkgPCAuMSlcbiAgICAgICAgcmV0dXJuICcwJztcbiAgICByZXR1cm4gbS50b0ZpeGVkKDEpLnJlcGxhY2UoL1xcLjAkLywgJycpICsgJ3B4Jztcbn1cbmV4cG9ydHMucHggPSBweDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxlbmd0aHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/util/lengths.js\n"));

/***/ }),

/***/ "./node_modules/mathjax-full/js/util/string.js":
/*!*****************************************************!*\
  !*** ./node_modules/mathjax-full/js/util/string.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.split = exports.isPercent = exports.unicodeString = exports.unicodeChars = exports.quotePattern = exports.sortLength = void 0;\nfunction sortLength(a, b) {\n    return a.length !== b.length ? b.length - a.length : a === b ? 0 : a < b ? -1 : 1;\n}\nexports.sortLength = sortLength;\nfunction quotePattern(text) {\n    return text.replace(/([\\^$(){}+*?\\-|\\[\\]\\:\\\\])/g, '\\\\$1');\n}\nexports.quotePattern = quotePattern;\nfunction unicodeChars(text) {\n    return Array.from(text).map(function (c) { return c.codePointAt(0); });\n}\nexports.unicodeChars = unicodeChars;\nfunction unicodeString(data) {\n    return String.fromCodePoint.apply(String, __spreadArray([], __read(data), false));\n}\nexports.unicodeString = unicodeString;\nfunction isPercent(x) {\n    return !!x.match(/%\\s*$/);\n}\nexports.isPercent = isPercent;\nfunction split(x) {\n    return x.trim().split(/\\s+/);\n}\nexports.split = split;\n//# sourceMappingURL=string.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL3V0aWwvc3RyaW5nLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsTUFBTTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RSxPQUFPO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsR0FBRyxpQkFBaUIsR0FBRyxxQkFBcUIsR0FBRyxvQkFBb0IsR0FBRyxvQkFBb0IsR0FBRyxrQkFBa0I7QUFDNUg7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0EsK0NBQStDLDBCQUEwQjtBQUN6RTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbWF0aGpheC1mdWxsL2pzL3V0aWwvc3RyaW5nLmpzP2JjNWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19yZWFkID0gKHRoaXMgJiYgdGhpcy5fX3JlYWQpIHx8IGZ1bmN0aW9uIChvLCBuKSB7XG4gICAgdmFyIG0gPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb1tTeW1ib2wuaXRlcmF0b3JdO1xuICAgIGlmICghbSkgcmV0dXJuIG87XG4gICAgdmFyIGkgPSBtLmNhbGwobyksIHIsIGFyID0gW10sIGU7XG4gICAgdHJ5IHtcbiAgICAgICAgd2hpbGUgKChuID09PSB2b2lkIDAgfHwgbi0tID4gMCkgJiYgIShyID0gaS5uZXh0KCkpLmRvbmUpIGFyLnB1c2goci52YWx1ZSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikgeyBlID0geyBlcnJvcjogZXJyb3IgfTsgfVxuICAgIGZpbmFsbHkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKHIgJiYgIXIuZG9uZSAmJiAobSA9IGlbXCJyZXR1cm5cIl0pKSBtLmNhbGwoaSk7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7IGlmIChlKSB0aHJvdyBlLmVycm9yOyB9XG4gICAgfVxuICAgIHJldHVybiBhcjtcbn07XG52YXIgX19zcHJlYWRBcnJheSA9ICh0aGlzICYmIHRoaXMuX19zcHJlYWRBcnJheSkgfHwgZnVuY3Rpb24gKHRvLCBmcm9tLCBwYWNrKSB7XG4gICAgaWYgKHBhY2sgfHwgYXJndW1lbnRzLmxlbmd0aCA9PT0gMikgZm9yICh2YXIgaSA9IDAsIGwgPSBmcm9tLmxlbmd0aCwgYXI7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgaWYgKGFyIHx8ICEoaSBpbiBmcm9tKSkge1xuICAgICAgICAgICAgaWYgKCFhcikgYXIgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tLCAwLCBpKTtcbiAgICAgICAgICAgIGFyW2ldID0gZnJvbVtpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdG8uY29uY2F0KGFyIHx8IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGZyb20pKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNwbGl0ID0gZXhwb3J0cy5pc1BlcmNlbnQgPSBleHBvcnRzLnVuaWNvZGVTdHJpbmcgPSBleHBvcnRzLnVuaWNvZGVDaGFycyA9IGV4cG9ydHMucXVvdGVQYXR0ZXJuID0gZXhwb3J0cy5zb3J0TGVuZ3RoID0gdm9pZCAwO1xuZnVuY3Rpb24gc29ydExlbmd0aChhLCBiKSB7XG4gICAgcmV0dXJuIGEubGVuZ3RoICE9PSBiLmxlbmd0aCA/IGIubGVuZ3RoIC0gYS5sZW5ndGggOiBhID09PSBiID8gMCA6IGEgPCBiID8gLTEgOiAxO1xufVxuZXhwb3J0cy5zb3J0TGVuZ3RoID0gc29ydExlbmd0aDtcbmZ1bmN0aW9uIHF1b3RlUGF0dGVybih0ZXh0KSB7XG4gICAgcmV0dXJuIHRleHQucmVwbGFjZSgvKFtcXF4kKCl7fSsqP1xcLXxcXFtcXF1cXDpcXFxcXSkvZywgJ1xcXFwkMScpO1xufVxuZXhwb3J0cy5xdW90ZVBhdHRlcm4gPSBxdW90ZVBhdHRlcm47XG5mdW5jdGlvbiB1bmljb2RlQ2hhcnModGV4dCkge1xuICAgIHJldHVybiBBcnJheS5mcm9tKHRleHQpLm1hcChmdW5jdGlvbiAoYykgeyByZXR1cm4gYy5jb2RlUG9pbnRBdCgwKTsgfSk7XG59XG5leHBvcnRzLnVuaWNvZGVDaGFycyA9IHVuaWNvZGVDaGFycztcbmZ1bmN0aW9uIHVuaWNvZGVTdHJpbmcoZGF0YSkge1xuICAgIHJldHVybiBTdHJpbmcuZnJvbUNvZGVQb2ludC5hcHBseShTdHJpbmcsIF9fc3ByZWFkQXJyYXkoW10sIF9fcmVhZChkYXRhKSwgZmFsc2UpKTtcbn1cbmV4cG9ydHMudW5pY29kZVN0cmluZyA9IHVuaWNvZGVTdHJpbmc7XG5mdW5jdGlvbiBpc1BlcmNlbnQoeCkge1xuICAgIHJldHVybiAhIXgubWF0Y2goLyVcXHMqJC8pO1xufVxuZXhwb3J0cy5pc1BlcmNlbnQgPSBpc1BlcmNlbnQ7XG5mdW5jdGlvbiBzcGxpdCh4KSB7XG4gICAgcmV0dXJuIHgudHJpbSgpLnNwbGl0KC9cXHMrLyk7XG59XG5leHBvcnRzLnNwbGl0ID0gc3BsaXQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHJpbmcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/mathjax-full/js/util/string.js\n"));

/***/ }),

/***/ "./node_modules/mhchemparser/dist/mhchemParser.js":
/*!********************************************************!*\
  !*** ./node_modules/mhchemparser/dist/mhchemParser.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("\n/*!\n *************************************************************************\n *\n *  mhchemParser.ts\n *  4.1.1\n *\n *  Parser for the \\ce command and \\pu command for MathJax and Co.\n *\n *  mhchem's \\ce is a tool for writing beautiful chemical equations easily.\n *  mhchem's \\pu is a tool for writing physical units easily.\n *\n *  ----------------------------------------------------------------------\n *\n *  Copyright (c) 2015-2021 Martin Hensel\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n *  ----------------------------------------------------------------------\n *\n *  https://github.com/mhchem/mhchemParser\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mhchemParser = void 0;\nvar mhchemParser = (function () {\n    function mhchemParser() {\n    }\n    mhchemParser.toTex = function (input, type) {\n        return _mhchemTexify.go(_mhchemParser.go(input, type), type !== \"tex\");\n    };\n    return mhchemParser;\n}());\nexports.mhchemParser = mhchemParser;\nfunction _mhchemCreateTransitions(o) {\n    var pattern, state;\n    var transitions = {};\n    for (pattern in o) {\n        for (state in o[pattern]) {\n            var stateArray = state.split(\"|\");\n            o[pattern][state].stateArray = stateArray;\n            for (var i = 0; i < stateArray.length; i++) {\n                transitions[stateArray[i]] = [];\n            }\n        }\n    }\n    for (pattern in o) {\n        for (state in o[pattern]) {\n            var stateArray = o[pattern][state].stateArray || [];\n            for (var i = 0; i < stateArray.length; i++) {\n                var p = o[pattern][state];\n                p.action_ = [].concat(p.action_);\n                for (var k = 0; k < p.action_.length; k++) {\n                    if (typeof p.action_[k] === \"string\") {\n                        p.action_[k] = { type_: p.action_[k] };\n                    }\n                }\n                var patternArray = pattern.split(\"|\");\n                for (var j = 0; j < patternArray.length; j++) {\n                    if (stateArray[i] === '*') {\n                        var t = void 0;\n                        for (t in transitions) {\n                            transitions[t].push({ pattern: patternArray[j], task: p });\n                        }\n                    }\n                    else {\n                        transitions[stateArray[i]].push({ pattern: patternArray[j], task: p });\n                    }\n                }\n            }\n        }\n    }\n    return transitions;\n}\n;\nvar _mhchemParser = {\n    go: function (input, stateMachine) {\n        if (!input) {\n            return [];\n        }\n        if (stateMachine === undefined) {\n            stateMachine = 'ce';\n        }\n        var state = '0';\n        var buffer = {};\n        buffer['parenthesisLevel'] = 0;\n        input = input.replace(/\\n/g, \" \");\n        input = input.replace(/[\\u2212\\u2013\\u2014\\u2010]/g, \"-\");\n        input = input.replace(/[\\u2026]/g, \"...\");\n        var lastInput;\n        var watchdog = 10;\n        var output = [];\n        while (true) {\n            if (lastInput !== input) {\n                watchdog = 10;\n                lastInput = input;\n            }\n            else {\n                watchdog--;\n            }\n            var machine = _mhchemParser.stateMachines[stateMachine];\n            var t = machine.transitions[state] || machine.transitions['*'];\n            iterateTransitions: for (var i = 0; i < t.length; i++) {\n                var matches = _mhchemParser.patterns.match_(t[i].pattern, input);\n                if (matches) {\n                    var task = t[i].task;\n                    for (var iA = 0; iA < task.action_.length; iA++) {\n                        var o = void 0;\n                        if (machine.actions[task.action_[iA].type_]) {\n                            o = machine.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);\n                        }\n                        else if (_mhchemParser.actions[task.action_[iA].type_]) {\n                            o = _mhchemParser.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);\n                        }\n                        else {\n                            throw [\"MhchemBugA\", \"mhchem bug A. Please report. (\" + task.action_[iA].type_ + \")\"];\n                        }\n                        _mhchemParser.concatArray(output, o);\n                    }\n                    state = task.nextState || state;\n                    if (input.length > 0) {\n                        if (!task.revisit) {\n                            input = matches.remainder;\n                        }\n                        if (!task.toContinue) {\n                            break iterateTransitions;\n                        }\n                    }\n                    else {\n                        return output;\n                    }\n                }\n            }\n            if (watchdog <= 0) {\n                throw [\"MhchemBugU\", \"mhchem bug U. Please report.\"];\n            }\n        }\n    },\n    concatArray: function (a, b) {\n        if (b) {\n            if (Array.isArray(b)) {\n                for (var iB = 0; iB < b.length; iB++) {\n                    a.push(b[iB]);\n                }\n            }\n            else {\n                a.push(b);\n            }\n        }\n    },\n    patterns: {\n        patterns: {\n            'empty': /^$/,\n            'else': /^./,\n            'else2': /^./,\n            'space': /^\\s/,\n            'space A': /^\\s(?=[A-Z\\\\$])/,\n            'space$': /^\\s$/,\n            'a-z': /^[a-z]/,\n            'x': /^x/,\n            'x$': /^x$/,\n            'i$': /^i$/,\n            'letters': /^(?:[a-zA-Z\\u03B1-\\u03C9\\u0391-\\u03A9?@]|(?:\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))))+/,\n            '\\\\greek': /^\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))/,\n            'one lowercase latin letter $': /^(?:([a-z])(?:$|[^a-zA-Z]))$/,\n            '$one lowercase latin letter$ $': /^\\$(?:([a-z])(?:$|[^a-zA-Z]))\\$$/,\n            'one lowercase greek letter $': /^(?:\\$?[\\u03B1-\\u03C9]\\$?|\\$?\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)\\s*\\$?)(?:\\s+|\\{\\}|(?![a-zA-Z]))$/,\n            'digits': /^[0-9]+/,\n            '-9.,9': /^[+\\-]?(?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))/,\n            '-9.,9 no missing 0': /^[+\\-]?[0-9]+(?:[.,][0-9]+)?/,\n            '(-)(9.,9)(e)(99)': function (input) {\n                var match = input.match(/^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))?(\\((?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))\\))?(?:(?:([eE])|\\s*(\\*|x|\\\\times|\\u00D7)\\s*10\\^)([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\}))?/);\n                if (match && match[0]) {\n                    return { match_: match.slice(1), remainder: input.substr(match[0].length) };\n                }\n                return null;\n            },\n            '(-)(9)^(-9)': /^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+)?)\\^([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\})/,\n            'state of aggregation $': function (input) {\n                var a = _mhchemParser.patterns.findObserveGroups(input, \"\", /^\\([a-z]{1,3}(?=[\\),])/, \")\", \"\");\n                if (a && a.remainder.match(/^($|[\\s,;\\)\\]\\}])/)) {\n                    return a;\n                }\n                var match = input.match(/^(?:\\((?:\\\\ca\\s?)?\\$[amothc]\\$\\))/);\n                if (match) {\n                    return { match_: match[0], remainder: input.substr(match[0].length) };\n                }\n                return null;\n            },\n            '_{(state of aggregation)}$': /^_\\{(\\([a-z]{1,3}\\))\\}/,\n            '{[(': /^(?:\\\\\\{|\\[|\\()/,\n            ')]}': /^(?:\\)|\\]|\\\\\\})/,\n            ', ': /^[,;]\\s*/,\n            ',': /^[,;]/,\n            '.': /^[.]/,\n            '. __* ': /^([.\\u22C5\\u00B7\\u2022]|[*])\\s*/,\n            '...': /^\\.\\.\\.(?=$|[^.])/,\n            '^{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"^{\", \"\", \"\", \"}\"); },\n            '^($...$)': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"^\", \"$\", \"$\", \"\"); },\n            '^a': /^\\^([0-9]+|[^\\\\_])/,\n            '^\\\\x{}{}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"^\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\", \"\", \"{\", \"}\", \"\", true); },\n            '^\\\\x{}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"^\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\"); },\n            '^\\\\x': /^\\^(\\\\[a-zA-Z]+)\\s*/,\n            '^(-1)': /^\\^(-?\\d+)/,\n            '\\'': /^'/,\n            '_{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"_{\", \"\", \"\", \"}\"); },\n            '_($...$)': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"_\", \"$\", \"$\", \"\"); },\n            '_9': /^_([+\\-]?[0-9]+|[^\\\\])/,\n            '_\\\\x{}{}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"_\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\", \"\", \"{\", \"}\", \"\", true); },\n            '_\\\\x{}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"_\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\"); },\n            '_\\\\x': /^_(\\\\[a-zA-Z]+)\\s*/,\n            '^_': /^(?:\\^(?=_)|\\_(?=\\^)|[\\^_]$)/,\n            '{}^': /^\\{\\}(?=\\^)/,\n            '{}': /^\\{\\}/,\n            '{...}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\", \"{\", \"}\", \"\"); },\n            '{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"{\", \"\", \"\", \"}\"); },\n            '$...$': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\", \"$\", \"$\", \"\"); },\n            '${(...)}$__$(...)$': function (input) {\n                return _mhchemParser.patterns.findObserveGroups(input, \"${\", \"\", \"\", \"}$\") || _mhchemParser.patterns.findObserveGroups(input, \"$\", \"\", \"\", \"$\");\n            },\n            '=<>': /^[=<>]/,\n            '#': /^[#\\u2261]/,\n            '+': /^\\+/,\n            '-$': /^-(?=[\\s_},;\\]/]|$|\\([a-z]+\\))/,\n            '-9': /^-(?=[0-9])/,\n            '- orbital overlap': /^-(?=(?:[spd]|sp)(?:$|[\\s,;\\)\\]\\}]))/,\n            '-': /^-/,\n            'pm-operator': /^(?:\\\\pm|\\$\\\\pm\\$|\\+-|\\+\\/-)/,\n            'operator': /^(?:\\+|(?:[\\-=<>]|<<|>>|\\\\approx|\\$\\\\approx\\$)(?=\\s|$|-?[0-9]))/,\n            'arrowUpDown': /^(?:v|\\(v\\)|\\^|\\(\\^\\))(?=$|[\\s,;\\)\\]\\}])/,\n            '\\\\bond{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\\\\bond{\", \"\", \"\", \"}\"); },\n            '->': /^(?:<->|<-->|->|<-|<=>>|<<=>|<=>|[\\u2192\\u27F6\\u21CC])/,\n            'CMT': /^[CMT](?=\\[)/,\n            '[(...)]': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"[\", \"\", \"\", \"]\"); },\n            '1st-level escape': /^(&|\\\\\\\\|\\\\hline)\\s*/,\n            '\\\\,': /^(?:\\\\[,\\ ;:])/,\n            '\\\\x{}{}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\", \"\", \"{\", \"}\", \"\", true); },\n            '\\\\x{}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\"); },\n            '\\\\ca': /^\\\\ca(?:\\s+|(?![a-zA-Z]))/,\n            '\\\\x': /^(?:\\\\[a-zA-Z]+\\s*|\\\\[_&{}%])/,\n            'orbital': /^(?:[0-9]{1,2}[spdfgh]|[0-9]{0,2}sp)(?=$|[^a-zA-Z])/,\n            'others': /^[\\/~|]/,\n            '\\\\frac{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\\\\frac{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\"); },\n            '\\\\overset{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\\\\overset{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\"); },\n            '\\\\underset{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\\\\underset{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\"); },\n            '\\\\underbrace{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\\\\underbrace{\", \"\", \"\", \"}_\", \"{\", \"\", \"\", \"}\"); },\n            '\\\\color{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\\\\color{\", \"\", \"\", \"}\"); },\n            '\\\\color{(...)}{(...)}': function (input) {\n                return _mhchemParser.patterns.findObserveGroups(input, \"\\\\color{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\") ||\n                    _mhchemParser.patterns.findObserveGroups(input, \"\\\\color\", \"\\\\\", \"\", /^(?=\\{)/, \"{\", \"\", \"\", \"}\");\n            },\n            '\\\\ce{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\\\\ce{\", \"\", \"\", \"}\"); },\n            '\\\\pu{(...)}': function (input) { return _mhchemParser.patterns.findObserveGroups(input, \"\\\\pu{\", \"\", \"\", \"}\"); },\n            'oxidation$': /^(?:[+-][IVX]+|\\\\pm\\s*0|\\$\\\\pm\\$\\s*0)$/,\n            'd-oxidation$': /^(?:[+-]?\\s?[IVX]+|\\\\pm\\s*0|\\$\\\\pm\\$\\s*0)$/,\n            'roman numeral': /^[IVX]+/,\n            '1/2$': /^[+\\-]?(?:[0-9]+|\\$[a-z]\\$|[a-z])\\/[0-9]+(?:\\$[a-z]\\$|[a-z])?$/,\n            'amount': function (input) {\n                var match;\n                match = input.match(/^(?:(?:(?:\\([+\\-]?[0-9]+\\/[0-9]+\\)|[+\\-]?(?:[0-9]+|\\$[a-z]\\$|[a-z])\\/[0-9]+|[+\\-]?[0-9]+[.,][0-9]+|[+\\-]?\\.[0-9]+|[+\\-]?[0-9]+)(?:[a-z](?=\\s*[A-Z]))?)|[+\\-]?[a-z](?=\\s*[A-Z])|\\+(?!\\s))/);\n                if (match) {\n                    return { match_: match[0], remainder: input.substr(match[0].length) };\n                }\n                var a = _mhchemParser.patterns.findObserveGroups(input, \"\", \"$\", \"$\", \"\");\n                if (a) {\n                    match = a.match_.match(/^\\$(?:\\(?[+\\-]?(?:[0-9]*[a-z]?[+\\-])?[0-9]*[a-z](?:[+\\-][0-9]*[a-z]?)?\\)?|\\+|-)\\$$/);\n                    if (match) {\n                        return { match_: match[0], remainder: input.substr(match[0].length) };\n                    }\n                }\n                return null;\n            },\n            'amount2': function (input) { return this['amount'](input); },\n            '(KV letters),': /^(?:[A-Z][a-z]{0,2}|i)(?=,)/,\n            'formula$': function (input) {\n                if (input.match(/^\\([a-z]+\\)$/)) {\n                    return null;\n                }\n                var match = input.match(/^(?:[a-z]|(?:[0-9\\ \\+\\-\\,\\.\\(\\)]+[a-z])+[0-9\\ \\+\\-\\,\\.\\(\\)]*|(?:[a-z][0-9\\ \\+\\-\\,\\.\\(\\)]+)+[a-z]?)$/);\n                if (match) {\n                    return { match_: match[0], remainder: input.substr(match[0].length) };\n                }\n                return null;\n            },\n            'uprightEntities': /^(?:pH|pOH|pC|pK|iPr|iBu)(?=$|[^a-zA-Z])/,\n            '/': /^\\s*(\\/)\\s*/,\n            '//': /^\\s*(\\/\\/)\\s*/,\n            '*': /^\\s*[*.]\\s*/\n        },\n        findObserveGroups: function (input, begExcl, begIncl, endIncl, endExcl, beg2Excl, beg2Incl, end2Incl, end2Excl, combine) {\n            var _match = function (input, pattern) {\n                if (typeof pattern === \"string\") {\n                    if (input.indexOf(pattern) !== 0) {\n                        return null;\n                    }\n                    return pattern;\n                }\n                else {\n                    var match_1 = input.match(pattern);\n                    if (!match_1) {\n                        return null;\n                    }\n                    return match_1[0];\n                }\n            };\n            var _findObserveGroups = function (input, i, endChars) {\n                var braces = 0;\n                while (i < input.length) {\n                    var a = input.charAt(i);\n                    var match_2 = _match(input.substr(i), endChars);\n                    if (match_2 !== null && braces === 0) {\n                        return { endMatchBegin: i, endMatchEnd: i + match_2.length };\n                    }\n                    else if (a === \"{\") {\n                        braces++;\n                    }\n                    else if (a === \"}\") {\n                        if (braces === 0) {\n                            throw [\"ExtraCloseMissingOpen\", \"Extra close brace or missing open brace\"];\n                        }\n                        else {\n                            braces--;\n                        }\n                    }\n                    i++;\n                }\n                if (braces > 0) {\n                    return null;\n                }\n                return null;\n            };\n            var match = _match(input, begExcl);\n            if (match === null) {\n                return null;\n            }\n            input = input.substr(match.length);\n            match = _match(input, begIncl);\n            if (match === null) {\n                return null;\n            }\n            var e = _findObserveGroups(input, match.length, endIncl || endExcl);\n            if (e === null) {\n                return null;\n            }\n            var match1 = input.substring(0, (endIncl ? e.endMatchEnd : e.endMatchBegin));\n            if (!(beg2Excl || beg2Incl)) {\n                return {\n                    match_: match1,\n                    remainder: input.substr(e.endMatchEnd)\n                };\n            }\n            else {\n                var group2 = this.findObserveGroups(input.substr(e.endMatchEnd), beg2Excl, beg2Incl, end2Incl, end2Excl);\n                if (group2 === null) {\n                    return null;\n                }\n                var matchRet = [match1, group2.match_];\n                return {\n                    match_: (combine ? matchRet.join(\"\") : matchRet),\n                    remainder: group2.remainder\n                };\n            }\n        },\n        match_: function (m, input) {\n            var pattern = _mhchemParser.patterns.patterns[m];\n            if (pattern === undefined) {\n                throw [\"MhchemBugP\", \"mhchem bug P. Please report. (\" + m + \")\"];\n            }\n            else if (typeof pattern === \"function\") {\n                return _mhchemParser.patterns.patterns[m](input);\n            }\n            else {\n                var match = input.match(pattern);\n                if (match) {\n                    if (match.length > 2) {\n                        return { match_: match.slice(1), remainder: input.substr(match[0].length) };\n                    }\n                    else {\n                        return { match_: match[1] || match[0], remainder: input.substr(match[0].length) };\n                    }\n                }\n                return null;\n            }\n        }\n    },\n    actions: {\n        'a=': function (buffer, m) { buffer.a = (buffer.a || \"\") + m; return undefined; },\n        'b=': function (buffer, m) { buffer.b = (buffer.b || \"\") + m; return undefined; },\n        'p=': function (buffer, m) { buffer.p = (buffer.p || \"\") + m; return undefined; },\n        'o=': function (buffer, m) { buffer.o = (buffer.o || \"\") + m; return undefined; },\n        'q=': function (buffer, m) { buffer.q = (buffer.q || \"\") + m; return undefined; },\n        'd=': function (buffer, m) { buffer.d = (buffer.d || \"\") + m; return undefined; },\n        'rm=': function (buffer, m) { buffer.rm = (buffer.rm || \"\") + m; return undefined; },\n        'text=': function (buffer, m) { buffer.text_ = (buffer.text_ || \"\") + m; return undefined; },\n        'insert': function (_buffer, _m, a) { return { type_: a }; },\n        'insert+p1': function (_buffer, m, a) { return { type_: a, p1: m }; },\n        'insert+p1+p2': function (_buffer, m, a) { return { type_: a, p1: m[0], p2: m[1] }; },\n        'copy': function (_buffer, m) { return m; },\n        'write': function (_buffer, _m, a) { return a; },\n        'rm': function (_buffer, m) { return { type_: 'rm', p1: m }; },\n        'text': function (_buffer, m) { return _mhchemParser.go(m, 'text'); },\n        'tex-math': function (_buffer, m) { return _mhchemParser.go(m, 'tex-math'); },\n        'tex-math tight': function (_buffer, m) { return _mhchemParser.go(m, 'tex-math tight'); },\n        'bond': function (_buffer, m, k) { return { type_: 'bond', kind_: k || m }; },\n        'color0-output': function (_buffer, m) { return { type_: 'color0', color: m }; },\n        'ce': function (_buffer, m) { return _mhchemParser.go(m, 'ce'); },\n        'pu': function (_buffer, m) { return _mhchemParser.go(m, 'pu'); },\n        '1/2': function (_buffer, m) {\n            var ret = [];\n            if (m.match(/^[+\\-]/)) {\n                ret.push(m.substr(0, 1));\n                m = m.substr(1);\n            }\n            var n = m.match(/^([0-9]+|\\$[a-z]\\$|[a-z])\\/([0-9]+)(\\$[a-z]\\$|[a-z])?$/);\n            n[1] = n[1].replace(/\\$/g, \"\");\n            ret.push({ type_: 'frac', p1: n[1], p2: n[2] });\n            if (n[3]) {\n                n[3] = n[3].replace(/\\$/g, \"\");\n                ret.push({ type_: 'tex-math', p1: n[3] });\n            }\n            return ret;\n        },\n        '9,9': function (_buffer, m) { return _mhchemParser.go(m, '9,9'); }\n    },\n    stateMachines: {\n        'tex': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '0': { action_: 'copy' }\n                },\n                '\\\\ce{(...)}': {\n                    '0': { action_: [{ type_: 'write', option: \"{\" }, 'ce', { type_: 'write', option: \"}\" }] }\n                },\n                '\\\\pu{(...)}': {\n                    '0': { action_: [{ type_: 'write', option: \"{\" }, 'pu', { type_: 'write', option: \"}\" }] }\n                },\n                'else': {\n                    '0': { action_: 'copy' }\n                },\n            }),\n            actions: {}\n        },\n        'ce': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: 'output' }\n                },\n                'else': {\n                    '0|1|2': { action_: 'beginsWithBond=false', revisit: true, toContinue: true }\n                },\n                'oxidation$': {\n                    '0': { action_: 'oxidation-output' }\n                },\n                'CMT': {\n                    'r': { action_: 'rdt=', nextState: 'rt' },\n                    'rd': { action_: 'rqt=', nextState: 'rdt' }\n                },\n                'arrowUpDown': {\n                    '0|1|2|as': { action_: ['sb=false', 'output', 'operator'], nextState: '1' }\n                },\n                'uprightEntities': {\n                    '0|1|2': { action_: ['o=', 'output'], nextState: '1' }\n                },\n                'orbital': {\n                    '0|1|2|3': { action_: 'o=', nextState: 'o' }\n                },\n                '->': {\n                    '0|1|2|3': { action_: 'r=', nextState: 'r' },\n                    'a|as': { action_: ['output', 'r='], nextState: 'r' },\n                    '*': { action_: ['output', 'r='], nextState: 'r' }\n                },\n                '+': {\n                    'o': { action_: 'd= kv', nextState: 'd' },\n                    'd|D': { action_: 'd=', nextState: 'd' },\n                    'q': { action_: 'd=', nextState: 'qd' },\n                    'qd|qD': { action_: 'd=', nextState: 'qd' },\n                    'dq': { action_: ['output', 'd='], nextState: 'd' },\n                    '3': { action_: ['sb=false', 'output', 'operator'], nextState: '0' }\n                },\n                'amount': {\n                    '0|2': { action_: 'a=', nextState: 'a' }\n                },\n                'pm-operator': {\n                    '0|1|2|a|as': { action_: ['sb=false', 'output', { type_: 'operator', option: '\\\\pm' }], nextState: '0' }\n                },\n                'operator': {\n                    '0|1|2|a|as': { action_: ['sb=false', 'output', 'operator'], nextState: '0' }\n                },\n                '-$': {\n                    'o|q': { action_: ['charge or bond', 'output'], nextState: 'qd' },\n                    'd': { action_: 'd=', nextState: 'd' },\n                    'D': { action_: ['output', { type_: 'bond', option: \"-\" }], nextState: '3' },\n                    'q': { action_: 'd=', nextState: 'qd' },\n                    'qd': { action_: 'd=', nextState: 'qd' },\n                    'qD|dq': { action_: ['output', { type_: 'bond', option: \"-\" }], nextState: '3' }\n                },\n                '-9': {\n                    '3|o': { action_: ['output', { type_: 'insert', option: 'hyphen' }], nextState: '3' }\n                },\n                '- orbital overlap': {\n                    'o': { action_: ['output', { type_: 'insert', option: 'hyphen' }], nextState: '2' },\n                    'd': { action_: ['output', { type_: 'insert', option: 'hyphen' }], nextState: '2' }\n                },\n                '-': {\n                    '0|1|2': { action_: [{ type_: 'output', option: 1 }, 'beginsWithBond=true', { type_: 'bond', option: \"-\" }], nextState: '3' },\n                    '3': { action_: { type_: 'bond', option: \"-\" } },\n                    'a': { action_: ['output', { type_: 'insert', option: 'hyphen' }], nextState: '2' },\n                    'as': { action_: [{ type_: 'output', option: 2 }, { type_: 'bond', option: \"-\" }], nextState: '3' },\n                    'b': { action_: 'b=' },\n                    'o': { action_: { type_: '- after o/d', option: false }, nextState: '2' },\n                    'q': { action_: { type_: '- after o/d', option: false }, nextState: '2' },\n                    'd|qd|dq': { action_: { type_: '- after o/d', option: true }, nextState: '2' },\n                    'D|qD|p': { action_: ['output', { type_: 'bond', option: \"-\" }], nextState: '3' }\n                },\n                'amount2': {\n                    '1|3': { action_: 'a=', nextState: 'a' }\n                },\n                'letters': {\n                    '0|1|2|3|a|as|b|p|bp|o': { action_: 'o=', nextState: 'o' },\n                    'q|dq': { action_: ['output', 'o='], nextState: 'o' },\n                    'd|D|qd|qD': { action_: 'o after d', nextState: 'o' }\n                },\n                'digits': {\n                    'o': { action_: 'q=', nextState: 'q' },\n                    'd|D': { action_: 'q=', nextState: 'dq' },\n                    'q': { action_: ['output', 'o='], nextState: 'o' },\n                    'a': { action_: 'o=', nextState: 'o' }\n                },\n                'space A': {\n                    'b|p|bp': { action_: [] }\n                },\n                'space': {\n                    'a': { action_: [], nextState: 'as' },\n                    '0': { action_: 'sb=false' },\n                    '1|2': { action_: 'sb=true' },\n                    'r|rt|rd|rdt|rdq': { action_: 'output', nextState: '0' },\n                    '*': { action_: ['output', 'sb=true'], nextState: '1' }\n                },\n                '1st-level escape': {\n                    '1|2': { action_: ['output', { type_: 'insert+p1', option: '1st-level escape' }] },\n                    '*': { action_: ['output', { type_: 'insert+p1', option: '1st-level escape' }], nextState: '0' }\n                },\n                '[(...)]': {\n                    'r|rt': { action_: 'rd=', nextState: 'rd' },\n                    'rd|rdt': { action_: 'rq=', nextState: 'rdq' }\n                },\n                '...': {\n                    'o|d|D|dq|qd|qD': { action_: ['output', { type_: 'bond', option: \"...\" }], nextState: '3' },\n                    '*': { action_: [{ type_: 'output', option: 1 }, { type_: 'insert', option: 'ellipsis' }], nextState: '1' }\n                },\n                '. __* ': {\n                    '*': { action_: ['output', { type_: 'insert', option: 'addition compound' }], nextState: '1' }\n                },\n                'state of aggregation $': {\n                    '*': { action_: ['output', 'state of aggregation'], nextState: '1' }\n                },\n                '{[(': {\n                    'a|as|o': { action_: ['o=', 'output', 'parenthesisLevel++'], nextState: '2' },\n                    '0|1|2|3': { action_: ['o=', 'output', 'parenthesisLevel++'], nextState: '2' },\n                    '*': { action_: ['output', 'o=', 'output', 'parenthesisLevel++'], nextState: '2' }\n                },\n                ')]}': {\n                    '0|1|2|3|b|p|bp|o': { action_: ['o=', 'parenthesisLevel--'], nextState: 'o' },\n                    'a|as|d|D|q|qd|qD|dq': { action_: ['output', 'o=', 'parenthesisLevel--'], nextState: 'o' }\n                },\n                ', ': {\n                    '*': { action_: ['output', 'comma'], nextState: '0' }\n                },\n                '^_': {\n                    '*': { action_: [] }\n                },\n                '^{(...)}|^($...$)': {\n                    '0|1|2|as': { action_: 'b=', nextState: 'b' },\n                    'p': { action_: 'b=', nextState: 'bp' },\n                    '3|o': { action_: 'd= kv', nextState: 'D' },\n                    'q': { action_: 'd=', nextState: 'qD' },\n                    'd|D|qd|qD|dq': { action_: ['output', 'd='], nextState: 'D' }\n                },\n                '^a|^\\\\x{}{}|^\\\\x{}|^\\\\x|\\'': {\n                    '0|1|2|as': { action_: 'b=', nextState: 'b' },\n                    'p': { action_: 'b=', nextState: 'bp' },\n                    '3|o': { action_: 'd= kv', nextState: 'd' },\n                    'q': { action_: 'd=', nextState: 'qd' },\n                    'd|qd|D|qD': { action_: 'd=' },\n                    'dq': { action_: ['output', 'd='], nextState: 'd' }\n                },\n                '_{(state of aggregation)}$': {\n                    'd|D|q|qd|qD|dq': { action_: ['output', 'q='], nextState: 'q' }\n                },\n                '_{(...)}|_($...$)|_9|_\\\\x{}{}|_\\\\x{}|_\\\\x': {\n                    '0|1|2|as': { action_: 'p=', nextState: 'p' },\n                    'b': { action_: 'p=', nextState: 'bp' },\n                    '3|o': { action_: 'q=', nextState: 'q' },\n                    'd|D': { action_: 'q=', nextState: 'dq' },\n                    'q|qd|qD|dq': { action_: ['output', 'q='], nextState: 'q' }\n                },\n                '=<>': {\n                    '0|1|2|3|a|as|o|q|d|D|qd|qD|dq': { action_: [{ type_: 'output', option: 2 }, 'bond'], nextState: '3' }\n                },\n                '#': {\n                    '0|1|2|3|a|as|o': { action_: [{ type_: 'output', option: 2 }, { type_: 'bond', option: \"#\" }], nextState: '3' }\n                },\n                '{}^': {\n                    '*': { action_: [{ type_: 'output', option: 1 }, { type_: 'insert', option: 'tinySkip' }], nextState: '1' }\n                },\n                '{}': {\n                    '*': { action_: { type_: 'output', option: 1 }, nextState: '1' }\n                },\n                '{...}': {\n                    '0|1|2|3|a|as|b|p|bp': { action_: 'o=', nextState: 'o' },\n                    'o|d|D|q|qd|qD|dq': { action_: ['output', 'o='], nextState: 'o' }\n                },\n                '$...$': {\n                    'a': { action_: 'a=' },\n                    '0|1|2|3|as|b|p|bp|o': { action_: 'o=', nextState: 'o' },\n                    'as|o': { action_: 'o=' },\n                    'q|d|D|qd|qD|dq': { action_: ['output', 'o='], nextState: 'o' }\n                },\n                '\\\\bond{(...)}': {\n                    '*': { action_: [{ type_: 'output', option: 2 }, 'bond'], nextState: \"3\" }\n                },\n                '\\\\frac{(...)}': {\n                    '*': { action_: [{ type_: 'output', option: 1 }, 'frac-output'], nextState: '3' }\n                },\n                '\\\\overset{(...)}': {\n                    '*': { action_: [{ type_: 'output', option: 2 }, 'overset-output'], nextState: '3' }\n                },\n                '\\\\underset{(...)}': {\n                    '*': { action_: [{ type_: 'output', option: 2 }, 'underset-output'], nextState: '3' }\n                },\n                '\\\\underbrace{(...)}': {\n                    '*': { action_: [{ type_: 'output', option: 2 }, 'underbrace-output'], nextState: '3' }\n                },\n                '\\\\color{(...)}{(...)}': {\n                    '*': { action_: [{ type_: 'output', option: 2 }, 'color-output'], nextState: '3' }\n                },\n                '\\\\color{(...)}': {\n                    '*': { action_: [{ type_: 'output', option: 2 }, 'color0-output'] }\n                },\n                '\\\\ce{(...)}': {\n                    '*': { action_: [{ type_: 'output', option: 2 }, 'ce'], nextState: '3' }\n                },\n                '\\\\,': {\n                    '*': { action_: [{ type_: 'output', option: 1 }, 'copy'], nextState: '1' }\n                },\n                '\\\\pu{(...)}': {\n                    '*': { action_: ['output', { type_: 'write', option: \"{\" }, 'pu', { type_: 'write', option: \"}\" }], nextState: '3' }\n                },\n                '\\\\x{}{}|\\\\x{}|\\\\x': {\n                    '0|1|2|3|a|as|b|p|bp|o|c0': { action_: ['o=', 'output'], nextState: '3' },\n                    '*': { action_: ['output', 'o=', 'output'], nextState: '3' }\n                },\n                'others': {\n                    '*': { action_: [{ type_: 'output', option: 1 }, 'copy'], nextState: '3' }\n                },\n                'else2': {\n                    'a': { action_: 'a to o', nextState: 'o', revisit: true },\n                    'as': { action_: ['output', 'sb=true'], nextState: '1', revisit: true },\n                    'r|rt|rd|rdt|rdq': { action_: ['output'], nextState: '0', revisit: true },\n                    '*': { action_: ['output', 'copy'], nextState: '3' }\n                }\n            }),\n            actions: {\n                'o after d': function (buffer, m) {\n                    var ret;\n                    if ((buffer.d || \"\").match(/^[1-9][0-9]*$/)) {\n                        var tmp = buffer.d;\n                        buffer.d = undefined;\n                        ret = this['output'](buffer);\n                        ret.push({ type_: 'tinySkip' });\n                        buffer.b = tmp;\n                    }\n                    else {\n                        ret = this['output'](buffer);\n                    }\n                    _mhchemParser.actions['o='](buffer, m);\n                    return ret;\n                },\n                'd= kv': function (buffer, m) {\n                    buffer.d = m;\n                    buffer.dType = 'kv';\n                    return undefined;\n                },\n                'charge or bond': function (buffer, m) {\n                    if (buffer['beginsWithBond']) {\n                        var ret = [];\n                        _mhchemParser.concatArray(ret, this['output'](buffer));\n                        _mhchemParser.concatArray(ret, _mhchemParser.actions['bond'](buffer, m, \"-\"));\n                        return ret;\n                    }\n                    else {\n                        buffer.d = m;\n                        return undefined;\n                    }\n                },\n                '- after o/d': function (buffer, m, isAfterD) {\n                    var c1 = _mhchemParser.patterns.match_('orbital', buffer.o || \"\");\n                    var c2 = _mhchemParser.patterns.match_('one lowercase greek letter $', buffer.o || \"\");\n                    var c3 = _mhchemParser.patterns.match_('one lowercase latin letter $', buffer.o || \"\");\n                    var c4 = _mhchemParser.patterns.match_('$one lowercase latin letter$ $', buffer.o || \"\");\n                    var hyphenFollows = m === \"-\" && (c1 && c1.remainder === \"\" || c2 || c3 || c4);\n                    if (hyphenFollows && !buffer.a && !buffer.b && !buffer.p && !buffer.d && !buffer.q && !c1 && c3) {\n                        buffer.o = '$' + buffer.o + '$';\n                    }\n                    var ret = [];\n                    if (hyphenFollows) {\n                        _mhchemParser.concatArray(ret, this['output'](buffer));\n                        ret.push({ type_: 'hyphen' });\n                    }\n                    else {\n                        c1 = _mhchemParser.patterns.match_('digits', buffer.d || \"\");\n                        if (isAfterD && c1 && c1.remainder === '') {\n                            _mhchemParser.concatArray(ret, _mhchemParser.actions['d='](buffer, m));\n                            _mhchemParser.concatArray(ret, this['output'](buffer));\n                        }\n                        else {\n                            _mhchemParser.concatArray(ret, this['output'](buffer));\n                            _mhchemParser.concatArray(ret, _mhchemParser.actions['bond'](buffer, m, \"-\"));\n                        }\n                    }\n                    return ret;\n                },\n                'a to o': function (buffer) {\n                    buffer.o = buffer.a;\n                    buffer.a = undefined;\n                    return undefined;\n                },\n                'sb=true': function (buffer) { buffer.sb = true; return undefined; },\n                'sb=false': function (buffer) { buffer.sb = false; return undefined; },\n                'beginsWithBond=true': function (buffer) { buffer['beginsWithBond'] = true; return undefined; },\n                'beginsWithBond=false': function (buffer) { buffer['beginsWithBond'] = false; return undefined; },\n                'parenthesisLevel++': function (buffer) { buffer['parenthesisLevel']++; return undefined; },\n                'parenthesisLevel--': function (buffer) { buffer['parenthesisLevel']--; return undefined; },\n                'state of aggregation': function (_buffer, m) {\n                    return { type_: 'state of aggregation', p1: _mhchemParser.go(m, 'o') };\n                },\n                'comma': function (buffer, m) {\n                    var a = m.replace(/\\s*$/, '');\n                    var withSpace = (a !== m);\n                    if (withSpace && buffer['parenthesisLevel'] === 0) {\n                        return { type_: 'comma enumeration L', p1: a };\n                    }\n                    else {\n                        return { type_: 'comma enumeration M', p1: a };\n                    }\n                },\n                'output': function (buffer, _m, entityFollows) {\n                    var ret;\n                    if (!buffer.r) {\n                        ret = [];\n                        if (!buffer.a && !buffer.b && !buffer.p && !buffer.o && !buffer.q && !buffer.d && !entityFollows) {\n                        }\n                        else {\n                            if (buffer.sb) {\n                                ret.push({ type_: 'entitySkip' });\n                            }\n                            if (!buffer.o && !buffer.q && !buffer.d && !buffer.b && !buffer.p && entityFollows !== 2) {\n                                buffer.o = buffer.a;\n                                buffer.a = undefined;\n                            }\n                            else if (!buffer.o && !buffer.q && !buffer.d && (buffer.b || buffer.p)) {\n                                buffer.o = buffer.a;\n                                buffer.d = buffer.b;\n                                buffer.q = buffer.p;\n                                buffer.a = buffer.b = buffer.p = undefined;\n                            }\n                            else {\n                                if (buffer.o && buffer.dType === 'kv' && _mhchemParser.patterns.match_('d-oxidation$', buffer.d || \"\")) {\n                                    buffer.dType = 'oxidation';\n                                }\n                                else if (buffer.o && buffer.dType === 'kv' && !buffer.q) {\n                                    buffer.dType = undefined;\n                                }\n                            }\n                            ret.push({\n                                type_: 'chemfive',\n                                a: _mhchemParser.go(buffer.a, 'a'),\n                                b: _mhchemParser.go(buffer.b, 'bd'),\n                                p: _mhchemParser.go(buffer.p, 'pq'),\n                                o: _mhchemParser.go(buffer.o, 'o'),\n                                q: _mhchemParser.go(buffer.q, 'pq'),\n                                d: _mhchemParser.go(buffer.d, (buffer.dType === 'oxidation' ? 'oxidation' : 'bd')),\n                                dType: buffer.dType\n                            });\n                        }\n                    }\n                    else {\n                        var rd = void 0;\n                        if (buffer.rdt === 'M') {\n                            rd = _mhchemParser.go(buffer.rd, 'tex-math');\n                        }\n                        else if (buffer.rdt === 'T') {\n                            rd = [{ type_: 'text', p1: buffer.rd || \"\" }];\n                        }\n                        else {\n                            rd = _mhchemParser.go(buffer.rd, 'ce');\n                        }\n                        var rq = void 0;\n                        if (buffer.rqt === 'M') {\n                            rq = _mhchemParser.go(buffer.rq, 'tex-math');\n                        }\n                        else if (buffer.rqt === 'T') {\n                            rq = [{ type_: 'text', p1: buffer.rq || \"\" }];\n                        }\n                        else {\n                            rq = _mhchemParser.go(buffer.rq, 'ce');\n                        }\n                        ret = {\n                            type_: 'arrow',\n                            r: buffer.r,\n                            rd: rd,\n                            rq: rq\n                        };\n                    }\n                    for (var p in buffer) {\n                        if (p !== 'parenthesisLevel' && p !== 'beginsWithBond') {\n                            delete buffer[p];\n                        }\n                    }\n                    return ret;\n                },\n                'oxidation-output': function (_buffer, m) {\n                    var ret = [\"{\"];\n                    _mhchemParser.concatArray(ret, _mhchemParser.go(m, 'oxidation'));\n                    ret.push(\"}\");\n                    return ret;\n                },\n                'frac-output': function (_buffer, m) {\n                    return { type_: 'frac-ce', p1: _mhchemParser.go(m[0], 'ce'), p2: _mhchemParser.go(m[1], 'ce') };\n                },\n                'overset-output': function (_buffer, m) {\n                    return { type_: 'overset', p1: _mhchemParser.go(m[0], 'ce'), p2: _mhchemParser.go(m[1], 'ce') };\n                },\n                'underset-output': function (_buffer, m) {\n                    return { type_: 'underset', p1: _mhchemParser.go(m[0], 'ce'), p2: _mhchemParser.go(m[1], 'ce') };\n                },\n                'underbrace-output': function (_buffer, m) {\n                    return { type_: 'underbrace', p1: _mhchemParser.go(m[0], 'ce'), p2: _mhchemParser.go(m[1], 'ce') };\n                },\n                'color-output': function (_buffer, m) {\n                    return { type_: 'color', color1: m[0], color2: _mhchemParser.go(m[1], 'ce') };\n                },\n                'r=': function (buffer, m) { buffer.r = m; return undefined; },\n                'rdt=': function (buffer, m) { buffer.rdt = m; return undefined; },\n                'rd=': function (buffer, m) { buffer.rd = m; return undefined; },\n                'rqt=': function (buffer, m) { buffer.rqt = m; return undefined; },\n                'rq=': function (buffer, m) { buffer.rq = m; return undefined; },\n                'operator': function (_buffer, m, p1) { return { type_: 'operator', kind_: (p1 || m) }; }\n            }\n        },\n        'a': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: [] }\n                },\n                '1/2$': {\n                    '0': { action_: '1/2' }\n                },\n                'else': {\n                    '0': { action_: [], nextState: '1', revisit: true }\n                },\n                '${(...)}$__$(...)$': {\n                    '*': { action_: 'tex-math tight', nextState: '1' }\n                },\n                ',': {\n                    '*': { action_: { type_: 'insert', option: 'commaDecimal' } }\n                },\n                'else2': {\n                    '*': { action_: 'copy' }\n                }\n            }),\n            actions: {}\n        },\n        'o': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: [] }\n                },\n                '1/2$': {\n                    '0': { action_: '1/2' }\n                },\n                'else': {\n                    '0': { action_: [], nextState: '1', revisit: true }\n                },\n                'letters': {\n                    '*': { action_: 'rm' }\n                },\n                '\\\\ca': {\n                    '*': { action_: { type_: 'insert', option: 'circa' } }\n                },\n                '\\\\pu{(...)}': {\n                    '*': { action_: [{ type_: 'write', option: \"{\" }, 'pu', { type_: 'write', option: \"}\" }] }\n                },\n                '\\\\x{}{}|\\\\x{}|\\\\x': {\n                    '*': { action_: 'copy' }\n                },\n                '${(...)}$__$(...)$': {\n                    '*': { action_: 'tex-math' }\n                },\n                '{(...)}': {\n                    '*': { action_: [{ type_: 'write', option: \"{\" }, 'text', { type_: 'write', option: \"}\" }] }\n                },\n                'else2': {\n                    '*': { action_: 'copy' }\n                }\n            }),\n            actions: {}\n        },\n        'text': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: 'output' }\n                },\n                '{...}': {\n                    '*': { action_: 'text=' }\n                },\n                '${(...)}$__$(...)$': {\n                    '*': { action_: 'tex-math' }\n                },\n                '\\\\greek': {\n                    '*': { action_: ['output', 'rm'] }\n                },\n                '\\\\pu{(...)}': {\n                    '*': { action_: ['output', { type_: 'write', option: \"{\" }, 'pu', { type_: 'write', option: \"}\" }] }\n                },\n                '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n                    '*': { action_: ['output', 'copy'] }\n                },\n                'else': {\n                    '*': { action_: 'text=' }\n                }\n            }),\n            actions: {\n                'output': function (buffer) {\n                    if (buffer.text_) {\n                        var ret = { type_: 'text', p1: buffer.text_ };\n                        for (var p in buffer) {\n                            delete buffer[p];\n                        }\n                        return ret;\n                    }\n                    return undefined;\n                }\n            }\n        },\n        'pq': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: [] }\n                },\n                'state of aggregation $': {\n                    '*': { action_: 'state of aggregation' }\n                },\n                'i$': {\n                    '0': { action_: [], nextState: '!f', revisit: true }\n                },\n                '(KV letters),': {\n                    '0': { action_: 'rm', nextState: '0' }\n                },\n                'formula$': {\n                    '0': { action_: [], nextState: 'f', revisit: true }\n                },\n                '1/2$': {\n                    '0': { action_: '1/2' }\n                },\n                'else': {\n                    '0': { action_: [], nextState: '!f', revisit: true }\n                },\n                '${(...)}$__$(...)$': {\n                    '*': { action_: 'tex-math' }\n                },\n                '{(...)}': {\n                    '*': { action_: 'text' }\n                },\n                'a-z': {\n                    'f': { action_: 'tex-math' }\n                },\n                'letters': {\n                    '*': { action_: 'rm' }\n                },\n                '-9.,9': {\n                    '*': { action_: '9,9' }\n                },\n                ',': {\n                    '*': { action_: { type_: 'insert+p1', option: 'comma enumeration S' } }\n                },\n                '\\\\color{(...)}{(...)}': {\n                    '*': { action_: 'color-output' }\n                },\n                '\\\\color{(...)}': {\n                    '*': { action_: 'color0-output' }\n                },\n                '\\\\ce{(...)}': {\n                    '*': { action_: 'ce' }\n                },\n                '\\\\pu{(...)}': {\n                    '*': { action_: [{ type_: 'write', option: \"{\" }, 'pu', { type_: 'write', option: \"}\" }] }\n                },\n                '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n                    '*': { action_: 'copy' }\n                },\n                'else2': {\n                    '*': { action_: 'copy' }\n                }\n            }),\n            actions: {\n                'state of aggregation': function (_buffer, m) {\n                    return { type_: 'state of aggregation subscript', p1: _mhchemParser.go(m, 'o') };\n                },\n                'color-output': function (_buffer, m) {\n                    return { type_: 'color', color1: m[0], color2: _mhchemParser.go(m[1], 'pq') };\n                }\n            }\n        },\n        'bd': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: [] }\n                },\n                'x$': {\n                    '0': { action_: [], nextState: '!f', revisit: true }\n                },\n                'formula$': {\n                    '0': { action_: [], nextState: 'f', revisit: true }\n                },\n                'else': {\n                    '0': { action_: [], nextState: '!f', revisit: true }\n                },\n                '-9.,9 no missing 0': {\n                    '*': { action_: '9,9' }\n                },\n                '.': {\n                    '*': { action_: { type_: 'insert', option: 'electron dot' } }\n                },\n                'a-z': {\n                    'f': { action_: 'tex-math' }\n                },\n                'x': {\n                    '*': { action_: { type_: 'insert', option: 'KV x' } }\n                },\n                'letters': {\n                    '*': { action_: 'rm' }\n                },\n                '\\'': {\n                    '*': { action_: { type_: 'insert', option: 'prime' } }\n                },\n                '${(...)}$__$(...)$': {\n                    '*': { action_: 'tex-math' }\n                },\n                '{(...)}': {\n                    '*': { action_: 'text' }\n                },\n                '\\\\color{(...)}{(...)}': {\n                    '*': { action_: 'color-output' }\n                },\n                '\\\\color{(...)}': {\n                    '*': { action_: 'color0-output' }\n                },\n                '\\\\ce{(...)}': {\n                    '*': { action_: 'ce' }\n                },\n                '\\\\pu{(...)}': {\n                    '*': { action_: [{ type_: 'write', option: \"{\" }, 'pu', { type_: 'write', option: \"}\" }] }\n                },\n                '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n                    '*': { action_: 'copy' }\n                },\n                'else2': {\n                    '*': { action_: 'copy' }\n                }\n            }),\n            actions: {\n                'color-output': function (_buffer, m) {\n                    return { type_: 'color', color1: m[0], color2: _mhchemParser.go(m[1], 'bd') };\n                }\n            }\n        },\n        'oxidation': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: [] }\n                },\n                'roman numeral': {\n                    '*': { action_: 'roman-numeral' }\n                },\n                '${(...)}$__$(...)$': {\n                    '*': { action_: 'tex-math' }\n                },\n                'else': {\n                    '*': { action_: 'copy' }\n                }\n            }),\n            actions: {\n                'roman-numeral': function (_buffer, m) { return { type_: 'roman numeral', p1: m }; }\n            }\n        },\n        'tex-math': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: 'output' }\n                },\n                '\\\\ce{(...)}': {\n                    '*': { action_: ['output', 'ce'] }\n                },\n                '\\\\pu{(...)}': {\n                    '*': { action_: ['output', { type_: 'write', option: \"{\" }, 'pu', { type_: 'write', option: \"}\" }] }\n                },\n                '{...}|\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n                    '*': { action_: 'o=' }\n                },\n                'else': {\n                    '*': { action_: 'o=' }\n                }\n            }),\n            actions: {\n                'output': function (buffer) {\n                    if (buffer.o) {\n                        var ret = { type_: 'tex-math', p1: buffer.o };\n                        for (var p in buffer) {\n                            delete buffer[p];\n                        }\n                        return ret;\n                    }\n                    return undefined;\n                }\n            }\n        },\n        'tex-math tight': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: 'output' }\n                },\n                '\\\\ce{(...)}': {\n                    '*': { action_: ['output', 'ce'] }\n                },\n                '\\\\pu{(...)}': {\n                    '*': { action_: ['output', { type_: 'write', option: \"{\" }, 'pu', { type_: 'write', option: \"}\" }] }\n                },\n                '{...}|\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n                    '*': { action_: 'o=' }\n                },\n                '-|+': {\n                    '*': { action_: 'tight operator' }\n                },\n                'else': {\n                    '*': { action_: 'o=' }\n                }\n            }),\n            actions: {\n                'tight operator': function (buffer, m) { buffer.o = (buffer.o || \"\") + \"{\" + m + \"}\"; return undefined; },\n                'output': function (buffer) {\n                    if (buffer.o) {\n                        var ret = { type_: 'tex-math', p1: buffer.o };\n                        for (var p in buffer) {\n                            delete buffer[p];\n                        }\n                        return ret;\n                    }\n                    return undefined;\n                }\n            }\n        },\n        '9,9': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: [] }\n                },\n                ',': {\n                    '*': { action_: 'comma' }\n                },\n                'else': {\n                    '*': { action_: 'copy' }\n                }\n            }),\n            actions: {\n                'comma': function () { return { type_: 'commaDecimal' }; }\n            }\n        },\n        'pu': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: 'output' }\n                },\n                'space$': {\n                    '*': { action_: ['output', 'space'] }\n                },\n                '{[(|)]}': {\n                    '0|a': { action_: 'copy' }\n                },\n                '(-)(9)^(-9)': {\n                    '0': { action_: 'number^', nextState: 'a' }\n                },\n                '(-)(9.,9)(e)(99)': {\n                    '0': { action_: 'enumber', nextState: 'a' }\n                },\n                'space': {\n                    '0|a': { action_: [] }\n                },\n                'pm-operator': {\n                    '0|a': { action_: { type_: 'operator', option: '\\\\pm' }, nextState: '0' }\n                },\n                'operator': {\n                    '0|a': { action_: 'copy', nextState: '0' }\n                },\n                '//': {\n                    'd': { action_: 'o=', nextState: '/' }\n                },\n                '/': {\n                    'd': { action_: 'o=', nextState: '/' }\n                },\n                '{...}|else': {\n                    '0|d': { action_: 'd=', nextState: 'd' },\n                    'a': { action_: ['space', 'd='], nextState: 'd' },\n                    '/|q': { action_: 'q=', nextState: 'q' }\n                }\n            }),\n            actions: {\n                'enumber': function (_buffer, m) {\n                    var ret = [];\n                    if (m[0] === \"+-\" || m[0] === \"+/-\") {\n                        ret.push(\"\\\\pm \");\n                    }\n                    else if (m[0]) {\n                        ret.push(m[0]);\n                    }\n                    if (m[1]) {\n                        _mhchemParser.concatArray(ret, _mhchemParser.go(m[1], 'pu-9,9'));\n                        if (m[2]) {\n                            if (m[2].match(/[,.]/)) {\n                                _mhchemParser.concatArray(ret, _mhchemParser.go(m[2], 'pu-9,9'));\n                            }\n                            else {\n                                ret.push(m[2]);\n                            }\n                        }\n                        if (m[3] || m[4]) {\n                            if (m[3] === \"e\" || m[4] === \"*\") {\n                                ret.push({ type_: 'cdot' });\n                            }\n                            else {\n                                ret.push({ type_: 'times' });\n                            }\n                        }\n                    }\n                    if (m[5]) {\n                        ret.push(\"10^{\" + m[5] + \"}\");\n                    }\n                    return ret;\n                },\n                'number^': function (_buffer, m) {\n                    var ret = [];\n                    if (m[0] === \"+-\" || m[0] === \"+/-\") {\n                        ret.push(\"\\\\pm \");\n                    }\n                    else if (m[0]) {\n                        ret.push(m[0]);\n                    }\n                    _mhchemParser.concatArray(ret, _mhchemParser.go(m[1], 'pu-9,9'));\n                    ret.push(\"^{\" + m[2] + \"}\");\n                    return ret;\n                },\n                'operator': function (_buffer, m, p1) { return { type_: 'operator', kind_: (p1 || m) }; },\n                'space': function () { return { type_: 'pu-space-1' }; },\n                'output': function (buffer) {\n                    var ret;\n                    var md = _mhchemParser.patterns.match_('{(...)}', buffer.d || \"\");\n                    if (md && md.remainder === '') {\n                        buffer.d = md.match_;\n                    }\n                    var mq = _mhchemParser.patterns.match_('{(...)}', buffer.q || \"\");\n                    if (mq && mq.remainder === '') {\n                        buffer.q = mq.match_;\n                    }\n                    if (buffer.d) {\n                        buffer.d = buffer.d.replace(/\\u00B0C|\\^oC|\\^{o}C/g, \"{}^{\\\\circ}C\");\n                        buffer.d = buffer.d.replace(/\\u00B0F|\\^oF|\\^{o}F/g, \"{}^{\\\\circ}F\");\n                    }\n                    if (buffer.q) {\n                        buffer.q = buffer.q.replace(/\\u00B0C|\\^oC|\\^{o}C/g, \"{}^{\\\\circ}C\");\n                        buffer.q = buffer.q.replace(/\\u00B0F|\\^oF|\\^{o}F/g, \"{}^{\\\\circ}F\");\n                        var b5 = {\n                            d: _mhchemParser.go(buffer.d, 'pu'),\n                            q: _mhchemParser.go(buffer.q, 'pu')\n                        };\n                        if (buffer.o === '//') {\n                            ret = { type_: 'pu-frac', p1: b5.d, p2: b5.q };\n                        }\n                        else {\n                            ret = b5.d;\n                            if (b5.d.length > 1 || b5.q.length > 1) {\n                                ret.push({ type_: ' / ' });\n                            }\n                            else {\n                                ret.push({ type_: '/' });\n                            }\n                            _mhchemParser.concatArray(ret, b5.q);\n                        }\n                    }\n                    else {\n                        ret = _mhchemParser.go(buffer.d, 'pu-2');\n                    }\n                    for (var p in buffer) {\n                        delete buffer[p];\n                    }\n                    return ret;\n                }\n            }\n        },\n        'pu-2': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '*': { action_: 'output' }\n                },\n                '*': {\n                    '*': { action_: ['output', 'cdot'], nextState: '0' }\n                },\n                '\\\\x': {\n                    '*': { action_: 'rm=' }\n                },\n                'space': {\n                    '*': { action_: ['output', 'space'], nextState: '0' }\n                },\n                '^{(...)}|^(-1)': {\n                    '1': { action_: '^(-1)' }\n                },\n                '-9.,9': {\n                    '0': { action_: 'rm=', nextState: '0' },\n                    '1': { action_: '^(-1)', nextState: '0' }\n                },\n                '{...}|else': {\n                    '*': { action_: 'rm=', nextState: '1' }\n                }\n            }),\n            actions: {\n                'cdot': function () { return { type_: 'tight cdot' }; },\n                '^(-1)': function (buffer, m) { buffer.rm += \"^{\" + m + \"}\"; return undefined; },\n                'space': function () { return { type_: 'pu-space-2' }; },\n                'output': function (buffer) {\n                    var ret = [];\n                    if (buffer.rm) {\n                        var mrm = _mhchemParser.patterns.match_('{(...)}', buffer.rm || \"\");\n                        if (mrm && mrm.remainder === '') {\n                            ret = _mhchemParser.go(mrm.match_, 'pu');\n                        }\n                        else {\n                            ret = { type_: 'rm', p1: buffer.rm };\n                        }\n                    }\n                    for (var p in buffer) {\n                        delete buffer[p];\n                    }\n                    return ret;\n                }\n            }\n        },\n        'pu-9,9': {\n            transitions: _mhchemCreateTransitions({\n                'empty': {\n                    '0': { action_: 'output-0' },\n                    'o': { action_: 'output-o' }\n                },\n                ',': {\n                    '0': { action_: ['output-0', 'comma'], nextState: 'o' }\n                },\n                '.': {\n                    '0': { action_: ['output-0', 'copy'], nextState: 'o' }\n                },\n                'else': {\n                    '*': { action_: 'text=' }\n                }\n            }),\n            actions: {\n                'comma': function () { return { type_: 'commaDecimal' }; },\n                'output-0': function (buffer) {\n                    var ret = [];\n                    buffer.text_ = buffer.text_ || \"\";\n                    if (buffer.text_.length > 4) {\n                        var a = buffer.text_.length % 3;\n                        if (a === 0) {\n                            a = 3;\n                        }\n                        for (var i = buffer.text_.length - 3; i > 0; i -= 3) {\n                            ret.push(buffer.text_.substr(i, 3));\n                            ret.push({ type_: '1000 separator' });\n                        }\n                        ret.push(buffer.text_.substr(0, a));\n                        ret.reverse();\n                    }\n                    else {\n                        ret.push(buffer.text_);\n                    }\n                    for (var p in buffer) {\n                        delete buffer[p];\n                    }\n                    return ret;\n                },\n                'output-o': function (buffer) {\n                    var ret = [];\n                    buffer.text_ = buffer.text_ || \"\";\n                    if (buffer.text_.length > 4) {\n                        var a = buffer.text_.length - 3;\n                        var i = void 0;\n                        for (i = 0; i < a; i += 3) {\n                            ret.push(buffer.text_.substr(i, 3));\n                            ret.push({ type_: '1000 separator' });\n                        }\n                        ret.push(buffer.text_.substr(i));\n                    }\n                    else {\n                        ret.push(buffer.text_);\n                    }\n                    for (var p in buffer) {\n                        delete buffer[p];\n                    }\n                    return ret;\n                }\n            }\n        }\n    }\n};\nvar _mhchemTexify = {\n    go: function (input, addOuterBraces) {\n        if (!input) {\n            return \"\";\n        }\n        var res = \"\";\n        var cee = false;\n        for (var i = 0; i < input.length; i++) {\n            var inputi = input[i];\n            if (typeof inputi === \"string\") {\n                res += inputi;\n            }\n            else {\n                res += _mhchemTexify._go2(inputi);\n                if (inputi.type_ === '1st-level escape') {\n                    cee = true;\n                }\n            }\n        }\n        if (addOuterBraces && !cee && res) {\n            res = \"{\" + res + \"}\";\n        }\n        return res;\n    },\n    _goInner: function (input) {\n        return _mhchemTexify.go(input, false);\n    },\n    _go2: function (buf) {\n        var res;\n        switch (buf.type_) {\n            case 'chemfive':\n                res = \"\";\n                var b5 = {\n                    a: _mhchemTexify._goInner(buf.a),\n                    b: _mhchemTexify._goInner(buf.b),\n                    p: _mhchemTexify._goInner(buf.p),\n                    o: _mhchemTexify._goInner(buf.o),\n                    q: _mhchemTexify._goInner(buf.q),\n                    d: _mhchemTexify._goInner(buf.d)\n                };\n                if (b5.a) {\n                    if (b5.a.match(/^[+\\-]/)) {\n                        b5.a = \"{\" + b5.a + \"}\";\n                    }\n                    res += b5.a + \"\\\\,\";\n                }\n                if (b5.b || b5.p) {\n                    res += \"{\\\\vphantom{A}}\";\n                    res += \"^{\\\\hphantom{\" + (b5.b || \"\") + \"}}_{\\\\hphantom{\" + (b5.p || \"\") + \"}}\";\n                    res += \"\\\\mkern-1.5mu\";\n                    res += \"{\\\\vphantom{A}}\";\n                    res += \"^{\\\\smash[t]{\\\\vphantom{2}}\\\\llap{\" + (b5.b || \"\") + \"}}\";\n                    res += \"_{\\\\vphantom{2}\\\\llap{\\\\smash[t]{\" + (b5.p || \"\") + \"}}}\";\n                }\n                if (b5.o) {\n                    if (b5.o.match(/^[+\\-]/)) {\n                        b5.o = \"{\" + b5.o + \"}\";\n                    }\n                    res += b5.o;\n                }\n                if (buf.dType === 'kv') {\n                    if (b5.d || b5.q) {\n                        res += \"{\\\\vphantom{A}}\";\n                    }\n                    if (b5.d) {\n                        res += \"^{\" + b5.d + \"}\";\n                    }\n                    if (b5.q) {\n                        res += \"_{\\\\smash[t]{\" + b5.q + \"}}\";\n                    }\n                }\n                else if (buf.dType === 'oxidation') {\n                    if (b5.d) {\n                        res += \"{\\\\vphantom{A}}\";\n                        res += \"^{\" + b5.d + \"}\";\n                    }\n                    if (b5.q) {\n                        res += \"{\\\\vphantom{A}}\";\n                        res += \"_{\\\\smash[t]{\" + b5.q + \"}}\";\n                    }\n                }\n                else {\n                    if (b5.q) {\n                        res += \"{\\\\vphantom{A}}\";\n                        res += \"_{\\\\smash[t]{\" + b5.q + \"}}\";\n                    }\n                    if (b5.d) {\n                        res += \"{\\\\vphantom{A}}\";\n                        res += \"^{\" + b5.d + \"}\";\n                    }\n                }\n                break;\n            case 'rm':\n                res = \"\\\\mathrm{\" + buf.p1 + \"}\";\n                break;\n            case 'text':\n                if (buf.p1.match(/[\\^_]/)) {\n                    buf.p1 = buf.p1.replace(\" \", \"~\").replace(\"-\", \"\\\\text{-}\");\n                    res = \"\\\\mathrm{\" + buf.p1 + \"}\";\n                }\n                else {\n                    res = \"\\\\text{\" + buf.p1 + \"}\";\n                }\n                break;\n            case 'roman numeral':\n                res = \"\\\\mathrm{\" + buf.p1 + \"}\";\n                break;\n            case 'state of aggregation':\n                res = \"\\\\mskip2mu \" + _mhchemTexify._goInner(buf.p1);\n                break;\n            case 'state of aggregation subscript':\n                res = \"\\\\mskip1mu \" + _mhchemTexify._goInner(buf.p1);\n                break;\n            case 'bond':\n                res = _mhchemTexify._getBond(buf.kind_);\n                if (!res) {\n                    throw [\"MhchemErrorBond\", \"mhchem Error. Unknown bond type (\" + buf.kind_ + \")\"];\n                }\n                break;\n            case 'frac':\n                var c = \"\\\\frac{\" + buf.p1 + \"}{\" + buf.p2 + \"}\";\n                res = \"\\\\mathchoice{\\\\textstyle\" + c + \"}{\" + c + \"}{\" + c + \"}{\" + c + \"}\";\n                break;\n            case 'pu-frac':\n                var d = \"\\\\frac{\" + _mhchemTexify._goInner(buf.p1) + \"}{\" + _mhchemTexify._goInner(buf.p2) + \"}\";\n                res = \"\\\\mathchoice{\\\\textstyle\" + d + \"}{\" + d + \"}{\" + d + \"}{\" + d + \"}\";\n                break;\n            case 'tex-math':\n                res = buf.p1 + \" \";\n                break;\n            case 'frac-ce':\n                res = \"\\\\frac{\" + _mhchemTexify._goInner(buf.p1) + \"}{\" + _mhchemTexify._goInner(buf.p2) + \"}\";\n                break;\n            case 'overset':\n                res = \"\\\\overset{\" + _mhchemTexify._goInner(buf.p1) + \"}{\" + _mhchemTexify._goInner(buf.p2) + \"}\";\n                break;\n            case 'underset':\n                res = \"\\\\underset{\" + _mhchemTexify._goInner(buf.p1) + \"}{\" + _mhchemTexify._goInner(buf.p2) + \"}\";\n                break;\n            case 'underbrace':\n                res = \"\\\\underbrace{\" + _mhchemTexify._goInner(buf.p1) + \"}_{\" + _mhchemTexify._goInner(buf.p2) + \"}\";\n                break;\n            case 'color':\n                res = \"{\\\\color{\" + buf.color1 + \"}{\" + _mhchemTexify._goInner(buf.color2) + \"}}\";\n                break;\n            case 'color0':\n                res = \"\\\\color{\" + buf.color + \"}\";\n                break;\n            case 'arrow':\n                var b6 = {\n                    rd: _mhchemTexify._goInner(buf.rd),\n                    rq: _mhchemTexify._goInner(buf.rq)\n                };\n                var arrow = _mhchemTexify._getArrow(buf.r);\n                if (b6.rd || b6.rq) {\n                    if (buf.r === \"<=>\" || buf.r === \"<=>>\" || buf.r === \"<<=>\" || buf.r === \"<-->\") {\n                        arrow = \"\\\\long\" + arrow;\n                        if (b6.rd) {\n                            arrow = \"\\\\overset{\" + b6.rd + \"}{\" + arrow + \"}\";\n                        }\n                        if (b6.rq) {\n                            if (buf.r === \"<-->\") {\n                                arrow = \"\\\\underset{\\\\lower2mu{\" + b6.rq + \"}}{\" + arrow + \"}\";\n                            }\n                            else {\n                                arrow = \"\\\\underset{\\\\lower6mu{\" + b6.rq + \"}}{\" + arrow + \"}\";\n                            }\n                        }\n                        arrow = \" {}\\\\mathrel{\" + arrow + \"}{} \";\n                    }\n                    else {\n                        if (b6.rq) {\n                            arrow += \"[{\" + b6.rq + \"}]\";\n                        }\n                        arrow += \"{\" + b6.rd + \"}\";\n                        arrow = \" {}\\\\mathrel{\\\\x\" + arrow + \"}{} \";\n                    }\n                }\n                else {\n                    arrow = \" {}\\\\mathrel{\\\\long\" + arrow + \"}{} \";\n                }\n                res = arrow;\n                break;\n            case 'operator':\n                res = _mhchemTexify._getOperator(buf.kind_);\n                break;\n            case '1st-level escape':\n                res = buf.p1 + \" \";\n                break;\n            case 'space':\n                res = \" \";\n                break;\n            case 'tinySkip':\n                res = '\\\\mkern2mu';\n                break;\n            case 'entitySkip':\n                res = \"~\";\n                break;\n            case 'pu-space-1':\n                res = \"~\";\n                break;\n            case 'pu-space-2':\n                res = \"\\\\mkern3mu \";\n                break;\n            case '1000 separator':\n                res = \"\\\\mkern2mu \";\n                break;\n            case 'commaDecimal':\n                res = \"{,}\";\n                break;\n            case 'comma enumeration L':\n                res = \"{\" + buf.p1 + \"}\\\\mkern6mu \";\n                break;\n            case 'comma enumeration M':\n                res = \"{\" + buf.p1 + \"}\\\\mkern3mu \";\n                break;\n            case 'comma enumeration S':\n                res = \"{\" + buf.p1 + \"}\\\\mkern1mu \";\n                break;\n            case 'hyphen':\n                res = \"\\\\text{-}\";\n                break;\n            case 'addition compound':\n                res = \"\\\\,{\\\\cdot}\\\\,\";\n                break;\n            case 'electron dot':\n                res = \"\\\\mkern1mu \\\\bullet\\\\mkern1mu \";\n                break;\n            case 'KV x':\n                res = \"{\\\\times}\";\n                break;\n            case 'prime':\n                res = \"\\\\prime \";\n                break;\n            case 'cdot':\n                res = \"\\\\cdot \";\n                break;\n            case 'tight cdot':\n                res = \"\\\\mkern1mu{\\\\cdot}\\\\mkern1mu \";\n                break;\n            case 'times':\n                res = \"\\\\times \";\n                break;\n            case 'circa':\n                res = \"{\\\\sim}\";\n                break;\n            case '^':\n                res = \"uparrow\";\n                break;\n            case 'v':\n                res = \"downarrow\";\n                break;\n            case 'ellipsis':\n                res = \"\\\\ldots \";\n                break;\n            case '/':\n                res = \"/\";\n                break;\n            case ' / ':\n                res = \"\\\\,/\\\\,\";\n                break;\n            default:\n                assertNever(buf);\n                throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n        }\n        return res;\n    },\n    _getArrow: function (a) {\n        switch (a) {\n            case \"->\": return \"rightarrow\";\n            case \"\\u2192\": return \"rightarrow\";\n            case \"\\u27F6\": return \"rightarrow\";\n            case \"<-\": return \"leftarrow\";\n            case \"<->\": return \"leftrightarrow\";\n            case \"<-->\": return \"leftrightarrows\";\n            case \"<=>\": return \"rightleftharpoons\";\n            case \"\\u21CC\": return \"rightleftharpoons\";\n            case \"<=>>\": return \"Rightleftharpoons\";\n            case \"<<=>\": return \"Leftrightharpoons\";\n            default:\n                assertNever(a);\n                throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n        }\n    },\n    _getBond: function (a) {\n        switch (a) {\n            case \"-\": return \"{-}\";\n            case \"1\": return \"{-}\";\n            case \"=\": return \"{=}\";\n            case \"2\": return \"{=}\";\n            case \"#\": return \"{\\\\equiv}\";\n            case \"3\": return \"{\\\\equiv}\";\n            case \"~\": return \"{\\\\tripledash}\";\n            case \"~-\": return \"{\\\\rlap{\\\\lower.1em{-}}\\\\raise.1em{\\\\tripledash}}\";\n            case \"~=\": return \"{\\\\rlap{\\\\lower.2em{-}}\\\\rlap{\\\\raise.2em{\\\\tripledash}}-}\";\n            case \"~--\": return \"{\\\\rlap{\\\\lower.2em{-}}\\\\rlap{\\\\raise.2em{\\\\tripledash}}-}\";\n            case \"-~-\": return \"{\\\\rlap{\\\\lower.2em{-}}\\\\rlap{\\\\raise.2em{-}}\\\\tripledash}\";\n            case \"...\": return \"{{\\\\cdot}{\\\\cdot}{\\\\cdot}}\";\n            case \"....\": return \"{{\\\\cdot}{\\\\cdot}{\\\\cdot}{\\\\cdot}}\";\n            case \"->\": return \"{\\\\rightarrow}\";\n            case \"<-\": return \"{\\\\leftarrow}\";\n            case \"<\": return \"{<}\";\n            case \">\": return \"{>}\";\n            default:\n                assertNever(a);\n                throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n        }\n    },\n    _getOperator: function (a) {\n        switch (a) {\n            case \"+\": return \" {}+{} \";\n            case \"-\": return \" {}-{} \";\n            case \"=\": return \" {}={} \";\n            case \"<\": return \" {}<{} \";\n            case \">\": return \" {}>{} \";\n            case \"<<\": return \" {}\\\\ll{} \";\n            case \">>\": return \" {}\\\\gg{} \";\n            case \"\\\\pm\": return \" {}\\\\pm{} \";\n            case \"\\\\approx\": return \" {}\\\\approx{} \";\n            case \"$\\\\approx$\": return \" {}\\\\approx{} \";\n            case \"v\": return \" \\\\downarrow{} \";\n            case \"(v)\": return \" \\\\downarrow{} \";\n            case \"^\": return \" \\\\uparrow{} \";\n            case \"(^)\": return \" \\\\uparrow{} \";\n            default:\n                assertNever(a);\n                throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n        }\n    }\n};\nfunction assertNever(a) { }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbWhjaGVtcGFyc2VyL2Rpc3QvbWhjaGVtUGFyc2VyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHVCQUF1QjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix1QkFBdUI7QUFDbkQ7QUFDQTtBQUNBLGdDQUFnQyxzQkFBc0I7QUFDdEQ7QUFDQSx5Q0FBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHlCQUF5QjtBQUN6RDtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsbUNBQW1DO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCxtQ0FBbUM7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxjQUFjO0FBQzlEO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQywwQkFBMEI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxlQUFlO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlRQUF5USxFQUFFO0FBQzNRLDhOQUE4TixFQUFFO0FBQ2hPO0FBQ0E7QUFDQSwyTkFBMk4sRUFBRTtBQUM3TjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlPQUFpTyxjQUFjO0FBQy9PO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQSxhQUFhO0FBQ2Isc0hBQXNILGNBQWM7QUFDcEk7QUFDQSxzRkFBc0YsSUFBSTtBQUMxRixxREFBcUQsTUFBTTtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0EsYUFBYTtBQUNiLGVBQWUsdUJBQXVCLFNBQVMsU0FBUyxJQUFJLEtBQUs7QUFDakUsY0FBYyxjQUFjO0FBQzVCLGdCQUFnQixrQkFBa0I7QUFDbEMsdUJBQXVCO0FBQ3ZCLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQSxlQUFlLE1BQU0sc0JBQXNCLDBEQUEwRCxhQUFhLEtBQUs7QUFDdkgsMkNBQTJDLDRFQUE0RTtBQUN2SDtBQUNBLHFCQUFxQixzQkFBc0IsMkVBQTJFLEtBQUssYUFBYSxLQUFLLGVBQWU7QUFDNUosbUJBQW1CLHNCQUFzQiwyRUFBMkUsS0FBSyxTQUFTO0FBQ2xJO0FBQ0E7QUFDQTtBQUNBLGVBQWUsTUFBTSxzQkFBc0IsMERBQTBELGFBQWEsS0FBSztBQUN2SCwyQ0FBMkMsNEVBQTRFO0FBQ3ZIO0FBQ0EscUJBQXFCLHNCQUFzQiwyRUFBMkUsS0FBSyxhQUFhLEtBQUssZUFBZTtBQUM1SixtQkFBbUIsc0JBQXNCLDJFQUEyRSxLQUFLLFNBQVM7QUFDbEk7QUFDQTtBQUNBLGVBQWUsUUFBUSxFQUFFO0FBQ3pCLGVBQWUsT0FBTyxFQUFFO0FBQ3hCLGNBQWMsSUFBSSxzQkFBc0IsNkRBQTZELEtBQUssU0FBUztBQUNuSCxjQUFjLE1BQU0sc0JBQXNCLHlEQUF5RCxhQUFhLEtBQUs7QUFDckgsd0NBQXdDLDJFQUEyRTtBQUNuSCxlQUFlLE1BQU07QUFDckIsMEVBQTBFLGFBQWE7QUFDdkYsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixFQUFFO0FBQy9CO0FBQ0EsNkRBQTZELE1BQU07QUFDbkU7QUFDQTtBQUNBO0FBQ0EsNERBQTRELE1BQU07QUFDbEUsb0JBQW9CLE1BQU0sc0JBQXNCLCtEQUErRCxhQUFhLEtBQUs7QUFDakk7QUFDQTtBQUNBLDBDQUEwQywyRUFBMkU7QUFDckg7QUFDQSwrQkFBK0I7QUFDL0Isb0JBQW9CLHNCQUFzQiwwRUFBMEUsS0FBSyxhQUFhLEtBQUssZUFBZTtBQUMxSixrQkFBa0Isc0JBQXNCLDBFQUEwRSxLQUFLLFNBQVM7QUFDaEk7QUFDQSw4Q0FBOEM7QUFDOUMsa0NBQWtDLElBQUksZUFBZSxJQUFJO0FBQ3pEO0FBQ0Esb0JBQW9CLE1BQU0sc0JBQXNCLCtEQUErRCxhQUFhLEtBQUssYUFBYSxLQUFLO0FBQ25KLHVCQUF1QixNQUFNLHNCQUFzQixrRUFBa0UsYUFBYSxLQUFLLGFBQWEsS0FBSztBQUN6Six3QkFBd0IsTUFBTSxzQkFBc0IsbUVBQW1FLGFBQWEsS0FBSyxhQUFhLEtBQUs7QUFDM0osMEJBQTBCLE1BQU0sc0JBQXNCLHFFQUFxRSxhQUFhLE1BQU0sYUFBYSxLQUFLO0FBQ2hLLHFCQUFxQixNQUFNLHNCQUFzQixnRUFBZ0UsYUFBYSxLQUFLO0FBQ25JLHFCQUFxQixPQUFPLE1BQU07QUFDbEMsZ0ZBQWdGLGFBQWEsS0FBSyxhQUFhO0FBQy9HLGdHQUFnRyxNQUFNLGFBQWE7QUFDbkgsYUFBYTtBQUNiLGtCQUFrQixNQUFNLHNCQUFzQiw2REFBNkQsYUFBYSxLQUFLO0FBQzdILGtCQUFrQixNQUFNLHNCQUFzQiw2REFBNkQsYUFBYSxLQUFLO0FBQzdIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsMENBQTBDLCtCQUErQjtBQUN6RSw2Q0FBNkMsSUFBSTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EscUNBQXFDLGlDQUFpQyxtQkFBbUI7QUFDekYscUNBQXFDLGlDQUFpQyxtQkFBbUI7QUFDekYscUNBQXFDLGlDQUFpQyxtQkFBbUI7QUFDekYscUNBQXFDLGlDQUFpQyxtQkFBbUI7QUFDekYscUNBQXFDLGlDQUFpQyxtQkFBbUI7QUFDekYscUNBQXFDLGlDQUFpQyxtQkFBbUI7QUFDekYsc0NBQXNDLG1DQUFtQyxtQkFBbUI7QUFDNUYsd0NBQXdDLHlDQUF5QyxtQkFBbUI7QUFDcEcsOENBQThDLFNBQVMsYUFBYTtBQUNwRSxnREFBZ0QsU0FBUyxvQkFBb0I7QUFDN0UsbURBQW1ELFNBQVMsaUNBQWlDO0FBQzdGLHdDQUF3QyxXQUFXO0FBQ25ELDZDQUE2QyxXQUFXO0FBQ3hELHNDQUFzQyxTQUFTLHVCQUF1QjtBQUN0RSx3Q0FBd0MscUNBQXFDO0FBQzdFLDRDQUE0Qyx5Q0FBeUM7QUFDckYsa0RBQWtELCtDQUErQztBQUNqRywyQ0FBMkMsU0FBUyxpQ0FBaUM7QUFDckYsaURBQWlELFNBQVMsOEJBQThCO0FBQ3hGLHNDQUFzQyxtQ0FBbUM7QUFDekUsc0NBQXNDLG1DQUFtQztBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG1DQUFtQztBQUMxRDtBQUNBO0FBQ0EsMkJBQTJCLDZCQUE2QjtBQUN4RDtBQUNBO0FBQ0EsU0FBUztBQUNULHVDQUF1QztBQUN2QyxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCLHNCQUFzQixNQUFNO0FBQzVCLDJCQUEyQixZQUFZLDBCQUEwQixHQUFHLFVBQVUsMEJBQTBCLEdBQUc7QUFDM0csaUJBQWlCO0FBQ2pCLHNCQUFzQixNQUFNO0FBQzVCLDJCQUEyQixZQUFZLDBCQUEwQixHQUFHLFVBQVUsMEJBQTBCLEdBQUc7QUFDM0csaUJBQWlCO0FBQ2pCO0FBQ0EsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBLCtCQUErQjtBQUMvQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCO0FBQ0EsMkJBQTJCLGtDQUFrQztBQUM3RCw0QkFBNEI7QUFDNUIsaUJBQWlCO0FBQ2pCO0FBQ0Esa0NBQWtDO0FBQ2xDLGlCQUFpQjtBQUNqQjtBQUNBLCtCQUErQjtBQUMvQixpQkFBaUI7QUFDakI7QUFDQSxpQ0FBaUM7QUFDakMsaUJBQWlCO0FBQ2pCO0FBQ0EsaUNBQWlDLCtCQUErQjtBQUNoRSw4QkFBOEIsMkNBQTJDO0FBQ3pFLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkIsa0NBQWtDO0FBQzdELDZCQUE2QiwrQkFBK0I7QUFDNUQsMkJBQTJCLGdDQUFnQztBQUMzRCwrQkFBK0IsZ0NBQWdDO0FBQy9ELDRCQUE0QiwyQ0FBMkM7QUFDdkUsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBLDZCQUE2QjtBQUM3QixpQkFBaUI7QUFDakI7QUFDQSxvQ0FBb0Msa0NBQWtDLG1DQUFtQztBQUN6RyxpQkFBaUI7QUFDakI7QUFDQSxvQ0FBb0M7QUFDcEMsaUJBQWlCO0FBQ2pCO0FBQ0EsNkJBQTZCLHdEQUF3RDtBQUNyRiwyQkFBMkIsK0JBQStCO0FBQzFELDJCQUEyQixzQkFBc0IsNEJBQTRCLG1CQUFtQjtBQUNoRywyQkFBMkIsZ0NBQWdDO0FBQzNELDRCQUE0QixnQ0FBZ0M7QUFDNUQsK0JBQStCLHNCQUFzQiw0QkFBNEI7QUFDakYsaUJBQWlCO0FBQ2pCO0FBQ0EsNkJBQTZCLHNCQUFzQixtQ0FBbUM7QUFDdEYsaUJBQWlCO0FBQ2pCO0FBQ0EsMkJBQTJCLHNCQUFzQixtQ0FBbUMsbUJBQW1CO0FBQ3ZHLDJCQUEyQixzQkFBc0IsbUNBQW1DO0FBQ3BGLGlCQUFpQjtBQUNqQjtBQUNBLCtCQUErQixZQUFZLDRCQUE0QiwyQkFBMkIsNEJBQTRCLG1CQUFtQjtBQUNqSiwyQkFBMkIsV0FBVyw4QkFBOEI7QUFDcEUsMkJBQTJCLHNCQUFzQixtQ0FBbUMsbUJBQW1CO0FBQ3ZHLDRCQUE0QixZQUFZLDRCQUE0QixJQUFJLDRCQUE0QixtQkFBbUI7QUFDdkgsMkJBQTJCLGVBQWU7QUFDMUMsMkJBQTJCLFdBQVcscUNBQXFDLGtCQUFrQjtBQUM3RiwyQkFBMkIsV0FBVyxxQ0FBcUMsa0JBQWtCO0FBQzdGLGlDQUFpQyxXQUFXLG9DQUFvQyxrQkFBa0I7QUFDbEcsZ0NBQWdDLHNCQUFzQiw0QkFBNEI7QUFDbEYsaUJBQWlCO0FBQ2pCO0FBQ0EsNkJBQTZCO0FBQzdCLGlCQUFpQjtBQUNqQjtBQUNBLCtDQUErQywrQkFBK0I7QUFDOUUsOEJBQThCLDJDQUEyQztBQUN6RSxtQ0FBbUM7QUFDbkMsaUJBQWlCO0FBQ2pCO0FBQ0EsMkJBQTJCLCtCQUErQjtBQUMxRCw2QkFBNkIsZ0NBQWdDO0FBQzdELDJCQUEyQiwyQ0FBMkM7QUFDdEUsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBLGdDQUFnQztBQUNoQyxpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkIsOEJBQThCO0FBQ3pELDJCQUEyQixxQkFBcUI7QUFDaEQsNkJBQTZCLG9CQUFvQjtBQUNqRCx5Q0FBeUMsbUNBQW1DO0FBQzVFLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSw2QkFBNkIsc0JBQXNCLGdEQUFnRCxHQUFHO0FBQ3RHLDJCQUEyQixzQkFBc0IsZ0RBQWdEO0FBQ2pHLGlCQUFpQjtBQUNqQjtBQUNBLDhCQUE4QixpQ0FBaUM7QUFDL0QsZ0NBQWdDO0FBQ2hDLGlCQUFpQjtBQUNqQjtBQUNBLHdDQUF3QyxzQkFBc0IsOEJBQThCLG1CQUFtQjtBQUMvRywyQkFBMkIsWUFBWSw0QkFBNEIsSUFBSSxxQ0FBcUM7QUFDNUcsaUJBQWlCO0FBQ2pCO0FBQ0EsMkJBQTJCLHNCQUFzQiw4Q0FBOEM7QUFDL0YsaUJBQWlCO0FBQ2pCO0FBQ0EsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQixrQkFBa0I7QUFDbEIsZ0NBQWdDLGlFQUFpRTtBQUNqRyxpQ0FBaUMsaUVBQWlFO0FBQ2xHLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakIsb0JBQW9CO0FBQ3BCLDBDQUEwQyx1REFBdUQ7QUFDakcsNkNBQTZDO0FBQzdDLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCLG1CQUFtQixNQUFNO0FBQ3pCLGtDQUFrQywrQkFBK0I7QUFDakUsMkJBQTJCLGdDQUFnQztBQUMzRCw2QkFBNkIsa0NBQWtDO0FBQy9ELDJCQUEyQixnQ0FBZ0M7QUFDM0Qsc0NBQXNDO0FBQ3RDLGlCQUFpQjtBQUNqQiw0QkFBNEIsT0FBTztBQUNuQyxrQ0FBa0MsK0JBQStCO0FBQ2pFLDJCQUEyQixnQ0FBZ0M7QUFDM0QsNkJBQTZCLGtDQUFrQztBQUMvRCwyQkFBMkIsZ0NBQWdDO0FBQzNELG1DQUFtQyxlQUFlO0FBQ2xELDRCQUE0QjtBQUM1QixpQkFBaUI7QUFDakIsbUJBQW1CLHVCQUF1QjtBQUMxQyx3Q0FBd0M7QUFDeEMsaUJBQWlCO0FBQ2pCLG1CQUFtQixNQUFNLHFCQUFxQixPQUFPO0FBQ3JELGtDQUFrQywrQkFBK0I7QUFDakUsMkJBQTJCLGdDQUFnQztBQUMzRCw2QkFBNkIsK0JBQStCO0FBQzVELDZCQUE2QixnQ0FBZ0M7QUFDN0Qsb0NBQW9DO0FBQ3BDLGlCQUFpQjtBQUNqQjtBQUNBLHVEQUF1RCxZQUFZLDRCQUE0QjtBQUMvRixpQkFBaUI7QUFDakI7QUFDQSx3Q0FBd0MsWUFBWSw0QkFBNEIsSUFBSSw0QkFBNEI7QUFDaEgsaUJBQWlCO0FBQ2pCLG1CQUFtQjtBQUNuQiwyQkFBMkIsWUFBWSw0QkFBNEIsSUFBSSxxQ0FBcUM7QUFDNUcsaUJBQWlCO0FBQ2pCLG1CQUFtQjtBQUNuQiwyQkFBMkIsV0FBVyw0QkFBNEI7QUFDbEUsaUJBQWlCO0FBQ2pCLGtCQUFrQixJQUFJO0FBQ3RCLDZDQUE2QywrQkFBK0I7QUFDNUUsMENBQTBDO0FBQzFDLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQixlQUFlO0FBQzFDLDZDQUE2QywrQkFBK0I7QUFDNUUsOEJBQThCLGVBQWU7QUFDN0Msd0NBQXdDO0FBQ3hDLGlCQUFpQjtBQUNqQix3QkFBd0IsTUFBTTtBQUM5QiwyQkFBMkIsWUFBWSw0QkFBNEI7QUFDbkUsaUJBQWlCO0FBQ2pCLHdCQUF3QixNQUFNO0FBQzlCLDJCQUEyQixZQUFZLDRCQUE0QjtBQUNuRSxpQkFBaUI7QUFDakIsMkJBQTJCLE1BQU07QUFDakMsMkJBQTJCLFlBQVksNEJBQTRCO0FBQ25FLGlCQUFpQjtBQUNqQiw0QkFBNEIsTUFBTTtBQUNsQywyQkFBMkIsWUFBWSw0QkFBNEI7QUFDbkUsaUJBQWlCO0FBQ2pCLDhCQUE4QixNQUFNO0FBQ3BDLDJCQUEyQixZQUFZLDRCQUE0QjtBQUNuRSxpQkFBaUI7QUFDakIseUJBQXlCLE9BQU8sTUFBTTtBQUN0QywyQkFBMkIsWUFBWSw0QkFBNEI7QUFDbkUsaUJBQWlCO0FBQ2pCLHlCQUF5QixNQUFNO0FBQy9CLDJCQUEyQixZQUFZLDRCQUE0QjtBQUNuRSxpQkFBaUI7QUFDakIsc0JBQXNCLE1BQU07QUFDNUIsMkJBQTJCLFlBQVksNEJBQTRCO0FBQ25FLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQixZQUFZLDRCQUE0QjtBQUNuRSxpQkFBaUI7QUFDakIsc0JBQXNCLE1BQU07QUFDNUIsMkJBQTJCLHNCQUFzQiwwQkFBMEIsR0FBRyxVQUFVLDBCQUEwQixHQUFHO0FBQ3JILGlCQUFpQjtBQUNqQix3QkFBd0IsTUFBTTtBQUM5QixrREFBa0QsMkNBQTJDO0FBQzdGLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkIsWUFBWSw0QkFBNEI7QUFDbkUsaUJBQWlCO0FBQ2pCO0FBQ0EsMkJBQTJCLGtEQUFrRDtBQUM3RSw0QkFBNEIsK0RBQStEO0FBQzNGLHlDQUF5QyxvREFBb0Q7QUFDN0YsMkJBQTJCO0FBQzNCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLG1CQUFtQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxpQkFBaUI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsK0NBQStDLGtCQUFrQixtQkFBbUI7QUFDcEYsZ0RBQWdELG1CQUFtQixtQkFBbUI7QUFDdEYsMkRBQTJELGlDQUFpQyxtQkFBbUI7QUFDL0csNERBQTRELGtDQUFrQyxtQkFBbUI7QUFDakgsMERBQTBELDhCQUE4QixtQkFBbUI7QUFDM0csMERBQTBELDhCQUE4QixtQkFBbUI7QUFDM0c7QUFDQSw2QkFBNkI7QUFDN0IsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxxQkFBcUI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxvQ0FBb0M7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLG9DQUFvQztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsNkJBQTZCO0FBQzdCLGlCQUFpQjtBQUNqQjtBQUNBLDZCQUE2QjtBQUM3QixpQkFBaUI7QUFDakI7QUFDQSw2QkFBNkI7QUFDN0IsaUJBQWlCO0FBQ2pCO0FBQ0EsNkJBQTZCO0FBQzdCLGlCQUFpQjtBQUNqQjtBQUNBLDZCQUE2QjtBQUM3QixpQkFBaUI7QUFDakIsNkNBQTZDLGNBQWMsbUJBQW1CO0FBQzlFLCtDQUErQyxnQkFBZ0IsbUJBQW1CO0FBQ2xGLDhDQUE4QyxlQUFlLG1CQUFtQjtBQUNoRiwrQ0FBK0MsZ0JBQWdCLG1CQUFtQjtBQUNsRiw4Q0FBOEMsZUFBZSxtQkFBbUI7QUFDaEYsd0RBQXdELFNBQVM7QUFDakU7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCLG1CQUFtQixNQUFNO0FBQ3pCLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkIsV0FBVztBQUN0QyxpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCO0FBQ0EsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQixXQUFXO0FBQ3RDLGlCQUFpQjtBQUNqQixzQkFBc0IsTUFBTTtBQUM1QiwyQkFBMkIsWUFBWSwwQkFBMEIsR0FBRyxVQUFVLDBCQUEwQixHQUFHO0FBQzNHLGlCQUFpQjtBQUNqQix3QkFBd0IsTUFBTTtBQUM5QiwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCLG1CQUFtQixNQUFNO0FBQ3pCLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakIsa0JBQWtCLE1BQU07QUFDeEIsMkJBQTJCLFlBQVksMEJBQTBCLEdBQUcsWUFBWSwwQkFBMEIsR0FBRztBQUM3RyxpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQixrQkFBa0IsSUFBSTtBQUN0QiwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCLG1CQUFtQixNQUFNO0FBQ3pCLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCLHNCQUFzQixNQUFNO0FBQzVCLDJCQUEyQixzQkFBc0IsMEJBQTBCLEdBQUcsVUFBVSwwQkFBMEIsR0FBRztBQUNySCxpQkFBaUI7QUFDakIsNEJBQTRCLE1BQU07QUFDbEMsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCO0FBQ0EsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCO0FBQ0EsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCLG1CQUFtQixNQUFNO0FBQ3pCLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakIsa0JBQWtCLE1BQU07QUFDeEIsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCO0FBQ0EsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQixXQUFXO0FBQ3RDLGlCQUFpQjtBQUNqQix5QkFBeUIsT0FBTyxNQUFNO0FBQ3RDLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakIseUJBQXlCLE1BQU07QUFDL0IsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQixzQkFBc0IsTUFBTTtBQUM1QiwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCLHNCQUFzQixNQUFNO0FBQzVCLDJCQUEyQixZQUFZLDBCQUEwQixHQUFHLFVBQVUsMEJBQTBCLEdBQUc7QUFDM0csaUJBQWlCO0FBQ2pCLDRCQUE0QixNQUFNO0FBQ2xDLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QixpQkFBaUI7QUFDakI7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCO0FBQ0EsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCO0FBQ0EsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQixXQUFXO0FBQ3RDLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkIsV0FBVztBQUN0QyxpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCO0FBQ0EsMkJBQTJCLFdBQVc7QUFDdEMsaUJBQWlCO0FBQ2pCLG1CQUFtQixNQUFNO0FBQ3pCLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakIsa0JBQWtCLE1BQU07QUFDeEIsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQix5QkFBeUIsT0FBTyxNQUFNO0FBQ3RDLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakIseUJBQXlCLE1BQU07QUFDL0IsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQixzQkFBc0IsTUFBTTtBQUM1QiwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCLHNCQUFzQixNQUFNO0FBQzVCLDJCQUEyQixZQUFZLDBCQUEwQixHQUFHLFVBQVUsMEJBQTBCLEdBQUc7QUFDM0csaUJBQWlCO0FBQ2pCLDRCQUE0QixNQUFNO0FBQ2xDLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCLG1CQUFtQixNQUFNO0FBQ3pCLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQSxhQUFhO0FBQ2I7QUFDQSx5REFBeUQsU0FBUztBQUNsRTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCLHNCQUFzQixNQUFNO0FBQzVCLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakIsc0JBQXNCLE1BQU07QUFDNUIsMkJBQTJCLHNCQUFzQiwwQkFBMEIsR0FBRyxVQUFVLDBCQUEwQixHQUFHO0FBQ3JILGlCQUFpQjtBQUNqQixrQkFBa0IsSUFBSSxZQUFZLE1BQU07QUFDeEMsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCLHNCQUFzQixNQUFNO0FBQzVCLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakIsc0JBQXNCLE1BQU07QUFDNUIsMkJBQTJCLHNCQUFzQiwwQkFBMEIsR0FBRyxVQUFVLDBCQUEwQixHQUFHO0FBQ3JILGlCQUFpQjtBQUNqQixrQkFBa0IsSUFBSSxZQUFZLE1BQU07QUFDeEMsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQSxhQUFhO0FBQ2I7QUFDQSx5REFBeUQsZ0NBQWdDLFVBQVUsR0FBRyxtQkFBbUI7QUFDekg7QUFDQTtBQUNBLG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsdUNBQXVDLFNBQVM7QUFDaEQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakIsa0JBQWtCLE1BQU07QUFDeEIsNkJBQTZCO0FBQzdCLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCO0FBQ0EsNkJBQTZCO0FBQzdCLGlCQUFpQjtBQUNqQjtBQUNBLDZCQUE2QixXQUFXLG1DQUFtQztBQUMzRSxpQkFBaUI7QUFDakI7QUFDQSw2QkFBNkI7QUFDN0IsaUJBQWlCO0FBQ2pCO0FBQ0EsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakIsa0JBQWtCLElBQUk7QUFDdEIsNkJBQTZCLCtCQUErQjtBQUM1RCwyQkFBMkIsMENBQTBDO0FBQ3JFLDZCQUE2QjtBQUM3QjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsZUFBZTtBQUMxRDtBQUNBO0FBQ0EsMkNBQTJDLGdCQUFnQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxhQUFhO0FBQ25EO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLGFBQWE7QUFDN0M7QUFDQSxpQkFBaUI7QUFDakIsd0RBQXdELFNBQVMsd0NBQXdDO0FBQ3pHLHVDQUF1QyxTQUFTLHdCQUF3QjtBQUN4RTtBQUNBO0FBQ0EsNkRBQTZELE1BQU07QUFDbkU7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELE1BQU07QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRUFBcUUsRUFBRSxRQUFRLEVBQUUsT0FBTztBQUN4RixxRUFBcUUsRUFBRSxRQUFRLEVBQUUsT0FBTztBQUN4RjtBQUNBO0FBQ0EscUVBQXFFLEVBQUUsUUFBUSxFQUFFLE9BQU87QUFDeEYscUVBQXFFLEVBQUUsUUFBUSxFQUFFLE9BQU87QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxjQUFjO0FBQ3pEO0FBQ0E7QUFDQSwyQ0FBMkMsWUFBWTtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCO0FBQ0EsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCLG1CQUFtQixNQUFNO0FBQ3pCLDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkIsZ0NBQWdDO0FBQzNELDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakIsa0JBQWtCLElBQUk7QUFDdEIsMkJBQTJCO0FBQzNCO0FBQ0EsYUFBYTtBQUNiO0FBQ0Esc0NBQXNDLFNBQVMsd0JBQXdCO0FBQ3ZFLGdEQUFnRCxnQkFBZ0IsVUFBVSxHQUFHLG1CQUFtQjtBQUNoRyx1Q0FBdUMsU0FBUyx3QkFBd0I7QUFDeEU7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFLE1BQU07QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIscUJBQXFCO0FBQ2hELDJCQUEyQjtBQUMzQixpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkI7QUFDM0IsaUJBQWlCO0FBQ2pCO0FBQ0EsMkJBQTJCO0FBQzNCLGlCQUFpQjtBQUNqQjtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBLGFBQWE7QUFDYjtBQUNBLHVDQUF1QyxTQUFTLDBCQUEwQjtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELE9BQU87QUFDckU7QUFDQSx1Q0FBdUMseUJBQXlCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLE9BQU87QUFDM0M7QUFDQSx1Q0FBdUMseUJBQXlCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGtCQUFrQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsWUFBWTtBQUNoQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGFBQWE7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsV0FBVyxHQUFHO0FBQzNDLDhCQUE4QixXQUFXLHNCQUFzQixFQUFFLFdBQVcsc0JBQXNCO0FBQ2xHO0FBQ0EsNkJBQTZCLFdBQVcsR0FBRztBQUMzQyw4QkFBOEIsV0FBVyxXQUFXLEdBQUcsT0FBTyxzQkFBc0I7QUFDcEYsOEJBQThCLFdBQVcsRUFBRSxPQUFPLFdBQVcsdUJBQXVCO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxhQUFhO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsV0FBVyxHQUFHO0FBQy9DO0FBQ0E7QUFDQSxrQ0FBa0MsYUFBYTtBQUMvQztBQUNBO0FBQ0Esa0NBQWtDLFdBQVcsY0FBYztBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxXQUFXLEdBQUc7QUFDL0Msa0NBQWtDLGFBQWE7QUFDL0M7QUFDQTtBQUNBLGlDQUFpQyxXQUFXLEdBQUc7QUFDL0Msa0NBQWtDLFdBQVcsY0FBYztBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxXQUFXLEdBQUc7QUFDL0Msa0NBQWtDLFdBQVcsY0FBYztBQUMzRDtBQUNBO0FBQ0EsaUNBQWlDLFdBQVcsR0FBRztBQUMvQyxrQ0FBa0MsYUFBYTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxlQUFlO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLDJFQUEyRSxFQUFFO0FBQzdFLG9DQUFvQyxlQUFlO0FBQ25EO0FBQ0E7QUFDQSxrQ0FBa0MsZUFBZTtBQUNqRDtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsZUFBZTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLGdCQUFnQixlQUFlO0FBQy9ELG9DQUFvQyxzQkFBc0IsV0FBVyxXQUFXLFVBQVU7QUFDMUY7QUFDQTtBQUNBLGdDQUFnQyx3Q0FBd0MsdUNBQXVDO0FBQy9HLG9DQUFvQyxzQkFBc0IsV0FBVyxXQUFXLFVBQVU7QUFDMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix3Q0FBd0MsdUNBQXVDO0FBQzdHO0FBQ0E7QUFDQSxpQ0FBaUMsd0NBQXdDLHVDQUF1QztBQUNoSDtBQUNBO0FBQ0Esa0NBQWtDLHdDQUF3Qyx1Q0FBdUM7QUFDakg7QUFDQTtBQUNBLG9DQUFvQyx1Q0FBdUMsRUFBRSx1Q0FBdUM7QUFDcEg7QUFDQTtBQUNBLHdCQUF3QixRQUFRLG9CQUFvQiw0Q0FBNEM7QUFDaEc7QUFDQTtBQUNBLCtCQUErQixrQkFBa0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxlQUFlLGNBQWM7QUFDNUU7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELFdBQVcsZ0JBQWdCLGNBQWM7QUFDN0Y7QUFDQTtBQUNBLG9EQUFvRCxXQUFXLGdCQUFnQixjQUFjO0FBQzdGO0FBQ0E7QUFDQSxvQ0FBb0MsVUFBVSxpQkFBaUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLGNBQWM7QUFDdEQ7QUFDQSxtQ0FBbUMsY0FBYztBQUNqRCxvQ0FBb0MsVUFBVSxvQkFBb0I7QUFDbEU7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLFVBQVUsdUJBQXVCO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLEVBQUU7QUFDMUI7QUFDQTtBQUNBLHdCQUF3QixlQUFlO0FBQ3ZDO0FBQ0E7QUFDQSx3QkFBd0IsZUFBZTtBQUN2QztBQUNBO0FBQ0Esd0JBQXdCLGVBQWU7QUFDdkM7QUFDQTtBQUNBLDhCQUE4QixFQUFFO0FBQ2hDO0FBQ0E7QUFDQSwyQkFBMkIsT0FBTztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxPQUFPO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsTUFBTTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLCtCQUErQixFQUFFO0FBQ2pDLCtCQUErQixFQUFFO0FBQ2pDLCtCQUErQixFQUFFO0FBQ2pDLCtCQUErQixFQUFFO0FBQ2pDLCtCQUErQixRQUFRO0FBQ3ZDLCtCQUErQixRQUFRO0FBQ3ZDLCtCQUErQixhQUFhO0FBQzVDLGdDQUFnQyxPQUFPLFlBQVksR0FBRyxZQUFZLGNBQWM7QUFDaEYsZ0NBQWdDLE9BQU8sWUFBWSxHQUFHLE9BQU8sWUFBWSxjQUFjLEVBQUU7QUFDekYsaUNBQWlDLE9BQU8sWUFBWSxHQUFHLE9BQU8sWUFBWSxjQUFjLEVBQUU7QUFDMUYsaUNBQWlDLE9BQU8sWUFBWSxHQUFHLE9BQU8sWUFBWSxHQUFHLGFBQWE7QUFDMUYsa0NBQWtDLFFBQVEsUUFBUSxRQUFRO0FBQzFELG1DQUFtQyxRQUFRLFFBQVEsUUFBUSxRQUFRO0FBQ25FLGdDQUFnQyxhQUFhO0FBQzdDLGdDQUFnQyxZQUFZO0FBQzVDLCtCQUErQixFQUFFO0FBQ2pDLCtCQUErQixFQUFFO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxpQ0FBaUMsSUFBSTtBQUNyQyxpQ0FBaUMsSUFBSTtBQUNyQyxpQ0FBaUMsSUFBSTtBQUNyQyxpQ0FBaUMsSUFBSTtBQUNyQyxpQ0FBaUMsSUFBSTtBQUNyQyxrQ0FBa0MsT0FBTztBQUN6QyxrQ0FBa0MsT0FBTztBQUN6QyxvQ0FBb0MsT0FBTztBQUMzQyx3Q0FBd0MsV0FBVztBQUNuRCwwQ0FBMEMsV0FBVztBQUNyRCw2Q0FBNkM7QUFDN0MsK0NBQStDO0FBQy9DLDJDQUEyQztBQUMzQyw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21oY2hlbXBhcnNlci9kaXN0L21oY2hlbVBhcnNlci5qcz9lYjJiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyohXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICpcbiAqICBtaGNoZW1QYXJzZXIudHNcbiAqICA0LjEuMVxuICpcbiAqICBQYXJzZXIgZm9yIHRoZSBcXGNlIGNvbW1hbmQgYW5kIFxccHUgY29tbWFuZCBmb3IgTWF0aEpheCBhbmQgQ28uXG4gKlxuICogIG1oY2hlbSdzIFxcY2UgaXMgYSB0b29sIGZvciB3cml0aW5nIGJlYXV0aWZ1bCBjaGVtaWNhbCBlcXVhdGlvbnMgZWFzaWx5LlxuICogIG1oY2hlbSdzIFxccHUgaXMgYSB0b29sIGZvciB3cml0aW5nIHBoeXNpY2FsIHVuaXRzIGVhc2lseS5cbiAqXG4gKiAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICpcbiAqICBDb3B5cmlnaHQgKGMpIDIwMTUtMjAyMSBNYXJ0aW4gSGVuc2VsXG4gKlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiAgeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqICBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiAgV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiAgU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICpcbiAqICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gKlxuICogIGh0dHBzOi8vZ2l0aHViLmNvbS9taGNoZW0vbWhjaGVtUGFyc2VyXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm1oY2hlbVBhcnNlciA9IHZvaWQgMDtcbnZhciBtaGNoZW1QYXJzZXIgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIG1oY2hlbVBhcnNlcigpIHtcbiAgICB9XG4gICAgbWhjaGVtUGFyc2VyLnRvVGV4ID0gZnVuY3Rpb24gKGlucHV0LCB0eXBlKSB7XG4gICAgICAgIHJldHVybiBfbWhjaGVtVGV4aWZ5LmdvKF9taGNoZW1QYXJzZXIuZ28oaW5wdXQsIHR5cGUpLCB0eXBlICE9PSBcInRleFwiKTtcbiAgICB9O1xuICAgIHJldHVybiBtaGNoZW1QYXJzZXI7XG59KCkpO1xuZXhwb3J0cy5taGNoZW1QYXJzZXIgPSBtaGNoZW1QYXJzZXI7XG5mdW5jdGlvbiBfbWhjaGVtQ3JlYXRlVHJhbnNpdGlvbnMobykge1xuICAgIHZhciBwYXR0ZXJuLCBzdGF0ZTtcbiAgICB2YXIgdHJhbnNpdGlvbnMgPSB7fTtcbiAgICBmb3IgKHBhdHRlcm4gaW4gbykge1xuICAgICAgICBmb3IgKHN0YXRlIGluIG9bcGF0dGVybl0pIHtcbiAgICAgICAgICAgIHZhciBzdGF0ZUFycmF5ID0gc3RhdGUuc3BsaXQoXCJ8XCIpO1xuICAgICAgICAgICAgb1twYXR0ZXJuXVtzdGF0ZV0uc3RhdGVBcnJheSA9IHN0YXRlQXJyYXk7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0YXRlQXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uc1tzdGF0ZUFycmF5W2ldXSA9IFtdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGZvciAocGF0dGVybiBpbiBvKSB7XG4gICAgICAgIGZvciAoc3RhdGUgaW4gb1twYXR0ZXJuXSkge1xuICAgICAgICAgICAgdmFyIHN0YXRlQXJyYXkgPSBvW3BhdHRlcm5dW3N0YXRlXS5zdGF0ZUFycmF5IHx8IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdGF0ZUFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIHAgPSBvW3BhdHRlcm5dW3N0YXRlXTtcbiAgICAgICAgICAgICAgICBwLmFjdGlvbl8gPSBbXS5jb25jYXQocC5hY3Rpb25fKTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBrID0gMDsgayA8IHAuYWN0aW9uXy5sZW5ndGg7IGsrKykge1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHAuYWN0aW9uX1trXSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcC5hY3Rpb25fW2tdID0geyB0eXBlXzogcC5hY3Rpb25fW2tdIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIHBhdHRlcm5BcnJheSA9IHBhdHRlcm4uc3BsaXQoXCJ8XCIpO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgcGF0dGVybkFycmF5Lmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzdGF0ZUFycmF5W2ldID09PSAnKicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0ID0gdm9pZCAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh0IGluIHRyYW5zaXRpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbnNbdF0ucHVzaCh7IHBhdHRlcm46IHBhdHRlcm5BcnJheVtqXSwgdGFzazogcCB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb25zW3N0YXRlQXJyYXlbaV1dLnB1c2goeyBwYXR0ZXJuOiBwYXR0ZXJuQXJyYXlbal0sIHRhc2s6IHAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRyYW5zaXRpb25zO1xufVxuO1xudmFyIF9taGNoZW1QYXJzZXIgPSB7XG4gICAgZ286IGZ1bmN0aW9uIChpbnB1dCwgc3RhdGVNYWNoaW5lKSB7XG4gICAgICAgIGlmICghaW5wdXQpIHtcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc3RhdGVNYWNoaW5lID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHN0YXRlTWFjaGluZSA9ICdjZSc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHN0YXRlID0gJzAnO1xuICAgICAgICB2YXIgYnVmZmVyID0ge307XG4gICAgICAgIGJ1ZmZlclsncGFyZW50aGVzaXNMZXZlbCddID0gMDtcbiAgICAgICAgaW5wdXQgPSBpbnB1dC5yZXBsYWNlKC9cXG4vZywgXCIgXCIpO1xuICAgICAgICBpbnB1dCA9IGlucHV0LnJlcGxhY2UoL1tcXHUyMjEyXFx1MjAxM1xcdTIwMTRcXHUyMDEwXS9nLCBcIi1cIik7XG4gICAgICAgIGlucHV0ID0gaW5wdXQucmVwbGFjZSgvW1xcdTIwMjZdL2csIFwiLi4uXCIpO1xuICAgICAgICB2YXIgbGFzdElucHV0O1xuICAgICAgICB2YXIgd2F0Y2hkb2cgPSAxMDtcbiAgICAgICAgdmFyIG91dHB1dCA9IFtdO1xuICAgICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICAgICAgaWYgKGxhc3RJbnB1dCAhPT0gaW5wdXQpIHtcbiAgICAgICAgICAgICAgICB3YXRjaGRvZyA9IDEwO1xuICAgICAgICAgICAgICAgIGxhc3RJbnB1dCA9IGlucHV0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgd2F0Y2hkb2ctLTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBtYWNoaW5lID0gX21oY2hlbVBhcnNlci5zdGF0ZU1hY2hpbmVzW3N0YXRlTWFjaGluZV07XG4gICAgICAgICAgICB2YXIgdCA9IG1hY2hpbmUudHJhbnNpdGlvbnNbc3RhdGVdIHx8IG1hY2hpbmUudHJhbnNpdGlvbnNbJyonXTtcbiAgICAgICAgICAgIGl0ZXJhdGVUcmFuc2l0aW9uczogZm9yICh2YXIgaSA9IDA7IGkgPCB0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1hdGNoZXMgPSBfbWhjaGVtUGFyc2VyLnBhdHRlcm5zLm1hdGNoXyh0W2ldLnBhdHRlcm4sIGlucHV0KTtcbiAgICAgICAgICAgICAgICBpZiAobWF0Y2hlcykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgdGFzayA9IHRbaV0udGFzaztcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaUEgPSAwOyBpQSA8IHRhc2suYWN0aW9uXy5sZW5ndGg7IGlBKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBvID0gdm9pZCAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1hY2hpbmUuYWN0aW9uc1t0YXNrLmFjdGlvbl9baUFdLnR5cGVfXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG8gPSBtYWNoaW5lLmFjdGlvbnNbdGFzay5hY3Rpb25fW2lBXS50eXBlX10oYnVmZmVyLCBtYXRjaGVzLm1hdGNoXywgdGFzay5hY3Rpb25fW2lBXS5vcHRpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoX21oY2hlbVBhcnNlci5hY3Rpb25zW3Rhc2suYWN0aW9uX1tpQV0udHlwZV9dKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbyA9IF9taGNoZW1QYXJzZXIuYWN0aW9uc1t0YXNrLmFjdGlvbl9baUFdLnR5cGVfXShidWZmZXIsIG1hdGNoZXMubWF0Y2hfLCB0YXNrLmFjdGlvbl9baUFdLm9wdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBbXCJNaGNoZW1CdWdBXCIsIFwibWhjaGVtIGJ1ZyBBLiBQbGVhc2UgcmVwb3J0LiAoXCIgKyB0YXNrLmFjdGlvbl9baUFdLnR5cGVfICsgXCIpXCJdO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgX21oY2hlbVBhcnNlci5jb25jYXRBcnJheShvdXRwdXQsIG8pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHN0YXRlID0gdGFzay5uZXh0U3RhdGUgfHwgc3RhdGU7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpbnB1dC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXRhc2sucmV2aXNpdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0ID0gbWF0Y2hlcy5yZW1haW5kZXI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXRhc2sudG9Db250aW51ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrIGl0ZXJhdGVUcmFuc2l0aW9ucztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvdXRwdXQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAod2F0Y2hkb2cgPD0gMCkge1xuICAgICAgICAgICAgICAgIHRocm93IFtcIk1oY2hlbUJ1Z1VcIiwgXCJtaGNoZW0gYnVnIFUuIFBsZWFzZSByZXBvcnQuXCJdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSxcbiAgICBjb25jYXRBcnJheTogZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgICAgaWYgKGIpIHtcbiAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGIpKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaUIgPSAwOyBpQiA8IGIubGVuZ3RoOyBpQisrKSB7XG4gICAgICAgICAgICAgICAgICAgIGEucHVzaChiW2lCXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgYS5wdXNoKGIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSxcbiAgICBwYXR0ZXJuczoge1xuICAgICAgICBwYXR0ZXJuczoge1xuICAgICAgICAgICAgJ2VtcHR5JzogL14kLyxcbiAgICAgICAgICAgICdlbHNlJzogL14uLyxcbiAgICAgICAgICAgICdlbHNlMic6IC9eLi8sXG4gICAgICAgICAgICAnc3BhY2UnOiAvXlxccy8sXG4gICAgICAgICAgICAnc3BhY2UgQSc6IC9eXFxzKD89W0EtWlxcXFwkXSkvLFxuICAgICAgICAgICAgJ3NwYWNlJCc6IC9eXFxzJC8sXG4gICAgICAgICAgICAnYS16JzogL15bYS16XS8sXG4gICAgICAgICAgICAneCc6IC9eeC8sXG4gICAgICAgICAgICAneCQnOiAvXngkLyxcbiAgICAgICAgICAgICdpJCc6IC9eaSQvLFxuICAgICAgICAgICAgJ2xldHRlcnMnOiAvXig/OlthLXpBLVpcXHUwM0IxLVxcdTAzQzlcXHUwMzkxLVxcdTAzQTk/QF18KD86XFxcXCg/OmFscGhhfGJldGF8Z2FtbWF8ZGVsdGF8ZXBzaWxvbnx6ZXRhfGV0YXx0aGV0YXxpb3RhfGthcHBhfGxhbWJkYXxtdXxudXx4aXxvbWljcm9ufHBpfHJob3xzaWdtYXx0YXV8dXBzaWxvbnxwaGl8Y2hpfHBzaXxvbWVnYXxHYW1tYXxEZWx0YXxUaGV0YXxMYW1iZGF8WGl8UGl8U2lnbWF8VXBzaWxvbnxQaGl8UHNpfE9tZWdhKSg/Olxccyt8XFx7XFx9fCg/IVthLXpBLVpdKSkpKSsvLFxuICAgICAgICAgICAgJ1xcXFxncmVlayc6IC9eXFxcXCg/OmFscGhhfGJldGF8Z2FtbWF8ZGVsdGF8ZXBzaWxvbnx6ZXRhfGV0YXx0aGV0YXxpb3RhfGthcHBhfGxhbWJkYXxtdXxudXx4aXxvbWljcm9ufHBpfHJob3xzaWdtYXx0YXV8dXBzaWxvbnxwaGl8Y2hpfHBzaXxvbWVnYXxHYW1tYXxEZWx0YXxUaGV0YXxMYW1iZGF8WGl8UGl8U2lnbWF8VXBzaWxvbnxQaGl8UHNpfE9tZWdhKSg/Olxccyt8XFx7XFx9fCg/IVthLXpBLVpdKSkvLFxuICAgICAgICAgICAgJ29uZSBsb3dlcmNhc2UgbGF0aW4gbGV0dGVyICQnOiAvXig/OihbYS16XSkoPzokfFteYS16QS1aXSkpJC8sXG4gICAgICAgICAgICAnJG9uZSBsb3dlcmNhc2UgbGF0aW4gbGV0dGVyJCAkJzogL15cXCQoPzooW2Etel0pKD86JHxbXmEtekEtWl0pKVxcJCQvLFxuICAgICAgICAgICAgJ29uZSBsb3dlcmNhc2UgZ3JlZWsgbGV0dGVyICQnOiAvXig/OlxcJD9bXFx1MDNCMS1cXHUwM0M5XVxcJD98XFwkP1xcXFwoPzphbHBoYXxiZXRhfGdhbW1hfGRlbHRhfGVwc2lsb258emV0YXxldGF8dGhldGF8aW90YXxrYXBwYXxsYW1iZGF8bXV8bnV8eGl8b21pY3JvbnxwaXxyaG98c2lnbWF8dGF1fHVwc2lsb258cGhpfGNoaXxwc2l8b21lZ2EpXFxzKlxcJD8pKD86XFxzK3xcXHtcXH18KD8hW2EtekEtWl0pKSQvLFxuICAgICAgICAgICAgJ2RpZ2l0cyc6IC9eWzAtOV0rLyxcbiAgICAgICAgICAgICctOS4sOSc6IC9eWytcXC1dPyg/OlswLTldKyg/OlssLl1bMC05XSspP3xbMC05XSooPzpcXC5bMC05XSspKS8sXG4gICAgICAgICAgICAnLTkuLDkgbm8gbWlzc2luZyAwJzogL15bK1xcLV0/WzAtOV0rKD86Wy4sXVswLTldKyk/LyxcbiAgICAgICAgICAgICcoLSkoOS4sOSkoZSkoOTkpJzogZnVuY3Rpb24gKGlucHV0KSB7XG4gICAgICAgICAgICAgICAgdmFyIG1hdGNoID0gaW5wdXQubWF0Y2goL14oXFwrXFwtfFxcK1xcL1xcLXxcXCt8XFwtfFxcXFxwbVxccz8pPyhbMC05XSsoPzpbLC5dWzAtOV0rKT98WzAtOV0qKD86XFwuWzAtOV0rKSk/KFxcKCg/OlswLTldKyg/OlssLl1bMC05XSspP3xbMC05XSooPzpcXC5bMC05XSspKVxcKSk/KD86KD86KFtlRV0pfFxccyooXFwqfHh8XFxcXHRpbWVzfFxcdTAwRDcpXFxzKjEwXFxeKShbK1xcLV0/WzAtOV0rfFxce1srXFwtXT9bMC05XStcXH0pKT8vKTtcbiAgICAgICAgICAgICAgICBpZiAobWF0Y2ggJiYgbWF0Y2hbMF0pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgbWF0Y2hfOiBtYXRjaC5zbGljZSgxKSwgcmVtYWluZGVyOiBpbnB1dC5zdWJzdHIobWF0Y2hbMF0ubGVuZ3RoKSB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnKC0pKDkpXigtOSknOiAvXihcXCtcXC18XFwrXFwvXFwtfFxcK3xcXC18XFxcXHBtXFxzPyk/KFswLTldKyg/OlssLl1bMC05XSspP3xbMC05XSooPzpcXC5bMC05XSspPylcXF4oWytcXC1dP1swLTldK3xcXHtbK1xcLV0/WzAtOV0rXFx9KS8sXG4gICAgICAgICAgICAnc3RhdGUgb2YgYWdncmVnYXRpb24gJCc6IGZ1bmN0aW9uIChpbnB1dCkge1xuICAgICAgICAgICAgICAgIHZhciBhID0gX21oY2hlbVBhcnNlci5wYXR0ZXJucy5maW5kT2JzZXJ2ZUdyb3VwcyhpbnB1dCwgXCJcIiwgL15cXChbYS16XXsxLDN9KD89W1xcKSxdKS8sIFwiKVwiLCBcIlwiKTtcbiAgICAgICAgICAgICAgICBpZiAoYSAmJiBhLnJlbWFpbmRlci5tYXRjaCgvXigkfFtcXHMsO1xcKVxcXVxcfV0pLykpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBtYXRjaCA9IGlucHV0Lm1hdGNoKC9eKD86XFwoKD86XFxcXGNhXFxzPyk/XFwkW2Ftb3RoY11cXCRcXCkpLyk7XG4gICAgICAgICAgICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7IG1hdGNoXzogbWF0Y2hbMF0sIHJlbWFpbmRlcjogaW5wdXQuc3Vic3RyKG1hdGNoWzBdLmxlbmd0aCkgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJ197KHN0YXRlIG9mIGFnZ3JlZ2F0aW9uKX0kJzogL15fXFx7KFxcKFthLXpdezEsM31cXCkpXFx9LyxcbiAgICAgICAgICAgICd7WygnOiAvXig/OlxcXFxcXHt8XFxbfFxcKCkvLFxuICAgICAgICAgICAgJyldfSc6IC9eKD86XFwpfFxcXXxcXFxcXFx9KS8sXG4gICAgICAgICAgICAnLCAnOiAvXlssO11cXHMqLyxcbiAgICAgICAgICAgICcsJzogL15bLDtdLyxcbiAgICAgICAgICAgICcuJzogL15bLl0vLFxuICAgICAgICAgICAgJy4gX18qICc6IC9eKFsuXFx1MjJDNVxcdTAwQjdcXHUyMDIyXXxbKl0pXFxzKi8sXG4gICAgICAgICAgICAnLi4uJzogL15cXC5cXC5cXC4oPz0kfFteLl0pLyxcbiAgICAgICAgICAgICdeeyguLi4pfSc6IGZ1bmN0aW9uIChpbnB1dCkgeyByZXR1cm4gX21oY2hlbVBhcnNlci5wYXR0ZXJucy5maW5kT2JzZXJ2ZUdyb3VwcyhpbnB1dCwgXCJee1wiLCBcIlwiLCBcIlwiLCBcIn1cIik7IH0sXG4gICAgICAgICAgICAnXigkLi4uJCknOiBmdW5jdGlvbiAoaW5wdXQpIHsgcmV0dXJuIF9taGNoZW1QYXJzZXIucGF0dGVybnMuZmluZE9ic2VydmVHcm91cHMoaW5wdXQsIFwiXlwiLCBcIiRcIiwgXCIkXCIsIFwiXCIpOyB9LFxuICAgICAgICAgICAgJ15hJzogL15cXF4oWzAtOV0rfFteXFxcXF9dKS8sXG4gICAgICAgICAgICAnXlxcXFx4e317fSc6IGZ1bmN0aW9uIChpbnB1dCkgeyByZXR1cm4gX21oY2hlbVBhcnNlci5wYXR0ZXJucy5maW5kT2JzZXJ2ZUdyb3VwcyhpbnB1dCwgXCJeXCIsIC9eXFxcXFthLXpBLVpdK1xcey8sIFwifVwiLCBcIlwiLCBcIlwiLCBcIntcIiwgXCJ9XCIsIFwiXCIsIHRydWUpOyB9LFxuICAgICAgICAgICAgJ15cXFxceHt9JzogZnVuY3Rpb24gKGlucHV0KSB7IHJldHVybiBfbWhjaGVtUGFyc2VyLnBhdHRlcm5zLmZpbmRPYnNlcnZlR3JvdXBzKGlucHV0LCBcIl5cIiwgL15cXFxcW2EtekEtWl0rXFx7LywgXCJ9XCIsIFwiXCIpOyB9LFxuICAgICAgICAgICAgJ15cXFxceCc6IC9eXFxeKFxcXFxbYS16QS1aXSspXFxzKi8sXG4gICAgICAgICAgICAnXigtMSknOiAvXlxcXigtP1xcZCspLyxcbiAgICAgICAgICAgICdcXCcnOiAvXicvLFxuICAgICAgICAgICAgJ197KC4uLil9JzogZnVuY3Rpb24gKGlucHV0KSB7IHJldHVybiBfbWhjaGVtUGFyc2VyLnBhdHRlcm5zLmZpbmRPYnNlcnZlR3JvdXBzKGlucHV0LCBcIl97XCIsIFwiXCIsIFwiXCIsIFwifVwiKTsgfSxcbiAgICAgICAgICAgICdfKCQuLi4kKSc6IGZ1bmN0aW9uIChpbnB1dCkgeyByZXR1cm4gX21oY2hlbVBhcnNlci5wYXR0ZXJucy5maW5kT2JzZXJ2ZUdyb3VwcyhpbnB1dCwgXCJfXCIsIFwiJFwiLCBcIiRcIiwgXCJcIik7IH0sXG4gICAgICAgICAgICAnXzknOiAvXl8oWytcXC1dP1swLTldK3xbXlxcXFxdKS8sXG4gICAgICAgICAgICAnX1xcXFx4e317fSc6IGZ1bmN0aW9uIChpbnB1dCkgeyByZXR1cm4gX21oY2hlbVBhcnNlci5wYXR0ZXJucy5maW5kT2JzZXJ2ZUdyb3VwcyhpbnB1dCwgXCJfXCIsIC9eXFxcXFthLXpBLVpdK1xcey8sIFwifVwiLCBcIlwiLCBcIlwiLCBcIntcIiwgXCJ9XCIsIFwiXCIsIHRydWUpOyB9LFxuICAgICAgICAgICAgJ19cXFxceHt9JzogZnVuY3Rpb24gKGlucHV0KSB7IHJldHVybiBfbWhjaGVtUGFyc2VyLnBhdHRlcm5zLmZpbmRPYnNlcnZlR3JvdXBzKGlucHV0LCBcIl9cIiwgL15cXFxcW2EtekEtWl0rXFx7LywgXCJ9XCIsIFwiXCIpOyB9LFxuICAgICAgICAgICAgJ19cXFxceCc6IC9eXyhcXFxcW2EtekEtWl0rKVxccyovLFxuICAgICAgICAgICAgJ15fJzogL14oPzpcXF4oPz1fKXxcXF8oPz1cXF4pfFtcXF5fXSQpLyxcbiAgICAgICAgICAgICd7fV4nOiAvXlxce1xcfSg/PVxcXikvLFxuICAgICAgICAgICAgJ3t9JzogL15cXHtcXH0vLFxuICAgICAgICAgICAgJ3suLi59JzogZnVuY3Rpb24gKGlucHV0KSB7IHJldHVybiBfbWhjaGVtUGFyc2VyLnBhdHRlcm5zLmZpbmRPYnNlcnZlR3JvdXBzKGlucHV0LCBcIlwiLCBcIntcIiwgXCJ9XCIsIFwiXCIpOyB9LFxuICAgICAgICAgICAgJ3soLi4uKX0nOiBmdW5jdGlvbiAoaW5wdXQpIHsgcmV0dXJuIF9taGNoZW1QYXJzZXIucGF0dGVybnMuZmluZE9ic2VydmVHcm91cHMoaW5wdXQsIFwie1wiLCBcIlwiLCBcIlwiLCBcIn1cIik7IH0sXG4gICAgICAgICAgICAnJC4uLiQnOiBmdW5jdGlvbiAoaW5wdXQpIHsgcmV0dXJuIF9taGNoZW1QYXJzZXIucGF0dGVybnMuZmluZE9ic2VydmVHcm91cHMoaW5wdXQsIFwiXCIsIFwiJFwiLCBcIiRcIiwgXCJcIik7IH0sXG4gICAgICAgICAgICAnJHsoLi4uKX0kX18kKC4uLikkJzogZnVuY3Rpb24gKGlucHV0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9taGNoZW1QYXJzZXIucGF0dGVybnMuZmluZE9ic2VydmVHcm91cHMoaW5wdXQsIFwiJHtcIiwgXCJcIiwgXCJcIiwgXCJ9JFwiKSB8fCBfbWhjaGVtUGFyc2VyLnBhdHRlcm5zLmZpbmRPYnNlcnZlR3JvdXBzKGlucHV0LCBcIiRcIiwgXCJcIiwgXCJcIiwgXCIkXCIpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICc9PD4nOiAvXls9PD5dLyxcbiAgICAgICAgICAgICcjJzogL15bI1xcdTIyNjFdLyxcbiAgICAgICAgICAgICcrJzogL15cXCsvLFxuICAgICAgICAgICAgJy0kJzogL14tKD89W1xcc199LDtcXF0vXXwkfFxcKFthLXpdK1xcKSkvLFxuICAgICAgICAgICAgJy05JzogL14tKD89WzAtOV0pLyxcbiAgICAgICAgICAgICctIG9yYml0YWwgb3ZlcmxhcCc6IC9eLSg/PSg/OltzcGRdfHNwKSg/OiR8W1xccyw7XFwpXFxdXFx9XSkpLyxcbiAgICAgICAgICAgICctJzogL14tLyxcbiAgICAgICAgICAgICdwbS1vcGVyYXRvcic6IC9eKD86XFxcXHBtfFxcJFxcXFxwbVxcJHxcXCstfFxcK1xcLy0pLyxcbiAgICAgICAgICAgICdvcGVyYXRvcic6IC9eKD86XFwrfCg/OltcXC09PD5dfDw8fD4+fFxcXFxhcHByb3h8XFwkXFxcXGFwcHJveFxcJCkoPz1cXHN8JHwtP1swLTldKSkvLFxuICAgICAgICAgICAgJ2Fycm93VXBEb3duJzogL14oPzp2fFxcKHZcXCl8XFxefFxcKFxcXlxcKSkoPz0kfFtcXHMsO1xcKVxcXVxcfV0pLyxcbiAgICAgICAgICAgICdcXFxcYm9uZHsoLi4uKX0nOiBmdW5jdGlvbiAoaW5wdXQpIHsgcmV0dXJuIF9taGNoZW1QYXJzZXIucGF0dGVybnMuZmluZE9ic2VydmVHcm91cHMoaW5wdXQsIFwiXFxcXGJvbmR7XCIsIFwiXCIsIFwiXCIsIFwifVwiKTsgfSxcbiAgICAgICAgICAgICctPic6IC9eKD86PC0+fDwtLT58LT58PC18PD0+Pnw8PD0+fDw9PnxbXFx1MjE5MlxcdTI3RjZcXHUyMUNDXSkvLFxuICAgICAgICAgICAgJ0NNVCc6IC9eW0NNVF0oPz1cXFspLyxcbiAgICAgICAgICAgICdbKC4uLildJzogZnVuY3Rpb24gKGlucHV0KSB7IHJldHVybiBfbWhjaGVtUGFyc2VyLnBhdHRlcm5zLmZpbmRPYnNlcnZlR3JvdXBzKGlucHV0LCBcIltcIiwgXCJcIiwgXCJcIiwgXCJdXCIpOyB9LFxuICAgICAgICAgICAgJzFzdC1sZXZlbCBlc2NhcGUnOiAvXigmfFxcXFxcXFxcfFxcXFxobGluZSlcXHMqLyxcbiAgICAgICAgICAgICdcXFxcLCc6IC9eKD86XFxcXFssXFwgOzpdKS8sXG4gICAgICAgICAgICAnXFxcXHh7fXt9JzogZnVuY3Rpb24gKGlucHV0KSB7IHJldHVybiBfbWhjaGVtUGFyc2VyLnBhdHRlcm5zLmZpbmRPYnNlcnZlR3JvdXBzKGlucHV0LCBcIlwiLCAvXlxcXFxbYS16QS1aXStcXHsvLCBcIn1cIiwgXCJcIiwgXCJcIiwgXCJ7XCIsIFwifVwiLCBcIlwiLCB0cnVlKTsgfSxcbiAgICAgICAgICAgICdcXFxceHt9JzogZnVuY3Rpb24gKGlucHV0KSB7IHJldHVybiBfbWhjaGVtUGFyc2VyLnBhdHRlcm5zLmZpbmRPYnNlcnZlR3JvdXBzKGlucHV0LCBcIlwiLCAvXlxcXFxbYS16QS1aXStcXHsvLCBcIn1cIiwgXCJcIik7IH0sXG4gICAgICAgICAgICAnXFxcXGNhJzogL15cXFxcY2EoPzpcXHMrfCg/IVthLXpBLVpdKSkvLFxuICAgICAgICAgICAgJ1xcXFx4JzogL14oPzpcXFxcW2EtekEtWl0rXFxzKnxcXFxcW18me30lXSkvLFxuICAgICAgICAgICAgJ29yYml0YWwnOiAvXig/OlswLTldezEsMn1bc3BkZmdoXXxbMC05XXswLDJ9c3ApKD89JHxbXmEtekEtWl0pLyxcbiAgICAgICAgICAgICdvdGhlcnMnOiAvXltcXC9+fF0vLFxuICAgICAgICAgICAgJ1xcXFxmcmFjeyguLi4pfSc6IGZ1bmN0aW9uIChpbnB1dCkgeyByZXR1cm4gX21oY2hlbVBhcnNlci5wYXR0ZXJucy5maW5kT2JzZXJ2ZUdyb3VwcyhpbnB1dCwgXCJcXFxcZnJhY3tcIiwgXCJcIiwgXCJcIiwgXCJ9XCIsIFwie1wiLCBcIlwiLCBcIlwiLCBcIn1cIik7IH0sXG4gICAgICAgICAgICAnXFxcXG92ZXJzZXR7KC4uLil9JzogZnVuY3Rpb24gKGlucHV0KSB7IHJldHVybiBfbWhjaGVtUGFyc2VyLnBhdHRlcm5zLmZpbmRPYnNlcnZlR3JvdXBzKGlucHV0LCBcIlxcXFxvdmVyc2V0e1wiLCBcIlwiLCBcIlwiLCBcIn1cIiwgXCJ7XCIsIFwiXCIsIFwiXCIsIFwifVwiKTsgfSxcbiAgICAgICAgICAgICdcXFxcdW5kZXJzZXR7KC4uLil9JzogZnVuY3Rpb24gKGlucHV0KSB7IHJldHVybiBfbWhjaGVtUGFyc2VyLnBhdHRlcm5zLmZpbmRPYnNlcnZlR3JvdXBzKGlucHV0LCBcIlxcXFx1bmRlcnNldHtcIiwgXCJcIiwgXCJcIiwgXCJ9XCIsIFwie1wiLCBcIlwiLCBcIlwiLCBcIn1cIik7IH0sXG4gICAgICAgICAgICAnXFxcXHVuZGVyYnJhY2V7KC4uLil9JzogZnVuY3Rpb24gKGlucHV0KSB7IHJldHVybiBfbWhjaGVtUGFyc2VyLnBhdHRlcm5zLmZpbmRPYnNlcnZlR3JvdXBzKGlucHV0LCBcIlxcXFx1bmRlcmJyYWNle1wiLCBcIlwiLCBcIlwiLCBcIn1fXCIsIFwie1wiLCBcIlwiLCBcIlwiLCBcIn1cIik7IH0sXG4gICAgICAgICAgICAnXFxcXGNvbG9yeyguLi4pfSc6IGZ1bmN0aW9uIChpbnB1dCkgeyByZXR1cm4gX21oY2hlbVBhcnNlci5wYXR0ZXJucy5maW5kT2JzZXJ2ZUdyb3VwcyhpbnB1dCwgXCJcXFxcY29sb3J7XCIsIFwiXCIsIFwiXCIsIFwifVwiKTsgfSxcbiAgICAgICAgICAgICdcXFxcY29sb3J7KC4uLil9eyguLi4pfSc6IGZ1bmN0aW9uIChpbnB1dCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfbWhjaGVtUGFyc2VyLnBhdHRlcm5zLmZpbmRPYnNlcnZlR3JvdXBzKGlucHV0LCBcIlxcXFxjb2xvcntcIiwgXCJcIiwgXCJcIiwgXCJ9XCIsIFwie1wiLCBcIlwiLCBcIlwiLCBcIn1cIikgfHxcbiAgICAgICAgICAgICAgICAgICAgX21oY2hlbVBhcnNlci5wYXR0ZXJucy5maW5kT2JzZXJ2ZUdyb3VwcyhpbnB1dCwgXCJcXFxcY29sb3JcIiwgXCJcXFxcXCIsIFwiXCIsIC9eKD89XFx7KS8sIFwie1wiLCBcIlwiLCBcIlwiLCBcIn1cIik7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJ1xcXFxjZXsoLi4uKX0nOiBmdW5jdGlvbiAoaW5wdXQpIHsgcmV0dXJuIF9taGNoZW1QYXJzZXIucGF0dGVybnMuZmluZE9ic2VydmVHcm91cHMoaW5wdXQsIFwiXFxcXGNle1wiLCBcIlwiLCBcIlwiLCBcIn1cIik7IH0sXG4gICAgICAgICAgICAnXFxcXHB1eyguLi4pfSc6IGZ1bmN0aW9uIChpbnB1dCkgeyByZXR1cm4gX21oY2hlbVBhcnNlci5wYXR0ZXJucy5maW5kT2JzZXJ2ZUdyb3VwcyhpbnB1dCwgXCJcXFxccHV7XCIsIFwiXCIsIFwiXCIsIFwifVwiKTsgfSxcbiAgICAgICAgICAgICdveGlkYXRpb24kJzogL14oPzpbKy1dW0lWWF0rfFxcXFxwbVxccyowfFxcJFxcXFxwbVxcJFxccyowKSQvLFxuICAgICAgICAgICAgJ2Qtb3hpZGF0aW9uJCc6IC9eKD86WystXT9cXHM/W0lWWF0rfFxcXFxwbVxccyowfFxcJFxcXFxwbVxcJFxccyowKSQvLFxuICAgICAgICAgICAgJ3JvbWFuIG51bWVyYWwnOiAvXltJVlhdKy8sXG4gICAgICAgICAgICAnMS8yJCc6IC9eWytcXC1dPyg/OlswLTldK3xcXCRbYS16XVxcJHxbYS16XSlcXC9bMC05XSsoPzpcXCRbYS16XVxcJHxbYS16XSk/JC8sXG4gICAgICAgICAgICAnYW1vdW50JzogZnVuY3Rpb24gKGlucHV0KSB7XG4gICAgICAgICAgICAgICAgdmFyIG1hdGNoO1xuICAgICAgICAgICAgICAgIG1hdGNoID0gaW5wdXQubWF0Y2goL14oPzooPzooPzpcXChbK1xcLV0/WzAtOV0rXFwvWzAtOV0rXFwpfFsrXFwtXT8oPzpbMC05XSt8XFwkW2Etel1cXCR8W2Etel0pXFwvWzAtOV0rfFsrXFwtXT9bMC05XStbLixdWzAtOV0rfFsrXFwtXT9cXC5bMC05XSt8WytcXC1dP1swLTldKykoPzpbYS16XSg/PVxccypbQS1aXSkpPyl8WytcXC1dP1thLXpdKD89XFxzKltBLVpdKXxcXCsoPyFcXHMpKS8pO1xuICAgICAgICAgICAgICAgIGlmIChtYXRjaCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBtYXRjaF86IG1hdGNoWzBdLCByZW1haW5kZXI6IGlucHV0LnN1YnN0cihtYXRjaFswXS5sZW5ndGgpIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBhID0gX21oY2hlbVBhcnNlci5wYXR0ZXJucy5maW5kT2JzZXJ2ZUdyb3VwcyhpbnB1dCwgXCJcIiwgXCIkXCIsIFwiJFwiLCBcIlwiKTtcbiAgICAgICAgICAgICAgICBpZiAoYSkge1xuICAgICAgICAgICAgICAgICAgICBtYXRjaCA9IGEubWF0Y2hfLm1hdGNoKC9eXFwkKD86XFwoP1srXFwtXT8oPzpbMC05XSpbYS16XT9bK1xcLV0pP1swLTldKlthLXpdKD86WytcXC1dWzAtOV0qW2Etel0/KT9cXCk/fFxcK3wtKVxcJCQvKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBtYXRjaF86IG1hdGNoWzBdLCByZW1haW5kZXI6IGlucHV0LnN1YnN0cihtYXRjaFswXS5sZW5ndGgpIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJ2Ftb3VudDInOiBmdW5jdGlvbiAoaW5wdXQpIHsgcmV0dXJuIHRoaXNbJ2Ftb3VudCddKGlucHV0KTsgfSxcbiAgICAgICAgICAgICcoS1YgbGV0dGVycyksJzogL14oPzpbQS1aXVthLXpdezAsMn18aSkoPz0sKS8sXG4gICAgICAgICAgICAnZm9ybXVsYSQnOiBmdW5jdGlvbiAoaW5wdXQpIHtcbiAgICAgICAgICAgICAgICBpZiAoaW5wdXQubWF0Y2goL15cXChbYS16XStcXCkkLykpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBtYXRjaCA9IGlucHV0Lm1hdGNoKC9eKD86W2Etel18KD86WzAtOVxcIFxcK1xcLVxcLFxcLlxcKFxcKV0rW2Etel0pK1swLTlcXCBcXCtcXC1cXCxcXC5cXChcXCldKnwoPzpbYS16XVswLTlcXCBcXCtcXC1cXCxcXC5cXChcXCldKykrW2Etel0/KSQvKTtcbiAgICAgICAgICAgICAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgbWF0Y2hfOiBtYXRjaFswXSwgcmVtYWluZGVyOiBpbnB1dC5zdWJzdHIobWF0Y2hbMF0ubGVuZ3RoKSB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAndXByaWdodEVudGl0aWVzJzogL14oPzpwSHxwT0h8cEN8cEt8aVByfGlCdSkoPz0kfFteYS16QS1aXSkvLFxuICAgICAgICAgICAgJy8nOiAvXlxccyooXFwvKVxccyovLFxuICAgICAgICAgICAgJy8vJzogL15cXHMqKFxcL1xcLylcXHMqLyxcbiAgICAgICAgICAgICcqJzogL15cXHMqWyouXVxccyovXG4gICAgICAgIH0sXG4gICAgICAgIGZpbmRPYnNlcnZlR3JvdXBzOiBmdW5jdGlvbiAoaW5wdXQsIGJlZ0V4Y2wsIGJlZ0luY2wsIGVuZEluY2wsIGVuZEV4Y2wsIGJlZzJFeGNsLCBiZWcySW5jbCwgZW5kMkluY2wsIGVuZDJFeGNsLCBjb21iaW5lKSB7XG4gICAgICAgICAgICB2YXIgX21hdGNoID0gZnVuY3Rpb24gKGlucHV0LCBwYXR0ZXJuKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBwYXR0ZXJuID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpbnB1dC5pbmRleE9mKHBhdHRlcm4pICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcGF0dGVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBtYXRjaF8xID0gaW5wdXQubWF0Y2gocGF0dGVybik7XG4gICAgICAgICAgICAgICAgICAgIGlmICghbWF0Y2hfMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1hdGNoXzFbMF07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHZhciBfZmluZE9ic2VydmVHcm91cHMgPSBmdW5jdGlvbiAoaW5wdXQsIGksIGVuZENoYXJzKSB7XG4gICAgICAgICAgICAgICAgdmFyIGJyYWNlcyA9IDA7XG4gICAgICAgICAgICAgICAgd2hpbGUgKGkgPCBpbnB1dC5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGEgPSBpbnB1dC5jaGFyQXQoaSk7XG4gICAgICAgICAgICAgICAgICAgIHZhciBtYXRjaF8yID0gX21hdGNoKGlucHV0LnN1YnN0cihpKSwgZW5kQ2hhcnMpO1xuICAgICAgICAgICAgICAgICAgICBpZiAobWF0Y2hfMiAhPT0gbnVsbCAmJiBicmFjZXMgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IGVuZE1hdGNoQmVnaW46IGksIGVuZE1hdGNoRW5kOiBpICsgbWF0Y2hfMi5sZW5ndGggfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChhID09PSBcIntcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJhY2VzKys7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoYSA9PT0gXCJ9XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChicmFjZXMgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBbXCJFeHRyYUNsb3NlTWlzc2luZ09wZW5cIiwgXCJFeHRyYSBjbG9zZSBicmFjZSBvciBtaXNzaW5nIG9wZW4gYnJhY2VcIl07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmFjZXMtLTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpKys7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChicmFjZXMgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB2YXIgbWF0Y2ggPSBfbWF0Y2goaW5wdXQsIGJlZ0V4Y2wpO1xuICAgICAgICAgICAgaWYgKG1hdGNoID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpbnB1dCA9IGlucHV0LnN1YnN0cihtYXRjaC5sZW5ndGgpO1xuICAgICAgICAgICAgbWF0Y2ggPSBfbWF0Y2goaW5wdXQsIGJlZ0luY2wpO1xuICAgICAgICAgICAgaWYgKG1hdGNoID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgZSA9IF9maW5kT2JzZXJ2ZUdyb3VwcyhpbnB1dCwgbWF0Y2gubGVuZ3RoLCBlbmRJbmNsIHx8IGVuZEV4Y2wpO1xuICAgICAgICAgICAgaWYgKGUgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBtYXRjaDEgPSBpbnB1dC5zdWJzdHJpbmcoMCwgKGVuZEluY2wgPyBlLmVuZE1hdGNoRW5kIDogZS5lbmRNYXRjaEJlZ2luKSk7XG4gICAgICAgICAgICBpZiAoIShiZWcyRXhjbCB8fCBiZWcySW5jbCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBtYXRjaF86IG1hdGNoMSxcbiAgICAgICAgICAgICAgICAgICAgcmVtYWluZGVyOiBpbnB1dC5zdWJzdHIoZS5lbmRNYXRjaEVuZClcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIGdyb3VwMiA9IHRoaXMuZmluZE9ic2VydmVHcm91cHMoaW5wdXQuc3Vic3RyKGUuZW5kTWF0Y2hFbmQpLCBiZWcyRXhjbCwgYmVnMkluY2wsIGVuZDJJbmNsLCBlbmQyRXhjbCk7XG4gICAgICAgICAgICAgICAgaWYgKGdyb3VwMiA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdmFyIG1hdGNoUmV0ID0gW21hdGNoMSwgZ3JvdXAyLm1hdGNoX107XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgbWF0Y2hfOiAoY29tYmluZSA/IG1hdGNoUmV0LmpvaW4oXCJcIikgOiBtYXRjaFJldCksXG4gICAgICAgICAgICAgICAgICAgIHJlbWFpbmRlcjogZ3JvdXAyLnJlbWFpbmRlclxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIG1hdGNoXzogZnVuY3Rpb24gKG0sIGlucHV0KSB7XG4gICAgICAgICAgICB2YXIgcGF0dGVybiA9IF9taGNoZW1QYXJzZXIucGF0dGVybnMucGF0dGVybnNbbV07XG4gICAgICAgICAgICBpZiAocGF0dGVybiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgW1wiTWhjaGVtQnVnUFwiLCBcIm1oY2hlbSBidWcgUC4gUGxlYXNlIHJlcG9ydC4gKFwiICsgbSArIFwiKVwiXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBwYXR0ZXJuID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX21oY2hlbVBhcnNlci5wYXR0ZXJucy5wYXR0ZXJuc1ttXShpbnB1dCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YXIgbWF0Y2ggPSBpbnB1dC5tYXRjaChwYXR0ZXJuKTtcbiAgICAgICAgICAgICAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1hdGNoLmxlbmd0aCA+IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IG1hdGNoXzogbWF0Y2guc2xpY2UoMSksIHJlbWFpbmRlcjogaW5wdXQuc3Vic3RyKG1hdGNoWzBdLmxlbmd0aCkgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7IG1hdGNoXzogbWF0Y2hbMV0gfHwgbWF0Y2hbMF0sIHJlbWFpbmRlcjogaW5wdXQuc3Vic3RyKG1hdGNoWzBdLmxlbmd0aCkgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sXG4gICAgYWN0aW9uczoge1xuICAgICAgICAnYT0nOiBmdW5jdGlvbiAoYnVmZmVyLCBtKSB7IGJ1ZmZlci5hID0gKGJ1ZmZlci5hIHx8IFwiXCIpICsgbTsgcmV0dXJuIHVuZGVmaW5lZDsgfSxcbiAgICAgICAgJ2I9JzogZnVuY3Rpb24gKGJ1ZmZlciwgbSkgeyBidWZmZXIuYiA9IChidWZmZXIuYiB8fCBcIlwiKSArIG07IHJldHVybiB1bmRlZmluZWQ7IH0sXG4gICAgICAgICdwPSc6IGZ1bmN0aW9uIChidWZmZXIsIG0pIHsgYnVmZmVyLnAgPSAoYnVmZmVyLnAgfHwgXCJcIikgKyBtOyByZXR1cm4gdW5kZWZpbmVkOyB9LFxuICAgICAgICAnbz0nOiBmdW5jdGlvbiAoYnVmZmVyLCBtKSB7IGJ1ZmZlci5vID0gKGJ1ZmZlci5vIHx8IFwiXCIpICsgbTsgcmV0dXJuIHVuZGVmaW5lZDsgfSxcbiAgICAgICAgJ3E9JzogZnVuY3Rpb24gKGJ1ZmZlciwgbSkgeyBidWZmZXIucSA9IChidWZmZXIucSB8fCBcIlwiKSArIG07IHJldHVybiB1bmRlZmluZWQ7IH0sXG4gICAgICAgICdkPSc6IGZ1bmN0aW9uIChidWZmZXIsIG0pIHsgYnVmZmVyLmQgPSAoYnVmZmVyLmQgfHwgXCJcIikgKyBtOyByZXR1cm4gdW5kZWZpbmVkOyB9LFxuICAgICAgICAncm09JzogZnVuY3Rpb24gKGJ1ZmZlciwgbSkgeyBidWZmZXIucm0gPSAoYnVmZmVyLnJtIHx8IFwiXCIpICsgbTsgcmV0dXJuIHVuZGVmaW5lZDsgfSxcbiAgICAgICAgJ3RleHQ9JzogZnVuY3Rpb24gKGJ1ZmZlciwgbSkgeyBidWZmZXIudGV4dF8gPSAoYnVmZmVyLnRleHRfIHx8IFwiXCIpICsgbTsgcmV0dXJuIHVuZGVmaW5lZDsgfSxcbiAgICAgICAgJ2luc2VydCc6IGZ1bmN0aW9uIChfYnVmZmVyLCBfbSwgYSkgeyByZXR1cm4geyB0eXBlXzogYSB9OyB9LFxuICAgICAgICAnaW5zZXJ0K3AxJzogZnVuY3Rpb24gKF9idWZmZXIsIG0sIGEpIHsgcmV0dXJuIHsgdHlwZV86IGEsIHAxOiBtIH07IH0sXG4gICAgICAgICdpbnNlcnQrcDErcDInOiBmdW5jdGlvbiAoX2J1ZmZlciwgbSwgYSkgeyByZXR1cm4geyB0eXBlXzogYSwgcDE6IG1bMF0sIHAyOiBtWzFdIH07IH0sXG4gICAgICAgICdjb3B5JzogZnVuY3Rpb24gKF9idWZmZXIsIG0pIHsgcmV0dXJuIG07IH0sXG4gICAgICAgICd3cml0ZSc6IGZ1bmN0aW9uIChfYnVmZmVyLCBfbSwgYSkgeyByZXR1cm4gYTsgfSxcbiAgICAgICAgJ3JtJzogZnVuY3Rpb24gKF9idWZmZXIsIG0pIHsgcmV0dXJuIHsgdHlwZV86ICdybScsIHAxOiBtIH07IH0sXG4gICAgICAgICd0ZXh0JzogZnVuY3Rpb24gKF9idWZmZXIsIG0pIHsgcmV0dXJuIF9taGNoZW1QYXJzZXIuZ28obSwgJ3RleHQnKTsgfSxcbiAgICAgICAgJ3RleC1tYXRoJzogZnVuY3Rpb24gKF9idWZmZXIsIG0pIHsgcmV0dXJuIF9taGNoZW1QYXJzZXIuZ28obSwgJ3RleC1tYXRoJyk7IH0sXG4gICAgICAgICd0ZXgtbWF0aCB0aWdodCc6IGZ1bmN0aW9uIChfYnVmZmVyLCBtKSB7IHJldHVybiBfbWhjaGVtUGFyc2VyLmdvKG0sICd0ZXgtbWF0aCB0aWdodCcpOyB9LFxuICAgICAgICAnYm9uZCc6IGZ1bmN0aW9uIChfYnVmZmVyLCBtLCBrKSB7IHJldHVybiB7IHR5cGVfOiAnYm9uZCcsIGtpbmRfOiBrIHx8IG0gfTsgfSxcbiAgICAgICAgJ2NvbG9yMC1vdXRwdXQnOiBmdW5jdGlvbiAoX2J1ZmZlciwgbSkgeyByZXR1cm4geyB0eXBlXzogJ2NvbG9yMCcsIGNvbG9yOiBtIH07IH0sXG4gICAgICAgICdjZSc6IGZ1bmN0aW9uIChfYnVmZmVyLCBtKSB7IHJldHVybiBfbWhjaGVtUGFyc2VyLmdvKG0sICdjZScpOyB9LFxuICAgICAgICAncHUnOiBmdW5jdGlvbiAoX2J1ZmZlciwgbSkgeyByZXR1cm4gX21oY2hlbVBhcnNlci5nbyhtLCAncHUnKTsgfSxcbiAgICAgICAgJzEvMic6IGZ1bmN0aW9uIChfYnVmZmVyLCBtKSB7XG4gICAgICAgICAgICB2YXIgcmV0ID0gW107XG4gICAgICAgICAgICBpZiAobS5tYXRjaCgvXlsrXFwtXS8pKSB7XG4gICAgICAgICAgICAgICAgcmV0LnB1c2gobS5zdWJzdHIoMCwgMSkpO1xuICAgICAgICAgICAgICAgIG0gPSBtLnN1YnN0cigxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBuID0gbS5tYXRjaCgvXihbMC05XSt8XFwkW2Etel1cXCR8W2Etel0pXFwvKFswLTldKykoXFwkW2Etel1cXCR8W2Etel0pPyQvKTtcbiAgICAgICAgICAgIG5bMV0gPSBuWzFdLnJlcGxhY2UoL1xcJC9nLCBcIlwiKTtcbiAgICAgICAgICAgIHJldC5wdXNoKHsgdHlwZV86ICdmcmFjJywgcDE6IG5bMV0sIHAyOiBuWzJdIH0pO1xuICAgICAgICAgICAgaWYgKG5bM10pIHtcbiAgICAgICAgICAgICAgICBuWzNdID0gblszXS5yZXBsYWNlKC9cXCQvZywgXCJcIik7XG4gICAgICAgICAgICAgICAgcmV0LnB1c2goeyB0eXBlXzogJ3RleC1tYXRoJywgcDE6IG5bM10gfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmV0O1xuICAgICAgICB9LFxuICAgICAgICAnOSw5JzogZnVuY3Rpb24gKF9idWZmZXIsIG0pIHsgcmV0dXJuIF9taGNoZW1QYXJzZXIuZ28obSwgJzksOScpOyB9XG4gICAgfSxcbiAgICBzdGF0ZU1hY2hpbmVzOiB7XG4gICAgICAgICd0ZXgnOiB7XG4gICAgICAgICAgICB0cmFuc2l0aW9uczogX21oY2hlbUNyZWF0ZVRyYW5zaXRpb25zKHtcbiAgICAgICAgICAgICAgICAnZW1wdHknOiB7XG4gICAgICAgICAgICAgICAgICAgICcwJzogeyBhY3Rpb25fOiAnY29weScgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ1xcXFxjZXsoLi4uKX0nOiB7XG4gICAgICAgICAgICAgICAgICAgICcwJzogeyBhY3Rpb25fOiBbeyB0eXBlXzogJ3dyaXRlJywgb3B0aW9uOiBcIntcIiB9LCAnY2UnLCB7IHR5cGVfOiAnd3JpdGUnLCBvcHRpb246IFwifVwiIH1dIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdcXFxccHV7KC4uLil9Jzoge1xuICAgICAgICAgICAgICAgICAgICAnMCc6IHsgYWN0aW9uXzogW3sgdHlwZV86ICd3cml0ZScsIG9wdGlvbjogXCJ7XCIgfSwgJ3B1JywgeyB0eXBlXzogJ3dyaXRlJywgb3B0aW9uOiBcIn1cIiB9XSB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnZWxzZSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJzAnOiB7IGFjdGlvbl86ICdjb3B5JyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgYWN0aW9uczoge31cbiAgICAgICAgfSxcbiAgICAgICAgJ2NlJzoge1xuICAgICAgICAgICAgdHJhbnNpdGlvbnM6IF9taGNoZW1DcmVhdGVUcmFuc2l0aW9ucyh7XG4gICAgICAgICAgICAgICAgJ2VtcHR5Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ291dHB1dCcgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ2Vsc2UnOiB7XG4gICAgICAgICAgICAgICAgICAgICcwfDF8Mic6IHsgYWN0aW9uXzogJ2JlZ2luc1dpdGhCb25kPWZhbHNlJywgcmV2aXNpdDogdHJ1ZSwgdG9Db250aW51ZTogdHJ1ZSB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnb3hpZGF0aW9uJCc6IHtcbiAgICAgICAgICAgICAgICAgICAgJzAnOiB7IGFjdGlvbl86ICdveGlkYXRpb24tb3V0cHV0JyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnQ01UJzoge1xuICAgICAgICAgICAgICAgICAgICAncic6IHsgYWN0aW9uXzogJ3JkdD0nLCBuZXh0U3RhdGU6ICdydCcgfSxcbiAgICAgICAgICAgICAgICAgICAgJ3JkJzogeyBhY3Rpb25fOiAncnF0PScsIG5leHRTdGF0ZTogJ3JkdCcgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ2Fycm93VXBEb3duJzoge1xuICAgICAgICAgICAgICAgICAgICAnMHwxfDJ8YXMnOiB7IGFjdGlvbl86IFsnc2I9ZmFsc2UnLCAnb3V0cHV0JywgJ29wZXJhdG9yJ10sIG5leHRTdGF0ZTogJzEnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICd1cHJpZ2h0RW50aXRpZXMnOiB7XG4gICAgICAgICAgICAgICAgICAgICcwfDF8Mic6IHsgYWN0aW9uXzogWydvPScsICdvdXRwdXQnXSwgbmV4dFN0YXRlOiAnMScgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ29yYml0YWwnOiB7XG4gICAgICAgICAgICAgICAgICAgICcwfDF8MnwzJzogeyBhY3Rpb25fOiAnbz0nLCBuZXh0U3RhdGU6ICdvJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnLT4nOiB7XG4gICAgICAgICAgICAgICAgICAgICcwfDF8MnwzJzogeyBhY3Rpb25fOiAncj0nLCBuZXh0U3RhdGU6ICdyJyB9LFxuICAgICAgICAgICAgICAgICAgICAnYXxhcyc6IHsgYWN0aW9uXzogWydvdXRwdXQnLCAncj0nXSwgbmV4dFN0YXRlOiAncicgfSxcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IFsnb3V0cHV0JywgJ3I9J10sIG5leHRTdGF0ZTogJ3InIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICcrJzoge1xuICAgICAgICAgICAgICAgICAgICAnbyc6IHsgYWN0aW9uXzogJ2Q9IGt2JywgbmV4dFN0YXRlOiAnZCcgfSxcbiAgICAgICAgICAgICAgICAgICAgJ2R8RCc6IHsgYWN0aW9uXzogJ2Q9JywgbmV4dFN0YXRlOiAnZCcgfSxcbiAgICAgICAgICAgICAgICAgICAgJ3EnOiB7IGFjdGlvbl86ICdkPScsIG5leHRTdGF0ZTogJ3FkJyB9LFxuICAgICAgICAgICAgICAgICAgICAncWR8cUQnOiB7IGFjdGlvbl86ICdkPScsIG5leHRTdGF0ZTogJ3FkJyB9LFxuICAgICAgICAgICAgICAgICAgICAnZHEnOiB7IGFjdGlvbl86IFsnb3V0cHV0JywgJ2Q9J10sIG5leHRTdGF0ZTogJ2QnIH0sXG4gICAgICAgICAgICAgICAgICAgICczJzogeyBhY3Rpb25fOiBbJ3NiPWZhbHNlJywgJ291dHB1dCcsICdvcGVyYXRvciddLCBuZXh0U3RhdGU6ICcwJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnYW1vdW50Jzoge1xuICAgICAgICAgICAgICAgICAgICAnMHwyJzogeyBhY3Rpb25fOiAnYT0nLCBuZXh0U3RhdGU6ICdhJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAncG0tb3BlcmF0b3InOiB7XG4gICAgICAgICAgICAgICAgICAgICcwfDF8MnxhfGFzJzogeyBhY3Rpb25fOiBbJ3NiPWZhbHNlJywgJ291dHB1dCcsIHsgdHlwZV86ICdvcGVyYXRvcicsIG9wdGlvbjogJ1xcXFxwbScgfV0sIG5leHRTdGF0ZTogJzAnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdvcGVyYXRvcic6IHtcbiAgICAgICAgICAgICAgICAgICAgJzB8MXwyfGF8YXMnOiB7IGFjdGlvbl86IFsnc2I9ZmFsc2UnLCAnb3V0cHV0JywgJ29wZXJhdG9yJ10sIG5leHRTdGF0ZTogJzAnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICctJCc6IHtcbiAgICAgICAgICAgICAgICAgICAgJ298cSc6IHsgYWN0aW9uXzogWydjaGFyZ2Ugb3IgYm9uZCcsICdvdXRwdXQnXSwgbmV4dFN0YXRlOiAncWQnIH0sXG4gICAgICAgICAgICAgICAgICAgICdkJzogeyBhY3Rpb25fOiAnZD0nLCBuZXh0U3RhdGU6ICdkJyB9LFxuICAgICAgICAgICAgICAgICAgICAnRCc6IHsgYWN0aW9uXzogWydvdXRwdXQnLCB7IHR5cGVfOiAnYm9uZCcsIG9wdGlvbjogXCItXCIgfV0sIG5leHRTdGF0ZTogJzMnIH0sXG4gICAgICAgICAgICAgICAgICAgICdxJzogeyBhY3Rpb25fOiAnZD0nLCBuZXh0U3RhdGU6ICdxZCcgfSxcbiAgICAgICAgICAgICAgICAgICAgJ3FkJzogeyBhY3Rpb25fOiAnZD0nLCBuZXh0U3RhdGU6ICdxZCcgfSxcbiAgICAgICAgICAgICAgICAgICAgJ3FEfGRxJzogeyBhY3Rpb25fOiBbJ291dHB1dCcsIHsgdHlwZV86ICdib25kJywgb3B0aW9uOiBcIi1cIiB9XSwgbmV4dFN0YXRlOiAnMycgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJy05Jzoge1xuICAgICAgICAgICAgICAgICAgICAnM3xvJzogeyBhY3Rpb25fOiBbJ291dHB1dCcsIHsgdHlwZV86ICdpbnNlcnQnLCBvcHRpb246ICdoeXBoZW4nIH1dLCBuZXh0U3RhdGU6ICczJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnLSBvcmJpdGFsIG92ZXJsYXAnOiB7XG4gICAgICAgICAgICAgICAgICAgICdvJzogeyBhY3Rpb25fOiBbJ291dHB1dCcsIHsgdHlwZV86ICdpbnNlcnQnLCBvcHRpb246ICdoeXBoZW4nIH1dLCBuZXh0U3RhdGU6ICcyJyB9LFxuICAgICAgICAgICAgICAgICAgICAnZCc6IHsgYWN0aW9uXzogWydvdXRwdXQnLCB7IHR5cGVfOiAnaW5zZXJ0Jywgb3B0aW9uOiAnaHlwaGVuJyB9XSwgbmV4dFN0YXRlOiAnMicgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJy0nOiB7XG4gICAgICAgICAgICAgICAgICAgICcwfDF8Mic6IHsgYWN0aW9uXzogW3sgdHlwZV86ICdvdXRwdXQnLCBvcHRpb246IDEgfSwgJ2JlZ2luc1dpdGhCb25kPXRydWUnLCB7IHR5cGVfOiAnYm9uZCcsIG9wdGlvbjogXCItXCIgfV0sIG5leHRTdGF0ZTogJzMnIH0sXG4gICAgICAgICAgICAgICAgICAgICczJzogeyBhY3Rpb25fOiB7IHR5cGVfOiAnYm9uZCcsIG9wdGlvbjogXCItXCIgfSB9LFxuICAgICAgICAgICAgICAgICAgICAnYSc6IHsgYWN0aW9uXzogWydvdXRwdXQnLCB7IHR5cGVfOiAnaW5zZXJ0Jywgb3B0aW9uOiAnaHlwaGVuJyB9XSwgbmV4dFN0YXRlOiAnMicgfSxcbiAgICAgICAgICAgICAgICAgICAgJ2FzJzogeyBhY3Rpb25fOiBbeyB0eXBlXzogJ291dHB1dCcsIG9wdGlvbjogMiB9LCB7IHR5cGVfOiAnYm9uZCcsIG9wdGlvbjogXCItXCIgfV0sIG5leHRTdGF0ZTogJzMnIH0sXG4gICAgICAgICAgICAgICAgICAgICdiJzogeyBhY3Rpb25fOiAnYj0nIH0sXG4gICAgICAgICAgICAgICAgICAgICdvJzogeyBhY3Rpb25fOiB7IHR5cGVfOiAnLSBhZnRlciBvL2QnLCBvcHRpb246IGZhbHNlIH0sIG5leHRTdGF0ZTogJzInIH0sXG4gICAgICAgICAgICAgICAgICAgICdxJzogeyBhY3Rpb25fOiB7IHR5cGVfOiAnLSBhZnRlciBvL2QnLCBvcHRpb246IGZhbHNlIH0sIG5leHRTdGF0ZTogJzInIH0sXG4gICAgICAgICAgICAgICAgICAgICdkfHFkfGRxJzogeyBhY3Rpb25fOiB7IHR5cGVfOiAnLSBhZnRlciBvL2QnLCBvcHRpb246IHRydWUgfSwgbmV4dFN0YXRlOiAnMicgfSxcbiAgICAgICAgICAgICAgICAgICAgJ0R8cUR8cCc6IHsgYWN0aW9uXzogWydvdXRwdXQnLCB7IHR5cGVfOiAnYm9uZCcsIG9wdGlvbjogXCItXCIgfV0sIG5leHRTdGF0ZTogJzMnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdhbW91bnQyJzoge1xuICAgICAgICAgICAgICAgICAgICAnMXwzJzogeyBhY3Rpb25fOiAnYT0nLCBuZXh0U3RhdGU6ICdhJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnbGV0dGVycyc6IHtcbiAgICAgICAgICAgICAgICAgICAgJzB8MXwyfDN8YXxhc3xifHB8YnB8byc6IHsgYWN0aW9uXzogJ289JywgbmV4dFN0YXRlOiAnbycgfSxcbiAgICAgICAgICAgICAgICAgICAgJ3F8ZHEnOiB7IGFjdGlvbl86IFsnb3V0cHV0JywgJ289J10sIG5leHRTdGF0ZTogJ28nIH0sXG4gICAgICAgICAgICAgICAgICAgICdkfER8cWR8cUQnOiB7IGFjdGlvbl86ICdvIGFmdGVyIGQnLCBuZXh0U3RhdGU6ICdvJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnZGlnaXRzJzoge1xuICAgICAgICAgICAgICAgICAgICAnbyc6IHsgYWN0aW9uXzogJ3E9JywgbmV4dFN0YXRlOiAncScgfSxcbiAgICAgICAgICAgICAgICAgICAgJ2R8RCc6IHsgYWN0aW9uXzogJ3E9JywgbmV4dFN0YXRlOiAnZHEnIH0sXG4gICAgICAgICAgICAgICAgICAgICdxJzogeyBhY3Rpb25fOiBbJ291dHB1dCcsICdvPSddLCBuZXh0U3RhdGU6ICdvJyB9LFxuICAgICAgICAgICAgICAgICAgICAnYSc6IHsgYWN0aW9uXzogJ289JywgbmV4dFN0YXRlOiAnbycgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ3NwYWNlIEEnOiB7XG4gICAgICAgICAgICAgICAgICAgICdifHB8YnAnOiB7IGFjdGlvbl86IFtdIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdzcGFjZSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJ2EnOiB7IGFjdGlvbl86IFtdLCBuZXh0U3RhdGU6ICdhcycgfSxcbiAgICAgICAgICAgICAgICAgICAgJzAnOiB7IGFjdGlvbl86ICdzYj1mYWxzZScgfSxcbiAgICAgICAgICAgICAgICAgICAgJzF8Mic6IHsgYWN0aW9uXzogJ3NiPXRydWUnIH0sXG4gICAgICAgICAgICAgICAgICAgICdyfHJ0fHJkfHJkdHxyZHEnOiB7IGFjdGlvbl86ICdvdXRwdXQnLCBuZXh0U3RhdGU6ICcwJyB9LFxuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogWydvdXRwdXQnLCAnc2I9dHJ1ZSddLCBuZXh0U3RhdGU6ICcxJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnMXN0LWxldmVsIGVzY2FwZSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJzF8Mic6IHsgYWN0aW9uXzogWydvdXRwdXQnLCB7IHR5cGVfOiAnaW5zZXJ0K3AxJywgb3B0aW9uOiAnMXN0LWxldmVsIGVzY2FwZScgfV0gfSxcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IFsnb3V0cHV0JywgeyB0eXBlXzogJ2luc2VydCtwMScsIG9wdGlvbjogJzFzdC1sZXZlbCBlc2NhcGUnIH1dLCBuZXh0U3RhdGU6ICcwJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnWyguLi4pXSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJ3J8cnQnOiB7IGFjdGlvbl86ICdyZD0nLCBuZXh0U3RhdGU6ICdyZCcgfSxcbiAgICAgICAgICAgICAgICAgICAgJ3JkfHJkdCc6IHsgYWN0aW9uXzogJ3JxPScsIG5leHRTdGF0ZTogJ3JkcScgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJy4uLic6IHtcbiAgICAgICAgICAgICAgICAgICAgJ298ZHxEfGRxfHFkfHFEJzogeyBhY3Rpb25fOiBbJ291dHB1dCcsIHsgdHlwZV86ICdib25kJywgb3B0aW9uOiBcIi4uLlwiIH1dLCBuZXh0U3RhdGU6ICczJyB9LFxuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogW3sgdHlwZV86ICdvdXRwdXQnLCBvcHRpb246IDEgfSwgeyB0eXBlXzogJ2luc2VydCcsIG9wdGlvbjogJ2VsbGlwc2lzJyB9XSwgbmV4dFN0YXRlOiAnMScgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJy4gX18qICc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IFsnb3V0cHV0JywgeyB0eXBlXzogJ2luc2VydCcsIG9wdGlvbjogJ2FkZGl0aW9uIGNvbXBvdW5kJyB9XSwgbmV4dFN0YXRlOiAnMScgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ3N0YXRlIG9mIGFnZ3JlZ2F0aW9uICQnOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiBbJ291dHB1dCcsICdzdGF0ZSBvZiBhZ2dyZWdhdGlvbiddLCBuZXh0U3RhdGU6ICcxJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAne1soJzoge1xuICAgICAgICAgICAgICAgICAgICAnYXxhc3xvJzogeyBhY3Rpb25fOiBbJ289JywgJ291dHB1dCcsICdwYXJlbnRoZXNpc0xldmVsKysnXSwgbmV4dFN0YXRlOiAnMicgfSxcbiAgICAgICAgICAgICAgICAgICAgJzB8MXwyfDMnOiB7IGFjdGlvbl86IFsnbz0nLCAnb3V0cHV0JywgJ3BhcmVudGhlc2lzTGV2ZWwrKyddLCBuZXh0U3RhdGU6ICcyJyB9LFxuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogWydvdXRwdXQnLCAnbz0nLCAnb3V0cHV0JywgJ3BhcmVudGhlc2lzTGV2ZWwrKyddLCBuZXh0U3RhdGU6ICcyJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnKV19Jzoge1xuICAgICAgICAgICAgICAgICAgICAnMHwxfDJ8M3xifHB8YnB8byc6IHsgYWN0aW9uXzogWydvPScsICdwYXJlbnRoZXNpc0xldmVsLS0nXSwgbmV4dFN0YXRlOiAnbycgfSxcbiAgICAgICAgICAgICAgICAgICAgJ2F8YXN8ZHxEfHF8cWR8cUR8ZHEnOiB7IGFjdGlvbl86IFsnb3V0cHV0JywgJ289JywgJ3BhcmVudGhlc2lzTGV2ZWwtLSddLCBuZXh0U3RhdGU6ICdvJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnLCAnOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiBbJ291dHB1dCcsICdjb21tYSddLCBuZXh0U3RhdGU6ICcwJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnXl8nOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiBbXSB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnXnsoLi4uKX18XigkLi4uJCknOiB7XG4gICAgICAgICAgICAgICAgICAgICcwfDF8Mnxhcyc6IHsgYWN0aW9uXzogJ2I9JywgbmV4dFN0YXRlOiAnYicgfSxcbiAgICAgICAgICAgICAgICAgICAgJ3AnOiB7IGFjdGlvbl86ICdiPScsIG5leHRTdGF0ZTogJ2JwJyB9LFxuICAgICAgICAgICAgICAgICAgICAnM3xvJzogeyBhY3Rpb25fOiAnZD0ga3YnLCBuZXh0U3RhdGU6ICdEJyB9LFxuICAgICAgICAgICAgICAgICAgICAncSc6IHsgYWN0aW9uXzogJ2Q9JywgbmV4dFN0YXRlOiAncUQnIH0sXG4gICAgICAgICAgICAgICAgICAgICdkfER8cWR8cUR8ZHEnOiB7IGFjdGlvbl86IFsnb3V0cHV0JywgJ2Q9J10sIG5leHRTdGF0ZTogJ0QnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdeYXxeXFxcXHh7fXt9fF5cXFxceHt9fF5cXFxceHxcXCcnOiB7XG4gICAgICAgICAgICAgICAgICAgICcwfDF8Mnxhcyc6IHsgYWN0aW9uXzogJ2I9JywgbmV4dFN0YXRlOiAnYicgfSxcbiAgICAgICAgICAgICAgICAgICAgJ3AnOiB7IGFjdGlvbl86ICdiPScsIG5leHRTdGF0ZTogJ2JwJyB9LFxuICAgICAgICAgICAgICAgICAgICAnM3xvJzogeyBhY3Rpb25fOiAnZD0ga3YnLCBuZXh0U3RhdGU6ICdkJyB9LFxuICAgICAgICAgICAgICAgICAgICAncSc6IHsgYWN0aW9uXzogJ2Q9JywgbmV4dFN0YXRlOiAncWQnIH0sXG4gICAgICAgICAgICAgICAgICAgICdkfHFkfER8cUQnOiB7IGFjdGlvbl86ICdkPScgfSxcbiAgICAgICAgICAgICAgICAgICAgJ2RxJzogeyBhY3Rpb25fOiBbJ291dHB1dCcsICdkPSddLCBuZXh0U3RhdGU6ICdkJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnX3soc3RhdGUgb2YgYWdncmVnYXRpb24pfSQnOiB7XG4gICAgICAgICAgICAgICAgICAgICdkfER8cXxxZHxxRHxkcSc6IHsgYWN0aW9uXzogWydvdXRwdXQnLCAncT0nXSwgbmV4dFN0YXRlOiAncScgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ197KC4uLil9fF8oJC4uLiQpfF85fF9cXFxceHt9e318X1xcXFx4e318X1xcXFx4Jzoge1xuICAgICAgICAgICAgICAgICAgICAnMHwxfDJ8YXMnOiB7IGFjdGlvbl86ICdwPScsIG5leHRTdGF0ZTogJ3AnIH0sXG4gICAgICAgICAgICAgICAgICAgICdiJzogeyBhY3Rpb25fOiAncD0nLCBuZXh0U3RhdGU6ICdicCcgfSxcbiAgICAgICAgICAgICAgICAgICAgJzN8byc6IHsgYWN0aW9uXzogJ3E9JywgbmV4dFN0YXRlOiAncScgfSxcbiAgICAgICAgICAgICAgICAgICAgJ2R8RCc6IHsgYWN0aW9uXzogJ3E9JywgbmV4dFN0YXRlOiAnZHEnIH0sXG4gICAgICAgICAgICAgICAgICAgICdxfHFkfHFEfGRxJzogeyBhY3Rpb25fOiBbJ291dHB1dCcsICdxPSddLCBuZXh0U3RhdGU6ICdxJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnPTw+Jzoge1xuICAgICAgICAgICAgICAgICAgICAnMHwxfDJ8M3xhfGFzfG98cXxkfER8cWR8cUR8ZHEnOiB7IGFjdGlvbl86IFt7IHR5cGVfOiAnb3V0cHV0Jywgb3B0aW9uOiAyIH0sICdib25kJ10sIG5leHRTdGF0ZTogJzMnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICcjJzoge1xuICAgICAgICAgICAgICAgICAgICAnMHwxfDJ8M3xhfGFzfG8nOiB7IGFjdGlvbl86IFt7IHR5cGVfOiAnb3V0cHV0Jywgb3B0aW9uOiAyIH0sIHsgdHlwZV86ICdib25kJywgb3B0aW9uOiBcIiNcIiB9XSwgbmV4dFN0YXRlOiAnMycgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ3t9Xic6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IFt7IHR5cGVfOiAnb3V0cHV0Jywgb3B0aW9uOiAxIH0sIHsgdHlwZV86ICdpbnNlcnQnLCBvcHRpb246ICd0aW55U2tpcCcgfV0sIG5leHRTdGF0ZTogJzEnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICd7fSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IHsgdHlwZV86ICdvdXRwdXQnLCBvcHRpb246IDEgfSwgbmV4dFN0YXRlOiAnMScgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ3suLi59Jzoge1xuICAgICAgICAgICAgICAgICAgICAnMHwxfDJ8M3xhfGFzfGJ8cHxicCc6IHsgYWN0aW9uXzogJ289JywgbmV4dFN0YXRlOiAnbycgfSxcbiAgICAgICAgICAgICAgICAgICAgJ298ZHxEfHF8cWR8cUR8ZHEnOiB7IGFjdGlvbl86IFsnb3V0cHV0JywgJ289J10sIG5leHRTdGF0ZTogJ28nIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICckLi4uJCc6IHtcbiAgICAgICAgICAgICAgICAgICAgJ2EnOiB7IGFjdGlvbl86ICdhPScgfSxcbiAgICAgICAgICAgICAgICAgICAgJzB8MXwyfDN8YXN8YnxwfGJwfG8nOiB7IGFjdGlvbl86ICdvPScsIG5leHRTdGF0ZTogJ28nIH0sXG4gICAgICAgICAgICAgICAgICAgICdhc3xvJzogeyBhY3Rpb25fOiAnbz0nIH0sXG4gICAgICAgICAgICAgICAgICAgICdxfGR8RHxxZHxxRHxkcSc6IHsgYWN0aW9uXzogWydvdXRwdXQnLCAnbz0nXSwgbmV4dFN0YXRlOiAnbycgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ1xcXFxib25keyguLi4pfSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IFt7IHR5cGVfOiAnb3V0cHV0Jywgb3B0aW9uOiAyIH0sICdib25kJ10sIG5leHRTdGF0ZTogXCIzXCIgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ1xcXFxmcmFjeyguLi4pfSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IFt7IHR5cGVfOiAnb3V0cHV0Jywgb3B0aW9uOiAxIH0sICdmcmFjLW91dHB1dCddLCBuZXh0U3RhdGU6ICczJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnXFxcXG92ZXJzZXR7KC4uLil9Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogW3sgdHlwZV86ICdvdXRwdXQnLCBvcHRpb246IDIgfSwgJ292ZXJzZXQtb3V0cHV0J10sIG5leHRTdGF0ZTogJzMnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdcXFxcdW5kZXJzZXR7KC4uLil9Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogW3sgdHlwZV86ICdvdXRwdXQnLCBvcHRpb246IDIgfSwgJ3VuZGVyc2V0LW91dHB1dCddLCBuZXh0U3RhdGU6ICczJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnXFxcXHVuZGVyYnJhY2V7KC4uLil9Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogW3sgdHlwZV86ICdvdXRwdXQnLCBvcHRpb246IDIgfSwgJ3VuZGVyYnJhY2Utb3V0cHV0J10sIG5leHRTdGF0ZTogJzMnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdcXFxcY29sb3J7KC4uLil9eyguLi4pfSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IFt7IHR5cGVfOiAnb3V0cHV0Jywgb3B0aW9uOiAyIH0sICdjb2xvci1vdXRwdXQnXSwgbmV4dFN0YXRlOiAnMycgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ1xcXFxjb2xvcnsoLi4uKX0nOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiBbeyB0eXBlXzogJ291dHB1dCcsIG9wdGlvbjogMiB9LCAnY29sb3IwLW91dHB1dCddIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdcXFxcY2V7KC4uLil9Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogW3sgdHlwZV86ICdvdXRwdXQnLCBvcHRpb246IDIgfSwgJ2NlJ10sIG5leHRTdGF0ZTogJzMnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdcXFxcLCc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IFt7IHR5cGVfOiAnb3V0cHV0Jywgb3B0aW9uOiAxIH0sICdjb3B5J10sIG5leHRTdGF0ZTogJzEnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdcXFxccHV7KC4uLil9Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogWydvdXRwdXQnLCB7IHR5cGVfOiAnd3JpdGUnLCBvcHRpb246IFwie1wiIH0sICdwdScsIHsgdHlwZV86ICd3cml0ZScsIG9wdGlvbjogXCJ9XCIgfV0sIG5leHRTdGF0ZTogJzMnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdcXFxceHt9e318XFxcXHh7fXxcXFxceCc6IHtcbiAgICAgICAgICAgICAgICAgICAgJzB8MXwyfDN8YXxhc3xifHB8YnB8b3xjMCc6IHsgYWN0aW9uXzogWydvPScsICdvdXRwdXQnXSwgbmV4dFN0YXRlOiAnMycgfSxcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IFsnb3V0cHV0JywgJ289JywgJ291dHB1dCddLCBuZXh0U3RhdGU6ICczJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnb3RoZXJzJzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogW3sgdHlwZV86ICdvdXRwdXQnLCBvcHRpb246IDEgfSwgJ2NvcHknXSwgbmV4dFN0YXRlOiAnMycgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ2Vsc2UyJzoge1xuICAgICAgICAgICAgICAgICAgICAnYSc6IHsgYWN0aW9uXzogJ2EgdG8gbycsIG5leHRTdGF0ZTogJ28nLCByZXZpc2l0OiB0cnVlIH0sXG4gICAgICAgICAgICAgICAgICAgICdhcyc6IHsgYWN0aW9uXzogWydvdXRwdXQnLCAnc2I9dHJ1ZSddLCBuZXh0U3RhdGU6ICcxJywgcmV2aXNpdDogdHJ1ZSB9LFxuICAgICAgICAgICAgICAgICAgICAncnxydHxyZHxyZHR8cmRxJzogeyBhY3Rpb25fOiBbJ291dHB1dCddLCBuZXh0U3RhdGU6ICcwJywgcmV2aXNpdDogdHJ1ZSB9LFxuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogWydvdXRwdXQnLCAnY29weSddLCBuZXh0U3RhdGU6ICczJyB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBhY3Rpb25zOiB7XG4gICAgICAgICAgICAgICAgJ28gYWZ0ZXIgZCc6IGZ1bmN0aW9uIChidWZmZXIsIG0pIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJldDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKChidWZmZXIuZCB8fCBcIlwiKS5tYXRjaCgvXlsxLTldWzAtOV0qJC8pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdG1wID0gYnVmZmVyLmQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBidWZmZXIuZCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldCA9IHRoaXNbJ291dHB1dCddKGJ1ZmZlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXQucHVzaCh7IHR5cGVfOiAndGlueVNraXAnIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnVmZmVyLmIgPSB0bXA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXQgPSB0aGlzWydvdXRwdXQnXShidWZmZXIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIF9taGNoZW1QYXJzZXIuYWN0aW9uc1snbz0nXShidWZmZXIsIG0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmV0O1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ2Q9IGt2JzogZnVuY3Rpb24gKGJ1ZmZlciwgbSkge1xuICAgICAgICAgICAgICAgICAgICBidWZmZXIuZCA9IG07XG4gICAgICAgICAgICAgICAgICAgIGJ1ZmZlci5kVHlwZSA9ICdrdic7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnY2hhcmdlIG9yIGJvbmQnOiBmdW5jdGlvbiAoYnVmZmVyLCBtKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChidWZmZXJbJ2JlZ2luc1dpdGhCb25kJ10pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZXQgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9taGNoZW1QYXJzZXIuY29uY2F0QXJyYXkocmV0LCB0aGlzWydvdXRwdXQnXShidWZmZXIpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9taGNoZW1QYXJzZXIuY29uY2F0QXJyYXkocmV0LCBfbWhjaGVtUGFyc2VyLmFjdGlvbnNbJ2JvbmQnXShidWZmZXIsIG0sIFwiLVwiKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmV0O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgYnVmZmVyLmQgPSBtO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJy0gYWZ0ZXIgby9kJzogZnVuY3Rpb24gKGJ1ZmZlciwgbSwgaXNBZnRlckQpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGMxID0gX21oY2hlbVBhcnNlci5wYXR0ZXJucy5tYXRjaF8oJ29yYml0YWwnLCBidWZmZXIubyB8fCBcIlwiKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGMyID0gX21oY2hlbVBhcnNlci5wYXR0ZXJucy5tYXRjaF8oJ29uZSBsb3dlcmNhc2UgZ3JlZWsgbGV0dGVyICQnLCBidWZmZXIubyB8fCBcIlwiKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGMzID0gX21oY2hlbVBhcnNlci5wYXR0ZXJucy5tYXRjaF8oJ29uZSBsb3dlcmNhc2UgbGF0aW4gbGV0dGVyICQnLCBidWZmZXIubyB8fCBcIlwiKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGM0ID0gX21oY2hlbVBhcnNlci5wYXR0ZXJucy5tYXRjaF8oJyRvbmUgbG93ZXJjYXNlIGxhdGluIGxldHRlciQgJCcsIGJ1ZmZlci5vIHx8IFwiXCIpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgaHlwaGVuRm9sbG93cyA9IG0gPT09IFwiLVwiICYmIChjMSAmJiBjMS5yZW1haW5kZXIgPT09IFwiXCIgfHwgYzIgfHwgYzMgfHwgYzQpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoaHlwaGVuRm9sbG93cyAmJiAhYnVmZmVyLmEgJiYgIWJ1ZmZlci5iICYmICFidWZmZXIucCAmJiAhYnVmZmVyLmQgJiYgIWJ1ZmZlci5xICYmICFjMSAmJiBjMykge1xuICAgICAgICAgICAgICAgICAgICAgICAgYnVmZmVyLm8gPSAnJCcgKyBidWZmZXIubyArICckJztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB2YXIgcmV0ID0gW107XG4gICAgICAgICAgICAgICAgICAgIGlmIChoeXBoZW5Gb2xsb3dzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfbWhjaGVtUGFyc2VyLmNvbmNhdEFycmF5KHJldCwgdGhpc1snb3V0cHV0J10oYnVmZmVyKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXQucHVzaCh7IHR5cGVfOiAnaHlwaGVuJyB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGMxID0gX21oY2hlbVBhcnNlci5wYXR0ZXJucy5tYXRjaF8oJ2RpZ2l0cycsIGJ1ZmZlci5kIHx8IFwiXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzQWZ0ZXJEICYmIGMxICYmIGMxLnJlbWFpbmRlciA9PT0gJycpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfbWhjaGVtUGFyc2VyLmNvbmNhdEFycmF5KHJldCwgX21oY2hlbVBhcnNlci5hY3Rpb25zWydkPSddKGJ1ZmZlciwgbSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9taGNoZW1QYXJzZXIuY29uY2F0QXJyYXkocmV0LCB0aGlzWydvdXRwdXQnXShidWZmZXIpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9taGNoZW1QYXJzZXIuY29uY2F0QXJyYXkocmV0LCB0aGlzWydvdXRwdXQnXShidWZmZXIpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfbWhjaGVtUGFyc2VyLmNvbmNhdEFycmF5KHJldCwgX21oY2hlbVBhcnNlci5hY3Rpb25zWydib25kJ10oYnVmZmVyLCBtLCBcIi1cIikpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXQ7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnYSB0byBvJzogZnVuY3Rpb24gKGJ1ZmZlcikge1xuICAgICAgICAgICAgICAgICAgICBidWZmZXIubyA9IGJ1ZmZlci5hO1xuICAgICAgICAgICAgICAgICAgICBidWZmZXIuYSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdzYj10cnVlJzogZnVuY3Rpb24gKGJ1ZmZlcikgeyBidWZmZXIuc2IgPSB0cnVlOyByZXR1cm4gdW5kZWZpbmVkOyB9LFxuICAgICAgICAgICAgICAgICdzYj1mYWxzZSc6IGZ1bmN0aW9uIChidWZmZXIpIHsgYnVmZmVyLnNiID0gZmFsc2U7IHJldHVybiB1bmRlZmluZWQ7IH0sXG4gICAgICAgICAgICAgICAgJ2JlZ2luc1dpdGhCb25kPXRydWUnOiBmdW5jdGlvbiAoYnVmZmVyKSB7IGJ1ZmZlclsnYmVnaW5zV2l0aEJvbmQnXSA9IHRydWU7IHJldHVybiB1bmRlZmluZWQ7IH0sXG4gICAgICAgICAgICAgICAgJ2JlZ2luc1dpdGhCb25kPWZhbHNlJzogZnVuY3Rpb24gKGJ1ZmZlcikgeyBidWZmZXJbJ2JlZ2luc1dpdGhCb25kJ10gPSBmYWxzZTsgcmV0dXJuIHVuZGVmaW5lZDsgfSxcbiAgICAgICAgICAgICAgICAncGFyZW50aGVzaXNMZXZlbCsrJzogZnVuY3Rpb24gKGJ1ZmZlcikgeyBidWZmZXJbJ3BhcmVudGhlc2lzTGV2ZWwnXSsrOyByZXR1cm4gdW5kZWZpbmVkOyB9LFxuICAgICAgICAgICAgICAgICdwYXJlbnRoZXNpc0xldmVsLS0nOiBmdW5jdGlvbiAoYnVmZmVyKSB7IGJ1ZmZlclsncGFyZW50aGVzaXNMZXZlbCddLS07IHJldHVybiB1bmRlZmluZWQ7IH0sXG4gICAgICAgICAgICAgICAgJ3N0YXRlIG9mIGFnZ3JlZ2F0aW9uJzogZnVuY3Rpb24gKF9idWZmZXIsIG0pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgdHlwZV86ICdzdGF0ZSBvZiBhZ2dyZWdhdGlvbicsIHAxOiBfbWhjaGVtUGFyc2VyLmdvKG0sICdvJykgfTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdjb21tYSc6IGZ1bmN0aW9uIChidWZmZXIsIG0pIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGEgPSBtLnJlcGxhY2UoL1xccyokLywgJycpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgd2l0aFNwYWNlID0gKGEgIT09IG0pO1xuICAgICAgICAgICAgICAgICAgICBpZiAod2l0aFNwYWNlICYmIGJ1ZmZlclsncGFyZW50aGVzaXNMZXZlbCddID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4geyB0eXBlXzogJ2NvbW1hIGVudW1lcmF0aW9uIEwnLCBwMTogYSB9O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgdHlwZV86ICdjb21tYSBlbnVtZXJhdGlvbiBNJywgcDE6IGEgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ291dHB1dCc6IGZ1bmN0aW9uIChidWZmZXIsIF9tLCBlbnRpdHlGb2xsb3dzKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciByZXQ7XG4gICAgICAgICAgICAgICAgICAgIGlmICghYnVmZmVyLnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldCA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFidWZmZXIuYSAmJiAhYnVmZmVyLmIgJiYgIWJ1ZmZlci5wICYmICFidWZmZXIubyAmJiAhYnVmZmVyLnEgJiYgIWJ1ZmZlci5kICYmICFlbnRpdHlGb2xsb3dzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYnVmZmVyLnNiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldC5wdXNoKHsgdHlwZV86ICdlbnRpdHlTa2lwJyB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFidWZmZXIubyAmJiAhYnVmZmVyLnEgJiYgIWJ1ZmZlci5kICYmICFidWZmZXIuYiAmJiAhYnVmZmVyLnAgJiYgZW50aXR5Rm9sbG93cyAhPT0gMikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidWZmZXIubyA9IGJ1ZmZlci5hO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidWZmZXIuYSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoIWJ1ZmZlci5vICYmICFidWZmZXIucSAmJiAhYnVmZmVyLmQgJiYgKGJ1ZmZlci5iIHx8IGJ1ZmZlci5wKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidWZmZXIubyA9IGJ1ZmZlci5hO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidWZmZXIuZCA9IGJ1ZmZlci5iO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidWZmZXIucSA9IGJ1ZmZlci5wO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBidWZmZXIuYSA9IGJ1ZmZlci5iID0gYnVmZmVyLnAgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYnVmZmVyLm8gJiYgYnVmZmVyLmRUeXBlID09PSAna3YnICYmIF9taGNoZW1QYXJzZXIucGF0dGVybnMubWF0Y2hfKCdkLW94aWRhdGlvbiQnLCBidWZmZXIuZCB8fCBcIlwiKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnVmZmVyLmRUeXBlID0gJ294aWRhdGlvbic7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoYnVmZmVyLm8gJiYgYnVmZmVyLmRUeXBlID09PSAna3YnICYmICFidWZmZXIucSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnVmZmVyLmRUeXBlID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldC5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZV86ICdjaGVtZml2ZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGE6IF9taGNoZW1QYXJzZXIuZ28oYnVmZmVyLmEsICdhJyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGI6IF9taGNoZW1QYXJzZXIuZ28oYnVmZmVyLmIsICdiZCcpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwOiBfbWhjaGVtUGFyc2VyLmdvKGJ1ZmZlci5wLCAncHEnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbzogX21oY2hlbVBhcnNlci5nbyhidWZmZXIubywgJ28nKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcTogX21oY2hlbVBhcnNlci5nbyhidWZmZXIucSwgJ3BxJyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQ6IF9taGNoZW1QYXJzZXIuZ28oYnVmZmVyLmQsIChidWZmZXIuZFR5cGUgPT09ICdveGlkYXRpb24nID8gJ294aWRhdGlvbicgOiAnYmQnKSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRUeXBlOiBidWZmZXIuZFR5cGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZCA9IHZvaWQgMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChidWZmZXIucmR0ID09PSAnTScpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZCA9IF9taGNoZW1QYXJzZXIuZ28oYnVmZmVyLnJkLCAndGV4LW1hdGgnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKGJ1ZmZlci5yZHQgPT09ICdUJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJkID0gW3sgdHlwZV86ICd0ZXh0JywgcDE6IGJ1ZmZlci5yZCB8fCBcIlwiIH1dO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmQgPSBfbWhjaGVtUGFyc2VyLmdvKGJ1ZmZlci5yZCwgJ2NlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcnEgPSB2b2lkIDA7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYnVmZmVyLnJxdCA9PT0gJ00nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcnEgPSBfbWhjaGVtUGFyc2VyLmdvKGJ1ZmZlci5ycSwgJ3RleC1tYXRoJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChidWZmZXIucnF0ID09PSAnVCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBycSA9IFt7IHR5cGVfOiAndGV4dCcsIHAxOiBidWZmZXIucnEgfHwgXCJcIiB9XTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJxID0gX21oY2hlbVBhcnNlci5nbyhidWZmZXIucnEsICdjZScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0ID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGVfOiAnYXJyb3cnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHI6IGJ1ZmZlci5yLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJkOiByZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBycTogcnFcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBidWZmZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwICE9PSAncGFyZW50aGVzaXNMZXZlbCcgJiYgcCAhPT0gJ2JlZ2luc1dpdGhCb25kJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBidWZmZXJbcF07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdveGlkYXRpb24tb3V0cHV0JzogZnVuY3Rpb24gKF9idWZmZXIsIG0pIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJldCA9IFtcIntcIl07XG4gICAgICAgICAgICAgICAgICAgIF9taGNoZW1QYXJzZXIuY29uY2F0QXJyYXkocmV0LCBfbWhjaGVtUGFyc2VyLmdvKG0sICdveGlkYXRpb24nKSk7XG4gICAgICAgICAgICAgICAgICAgIHJldC5wdXNoKFwifVwiKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdmcmFjLW91dHB1dCc6IGZ1bmN0aW9uIChfYnVmZmVyLCBtKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7IHR5cGVfOiAnZnJhYy1jZScsIHAxOiBfbWhjaGVtUGFyc2VyLmdvKG1bMF0sICdjZScpLCBwMjogX21oY2hlbVBhcnNlci5nbyhtWzFdLCAnY2UnKSB9O1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ292ZXJzZXQtb3V0cHV0JzogZnVuY3Rpb24gKF9idWZmZXIsIG0pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgdHlwZV86ICdvdmVyc2V0JywgcDE6IF9taGNoZW1QYXJzZXIuZ28obVswXSwgJ2NlJyksIHAyOiBfbWhjaGVtUGFyc2VyLmdvKG1bMV0sICdjZScpIH07XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAndW5kZXJzZXQtb3V0cHV0JzogZnVuY3Rpb24gKF9idWZmZXIsIG0pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgdHlwZV86ICd1bmRlcnNldCcsIHAxOiBfbWhjaGVtUGFyc2VyLmdvKG1bMF0sICdjZScpLCBwMjogX21oY2hlbVBhcnNlci5nbyhtWzFdLCAnY2UnKSB9O1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ3VuZGVyYnJhY2Utb3V0cHV0JzogZnVuY3Rpb24gKF9idWZmZXIsIG0pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgdHlwZV86ICd1bmRlcmJyYWNlJywgcDE6IF9taGNoZW1QYXJzZXIuZ28obVswXSwgJ2NlJyksIHAyOiBfbWhjaGVtUGFyc2VyLmdvKG1bMV0sICdjZScpIH07XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnY29sb3Itb3V0cHV0JzogZnVuY3Rpb24gKF9idWZmZXIsIG0pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgdHlwZV86ICdjb2xvcicsIGNvbG9yMTogbVswXSwgY29sb3IyOiBfbWhjaGVtUGFyc2VyLmdvKG1bMV0sICdjZScpIH07XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAncj0nOiBmdW5jdGlvbiAoYnVmZmVyLCBtKSB7IGJ1ZmZlci5yID0gbTsgcmV0dXJuIHVuZGVmaW5lZDsgfSxcbiAgICAgICAgICAgICAgICAncmR0PSc6IGZ1bmN0aW9uIChidWZmZXIsIG0pIHsgYnVmZmVyLnJkdCA9IG07IHJldHVybiB1bmRlZmluZWQ7IH0sXG4gICAgICAgICAgICAgICAgJ3JkPSc6IGZ1bmN0aW9uIChidWZmZXIsIG0pIHsgYnVmZmVyLnJkID0gbTsgcmV0dXJuIHVuZGVmaW5lZDsgfSxcbiAgICAgICAgICAgICAgICAncnF0PSc6IGZ1bmN0aW9uIChidWZmZXIsIG0pIHsgYnVmZmVyLnJxdCA9IG07IHJldHVybiB1bmRlZmluZWQ7IH0sXG4gICAgICAgICAgICAgICAgJ3JxPSc6IGZ1bmN0aW9uIChidWZmZXIsIG0pIHsgYnVmZmVyLnJxID0gbTsgcmV0dXJuIHVuZGVmaW5lZDsgfSxcbiAgICAgICAgICAgICAgICAnb3BlcmF0b3InOiBmdW5jdGlvbiAoX2J1ZmZlciwgbSwgcDEpIHsgcmV0dXJuIHsgdHlwZV86ICdvcGVyYXRvcicsIGtpbmRfOiAocDEgfHwgbSkgfTsgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICAnYSc6IHtcbiAgICAgICAgICAgIHRyYW5zaXRpb25zOiBfbWhjaGVtQ3JlYXRlVHJhbnNpdGlvbnMoe1xuICAgICAgICAgICAgICAgICdlbXB0eSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IFtdIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICcxLzIkJzoge1xuICAgICAgICAgICAgICAgICAgICAnMCc6IHsgYWN0aW9uXzogJzEvMicgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ2Vsc2UnOiB7XG4gICAgICAgICAgICAgICAgICAgICcwJzogeyBhY3Rpb25fOiBbXSwgbmV4dFN0YXRlOiAnMScsIHJldmlzaXQ6IHRydWUgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJyR7KC4uLil9JF9fJCguLi4pJCc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86ICd0ZXgtbWF0aCB0aWdodCcsIG5leHRTdGF0ZTogJzEnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICcsJzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogeyB0eXBlXzogJ2luc2VydCcsIG9wdGlvbjogJ2NvbW1hRGVjaW1hbCcgfSB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnZWxzZTInOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiAnY29weScgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgYWN0aW9uczoge31cbiAgICAgICAgfSxcbiAgICAgICAgJ28nOiB7XG4gICAgICAgICAgICB0cmFuc2l0aW9uczogX21oY2hlbUNyZWF0ZVRyYW5zaXRpb25zKHtcbiAgICAgICAgICAgICAgICAnZW1wdHknOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiBbXSB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnMS8yJCc6IHtcbiAgICAgICAgICAgICAgICAgICAgJzAnOiB7IGFjdGlvbl86ICcxLzInIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdlbHNlJzoge1xuICAgICAgICAgICAgICAgICAgICAnMCc6IHsgYWN0aW9uXzogW10sIG5leHRTdGF0ZTogJzEnLCByZXZpc2l0OiB0cnVlIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdsZXR0ZXJzJzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ3JtJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnXFxcXGNhJzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogeyB0eXBlXzogJ2luc2VydCcsIG9wdGlvbjogJ2NpcmNhJyB9IH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdcXFxccHV7KC4uLil9Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogW3sgdHlwZV86ICd3cml0ZScsIG9wdGlvbjogXCJ7XCIgfSwgJ3B1JywgeyB0eXBlXzogJ3dyaXRlJywgb3B0aW9uOiBcIn1cIiB9XSB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnXFxcXHh7fXt9fFxcXFx4e318XFxcXHgnOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiAnY29weScgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJyR7KC4uLil9JF9fJCguLi4pJCc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86ICd0ZXgtbWF0aCcgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ3soLi4uKX0nOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiBbeyB0eXBlXzogJ3dyaXRlJywgb3B0aW9uOiBcIntcIiB9LCAndGV4dCcsIHsgdHlwZV86ICd3cml0ZScsIG9wdGlvbjogXCJ9XCIgfV0gfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ2Vsc2UyJzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ2NvcHknIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIGFjdGlvbnM6IHt9XG4gICAgICAgIH0sXG4gICAgICAgICd0ZXh0Jzoge1xuICAgICAgICAgICAgdHJhbnNpdGlvbnM6IF9taGNoZW1DcmVhdGVUcmFuc2l0aW9ucyh7XG4gICAgICAgICAgICAgICAgJ2VtcHR5Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ291dHB1dCcgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ3suLi59Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ3RleHQ9JyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnJHsoLi4uKX0kX18kKC4uLikkJzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ3RleC1tYXRoJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnXFxcXGdyZWVrJzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogWydvdXRwdXQnLCAncm0nXSB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnXFxcXHB1eyguLi4pfSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IFsnb3V0cHV0JywgeyB0eXBlXzogJ3dyaXRlJywgb3B0aW9uOiBcIntcIiB9LCAncHUnLCB7IHR5cGVfOiAnd3JpdGUnLCBvcHRpb246IFwifVwiIH1dIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdcXFxcLHxcXFxceHt9e318XFxcXHh7fXxcXFxceCc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IFsnb3V0cHV0JywgJ2NvcHknXSB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnZWxzZSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86ICd0ZXh0PScgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgYWN0aW9uczoge1xuICAgICAgICAgICAgICAgICdvdXRwdXQnOiBmdW5jdGlvbiAoYnVmZmVyKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChidWZmZXIudGV4dF8pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZXQgPSB7IHR5cGVfOiAndGV4dCcsIHAxOiBidWZmZXIudGV4dF8gfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIHAgaW4gYnVmZmVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGJ1ZmZlcltwXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgICdwcSc6IHtcbiAgICAgICAgICAgIHRyYW5zaXRpb25zOiBfbWhjaGVtQ3JlYXRlVHJhbnNpdGlvbnMoe1xuICAgICAgICAgICAgICAgICdlbXB0eSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IFtdIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdzdGF0ZSBvZiBhZ2dyZWdhdGlvbiAkJzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ3N0YXRlIG9mIGFnZ3JlZ2F0aW9uJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnaSQnOiB7XG4gICAgICAgICAgICAgICAgICAgICcwJzogeyBhY3Rpb25fOiBbXSwgbmV4dFN0YXRlOiAnIWYnLCByZXZpc2l0OiB0cnVlIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICcoS1YgbGV0dGVycyksJzoge1xuICAgICAgICAgICAgICAgICAgICAnMCc6IHsgYWN0aW9uXzogJ3JtJywgbmV4dFN0YXRlOiAnMCcgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ2Zvcm11bGEkJzoge1xuICAgICAgICAgICAgICAgICAgICAnMCc6IHsgYWN0aW9uXzogW10sIG5leHRTdGF0ZTogJ2YnLCByZXZpc2l0OiB0cnVlIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICcxLzIkJzoge1xuICAgICAgICAgICAgICAgICAgICAnMCc6IHsgYWN0aW9uXzogJzEvMicgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ2Vsc2UnOiB7XG4gICAgICAgICAgICAgICAgICAgICcwJzogeyBhY3Rpb25fOiBbXSwgbmV4dFN0YXRlOiAnIWYnLCByZXZpc2l0OiB0cnVlIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICckeyguLi4pfSRfXyQoLi4uKSQnOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiAndGV4LW1hdGgnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICd7KC4uLil9Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ3RleHQnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdhLXonOiB7XG4gICAgICAgICAgICAgICAgICAgICdmJzogeyBhY3Rpb25fOiAndGV4LW1hdGgnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdsZXR0ZXJzJzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ3JtJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnLTkuLDknOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiAnOSw5JyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnLCc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IHsgdHlwZV86ICdpbnNlcnQrcDEnLCBvcHRpb246ICdjb21tYSBlbnVtZXJhdGlvbiBTJyB9IH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdcXFxcY29sb3J7KC4uLil9eyguLi4pfSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86ICdjb2xvci1vdXRwdXQnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdcXFxcY29sb3J7KC4uLil9Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ2NvbG9yMC1vdXRwdXQnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdcXFxcY2V7KC4uLil9Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ2NlJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnXFxcXHB1eyguLi4pfSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IFt7IHR5cGVfOiAnd3JpdGUnLCBvcHRpb246IFwie1wiIH0sICdwdScsIHsgdHlwZV86ICd3cml0ZScsIG9wdGlvbjogXCJ9XCIgfV0gfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ1xcXFwsfFxcXFx4e317fXxcXFxceHt9fFxcXFx4Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ2NvcHknIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdlbHNlMic6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86ICdjb3B5JyB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBhY3Rpb25zOiB7XG4gICAgICAgICAgICAgICAgJ3N0YXRlIG9mIGFnZ3JlZ2F0aW9uJzogZnVuY3Rpb24gKF9idWZmZXIsIG0pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgdHlwZV86ICdzdGF0ZSBvZiBhZ2dyZWdhdGlvbiBzdWJzY3JpcHQnLCBwMTogX21oY2hlbVBhcnNlci5nbyhtLCAnbycpIH07XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnY29sb3Itb3V0cHV0JzogZnVuY3Rpb24gKF9idWZmZXIsIG0pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgdHlwZV86ICdjb2xvcicsIGNvbG9yMTogbVswXSwgY29sb3IyOiBfbWhjaGVtUGFyc2VyLmdvKG1bMV0sICdwcScpIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICAnYmQnOiB7XG4gICAgICAgICAgICB0cmFuc2l0aW9uczogX21oY2hlbUNyZWF0ZVRyYW5zaXRpb25zKHtcbiAgICAgICAgICAgICAgICAnZW1wdHknOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiBbXSB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAneCQnOiB7XG4gICAgICAgICAgICAgICAgICAgICcwJzogeyBhY3Rpb25fOiBbXSwgbmV4dFN0YXRlOiAnIWYnLCByZXZpc2l0OiB0cnVlIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdmb3JtdWxhJCc6IHtcbiAgICAgICAgICAgICAgICAgICAgJzAnOiB7IGFjdGlvbl86IFtdLCBuZXh0U3RhdGU6ICdmJywgcmV2aXNpdDogdHJ1ZSB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnZWxzZSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJzAnOiB7IGFjdGlvbl86IFtdLCBuZXh0U3RhdGU6ICchZicsIHJldmlzaXQ6IHRydWUgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJy05Liw5IG5vIG1pc3NpbmcgMCc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86ICc5LDknIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICcuJzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogeyB0eXBlXzogJ2luc2VydCcsIG9wdGlvbjogJ2VsZWN0cm9uIGRvdCcgfSB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnYS16Jzoge1xuICAgICAgICAgICAgICAgICAgICAnZic6IHsgYWN0aW9uXzogJ3RleC1tYXRoJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAneCc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IHsgdHlwZV86ICdpbnNlcnQnLCBvcHRpb246ICdLViB4JyB9IH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdsZXR0ZXJzJzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ3JtJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnXFwnJzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogeyB0eXBlXzogJ2luc2VydCcsIG9wdGlvbjogJ3ByaW1lJyB9IH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICckeyguLi4pfSRfXyQoLi4uKSQnOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiAndGV4LW1hdGgnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICd7KC4uLil9Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ3RleHQnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdcXFxcY29sb3J7KC4uLil9eyguLi4pfSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86ICdjb2xvci1vdXRwdXQnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdcXFxcY29sb3J7KC4uLil9Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ2NvbG9yMC1vdXRwdXQnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdcXFxcY2V7KC4uLil9Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ2NlJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnXFxcXHB1eyguLi4pfSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IFt7IHR5cGVfOiAnd3JpdGUnLCBvcHRpb246IFwie1wiIH0sICdwdScsIHsgdHlwZV86ICd3cml0ZScsIG9wdGlvbjogXCJ9XCIgfV0gfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ1xcXFwsfFxcXFx4e317fXxcXFxceHt9fFxcXFx4Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ2NvcHknIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdlbHNlMic6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86ICdjb3B5JyB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBhY3Rpb25zOiB7XG4gICAgICAgICAgICAgICAgJ2NvbG9yLW91dHB1dCc6IGZ1bmN0aW9uIChfYnVmZmVyLCBtKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7IHR5cGVfOiAnY29sb3InLCBjb2xvcjE6IG1bMF0sIGNvbG9yMjogX21oY2hlbVBhcnNlci5nbyhtWzFdLCAnYmQnKSB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgJ294aWRhdGlvbic6IHtcbiAgICAgICAgICAgIHRyYW5zaXRpb25zOiBfbWhjaGVtQ3JlYXRlVHJhbnNpdGlvbnMoe1xuICAgICAgICAgICAgICAgICdlbXB0eSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IFtdIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdyb21hbiBudW1lcmFsJzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ3JvbWFuLW51bWVyYWwnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICckeyguLi4pfSRfXyQoLi4uKSQnOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiAndGV4LW1hdGgnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdlbHNlJzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ2NvcHknIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIGFjdGlvbnM6IHtcbiAgICAgICAgICAgICAgICAncm9tYW4tbnVtZXJhbCc6IGZ1bmN0aW9uIChfYnVmZmVyLCBtKSB7IHJldHVybiB7IHR5cGVfOiAncm9tYW4gbnVtZXJhbCcsIHAxOiBtIH07IH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgJ3RleC1tYXRoJzoge1xuICAgICAgICAgICAgdHJhbnNpdGlvbnM6IF9taGNoZW1DcmVhdGVUcmFuc2l0aW9ucyh7XG4gICAgICAgICAgICAgICAgJ2VtcHR5Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ291dHB1dCcgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ1xcXFxjZXsoLi4uKX0nOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiBbJ291dHB1dCcsICdjZSddIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdcXFxccHV7KC4uLil9Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogWydvdXRwdXQnLCB7IHR5cGVfOiAnd3JpdGUnLCBvcHRpb246IFwie1wiIH0sICdwdScsIHsgdHlwZV86ICd3cml0ZScsIG9wdGlvbjogXCJ9XCIgfV0gfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ3suLi59fFxcXFwsfFxcXFx4e317fXxcXFxceHt9fFxcXFx4Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ289JyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnZWxzZSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86ICdvPScgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgYWN0aW9uczoge1xuICAgICAgICAgICAgICAgICdvdXRwdXQnOiBmdW5jdGlvbiAoYnVmZmVyKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChidWZmZXIubykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHJldCA9IHsgdHlwZV86ICd0ZXgtbWF0aCcsIHAxOiBidWZmZXIubyB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBidWZmZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgYnVmZmVyW3BdO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgJ3RleC1tYXRoIHRpZ2h0Jzoge1xuICAgICAgICAgICAgdHJhbnNpdGlvbnM6IF9taGNoZW1DcmVhdGVUcmFuc2l0aW9ucyh7XG4gICAgICAgICAgICAgICAgJ2VtcHR5Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ291dHB1dCcgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ1xcXFxjZXsoLi4uKX0nOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiBbJ291dHB1dCcsICdjZSddIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdcXFxccHV7KC4uLil9Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogWydvdXRwdXQnLCB7IHR5cGVfOiAnd3JpdGUnLCBvcHRpb246IFwie1wiIH0sICdwdScsIHsgdHlwZV86ICd3cml0ZScsIG9wdGlvbjogXCJ9XCIgfV0gfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ3suLi59fFxcXFwsfFxcXFx4e317fXxcXFxceHt9fFxcXFx4Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ289JyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnLXwrJzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ3RpZ2h0IG9wZXJhdG9yJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnZWxzZSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86ICdvPScgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgYWN0aW9uczoge1xuICAgICAgICAgICAgICAgICd0aWdodCBvcGVyYXRvcic6IGZ1bmN0aW9uIChidWZmZXIsIG0pIHsgYnVmZmVyLm8gPSAoYnVmZmVyLm8gfHwgXCJcIikgKyBcIntcIiArIG0gKyBcIn1cIjsgcmV0dXJuIHVuZGVmaW5lZDsgfSxcbiAgICAgICAgICAgICAgICAnb3V0cHV0JzogZnVuY3Rpb24gKGJ1ZmZlcikge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYnVmZmVyLm8pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZXQgPSB7IHR5cGVfOiAndGV4LW1hdGgnLCBwMTogYnVmZmVyLm8gfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIHAgaW4gYnVmZmVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGJ1ZmZlcltwXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgICc5LDknOiB7XG4gICAgICAgICAgICB0cmFuc2l0aW9uczogX21oY2hlbUNyZWF0ZVRyYW5zaXRpb25zKHtcbiAgICAgICAgICAgICAgICAnZW1wdHknOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiBbXSB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnLCc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86ICdjb21tYScgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ2Vsc2UnOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiAnY29weScgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgYWN0aW9uczoge1xuICAgICAgICAgICAgICAgICdjb21tYSc6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHsgdHlwZV86ICdjb21tYURlY2ltYWwnIH07IH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgJ3B1Jzoge1xuICAgICAgICAgICAgdHJhbnNpdGlvbnM6IF9taGNoZW1DcmVhdGVUcmFuc2l0aW9ucyh7XG4gICAgICAgICAgICAgICAgJ2VtcHR5Jzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogJ291dHB1dCcgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ3NwYWNlJCc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86IFsnb3V0cHV0JywgJ3NwYWNlJ10gfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ3tbKHwpXX0nOiB7XG4gICAgICAgICAgICAgICAgICAgICcwfGEnOiB7IGFjdGlvbl86ICdjb3B5JyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnKC0pKDkpXigtOSknOiB7XG4gICAgICAgICAgICAgICAgICAgICcwJzogeyBhY3Rpb25fOiAnbnVtYmVyXicsIG5leHRTdGF0ZTogJ2EnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICcoLSkoOS4sOSkoZSkoOTkpJzoge1xuICAgICAgICAgICAgICAgICAgICAnMCc6IHsgYWN0aW9uXzogJ2VudW1iZXInLCBuZXh0U3RhdGU6ICdhJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnc3BhY2UnOiB7XG4gICAgICAgICAgICAgICAgICAgICcwfGEnOiB7IGFjdGlvbl86IFtdIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdwbS1vcGVyYXRvcic6IHtcbiAgICAgICAgICAgICAgICAgICAgJzB8YSc6IHsgYWN0aW9uXzogeyB0eXBlXzogJ29wZXJhdG9yJywgb3B0aW9uOiAnXFxcXHBtJyB9LCBuZXh0U3RhdGU6ICcwJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnb3BlcmF0b3InOiB7XG4gICAgICAgICAgICAgICAgICAgICcwfGEnOiB7IGFjdGlvbl86ICdjb3B5JywgbmV4dFN0YXRlOiAnMCcgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJy8vJzoge1xuICAgICAgICAgICAgICAgICAgICAnZCc6IHsgYWN0aW9uXzogJ289JywgbmV4dFN0YXRlOiAnLycgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJy8nOiB7XG4gICAgICAgICAgICAgICAgICAgICdkJzogeyBhY3Rpb25fOiAnbz0nLCBuZXh0U3RhdGU6ICcvJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAney4uLn18ZWxzZSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJzB8ZCc6IHsgYWN0aW9uXzogJ2Q9JywgbmV4dFN0YXRlOiAnZCcgfSxcbiAgICAgICAgICAgICAgICAgICAgJ2EnOiB7IGFjdGlvbl86IFsnc3BhY2UnLCAnZD0nXSwgbmV4dFN0YXRlOiAnZCcgfSxcbiAgICAgICAgICAgICAgICAgICAgJy98cSc6IHsgYWN0aW9uXzogJ3E9JywgbmV4dFN0YXRlOiAncScgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgYWN0aW9uczoge1xuICAgICAgICAgICAgICAgICdlbnVtYmVyJzogZnVuY3Rpb24gKF9idWZmZXIsIG0pIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJldCA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBpZiAobVswXSA9PT0gXCIrLVwiIHx8IG1bMF0gPT09IFwiKy8tXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldC5wdXNoKFwiXFxcXHBtIFwiKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChtWzBdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXQucHVzaChtWzBdKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAobVsxXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgX21oY2hlbVBhcnNlci5jb25jYXRBcnJheShyZXQsIF9taGNoZW1QYXJzZXIuZ28obVsxXSwgJ3B1LTksOScpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtWzJdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1bMl0ubWF0Y2goL1ssLl0vKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfbWhjaGVtUGFyc2VyLmNvbmNhdEFycmF5KHJldCwgX21oY2hlbVBhcnNlci5nbyhtWzJdLCAncHUtOSw5JykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0LnB1c2gobVsyXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1bM10gfHwgbVs0XSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtWzNdID09PSBcImVcIiB8fCBtWzRdID09PSBcIipcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXQucHVzaCh7IHR5cGVfOiAnY2RvdCcgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXQucHVzaCh7IHR5cGVfOiAndGltZXMnIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAobVs1XSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0LnB1c2goXCIxMF57XCIgKyBtWzVdICsgXCJ9XCIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXQ7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnbnVtYmVyXic6IGZ1bmN0aW9uIChfYnVmZmVyLCBtKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciByZXQgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1bMF0gPT09IFwiKy1cIiB8fCBtWzBdID09PSBcIisvLVwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXQucHVzaChcIlxcXFxwbSBcIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAobVswXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0LnB1c2gobVswXSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgX21oY2hlbVBhcnNlci5jb25jYXRBcnJheShyZXQsIF9taGNoZW1QYXJzZXIuZ28obVsxXSwgJ3B1LTksOScpKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0LnB1c2goXCJee1wiICsgbVsyXSArIFwifVwiKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdvcGVyYXRvcic6IGZ1bmN0aW9uIChfYnVmZmVyLCBtLCBwMSkgeyByZXR1cm4geyB0eXBlXzogJ29wZXJhdG9yJywga2luZF86IChwMSB8fCBtKSB9OyB9LFxuICAgICAgICAgICAgICAgICdzcGFjZSc6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHsgdHlwZV86ICdwdS1zcGFjZS0xJyB9OyB9LFxuICAgICAgICAgICAgICAgICdvdXRwdXQnOiBmdW5jdGlvbiAoYnVmZmVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciByZXQ7XG4gICAgICAgICAgICAgICAgICAgIHZhciBtZCA9IF9taGNoZW1QYXJzZXIucGF0dGVybnMubWF0Y2hfKCd7KC4uLil9JywgYnVmZmVyLmQgfHwgXCJcIik7XG4gICAgICAgICAgICAgICAgICAgIGlmIChtZCAmJiBtZC5yZW1haW5kZXIgPT09ICcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBidWZmZXIuZCA9IG1kLm1hdGNoXztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB2YXIgbXEgPSBfbWhjaGVtUGFyc2VyLnBhdHRlcm5zLm1hdGNoXygneyguLi4pfScsIGJ1ZmZlci5xIHx8IFwiXCIpO1xuICAgICAgICAgICAgICAgICAgICBpZiAobXEgJiYgbXEucmVtYWluZGVyID09PSAnJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgYnVmZmVyLnEgPSBtcS5tYXRjaF87XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKGJ1ZmZlci5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBidWZmZXIuZCA9IGJ1ZmZlci5kLnJlcGxhY2UoL1xcdTAwQjBDfFxcXm9DfFxcXntvfUMvZywgXCJ7fV57XFxcXGNpcmN9Q1wiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJ1ZmZlci5kID0gYnVmZmVyLmQucmVwbGFjZSgvXFx1MDBCMEZ8XFxeb0Z8XFxee299Ri9nLCBcInt9XntcXFxcY2lyY31GXCIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChidWZmZXIucSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYnVmZmVyLnEgPSBidWZmZXIucS5yZXBsYWNlKC9cXHUwMEIwQ3xcXF5vQ3xcXF57b31DL2csIFwie31ee1xcXFxjaXJjfUNcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICBidWZmZXIucSA9IGJ1ZmZlci5xLnJlcGxhY2UoL1xcdTAwQjBGfFxcXm9GfFxcXntvfUYvZywgXCJ7fV57XFxcXGNpcmN9RlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBiNSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkOiBfbWhjaGVtUGFyc2VyLmdvKGJ1ZmZlci5kLCAncHUnKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBxOiBfbWhjaGVtUGFyc2VyLmdvKGJ1ZmZlci5xLCAncHUnKVxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChidWZmZXIubyA9PT0gJy8vJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldCA9IHsgdHlwZV86ICdwdS1mcmFjJywgcDE6IGI1LmQsIHAyOiBiNS5xIH07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXQgPSBiNS5kO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChiNS5kLmxlbmd0aCA+IDEgfHwgYjUucS5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldC5wdXNoKHsgdHlwZV86ICcgLyAnIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0LnB1c2goeyB0eXBlXzogJy8nIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfbWhjaGVtUGFyc2VyLmNvbmNhdEFycmF5KHJldCwgYjUucSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXQgPSBfbWhjaGVtUGFyc2VyLmdvKGJ1ZmZlci5kLCAncHUtMicpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIHAgaW4gYnVmZmVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgYnVmZmVyW3BdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICAncHUtMic6IHtcbiAgICAgICAgICAgIHRyYW5zaXRpb25zOiBfbWhjaGVtQ3JlYXRlVHJhbnNpdGlvbnMoe1xuICAgICAgICAgICAgICAgICdlbXB0eSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86ICdvdXRwdXQnIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICcqJzoge1xuICAgICAgICAgICAgICAgICAgICAnKic6IHsgYWN0aW9uXzogWydvdXRwdXQnLCAnY2RvdCddLCBuZXh0U3RhdGU6ICcwJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnXFxcXHgnOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiAncm09JyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnc3BhY2UnOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiBbJ291dHB1dCcsICdzcGFjZSddLCBuZXh0U3RhdGU6ICcwJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnXnsoLi4uKX18XigtMSknOiB7XG4gICAgICAgICAgICAgICAgICAgICcxJzogeyBhY3Rpb25fOiAnXigtMSknIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICctOS4sOSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJzAnOiB7IGFjdGlvbl86ICdybT0nLCBuZXh0U3RhdGU6ICcwJyB9LFxuICAgICAgICAgICAgICAgICAgICAnMSc6IHsgYWN0aW9uXzogJ14oLTEpJywgbmV4dFN0YXRlOiAnMCcgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgJ3suLi59fGVsc2UnOiB7XG4gICAgICAgICAgICAgICAgICAgICcqJzogeyBhY3Rpb25fOiAncm09JywgbmV4dFN0YXRlOiAnMScgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgYWN0aW9uczoge1xuICAgICAgICAgICAgICAgICdjZG90JzogZnVuY3Rpb24gKCkgeyByZXR1cm4geyB0eXBlXzogJ3RpZ2h0IGNkb3QnIH07IH0sXG4gICAgICAgICAgICAgICAgJ14oLTEpJzogZnVuY3Rpb24gKGJ1ZmZlciwgbSkgeyBidWZmZXIucm0gKz0gXCJee1wiICsgbSArIFwifVwiOyByZXR1cm4gdW5kZWZpbmVkOyB9LFxuICAgICAgICAgICAgICAgICdzcGFjZSc6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHsgdHlwZV86ICdwdS1zcGFjZS0yJyB9OyB9LFxuICAgICAgICAgICAgICAgICdvdXRwdXQnOiBmdW5jdGlvbiAoYnVmZmVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciByZXQgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGJ1ZmZlci5ybSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1ybSA9IF9taGNoZW1QYXJzZXIucGF0dGVybnMubWF0Y2hfKCd7KC4uLil9JywgYnVmZmVyLnJtIHx8IFwiXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1ybSAmJiBtcm0ucmVtYWluZGVyID09PSAnJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldCA9IF9taGNoZW1QYXJzZXIuZ28obXJtLm1hdGNoXywgJ3B1Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXQgPSB7IHR5cGVfOiAncm0nLCBwMTogYnVmZmVyLnJtIH07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBidWZmZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBidWZmZXJbcF07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgICdwdS05LDknOiB7XG4gICAgICAgICAgICB0cmFuc2l0aW9uczogX21oY2hlbUNyZWF0ZVRyYW5zaXRpb25zKHtcbiAgICAgICAgICAgICAgICAnZW1wdHknOiB7XG4gICAgICAgICAgICAgICAgICAgICcwJzogeyBhY3Rpb25fOiAnb3V0cHV0LTAnIH0sXG4gICAgICAgICAgICAgICAgICAgICdvJzogeyBhY3Rpb25fOiAnb3V0cHV0LW8nIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICcsJzoge1xuICAgICAgICAgICAgICAgICAgICAnMCc6IHsgYWN0aW9uXzogWydvdXRwdXQtMCcsICdjb21tYSddLCBuZXh0U3RhdGU6ICdvJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnLic6IHtcbiAgICAgICAgICAgICAgICAgICAgJzAnOiB7IGFjdGlvbl86IFsnb3V0cHV0LTAnLCAnY29weSddLCBuZXh0U3RhdGU6ICdvJyB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnZWxzZSc6IHtcbiAgICAgICAgICAgICAgICAgICAgJyonOiB7IGFjdGlvbl86ICd0ZXh0PScgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgYWN0aW9uczoge1xuICAgICAgICAgICAgICAgICdjb21tYSc6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHsgdHlwZV86ICdjb21tYURlY2ltYWwnIH07IH0sXG4gICAgICAgICAgICAgICAgJ291dHB1dC0wJzogZnVuY3Rpb24gKGJ1ZmZlcikge1xuICAgICAgICAgICAgICAgICAgICB2YXIgcmV0ID0gW107XG4gICAgICAgICAgICAgICAgICAgIGJ1ZmZlci50ZXh0XyA9IGJ1ZmZlci50ZXh0XyB8fCBcIlwiO1xuICAgICAgICAgICAgICAgICAgICBpZiAoYnVmZmVyLnRleHRfLmxlbmd0aCA+IDQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhID0gYnVmZmVyLnRleHRfLmxlbmd0aCAlIDM7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYSA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGEgPSAzO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IGJ1ZmZlci50ZXh0Xy5sZW5ndGggLSAzOyBpID4gMDsgaSAtPSAzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0LnB1c2goYnVmZmVyLnRleHRfLnN1YnN0cihpLCAzKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0LnB1c2goeyB0eXBlXzogJzEwMDAgc2VwYXJhdG9yJyB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldC5wdXNoKGJ1ZmZlci50ZXh0Xy5zdWJzdHIoMCwgYSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0LnJldmVyc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldC5wdXNoKGJ1ZmZlci50ZXh0Xyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBidWZmZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBidWZmZXJbcF07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICdvdXRwdXQtbyc6IGZ1bmN0aW9uIChidWZmZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJldCA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBidWZmZXIudGV4dF8gPSBidWZmZXIudGV4dF8gfHwgXCJcIjtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGJ1ZmZlci50ZXh0Xy5sZW5ndGggPiA0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgYSA9IGJ1ZmZlci50ZXh0Xy5sZW5ndGggLSAzO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGkgPSB2b2lkIDA7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgYTsgaSArPSAzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0LnB1c2goYnVmZmVyLnRleHRfLnN1YnN0cihpLCAzKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0LnB1c2goeyB0eXBlXzogJzEwMDAgc2VwYXJhdG9yJyB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldC5wdXNoKGJ1ZmZlci50ZXh0Xy5zdWJzdHIoaSkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0LnB1c2goYnVmZmVyLnRleHRfKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBwIGluIGJ1ZmZlcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGJ1ZmZlcltwXTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmV0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn07XG52YXIgX21oY2hlbVRleGlmeSA9IHtcbiAgICBnbzogZnVuY3Rpb24gKGlucHV0LCBhZGRPdXRlckJyYWNlcykge1xuICAgICAgICBpZiAoIWlucHV0KSB7XG4gICAgICAgICAgICByZXR1cm4gXCJcIjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcmVzID0gXCJcIjtcbiAgICAgICAgdmFyIGNlZSA9IGZhbHNlO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGlucHV0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgaW5wdXRpID0gaW5wdXRbaV07XG4gICAgICAgICAgICBpZiAodHlwZW9mIGlucHV0aSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIHJlcyArPSBpbnB1dGk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXMgKz0gX21oY2hlbVRleGlmeS5fZ28yKGlucHV0aSk7XG4gICAgICAgICAgICAgICAgaWYgKGlucHV0aS50eXBlXyA9PT0gJzFzdC1sZXZlbCBlc2NhcGUnKSB7XG4gICAgICAgICAgICAgICAgICAgIGNlZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChhZGRPdXRlckJyYWNlcyAmJiAhY2VlICYmIHJlcykge1xuICAgICAgICAgICAgcmVzID0gXCJ7XCIgKyByZXMgKyBcIn1cIjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH0sXG4gICAgX2dvSW5uZXI6IGZ1bmN0aW9uIChpbnB1dCkge1xuICAgICAgICByZXR1cm4gX21oY2hlbVRleGlmeS5nbyhpbnB1dCwgZmFsc2UpO1xuICAgIH0sXG4gICAgX2dvMjogZnVuY3Rpb24gKGJ1Zikge1xuICAgICAgICB2YXIgcmVzO1xuICAgICAgICBzd2l0Y2ggKGJ1Zi50eXBlXykge1xuICAgICAgICAgICAgY2FzZSAnY2hlbWZpdmUnOlxuICAgICAgICAgICAgICAgIHJlcyA9IFwiXCI7XG4gICAgICAgICAgICAgICAgdmFyIGI1ID0ge1xuICAgICAgICAgICAgICAgICAgICBhOiBfbWhjaGVtVGV4aWZ5Ll9nb0lubmVyKGJ1Zi5hKSxcbiAgICAgICAgICAgICAgICAgICAgYjogX21oY2hlbVRleGlmeS5fZ29Jbm5lcihidWYuYiksXG4gICAgICAgICAgICAgICAgICAgIHA6IF9taGNoZW1UZXhpZnkuX2dvSW5uZXIoYnVmLnApLFxuICAgICAgICAgICAgICAgICAgICBvOiBfbWhjaGVtVGV4aWZ5Ll9nb0lubmVyKGJ1Zi5vKSxcbiAgICAgICAgICAgICAgICAgICAgcTogX21oY2hlbVRleGlmeS5fZ29Jbm5lcihidWYucSksXG4gICAgICAgICAgICAgICAgICAgIGQ6IF9taGNoZW1UZXhpZnkuX2dvSW5uZXIoYnVmLmQpXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBpZiAoYjUuYSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYjUuYS5tYXRjaCgvXlsrXFwtXS8pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBiNS5hID0gXCJ7XCIgKyBiNS5hICsgXCJ9XCI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmVzICs9IGI1LmEgKyBcIlxcXFwsXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChiNS5iIHx8IGI1LnApIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzICs9IFwie1xcXFx2cGhhbnRvbXtBfX1cIjtcbiAgICAgICAgICAgICAgICAgICAgcmVzICs9IFwiXntcXFxcaHBoYW50b217XCIgKyAoYjUuYiB8fCBcIlwiKSArIFwifX1fe1xcXFxocGhhbnRvbXtcIiArIChiNS5wIHx8IFwiXCIpICsgXCJ9fVwiO1xuICAgICAgICAgICAgICAgICAgICByZXMgKz0gXCJcXFxcbWtlcm4tMS41bXVcIjtcbiAgICAgICAgICAgICAgICAgICAgcmVzICs9IFwie1xcXFx2cGhhbnRvbXtBfX1cIjtcbiAgICAgICAgICAgICAgICAgICAgcmVzICs9IFwiXntcXFxcc21hc2hbdF17XFxcXHZwaGFudG9tezJ9fVxcXFxsbGFwe1wiICsgKGI1LmIgfHwgXCJcIikgKyBcIn19XCI7XG4gICAgICAgICAgICAgICAgICAgIHJlcyArPSBcIl97XFxcXHZwaGFudG9tezJ9XFxcXGxsYXB7XFxcXHNtYXNoW3Rde1wiICsgKGI1LnAgfHwgXCJcIikgKyBcIn19fVwiO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoYjUubykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYjUuby5tYXRjaCgvXlsrXFwtXS8pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBiNS5vID0gXCJ7XCIgKyBiNS5vICsgXCJ9XCI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmVzICs9IGI1Lm87XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChidWYuZFR5cGUgPT09ICdrdicpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGI1LmQgfHwgYjUucSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzICs9IFwie1xcXFx2cGhhbnRvbXtBfX1cIjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoYjUuZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzICs9IFwiXntcIiArIGI1LmQgKyBcIn1cIjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoYjUucSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzICs9IFwiX3tcXFxcc21hc2hbdF17XCIgKyBiNS5xICsgXCJ9fVwiO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGJ1Zi5kVHlwZSA9PT0gJ294aWRhdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGI1LmQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcyArPSBcIntcXFxcdnBoYW50b217QX19XCI7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXMgKz0gXCJee1wiICsgYjUuZCArIFwifVwiO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChiNS5xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXMgKz0gXCJ7XFxcXHZwaGFudG9te0F9fVwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzICs9IFwiX3tcXFxcc21hc2hbdF17XCIgKyBiNS5xICsgXCJ9fVwiO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYjUucSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzICs9IFwie1xcXFx2cGhhbnRvbXtBfX1cIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcyArPSBcIl97XFxcXHNtYXNoW3Rde1wiICsgYjUucSArIFwifX1cIjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoYjUuZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzICs9IFwie1xcXFx2cGhhbnRvbXtBfX1cIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcyArPSBcIl57XCIgKyBiNS5kICsgXCJ9XCI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdybSc6XG4gICAgICAgICAgICAgICAgcmVzID0gXCJcXFxcbWF0aHJte1wiICsgYnVmLnAxICsgXCJ9XCI7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICd0ZXh0JzpcbiAgICAgICAgICAgICAgICBpZiAoYnVmLnAxLm1hdGNoKC9bXFxeX10vKSkge1xuICAgICAgICAgICAgICAgICAgICBidWYucDEgPSBidWYucDEucmVwbGFjZShcIiBcIiwgXCJ+XCIpLnJlcGxhY2UoXCItXCIsIFwiXFxcXHRleHR7LX1cIik7XG4gICAgICAgICAgICAgICAgICAgIHJlcyA9IFwiXFxcXG1hdGhybXtcIiArIGJ1Zi5wMSArIFwifVwiO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzID0gXCJcXFxcdGV4dHtcIiArIGJ1Zi5wMSArIFwifVwiO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3JvbWFuIG51bWVyYWwnOlxuICAgICAgICAgICAgICAgIHJlcyA9IFwiXFxcXG1hdGhybXtcIiArIGJ1Zi5wMSArIFwifVwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnc3RhdGUgb2YgYWdncmVnYXRpb24nOlxuICAgICAgICAgICAgICAgIHJlcyA9IFwiXFxcXG1za2lwMm11IFwiICsgX21oY2hlbVRleGlmeS5fZ29Jbm5lcihidWYucDEpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnc3RhdGUgb2YgYWdncmVnYXRpb24gc3Vic2NyaXB0JzpcbiAgICAgICAgICAgICAgICByZXMgPSBcIlxcXFxtc2tpcDFtdSBcIiArIF9taGNoZW1UZXhpZnkuX2dvSW5uZXIoYnVmLnAxKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2JvbmQnOlxuICAgICAgICAgICAgICAgIHJlcyA9IF9taGNoZW1UZXhpZnkuX2dldEJvbmQoYnVmLmtpbmRfKTtcbiAgICAgICAgICAgICAgICBpZiAoIXJlcykge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBbXCJNaGNoZW1FcnJvckJvbmRcIiwgXCJtaGNoZW0gRXJyb3IuIFVua25vd24gYm9uZCB0eXBlIChcIiArIGJ1Zi5raW5kXyArIFwiKVwiXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdmcmFjJzpcbiAgICAgICAgICAgICAgICB2YXIgYyA9IFwiXFxcXGZyYWN7XCIgKyBidWYucDEgKyBcIn17XCIgKyBidWYucDIgKyBcIn1cIjtcbiAgICAgICAgICAgICAgICByZXMgPSBcIlxcXFxtYXRoY2hvaWNle1xcXFx0ZXh0c3R5bGVcIiArIGMgKyBcIn17XCIgKyBjICsgXCJ9e1wiICsgYyArIFwifXtcIiArIGMgKyBcIn1cIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3B1LWZyYWMnOlxuICAgICAgICAgICAgICAgIHZhciBkID0gXCJcXFxcZnJhY3tcIiArIF9taGNoZW1UZXhpZnkuX2dvSW5uZXIoYnVmLnAxKSArIFwifXtcIiArIF9taGNoZW1UZXhpZnkuX2dvSW5uZXIoYnVmLnAyKSArIFwifVwiO1xuICAgICAgICAgICAgICAgIHJlcyA9IFwiXFxcXG1hdGhjaG9pY2V7XFxcXHRleHRzdHlsZVwiICsgZCArIFwifXtcIiArIGQgKyBcIn17XCIgKyBkICsgXCJ9e1wiICsgZCArIFwifVwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAndGV4LW1hdGgnOlxuICAgICAgICAgICAgICAgIHJlcyA9IGJ1Zi5wMSArIFwiIFwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnZnJhYy1jZSc6XG4gICAgICAgICAgICAgICAgcmVzID0gXCJcXFxcZnJhY3tcIiArIF9taGNoZW1UZXhpZnkuX2dvSW5uZXIoYnVmLnAxKSArIFwifXtcIiArIF9taGNoZW1UZXhpZnkuX2dvSW5uZXIoYnVmLnAyKSArIFwifVwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnb3ZlcnNldCc6XG4gICAgICAgICAgICAgICAgcmVzID0gXCJcXFxcb3ZlcnNldHtcIiArIF9taGNoZW1UZXhpZnkuX2dvSW5uZXIoYnVmLnAxKSArIFwifXtcIiArIF9taGNoZW1UZXhpZnkuX2dvSW5uZXIoYnVmLnAyKSArIFwifVwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAndW5kZXJzZXQnOlxuICAgICAgICAgICAgICAgIHJlcyA9IFwiXFxcXHVuZGVyc2V0e1wiICsgX21oY2hlbVRleGlmeS5fZ29Jbm5lcihidWYucDEpICsgXCJ9e1wiICsgX21oY2hlbVRleGlmeS5fZ29Jbm5lcihidWYucDIpICsgXCJ9XCI7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICd1bmRlcmJyYWNlJzpcbiAgICAgICAgICAgICAgICByZXMgPSBcIlxcXFx1bmRlcmJyYWNle1wiICsgX21oY2hlbVRleGlmeS5fZ29Jbm5lcihidWYucDEpICsgXCJ9X3tcIiArIF9taGNoZW1UZXhpZnkuX2dvSW5uZXIoYnVmLnAyKSArIFwifVwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnY29sb3InOlxuICAgICAgICAgICAgICAgIHJlcyA9IFwie1xcXFxjb2xvcntcIiArIGJ1Zi5jb2xvcjEgKyBcIn17XCIgKyBfbWhjaGVtVGV4aWZ5Ll9nb0lubmVyKGJ1Zi5jb2xvcjIpICsgXCJ9fVwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnY29sb3IwJzpcbiAgICAgICAgICAgICAgICByZXMgPSBcIlxcXFxjb2xvcntcIiArIGJ1Zi5jb2xvciArIFwifVwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnYXJyb3cnOlxuICAgICAgICAgICAgICAgIHZhciBiNiA9IHtcbiAgICAgICAgICAgICAgICAgICAgcmQ6IF9taGNoZW1UZXhpZnkuX2dvSW5uZXIoYnVmLnJkKSxcbiAgICAgICAgICAgICAgICAgICAgcnE6IF9taGNoZW1UZXhpZnkuX2dvSW5uZXIoYnVmLnJxKVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgdmFyIGFycm93ID0gX21oY2hlbVRleGlmeS5fZ2V0QXJyb3coYnVmLnIpO1xuICAgICAgICAgICAgICAgIGlmIChiNi5yZCB8fCBiNi5ycSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoYnVmLnIgPT09IFwiPD0+XCIgfHwgYnVmLnIgPT09IFwiPD0+PlwiIHx8IGJ1Zi5yID09PSBcIjw8PT5cIiB8fCBidWYuciA9PT0gXCI8LS0+XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFycm93ID0gXCJcXFxcbG9uZ1wiICsgYXJyb3c7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYjYucmQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcnJvdyA9IFwiXFxcXG92ZXJzZXR7XCIgKyBiNi5yZCArIFwifXtcIiArIGFycm93ICsgXCJ9XCI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYjYucnEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYnVmLnIgPT09IFwiPC0tPlwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFycm93ID0gXCJcXFxcdW5kZXJzZXR7XFxcXGxvd2VyMm11e1wiICsgYjYucnEgKyBcIn19e1wiICsgYXJyb3cgKyBcIn1cIjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFycm93ID0gXCJcXFxcdW5kZXJzZXR7XFxcXGxvd2VyNm11e1wiICsgYjYucnEgKyBcIn19e1wiICsgYXJyb3cgKyBcIn1cIjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBhcnJvdyA9IFwiIHt9XFxcXG1hdGhyZWx7XCIgKyBhcnJvdyArIFwifXt9IFwiO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGI2LnJxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJyb3cgKz0gXCJbe1wiICsgYjYucnEgKyBcIn1dXCI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBhcnJvdyArPSBcIntcIiArIGI2LnJkICsgXCJ9XCI7XG4gICAgICAgICAgICAgICAgICAgICAgICBhcnJvdyA9IFwiIHt9XFxcXG1hdGhyZWx7XFxcXHhcIiArIGFycm93ICsgXCJ9e30gXCI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGFycm93ID0gXCIge31cXFxcbWF0aHJlbHtcXFxcbG9uZ1wiICsgYXJyb3cgKyBcIn17fSBcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmVzID0gYXJyb3c7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdvcGVyYXRvcic6XG4gICAgICAgICAgICAgICAgcmVzID0gX21oY2hlbVRleGlmeS5fZ2V0T3BlcmF0b3IoYnVmLmtpbmRfKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJzFzdC1sZXZlbCBlc2NhcGUnOlxuICAgICAgICAgICAgICAgIHJlcyA9IGJ1Zi5wMSArIFwiIFwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnc3BhY2UnOlxuICAgICAgICAgICAgICAgIHJlcyA9IFwiIFwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAndGlueVNraXAnOlxuICAgICAgICAgICAgICAgIHJlcyA9ICdcXFxcbWtlcm4ybXUnO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnZW50aXR5U2tpcCc6XG4gICAgICAgICAgICAgICAgcmVzID0gXCJ+XCI7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdwdS1zcGFjZS0xJzpcbiAgICAgICAgICAgICAgICByZXMgPSBcIn5cIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3B1LXNwYWNlLTInOlxuICAgICAgICAgICAgICAgIHJlcyA9IFwiXFxcXG1rZXJuM211IFwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnMTAwMCBzZXBhcmF0b3InOlxuICAgICAgICAgICAgICAgIHJlcyA9IFwiXFxcXG1rZXJuMm11IFwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnY29tbWFEZWNpbWFsJzpcbiAgICAgICAgICAgICAgICByZXMgPSBcInssfVwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnY29tbWEgZW51bWVyYXRpb24gTCc6XG4gICAgICAgICAgICAgICAgcmVzID0gXCJ7XCIgKyBidWYucDEgKyBcIn1cXFxcbWtlcm42bXUgXCI7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdjb21tYSBlbnVtZXJhdGlvbiBNJzpcbiAgICAgICAgICAgICAgICByZXMgPSBcIntcIiArIGJ1Zi5wMSArIFwifVxcXFxta2VybjNtdSBcIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2NvbW1hIGVudW1lcmF0aW9uIFMnOlxuICAgICAgICAgICAgICAgIHJlcyA9IFwie1wiICsgYnVmLnAxICsgXCJ9XFxcXG1rZXJuMW11IFwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnaHlwaGVuJzpcbiAgICAgICAgICAgICAgICByZXMgPSBcIlxcXFx0ZXh0ey19XCI7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdhZGRpdGlvbiBjb21wb3VuZCc6XG4gICAgICAgICAgICAgICAgcmVzID0gXCJcXFxcLHtcXFxcY2RvdH1cXFxcLFwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnZWxlY3Ryb24gZG90JzpcbiAgICAgICAgICAgICAgICByZXMgPSBcIlxcXFxta2VybjFtdSBcXFxcYnVsbGV0XFxcXG1rZXJuMW11IFwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnS1YgeCc6XG4gICAgICAgICAgICAgICAgcmVzID0gXCJ7XFxcXHRpbWVzfVwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAncHJpbWUnOlxuICAgICAgICAgICAgICAgIHJlcyA9IFwiXFxcXHByaW1lIFwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnY2RvdCc6XG4gICAgICAgICAgICAgICAgcmVzID0gXCJcXFxcY2RvdCBcIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3RpZ2h0IGNkb3QnOlxuICAgICAgICAgICAgICAgIHJlcyA9IFwiXFxcXG1rZXJuMW11e1xcXFxjZG90fVxcXFxta2VybjFtdSBcIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3RpbWVzJzpcbiAgICAgICAgICAgICAgICByZXMgPSBcIlxcXFx0aW1lcyBcIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2NpcmNhJzpcbiAgICAgICAgICAgICAgICByZXMgPSBcIntcXFxcc2ltfVwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnXic6XG4gICAgICAgICAgICAgICAgcmVzID0gXCJ1cGFycm93XCI7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICd2JzpcbiAgICAgICAgICAgICAgICByZXMgPSBcImRvd25hcnJvd1wiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnZWxsaXBzaXMnOlxuICAgICAgICAgICAgICAgIHJlcyA9IFwiXFxcXGxkb3RzIFwiO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnLyc6XG4gICAgICAgICAgICAgICAgcmVzID0gXCIvXCI7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICcgLyAnOlxuICAgICAgICAgICAgICAgIHJlcyA9IFwiXFxcXCwvXFxcXCxcIjtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgYXNzZXJ0TmV2ZXIoYnVmKTtcbiAgICAgICAgICAgICAgICB0aHJvdyBbXCJNaGNoZW1CdWdUXCIsIFwibWhjaGVtIGJ1ZyBULiBQbGVhc2UgcmVwb3J0LlwiXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH0sXG4gICAgX2dldEFycm93OiBmdW5jdGlvbiAoYSkge1xuICAgICAgICBzd2l0Y2ggKGEpIHtcbiAgICAgICAgICAgIGNhc2UgXCItPlwiOiByZXR1cm4gXCJyaWdodGFycm93XCI7XG4gICAgICAgICAgICBjYXNlIFwiXFx1MjE5MlwiOiByZXR1cm4gXCJyaWdodGFycm93XCI7XG4gICAgICAgICAgICBjYXNlIFwiXFx1MjdGNlwiOiByZXR1cm4gXCJyaWdodGFycm93XCI7XG4gICAgICAgICAgICBjYXNlIFwiPC1cIjogcmV0dXJuIFwibGVmdGFycm93XCI7XG4gICAgICAgICAgICBjYXNlIFwiPC0+XCI6IHJldHVybiBcImxlZnRyaWdodGFycm93XCI7XG4gICAgICAgICAgICBjYXNlIFwiPC0tPlwiOiByZXR1cm4gXCJsZWZ0cmlnaHRhcnJvd3NcIjtcbiAgICAgICAgICAgIGNhc2UgXCI8PT5cIjogcmV0dXJuIFwicmlnaHRsZWZ0aGFycG9vbnNcIjtcbiAgICAgICAgICAgIGNhc2UgXCJcXHUyMUNDXCI6IHJldHVybiBcInJpZ2h0bGVmdGhhcnBvb25zXCI7XG4gICAgICAgICAgICBjYXNlIFwiPD0+PlwiOiByZXR1cm4gXCJSaWdodGxlZnRoYXJwb29uc1wiO1xuICAgICAgICAgICAgY2FzZSBcIjw8PT5cIjogcmV0dXJuIFwiTGVmdHJpZ2h0aGFycG9vbnNcIjtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgYXNzZXJ0TmV2ZXIoYSk7XG4gICAgICAgICAgICAgICAgdGhyb3cgW1wiTWhjaGVtQnVnVFwiLCBcIm1oY2hlbSBidWcgVC4gUGxlYXNlIHJlcG9ydC5cIl07XG4gICAgICAgIH1cbiAgICB9LFxuICAgIF9nZXRCb25kOiBmdW5jdGlvbiAoYSkge1xuICAgICAgICBzd2l0Y2ggKGEpIHtcbiAgICAgICAgICAgIGNhc2UgXCItXCI6IHJldHVybiBcInstfVwiO1xuICAgICAgICAgICAgY2FzZSBcIjFcIjogcmV0dXJuIFwiey19XCI7XG4gICAgICAgICAgICBjYXNlIFwiPVwiOiByZXR1cm4gXCJ7PX1cIjtcbiAgICAgICAgICAgIGNhc2UgXCIyXCI6IHJldHVybiBcIns9fVwiO1xuICAgICAgICAgICAgY2FzZSBcIiNcIjogcmV0dXJuIFwie1xcXFxlcXVpdn1cIjtcbiAgICAgICAgICAgIGNhc2UgXCIzXCI6IHJldHVybiBcIntcXFxcZXF1aXZ9XCI7XG4gICAgICAgICAgICBjYXNlIFwiflwiOiByZXR1cm4gXCJ7XFxcXHRyaXBsZWRhc2h9XCI7XG4gICAgICAgICAgICBjYXNlIFwifi1cIjogcmV0dXJuIFwie1xcXFxybGFwe1xcXFxsb3dlci4xZW17LX19XFxcXHJhaXNlLjFlbXtcXFxcdHJpcGxlZGFzaH19XCI7XG4gICAgICAgICAgICBjYXNlIFwifj1cIjogcmV0dXJuIFwie1xcXFxybGFwe1xcXFxsb3dlci4yZW17LX19XFxcXHJsYXB7XFxcXHJhaXNlLjJlbXtcXFxcdHJpcGxlZGFzaH19LX1cIjtcbiAgICAgICAgICAgIGNhc2UgXCJ+LS1cIjogcmV0dXJuIFwie1xcXFxybGFwe1xcXFxsb3dlci4yZW17LX19XFxcXHJsYXB7XFxcXHJhaXNlLjJlbXtcXFxcdHJpcGxlZGFzaH19LX1cIjtcbiAgICAgICAgICAgIGNhc2UgXCItfi1cIjogcmV0dXJuIFwie1xcXFxybGFwe1xcXFxsb3dlci4yZW17LX19XFxcXHJsYXB7XFxcXHJhaXNlLjJlbXstfX1cXFxcdHJpcGxlZGFzaH1cIjtcbiAgICAgICAgICAgIGNhc2UgXCIuLi5cIjogcmV0dXJuIFwie3tcXFxcY2RvdH17XFxcXGNkb3R9e1xcXFxjZG90fX1cIjtcbiAgICAgICAgICAgIGNhc2UgXCIuLi4uXCI6IHJldHVybiBcInt7XFxcXGNkb3R9e1xcXFxjZG90fXtcXFxcY2RvdH17XFxcXGNkb3R9fVwiO1xuICAgICAgICAgICAgY2FzZSBcIi0+XCI6IHJldHVybiBcIntcXFxccmlnaHRhcnJvd31cIjtcbiAgICAgICAgICAgIGNhc2UgXCI8LVwiOiByZXR1cm4gXCJ7XFxcXGxlZnRhcnJvd31cIjtcbiAgICAgICAgICAgIGNhc2UgXCI8XCI6IHJldHVybiBcIns8fVwiO1xuICAgICAgICAgICAgY2FzZSBcIj5cIjogcmV0dXJuIFwiez59XCI7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGFzc2VydE5ldmVyKGEpO1xuICAgICAgICAgICAgICAgIHRocm93IFtcIk1oY2hlbUJ1Z1RcIiwgXCJtaGNoZW0gYnVnIFQuIFBsZWFzZSByZXBvcnQuXCJdO1xuICAgICAgICB9XG4gICAgfSxcbiAgICBfZ2V0T3BlcmF0b3I6IGZ1bmN0aW9uIChhKSB7XG4gICAgICAgIHN3aXRjaCAoYSkge1xuICAgICAgICAgICAgY2FzZSBcIitcIjogcmV0dXJuIFwiIHt9K3t9IFwiO1xuICAgICAgICAgICAgY2FzZSBcIi1cIjogcmV0dXJuIFwiIHt9LXt9IFwiO1xuICAgICAgICAgICAgY2FzZSBcIj1cIjogcmV0dXJuIFwiIHt9PXt9IFwiO1xuICAgICAgICAgICAgY2FzZSBcIjxcIjogcmV0dXJuIFwiIHt9PHt9IFwiO1xuICAgICAgICAgICAgY2FzZSBcIj5cIjogcmV0dXJuIFwiIHt9Pnt9IFwiO1xuICAgICAgICAgICAgY2FzZSBcIjw8XCI6IHJldHVybiBcIiB7fVxcXFxsbHt9IFwiO1xuICAgICAgICAgICAgY2FzZSBcIj4+XCI6IHJldHVybiBcIiB7fVxcXFxnZ3t9IFwiO1xuICAgICAgICAgICAgY2FzZSBcIlxcXFxwbVwiOiByZXR1cm4gXCIge31cXFxccG17fSBcIjtcbiAgICAgICAgICAgIGNhc2UgXCJcXFxcYXBwcm94XCI6IHJldHVybiBcIiB7fVxcXFxhcHByb3h7fSBcIjtcbiAgICAgICAgICAgIGNhc2UgXCIkXFxcXGFwcHJveCRcIjogcmV0dXJuIFwiIHt9XFxcXGFwcHJveHt9IFwiO1xuICAgICAgICAgICAgY2FzZSBcInZcIjogcmV0dXJuIFwiIFxcXFxkb3duYXJyb3d7fSBcIjtcbiAgICAgICAgICAgIGNhc2UgXCIodilcIjogcmV0dXJuIFwiIFxcXFxkb3duYXJyb3d7fSBcIjtcbiAgICAgICAgICAgIGNhc2UgXCJeXCI6IHJldHVybiBcIiBcXFxcdXBhcnJvd3t9IFwiO1xuICAgICAgICAgICAgY2FzZSBcIiheKVwiOiByZXR1cm4gXCIgXFxcXHVwYXJyb3d7fSBcIjtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgYXNzZXJ0TmV2ZXIoYSk7XG4gICAgICAgICAgICAgICAgdGhyb3cgW1wiTWhjaGVtQnVnVFwiLCBcIm1oY2hlbSBidWcgVC4gUGxlYXNlIHJlcG9ydC5cIl07XG4gICAgICAgIH1cbiAgICB9XG59O1xuZnVuY3Rpb24gYXNzZXJ0TmV2ZXIoYSkgeyB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/mhchemparser/dist/mhchemParser.js\n"));

/***/ })

}]);