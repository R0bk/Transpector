"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_codemirror_legacy-modes_mode_mscgen_js"],{

/***/ "./node_modules/@codemirror/legacy-modes/mode/mscgen.js":
/*!**************************************************************!*\
  !*** ./node_modules/@codemirror/legacy-modes/mode/mscgen.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"mscgen\": function() { return /* binding */ mscgen; },\n/* harmony export */   \"msgenny\": function() { return /* binding */ msgenny; },\n/* harmony export */   \"xu\": function() { return /* binding */ xu; }\n/* harmony export */ });\nfunction mkParser(lang) {\n  return {\n    name: \"mscgen\",\n    startState: startStateFn,\n    copyState: copyStateFn,\n    token: produceTokenFunction(lang),\n    languageData: {\n      commentTokens: {line: \"#\", block: {open: \"/*\", close: \"*/\"}}\n    }\n  }\n}\n\nconst mscgen = mkParser({\n  \"keywords\" : [\"msc\"],\n  \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\"],\n  \"constants\" : [\"true\", \"false\", \"on\", \"off\"],\n  \"attributes\" : [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\"],\n  \"brackets\" : [\"\\\\{\", \"\\\\}\"], // [ and  ] are brackets too, but these get handled in with lists\n  \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\"],\n  \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n  \"singlecomment\" : [\"//\", \"#\"],\n  \"operators\" : [\"=\"]\n})\n\nconst msgenny = mkParser({\n  \"keywords\" : null,\n  \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n  \"constants\" : [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n  \"attributes\" : null,\n  \"brackets\" : [\"\\\\{\", \"\\\\}\"],\n  \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n  \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n  \"singlecomment\" : [\"//\", \"#\"],\n  \"operators\" : [\"=\"]\n})\n\nconst xu = mkParser({\n  \"keywords\" : [\"msc\", \"xu\"],\n  \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n  \"constants\" : [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n  \"attributes\" : [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\", \"title\", \"deactivate\", \"activate\", \"activation\"],\n  \"brackets\" : [\"\\\\{\", \"\\\\}\"],  // [ and  ] are brackets too, but these get handled in with lists\n  \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n  \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n  \"singlecomment\" : [\"//\", \"#\"],\n  \"operators\" : [\"=\"]\n})\n\nfunction wordRegexpBoundary(pWords) {\n  return new RegExp(\"^\\\\b(\" + pWords.join(\"|\") + \")\\\\b\", \"i\");\n}\n\nfunction wordRegexp(pWords) {\n  return new RegExp(\"^(?:\" + pWords.join(\"|\") + \")\", \"i\");\n}\n\nfunction startStateFn() {\n  return {\n    inComment : false,\n    inString : false,\n    inAttributeList : false,\n    inScript : false\n  };\n}\n\nfunction copyStateFn(pState) {\n  return {\n    inComment : pState.inComment,\n    inString : pState.inString,\n    inAttributeList : pState.inAttributeList,\n    inScript : pState.inScript\n  };\n}\n\nfunction produceTokenFunction(pConfig) {\n  return function(pStream, pState) {\n    if (pStream.match(wordRegexp(pConfig.brackets), true, true)) {\n      return \"bracket\";\n    }\n    /* comments */\n    if (!pState.inComment) {\n      if (pStream.match(/\\/\\*[^\\*\\/]*/, true, true)) {\n        pState.inComment = true;\n        return \"comment\";\n      }\n      if (pStream.match(wordRegexp(pConfig.singlecomment), true, true)) {\n        pStream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (pState.inComment) {\n      if (pStream.match(/[^\\*\\/]*\\*\\//, true, true))\n        pState.inComment = false;\n      else\n        pStream.skipToEnd();\n      return \"comment\";\n    }\n    /* strings */\n    if (!pState.inString && pStream.match(/\\\"(\\\\\\\"|[^\\\"])*/, true, true)) {\n      pState.inString = true;\n      return \"string\";\n    }\n    if (pState.inString) {\n      if (pStream.match(/[^\\\"]*\\\"/, true, true))\n        pState.inString = false;\n      else\n        pStream.skipToEnd();\n      return \"string\";\n    }\n    /* keywords & operators */\n    if (!!pConfig.keywords && pStream.match(wordRegexpBoundary(pConfig.keywords), true, true))\n      return \"keyword\";\n\n    if (pStream.match(wordRegexpBoundary(pConfig.options), true, true))\n      return \"keyword\";\n\n    if (pStream.match(wordRegexpBoundary(pConfig.arcsWords), true, true))\n      return \"keyword\";\n\n    if (pStream.match(wordRegexp(pConfig.arcsOthers), true, true))\n      return \"keyword\";\n\n    if (!!pConfig.operators && pStream.match(wordRegexp(pConfig.operators), true, true))\n      return \"operator\";\n\n    if (!!pConfig.constants && pStream.match(wordRegexp(pConfig.constants), true, true))\n      return \"variable\";\n\n    /* attribute lists */\n    if (!pConfig.inAttributeList && !!pConfig.attributes && pStream.match('[', true, true)) {\n      pConfig.inAttributeList = true;\n      return \"bracket\";\n    }\n    if (pConfig.inAttributeList) {\n      if (pConfig.attributes !== null && pStream.match(wordRegexpBoundary(pConfig.attributes), true, true)) {\n        return \"attribute\";\n      }\n      if (pStream.match(']', true, true)) {\n        pConfig.inAttributeList = false;\n        return \"bracket\";\n      }\n    }\n\n    pStream.next();\n    return null\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGNvZGVtaXJyb3IvbGVnYWN5LW1vZGVzL21vZGUvbXNjZ2VuLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLG1CQUFtQjtBQUN6QztBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixPQUFPO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFTTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE9BQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVNO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGNvZGVtaXJyb3IvbGVnYWN5LW1vZGVzL21vZGUvbXNjZ2VuLmpzPzU4ZGQiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gbWtQYXJzZXIobGFuZykge1xuICByZXR1cm4ge1xuICAgIG5hbWU6IFwibXNjZ2VuXCIsXG4gICAgc3RhcnRTdGF0ZTogc3RhcnRTdGF0ZUZuLFxuICAgIGNvcHlTdGF0ZTogY29weVN0YXRlRm4sXG4gICAgdG9rZW46IHByb2R1Y2VUb2tlbkZ1bmN0aW9uKGxhbmcpLFxuICAgIGxhbmd1YWdlRGF0YToge1xuICAgICAgY29tbWVudFRva2Vuczoge2xpbmU6IFwiI1wiLCBibG9jazoge29wZW46IFwiLypcIiwgY2xvc2U6IFwiKi9cIn19XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBjb25zdCBtc2NnZW4gPSBta1BhcnNlcih7XG4gIFwia2V5d29yZHNcIiA6IFtcIm1zY1wiXSxcbiAgXCJvcHRpb25zXCIgOiBbXCJoc2NhbGVcIiwgXCJ3aWR0aFwiLCBcImFyY2dyYWRpZW50XCIsIFwid29yZHdyYXBhcmNzXCJdLFxuICBcImNvbnN0YW50c1wiIDogW1widHJ1ZVwiLCBcImZhbHNlXCIsIFwib25cIiwgXCJvZmZcIl0sXG4gIFwiYXR0cmlidXRlc1wiIDogW1wibGFiZWxcIiwgXCJpZHVybFwiLCBcImlkXCIsIFwidXJsXCIsIFwibGluZWNvbG9yXCIsIFwibGluZWNvbG91clwiLCBcInRleHRjb2xvclwiLCBcInRleHRjb2xvdXJcIiwgXCJ0ZXh0Ymdjb2xvclwiLCBcInRleHRiZ2NvbG91clwiLCBcImFyY2xpbmVjb2xvclwiLCBcImFyY2xpbmVjb2xvdXJcIiwgXCJhcmN0ZXh0Y29sb3JcIiwgXCJhcmN0ZXh0Y29sb3VyXCIsIFwiYXJjdGV4dGJnY29sb3JcIiwgXCJhcmN0ZXh0Ymdjb2xvdXJcIiwgXCJhcmNza2lwXCJdLFxuICBcImJyYWNrZXRzXCIgOiBbXCJcXFxce1wiLCBcIlxcXFx9XCJdLCAvLyBbIGFuZCAgXSBhcmUgYnJhY2tldHMgdG9vLCBidXQgdGhlc2UgZ2V0IGhhbmRsZWQgaW4gd2l0aCBsaXN0c1xuICBcImFyY3NXb3Jkc1wiIDogW1wibm90ZVwiLCBcImFib3hcIiwgXCJyYm94XCIsIFwiYm94XCJdLFxuICBcImFyY3NPdGhlcnNcIiA6IFtcIlxcXFx8XFxcXHxcXFxcfFwiLCBcIlxcXFwuXFxcXC5cXFxcLlwiLCBcIi0tLVwiLCBcIi0tXCIsIFwiPC0+XCIsIFwiPT1cIiwgXCI8PD0+PlwiLCBcIjw9PlwiLCBcIlxcXFwuXFxcXC5cIiwgXCI8PD4+XCIsIFwiOjpcIiwgXCI8Oj5cIiwgXCItPlwiLCBcIj0+PlwiLCBcIj0+XCIsIFwiPj5cIiwgXCI6PlwiLCBcIjwtXCIsIFwiPDw9XCIsIFwiPD1cIiwgXCI8PFwiLCBcIjw6XCIsIFwieC1cIiwgXCIteFwiXSxcbiAgXCJzaW5nbGVjb21tZW50XCIgOiBbXCIvL1wiLCBcIiNcIl0sXG4gIFwib3BlcmF0b3JzXCIgOiBbXCI9XCJdXG59KVxuXG5leHBvcnQgY29uc3QgbXNnZW5ueSA9IG1rUGFyc2VyKHtcbiAgXCJrZXl3b3Jkc1wiIDogbnVsbCxcbiAgXCJvcHRpb25zXCIgOiBbXCJoc2NhbGVcIiwgXCJ3aWR0aFwiLCBcImFyY2dyYWRpZW50XCIsIFwid29yZHdyYXBhcmNzXCIsIFwid29yZHdyYXBlbnRpdGllc1wiLCBcIndhdGVybWFya1wiXSxcbiAgXCJjb25zdGFudHNcIiA6IFtcInRydWVcIiwgXCJmYWxzZVwiLCBcIm9uXCIsIFwib2ZmXCIsIFwiYXV0b1wiXSxcbiAgXCJhdHRyaWJ1dGVzXCIgOiBudWxsLFxuICBcImJyYWNrZXRzXCIgOiBbXCJcXFxce1wiLCBcIlxcXFx9XCJdLFxuICBcImFyY3NXb3Jkc1wiIDogW1wibm90ZVwiLCBcImFib3hcIiwgXCJyYm94XCIsIFwiYm94XCIsIFwiYWx0XCIsIFwiZWxzZVwiLCBcIm9wdFwiLCBcImJyZWFrXCIsIFwicGFyXCIsIFwic2VxXCIsIFwic3RyaWN0XCIsIFwibmVnXCIsIFwiY3JpdGljYWxcIiwgXCJpZ25vcmVcIiwgXCJjb25zaWRlclwiLCBcImFzc2VydFwiLCBcImxvb3BcIiwgXCJyZWZcIiwgXCJleGNcIl0sXG4gIFwiYXJjc090aGVyc1wiIDogW1wiXFxcXHxcXFxcfFxcXFx8XCIsIFwiXFxcXC5cXFxcLlxcXFwuXCIsIFwiLS0tXCIsIFwiLS1cIiwgXCI8LT5cIiwgXCI9PVwiLCBcIjw8PT4+XCIsIFwiPD0+XCIsIFwiXFxcXC5cXFxcLlwiLCBcIjw8Pj5cIiwgXCI6OlwiLCBcIjw6PlwiLCBcIi0+XCIsIFwiPT4+XCIsIFwiPT5cIiwgXCI+PlwiLCBcIjo+XCIsIFwiPC1cIiwgXCI8PD1cIiwgXCI8PVwiLCBcIjw8XCIsIFwiPDpcIiwgXCJ4LVwiLCBcIi14XCJdLFxuICBcInNpbmdsZWNvbW1lbnRcIiA6IFtcIi8vXCIsIFwiI1wiXSxcbiAgXCJvcGVyYXRvcnNcIiA6IFtcIj1cIl1cbn0pXG5cbmV4cG9ydCBjb25zdCB4dSA9IG1rUGFyc2VyKHtcbiAgXCJrZXl3b3Jkc1wiIDogW1wibXNjXCIsIFwieHVcIl0sXG4gIFwib3B0aW9uc1wiIDogW1wiaHNjYWxlXCIsIFwid2lkdGhcIiwgXCJhcmNncmFkaWVudFwiLCBcIndvcmR3cmFwYXJjc1wiLCBcIndvcmR3cmFwZW50aXRpZXNcIiwgXCJ3YXRlcm1hcmtcIl0sXG4gIFwiY29uc3RhbnRzXCIgOiBbXCJ0cnVlXCIsIFwiZmFsc2VcIiwgXCJvblwiLCBcIm9mZlwiLCBcImF1dG9cIl0sXG4gIFwiYXR0cmlidXRlc1wiIDogW1wibGFiZWxcIiwgXCJpZHVybFwiLCBcImlkXCIsIFwidXJsXCIsIFwibGluZWNvbG9yXCIsIFwibGluZWNvbG91clwiLCBcInRleHRjb2xvclwiLCBcInRleHRjb2xvdXJcIiwgXCJ0ZXh0Ymdjb2xvclwiLCBcInRleHRiZ2NvbG91clwiLCBcImFyY2xpbmVjb2xvclwiLCBcImFyY2xpbmVjb2xvdXJcIiwgXCJhcmN0ZXh0Y29sb3JcIiwgXCJhcmN0ZXh0Y29sb3VyXCIsIFwiYXJjdGV4dGJnY29sb3JcIiwgXCJhcmN0ZXh0Ymdjb2xvdXJcIiwgXCJhcmNza2lwXCIsIFwidGl0bGVcIiwgXCJkZWFjdGl2YXRlXCIsIFwiYWN0aXZhdGVcIiwgXCJhY3RpdmF0aW9uXCJdLFxuICBcImJyYWNrZXRzXCIgOiBbXCJcXFxce1wiLCBcIlxcXFx9XCJdLCAgLy8gWyBhbmQgIF0gYXJlIGJyYWNrZXRzIHRvbywgYnV0IHRoZXNlIGdldCBoYW5kbGVkIGluIHdpdGggbGlzdHNcbiAgXCJhcmNzV29yZHNcIiA6IFtcIm5vdGVcIiwgXCJhYm94XCIsIFwicmJveFwiLCBcImJveFwiLCBcImFsdFwiLCBcImVsc2VcIiwgXCJvcHRcIiwgXCJicmVha1wiLCBcInBhclwiLCBcInNlcVwiLCBcInN0cmljdFwiLCBcIm5lZ1wiLCBcImNyaXRpY2FsXCIsIFwiaWdub3JlXCIsIFwiY29uc2lkZXJcIiwgXCJhc3NlcnRcIiwgXCJsb29wXCIsIFwicmVmXCIsIFwiZXhjXCJdLFxuICBcImFyY3NPdGhlcnNcIiA6IFtcIlxcXFx8XFxcXHxcXFxcfFwiLCBcIlxcXFwuXFxcXC5cXFxcLlwiLCBcIi0tLVwiLCBcIi0tXCIsIFwiPC0+XCIsIFwiPT1cIiwgXCI8PD0+PlwiLCBcIjw9PlwiLCBcIlxcXFwuXFxcXC5cIiwgXCI8PD4+XCIsIFwiOjpcIiwgXCI8Oj5cIiwgXCItPlwiLCBcIj0+PlwiLCBcIj0+XCIsIFwiPj5cIiwgXCI6PlwiLCBcIjwtXCIsIFwiPDw9XCIsIFwiPD1cIiwgXCI8PFwiLCBcIjw6XCIsIFwieC1cIiwgXCIteFwiXSxcbiAgXCJzaW5nbGVjb21tZW50XCIgOiBbXCIvL1wiLCBcIiNcIl0sXG4gIFwib3BlcmF0b3JzXCIgOiBbXCI9XCJdXG59KVxuXG5mdW5jdGlvbiB3b3JkUmVnZXhwQm91bmRhcnkocFdvcmRzKSB7XG4gIHJldHVybiBuZXcgUmVnRXhwKFwiXlxcXFxiKFwiICsgcFdvcmRzLmpvaW4oXCJ8XCIpICsgXCIpXFxcXGJcIiwgXCJpXCIpO1xufVxuXG5mdW5jdGlvbiB3b3JkUmVnZXhwKHBXb3Jkcykge1xuICByZXR1cm4gbmV3IFJlZ0V4cChcIl4oPzpcIiArIHBXb3Jkcy5qb2luKFwifFwiKSArIFwiKVwiLCBcImlcIik7XG59XG5cbmZ1bmN0aW9uIHN0YXJ0U3RhdGVGbigpIHtcbiAgcmV0dXJuIHtcbiAgICBpbkNvbW1lbnQgOiBmYWxzZSxcbiAgICBpblN0cmluZyA6IGZhbHNlLFxuICAgIGluQXR0cmlidXRlTGlzdCA6IGZhbHNlLFxuICAgIGluU2NyaXB0IDogZmFsc2VcbiAgfTtcbn1cblxuZnVuY3Rpb24gY29weVN0YXRlRm4ocFN0YXRlKSB7XG4gIHJldHVybiB7XG4gICAgaW5Db21tZW50IDogcFN0YXRlLmluQ29tbWVudCxcbiAgICBpblN0cmluZyA6IHBTdGF0ZS5pblN0cmluZyxcbiAgICBpbkF0dHJpYnV0ZUxpc3QgOiBwU3RhdGUuaW5BdHRyaWJ1dGVMaXN0LFxuICAgIGluU2NyaXB0IDogcFN0YXRlLmluU2NyaXB0XG4gIH07XG59XG5cbmZ1bmN0aW9uIHByb2R1Y2VUb2tlbkZ1bmN0aW9uKHBDb25maWcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHBTdHJlYW0sIHBTdGF0ZSkge1xuICAgIGlmIChwU3RyZWFtLm1hdGNoKHdvcmRSZWdleHAocENvbmZpZy5icmFja2V0cyksIHRydWUsIHRydWUpKSB7XG4gICAgICByZXR1cm4gXCJicmFja2V0XCI7XG4gICAgfVxuICAgIC8qIGNvbW1lbnRzICovXG4gICAgaWYgKCFwU3RhdGUuaW5Db21tZW50KSB7XG4gICAgICBpZiAocFN0cmVhbS5tYXRjaCgvXFwvXFwqW15cXCpcXC9dKi8sIHRydWUsIHRydWUpKSB7XG4gICAgICAgIHBTdGF0ZS5pbkNvbW1lbnQgPSB0cnVlO1xuICAgICAgICByZXR1cm4gXCJjb21tZW50XCI7XG4gICAgICB9XG4gICAgICBpZiAocFN0cmVhbS5tYXRjaCh3b3JkUmVnZXhwKHBDb25maWcuc2luZ2xlY29tbWVudCksIHRydWUsIHRydWUpKSB7XG4gICAgICAgIHBTdHJlYW0uc2tpcFRvRW5kKCk7XG4gICAgICAgIHJldHVybiBcImNvbW1lbnRcIjtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHBTdGF0ZS5pbkNvbW1lbnQpIHtcbiAgICAgIGlmIChwU3RyZWFtLm1hdGNoKC9bXlxcKlxcL10qXFwqXFwvLywgdHJ1ZSwgdHJ1ZSkpXG4gICAgICAgIHBTdGF0ZS5pbkNvbW1lbnQgPSBmYWxzZTtcbiAgICAgIGVsc2VcbiAgICAgICAgcFN0cmVhbS5za2lwVG9FbmQoKTtcbiAgICAgIHJldHVybiBcImNvbW1lbnRcIjtcbiAgICB9XG4gICAgLyogc3RyaW5ncyAqL1xuICAgIGlmICghcFN0YXRlLmluU3RyaW5nICYmIHBTdHJlYW0ubWF0Y2goL1xcXCIoXFxcXFxcXCJ8W15cXFwiXSkqLywgdHJ1ZSwgdHJ1ZSkpIHtcbiAgICAgIHBTdGF0ZS5pblN0cmluZyA9IHRydWU7XG4gICAgICByZXR1cm4gXCJzdHJpbmdcIjtcbiAgICB9XG4gICAgaWYgKHBTdGF0ZS5pblN0cmluZykge1xuICAgICAgaWYgKHBTdHJlYW0ubWF0Y2goL1teXFxcIl0qXFxcIi8sIHRydWUsIHRydWUpKVxuICAgICAgICBwU3RhdGUuaW5TdHJpbmcgPSBmYWxzZTtcbiAgICAgIGVsc2VcbiAgICAgICAgcFN0cmVhbS5za2lwVG9FbmQoKTtcbiAgICAgIHJldHVybiBcInN0cmluZ1wiO1xuICAgIH1cbiAgICAvKiBrZXl3b3JkcyAmIG9wZXJhdG9ycyAqL1xuICAgIGlmICghIXBDb25maWcua2V5d29yZHMgJiYgcFN0cmVhbS5tYXRjaCh3b3JkUmVnZXhwQm91bmRhcnkocENvbmZpZy5rZXl3b3JkcyksIHRydWUsIHRydWUpKVxuICAgICAgcmV0dXJuIFwia2V5d29yZFwiO1xuXG4gICAgaWYgKHBTdHJlYW0ubWF0Y2god29yZFJlZ2V4cEJvdW5kYXJ5KHBDb25maWcub3B0aW9ucyksIHRydWUsIHRydWUpKVxuICAgICAgcmV0dXJuIFwia2V5d29yZFwiO1xuXG4gICAgaWYgKHBTdHJlYW0ubWF0Y2god29yZFJlZ2V4cEJvdW5kYXJ5KHBDb25maWcuYXJjc1dvcmRzKSwgdHJ1ZSwgdHJ1ZSkpXG4gICAgICByZXR1cm4gXCJrZXl3b3JkXCI7XG5cbiAgICBpZiAocFN0cmVhbS5tYXRjaCh3b3JkUmVnZXhwKHBDb25maWcuYXJjc090aGVycyksIHRydWUsIHRydWUpKVxuICAgICAgcmV0dXJuIFwia2V5d29yZFwiO1xuXG4gICAgaWYgKCEhcENvbmZpZy5vcGVyYXRvcnMgJiYgcFN0cmVhbS5tYXRjaCh3b3JkUmVnZXhwKHBDb25maWcub3BlcmF0b3JzKSwgdHJ1ZSwgdHJ1ZSkpXG4gICAgICByZXR1cm4gXCJvcGVyYXRvclwiO1xuXG4gICAgaWYgKCEhcENvbmZpZy5jb25zdGFudHMgJiYgcFN0cmVhbS5tYXRjaCh3b3JkUmVnZXhwKHBDb25maWcuY29uc3RhbnRzKSwgdHJ1ZSwgdHJ1ZSkpXG4gICAgICByZXR1cm4gXCJ2YXJpYWJsZVwiO1xuXG4gICAgLyogYXR0cmlidXRlIGxpc3RzICovXG4gICAgaWYgKCFwQ29uZmlnLmluQXR0cmlidXRlTGlzdCAmJiAhIXBDb25maWcuYXR0cmlidXRlcyAmJiBwU3RyZWFtLm1hdGNoKCdbJywgdHJ1ZSwgdHJ1ZSkpIHtcbiAgICAgIHBDb25maWcuaW5BdHRyaWJ1dGVMaXN0ID0gdHJ1ZTtcbiAgICAgIHJldHVybiBcImJyYWNrZXRcIjtcbiAgICB9XG4gICAgaWYgKHBDb25maWcuaW5BdHRyaWJ1dGVMaXN0KSB7XG4gICAgICBpZiAocENvbmZpZy5hdHRyaWJ1dGVzICE9PSBudWxsICYmIHBTdHJlYW0ubWF0Y2god29yZFJlZ2V4cEJvdW5kYXJ5KHBDb25maWcuYXR0cmlidXRlcyksIHRydWUsIHRydWUpKSB7XG4gICAgICAgIHJldHVybiBcImF0dHJpYnV0ZVwiO1xuICAgICAgfVxuICAgICAgaWYgKHBTdHJlYW0ubWF0Y2goJ10nLCB0cnVlLCB0cnVlKSkge1xuICAgICAgICBwQ29uZmlnLmluQXR0cmlidXRlTGlzdCA9IGZhbHNlO1xuICAgICAgICByZXR1cm4gXCJicmFja2V0XCI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcFN0cmVhbS5uZXh0KCk7XG4gICAgcmV0dXJuIG51bGxcbiAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@codemirror/legacy-modes/mode/mscgen.js\n"));

/***/ })

}]);